-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:87774b837e42f4aefc8d39f9fab96dd4
    SHA1:07b3d38366fba29ddd06b88d99cbda8b9c9e8c34
    SHA256:db0a35d784b987a06606aa2aa16a183eb1a0aa10e3f810e777cef2b6c21c6435
    SHA512:38577081785b46f688f80597a7b01ca020db4c429d78231e5f1848eaa0dfb01ac04874d73d833f72752ba17e56cf245a0092b53060003957a14fc38700b61788
    Skein512_512:98873fee4b1f5d407f01c2a91ea7616844c83c7a2a2aa00509adfdbb915f00f069e24446d2362b34e9d9606c1db5b94f6cf2d35c2cddbe1d5b92c162423a8258

x-package-locations:
    https://hackage.haskell.org/package/TreeCounter-0.0.1/TreeCounter-0.0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/TreeCounter-0.0.1.tar.gz

x-package-size: 2764
-- END Added by all-cabal-hashes-tool

Name:		TreeCounter
Version:	0.0.1
Cabal-Version:  >= 1.2
License:	BSD3
Author:		Julian Sutherland
Homepage:       https://github.com/Julek
Category:	Data
Synopsis:	Wait-free Tree Counter
Build-Type:     Simple
Maintainer:     Julian Sutherland (julian.sutherland10@imperial.ac.uk)
Description:    A wait-free tree counter. Creates a binary tree of counters, with each leaf associated with a thread. Leaves can be split, creating a new leaf for the current thread and another that can be used by another thread. Each thread will act on different leaves, meaning the actions are wait-free. A read is performed on the counter by recursively traversing it and summing the value of the counters in the nodes and leaves of the tree.
License-file:   LICENSE

Library
  Build-Depends:	base >= 4.6 && < 4.8, monad-loops >= 0.4.2 && < 0.5, ref-mtl <2.3 && >= 0.2.1, stm >= 0.2.4 && < 2.5
  Exposed-modules:      Data.NonBlocking.WaitFree.TreeCounter
