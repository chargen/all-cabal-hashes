-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:94114d9501b6caf8fe2a7657fec33279
    SHA1:8f2e0b8978329faf6763f071be450b9ce04dac37
    SHA256:e8864c4d73f77b8dc36e7625b6379ea319ea2f5d3ee2bf633532f4381640e68c
    SHA512:49ea3a96785ff1154709193b1b2ff6c8dad88cc0ff0d92d98cac9f02bc59e9b86f88563a779ccdb789366f8fd11f696bc48cedfaf469ab62dfb5a16e0c367187
    Skein512_512:f509b5025f9685cea092638bcacc50ce33cdb7e44c336b53b1e112f99a2906fbd39e5f7dba3f050916e97af0f3a97859e67b885310056032dbf350ea814198cc

package-locations:
    https://hackage.haskell.org/package/representable-tries-0.3.2/representable-tries-0.3.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/representable-tries-0.3.2.tar.gz

package-size: 9883
-- END Added by all-cabal-hashes-tool

name:          representable-tries
category:      Data Structures, Functors, Monads, Comonads
version:       0.3.2
license:       BSD3
cabal-version: >= 1.6
license-file:  LICENSE
author:        Edward A. Kmett
maintainer:    Edward A. Kmett <ekmett@gmail.com>
stability:     provisional
homepage:      http://github.com/ekmett/representable-tries/
copyright:     Copyright (C) 2011 Edward A. Kmett
synopsis:      Tries from representations of polynomial functors
description:   Tries from representations of polynomial functors
build-type:    Simple

source-repository head
  type: git
  location: git://github.com/ekmett/representable-tries.git

library
  build-depends: 
    adjunctions >= 0.9.1 && < 0.10,
    base >= 4 && < 4.4,
    bifunctors >= 0.1 && < 0.2,
    comonad >= 1.0.3 && < 1.1,
    comonad-transformers >= 1.5.3 && < 1.6,
    containers >= 0.3 && < 0.5,
    distributive >= 0.2 && < 0.3,
    keys >= 0.2.4 && < 0.3,
    mtl >= 2.0.1.0 && < 2.1,
    representable-functors >= 0.4.1 && < 0.5,
    semigroups >= 0.4 && < 0.5,
    semigroupoids >= 1.1.3 && < 1.2.0,
    streams >= 0.6.3 && < 0.7,
    transformers >= 0.2.0 && < 0.3

  exposed-modules:
    Control.Monad.Reader.Trie
    Data.Functor.Representable.Trie
    Data.Functor.Representable.Trie.Bool
    Data.Functor.Representable.Trie.List
    Data.Functor.Representable.Trie.Either
    Data.Traversable.Fair
    Numeric.Nat.Zeroless

--     Data.Vector.Zeroless
  ghc-options: -Wall
