-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:b3f58cf57c9d14ba4c31efdad3c5e127
    SHA1:d6780df931cbdfbeb8c7f92709205cddce497a62
    SHA256:10782319991fd3068900ef337f2c1556792ffb54c8e4f26ebe20481a8ad917b0
    SHA512:2989c1c6c82ed6b884943b226546bd1c7135b3e0ba7922a88c8446205a18a1b3ab575244b1e39d81e79c7aaa6ab4447570f71a4e093447b2211f79334cf40756
    Skein512_512:6b3be183e4405927c9b7a041d17bc5ddfe09685032a4c4ced8283cf41c3466abdd170e987017c1269102b081287bdea8017d9f0d16a2efb5e5e226181d78d7f2

x-package-locations:
    https://hackage.haskell.org/package/representable-tries-0.3.6/representable-tries-0.3.6.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/representable-tries-0.3.6.tar.gz

x-package-size: 9892
-- END Added by all-cabal-hashes-tool

name:          representable-tries
category:      Data Structures, Functors, Monads, Comonads
version:       0.3.6
license:       BSD3
cabal-version: >= 1.6
license-file:  LICENSE
author:        Edward A. Kmett
maintainer:    Edward A. Kmett <ekmett@gmail.com>
stability:     provisional
homepage:      http://github.com/ekmett/representable-tries/
copyright:     Copyright (C) 2011 Edward A. Kmett
synopsis:      Tries from representations of polynomial functors
description:   Tries from representations of polynomial functors
build-type:    Simple

source-repository head
  type: git
  location: git://github.com/ekmett/representable-tries.git

library
  build-depends: 
    adjunctions >= 0.9.2 && < 0.10,
    base >= 4 && < 4.4,
    bifunctors >= 0.1.1 && < 0.2,
    comonad >= 1.1 && < 1.2,
    comonad-transformers >= 1.6.3 && < 1.7.0,
    containers >= 0.3 && < 0.5,
    distributive >= 0.2 && < 0.3,
    keys >= 0.2.6 && < 0.3,
    mtl >= 2.0.1.0 && < 2.1,
    representable-functors >= 0.4.2 && < 0.5,
    semigroups >= 0.5 && < 0.6,
    semigroupoids >= 1.2.2 && < 1.3.0,
    streams >= 0.7.1 && < 0.8,
    transformers >= 0.2.0 && < 0.3

  exposed-modules:
    Control.Monad.Reader.Trie
    Data.Functor.Representable.Trie
    Data.Functor.Representable.Trie.Bool
    Data.Functor.Representable.Trie.List
    Data.Functor.Representable.Trie.Either
    Data.Traversable.Fair
    Numeric.Nat.Zeroless

--     Data.Vector.Zeroless
  ghc-options: -Wall
