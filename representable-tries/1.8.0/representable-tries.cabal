-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:41628e5f3afafad95fc76a7aec7a4087
    SHA1:13fa7ac4c4d54d7b42403edc66ae721b32c377d6
    SHA256:792e5422bc8ee4d4ffc3918be24998547bc742cb57a36f0fa818ac536a09dc5b
    SHA512:9760933ebc49b58c16b6e1e4dfbc06d995357b8619ec0099d91e284feb2c7070bbc7b37f4344fc9a12707ac6d2ab56434b4fb504f8aec28b1d1f90c59ebcb0e6
    Skein512_512:50cdd3c710077b89134cd84655082af3c494633b10225f8dae295a0c5aa93c5e1bc81e38f83447876f3e8e4b3a6fe1717b7089bf89af0a9e08b14758a3835d4a

package-locations:
    https://hackage.haskell.org/package/representable-tries-1.8.0/representable-tries-1.8.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/representable-tries-1.8.0.tar.gz

package-size: 9973
-- END Added by all-cabal-hashes-tool

name:          representable-tries
category:      Data Structures, Functors, Monads, Comonads
version:       1.8.0
license:       BSD3
cabal-version: >= 1.6
license-file:  LICENSE
author:        Edward A. Kmett
maintainer:    Edward A. Kmett <ekmett@gmail.com>
stability:     provisional
homepage:      http://github.com/ekmett/representable-tries/
copyright:     Copyright (C) 2011 Edward A. Kmett
synopsis:      Tries from representations of polynomial functors
description:   Tries from representations of polynomial functors
build-type:    Simple

source-repository head
  type: git
  location: git://github.com/ekmett/representable-tries.git

library
  build-depends: 
    base >= 4 && < 4.4,
    bifunctors >= 0.1.1 && < 0.2,
    comonad >= 1.1 && < 1.2,
    containers >= 0.3 && < 0.5,
    distributive >= 0.2 && < 0.3,
    mtl >= 2.0.1.0 && < 2.1,
    semigroups >= 0.5 && < 0.6,
    semigroupoids >= 1.2.2 && < 1.3.0,
    transformers >= 0.2.0 && < 0.3,
    adjunctions            >= 1.8 && < 1.9,
    keys                   >= 1.8 && < 1.9,
    comonad-transformers   >= 1.8 && < 1.9,
    representable-functors >= 1.8 && < 1.9

  exposed-modules:
    Control.Monad.Reader.Trie
    Data.Functor.Representable.Trie
    Data.Functor.Representable.Trie.Bool
    Data.Functor.Representable.Trie.List
    Data.Functor.Representable.Trie.Either
    Data.Traversable.Fair
    Numeric.Nat.Zeroless

--     Data.Vector.Zeroless
  ghc-options: -Wall
