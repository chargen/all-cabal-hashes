-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:15cfca746e4c98328444de69b3468397
    SHA1:9f0d4de52ec5437ea32d361b576da8e748f8ad95
    SHA256:6d38158713632078aad60de3e22bc5a7d7f1b379b86bcc0a5a4791279cf7bd1e
    SHA512:ff4eea3c35f31359b6bf42dcc783c51d34960c9603f78f2fb64b3ff1414d789106c99c77d82d84043cbffd73251dd202eac3381916b2b67317a7eb85624aa450
    Skein512_512:b55ea1442158bdf337051276e3a0c2afc1dba3f5e84bb250e9a4c5153dbca1dab463b826d1774b10ee55f8ff33177ed7c302e3fead09921167fe026e1c106aaa

package-locations:
    https://hackage.haskell.org/package/representable-tries-0.5.0/representable-tries-0.5.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/representable-tries-0.5.0.tar.gz

package-size: 9982
-- END Added by all-cabal-hashes-tool

name:          representable-tries
category:      Data Structures, Functors, Monads, Comonads
version:       0.5.0
license:       BSD3
cabal-version: >= 1.6
license-file:  LICENSE
author:        Edward A. Kmett
maintainer:    Edward A. Kmett <ekmett@gmail.com>
stability:     provisional
homepage:      http://github.com/ekmett/representable-tries/
copyright:     Copyright (C) 2011 Edward A. Kmett
synopsis:      Tries from representations of polynomial functors
description:   Tries from representations of polynomial functors
build-type:    Simple

source-repository head
  type: git
  location: git://github.com/ekmett/representable-tries.git

library
  build-depends: 
    adjunctions >= 1.0.0 && < 1.0.1,
    base >= 4 && < 4.4,
    bifunctors >= 0.1.1 && < 0.2,
    comonad >= 1.1 && < 1.2,
    comonad-transformers >= 1.7 && < 1.8,
    containers >= 0.3 && < 0.5,
    distributive >= 0.2 && < 0.3,
    keys >= 0.3 && < 0.4,
    mtl >= 2.0.1.0 && < 2.1,
    representable-functors >= 0.5 && < 0.6,
    semigroups >= 0.5 && < 0.6,
    semigroupoids >= 1.2.2 && < 1.3.0,
    streams >= 0.7.1 && < 0.8,
    transformers >= 0.2.0 && < 0.3

  exposed-modules:
    Control.Monad.Reader.Trie
    Data.Functor.Representable.Trie
    Data.Functor.Representable.Trie.Bool
    Data.Functor.Representable.Trie.List
    Data.Functor.Representable.Trie.Either
    Data.Traversable.Fair
    Numeric.Nat.Zeroless

--     Data.Vector.Zeroless
  ghc-options: -Wall
