-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:3600b9cd3039a46fb9576ae39e8c668a
    SHA1:15c735f9715d12d7543e12a8a99f2a95b00fd172
    SHA256:ebd74092a090fa592ccf3771d6c6a1d8bd026444f6f80cb21b1cd27e78dabd22
    SHA512:debfab8fe8b3200f784af6c1648d8a55f4f92f490d1633e89641808c16c9c86b30835d874328eebe59fbf5e640892f4ce89074f0b7a95738ae89812c3974b4d4
    Skein512_512:daaf56e56fd9086fc29e9cf9d4491dbfa977a7a68c3adebb7d4aaa304cebb9bdf77e7bcc995d7acf166872b5efda5cfc16352a42931c80ecfec01cfe58c748f5

package-locations:
    https://hackage.haskell.org/package/representable-tries-0.3.1/representable-tries-0.3.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/representable-tries-0.3.1.tar.gz

package-size: 9887
-- END Added by all-cabal-hashes-tool

name:          representable-tries
category:      Data Structures, Functors, Monads, Comonads
version:       0.3.1
license:       BSD3
cabal-version: >= 1.6
license-file:  LICENSE
author:        Edward A. Kmett
maintainer:    Edward A. Kmett <ekmett@gmail.com>
stability:     provisional
homepage:      http://github.com/ekmett/representable-tries/
copyright:     Copyright (C) 2011 Edward A. Kmett
synopsis:      Tries from representations of polynomial functors
description:   Tries from representations of polynomial functors
build-type:    Simple

source-repository head
  type: git
  location: git://github.com/ekmett/representable-tries.git

library
  build-depends: 
    adjunctions >= 0.9 && < 0.10,
    base >= 4 && < 4.4,
    bifunctors >= 0.1 && < 0.2,
    comonad >= 1.0 && < 1.1,
    comonad-transformers >= 1.5.2 && < 1.6,
    containers >= 0.4.0.0 && < 0.5,
    distributive >= 0.1.1 && < 0.2,
    keys >= 0.2.1 && < 0.3,
    mtl >= 2.0.1.0 && < 2.1,
    representable-functors >= 0.3 && < 0.4,
    semigroups >= 0.3.4 && < 0.4,
    semigroupoids >= 1.1.1 && < 1.2.0,
    streams >= 0.6 && < 0.7,
    transformers >= 0.2.0 && < 0.3

  exposed-modules:
    Control.Monad.Reader.Trie
    Data.Functor.Representable.Trie
    Data.Functor.Representable.Trie.Bool
    Data.Functor.Representable.Trie.List
    Data.Functor.Representable.Trie.Either
    Data.Traversable.Fair
    Numeric.Nat.Zeroless

--     Data.Vector.Zeroless
  ghc-options: -Wall
