Name:          Win32-junction-point
Version:       0.1
Synopsis:      Support for manipulating NTFS junction points.
Description:
  This package provides the ability to manipulate NTFS junction points as
  supported by Windows 2000 and above. Junction points, along with NTFS hard
  links and NTFS symbolic links, are a type of symbolic link that can be made
  between folders existing on the same filesystem. Please read Microsoft
  KB205524 [1] for more information on junction points.
  .
  Junction points have always been left undocumented in the Win32 SDK. The
  Windows 2000 Resource Kit came with a command-line utility named linkd.exe
  to work with them. Later, Mark Russinovich of SysInternals distributed a
  replacement utility named Junction [2] which accomplished the same thing.
  .
  This source code is based on an article [3] and C++ library [4] written by
  Mike Nordell at codeproject.com.
  .
  It is against Microsoft's recommendation to make use of undocumented API
  features. Use this library at your own risk.
  .
  Release Notes:
  .
  Changes in 0.1
  .
  * 64-bit GHC is now supported.
  .
  * Update cabal file to build on recent versions of GHC.
  .
  * An internal foreign import is now being called with the "safe" option.
  .
  * bug fixes. The deleteJunctionPoint function was failing to delete junction
    points in many cases.
  .
  (1) <http://support.microsoft.com/?kbid=205524>
  .
  (2) <http://technet.microsoft.com/en-us/sysinternals/bb896768>
  .
  (3) <http://www.codeproject.com/script/Articles/ViewDownloads.aspx?aid=194>
  .
  (4) <http://www.codeproject.com/KB/winsdk/junctionpoints.aspx>
License:       BSD3
License-file:  LICENSE
Author:        Michael Steele
Maintainer:    mikesteele81@gmail.com
Copyright:     Copyright (c) 2011-2013, Michael Steele. Copyright (c) 2000, Mikael Nordell
Category:      System
Build-type:    Simple
Cabal-version: >=1.14
Homepage:      http://github.com/mikesteele81/Win32-junction-point
bug-reports:   http://github.com/mikesteele81/win32-junction-point/issues

Stability:     experimental
tested-with:   GHC==7.4.2, GHC==7.6.2

source-repository head
  type: git
  location: git://github.com/mikesteele81/win32-junction-point.git

Library
  default-language: Haskell2010
  Exposed-modules: System.Win32.JunctionPoint

  Build-depends: base  >= 4.0 && < 5
               , text
               , Win32
  ghc-options: -funbox-strict-fields -Wall
  if arch(x86_64)
    cpp-options: -DWIN64



package-hashes:
    MD5:58e992f09d363a71032e44b18b34be4c
    SHA1:5eb293de77d521416a2193a5b434cf10804b828f
    SHA256:8fee340457b046cbda921f07249d9391c347ef3b994e42ebed83fa231e4bf3e1
    SHA512:6603c15b8f591243288f2c89afa4fc4891d7eab1b357ff93bd9c160b886af046f71faacf8eeab726d48a2fc59ede99063b6a115ccd94a1837e7a156dc9173f00
    Skein512_512:76138003b7892c7b46bac3971001acfea5524b7c19d33e923d184db5eec55ecca0df472f13406ed4d697ff74a2530811838e3629b0e048dd66a766d894fbf5be

package-locations:
    https://hackage.haskell.org/package/Win32-junction-point-0.1/Win32-junction-point-0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/Win32-junction-point-0.1.tar.gz

package-size: 6238
