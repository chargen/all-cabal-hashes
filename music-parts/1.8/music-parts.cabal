-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:5c9011b68b7a90fd9d85285faeb1d658
    SHA1:35e49c21a3995d3ec2d05ed1ab61219129785728
    SHA256:d469757fb424509d1d370e22e0dfa5b41805adfd0644afff6ebd9144083b6055
    SHA512:80a7a3dd7143be752ddf5212bbd2178b38a7770fb69b3875e2c65f251fadf79edbfc81d2ff1c821b8a04cc50c9398d4c9dca95d36e51d632fa0b87c21f5e1e27
    Skein512_512:68e48ef64af67d81e19949c3d87106ba7ba5d15c5f54c9363d771e1daac7f7db4650417e6afb32ba96209798f4659c2b884e42683f81dafa9fd445866535cb66

x-package-locations:
    https://hackage.haskell.org/package/music-parts-1.8/music-parts-1.8.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/music-parts-1.8.tar.gz

x-package-size: 18588
-- END Added by all-cabal-hashes-tool


name:                   music-parts
version:                1.8
author:                 Hans Hoglund
maintainer:             Hans Hoglund
license:                BSD3
license-file:           COPYING
synopsis:               Musical instruments, parts and playing techniques.
category:               Music
tested-with:            GHC
build-type:             Simple
cabal-version:          >= 1.10

description: 
    Abstract representation of musical parts and instruments.
    .
    This library is part of the Music Suite, see <http://music-suite.github.io>.

source-repository head
  type:                 git
  location:             git://github.com/music-suite/music-parts.git
  
library                    
    build-depends:      base                    >= 4 &&        < 5,
                        containers              >= 0.5.5.1  && < 1,
                        aeson                   >= 0.7.0.6  && < 1,
                        lens                    >= 4.6      && < 4.7,
                        semigroups              >= 0.13.0.1 && < 1,
                        data-default            >= 0.5.3    && < 1,
                        adjunctions             >= 4.1      && < 5,
                        roman-numerals          >= 0.5.1.4  && < 1,
                        music-pitch             == 1.8,
                        music-dynamics          == 1.8
    exposed-modules:    Data.Semigroup.Option.Instances
                        
                        Music.Parts
                        
                        Music.Parts.Basic
                        Music.Parts.Voices
                        
                        -- -- TODO choral voicings etc
                        -- -- TODO use single type or many? How to do "subtyping"
                        -- -- Prisms, TFs, something else?
                        -- 
                        -- -- TODO require pitch dep
                        -- Music.Parts.Range

                        Music.Parts.Division
                        Music.Parts.Subpart
                        Music.Parts.Solo
                        
                        -- TODO "ensembles", essentially echoing the instrument hierarchy but in plural, i.e. (flute :: Instrument, flutes :: Part)
                        -- TODO write something nice about how division works, why we don't usually export flute1 etc.
                        -- Music.Parts.Strings
                        -- Music.Parts.Woodwind
                        -- Music.Parts.Brass
                        -- Music.Parts.Percussion
                        -- Music.Parts.Instrument.Keyboard
                        -- Music.Parts.Rhythm
                        -- Music.Parts.Other
                        
                        Music.Parts.Instrument
                        Music.Parts.Instrument.Strings
                        Music.Parts.Instrument.Woodwind
                        Music.Parts.Instrument.Brass
                        Music.Parts.Instrument.Percussion
                        Music.Parts.Instrument.Keyboard
                        -- Music.Parts.Instrument.Rhythm
                        -- Music.Parts.Instrument.Other
                        
                        -- TODO a way to classify parts
                        -- so we know what goes on which staff, what kind of bracket to generate etc
                        
                        -- TODO some sub-subdivision (not for player allocation, but hand/finger)
                        
    hs-source-dirs:     src
    default-language:   Haskell2010
