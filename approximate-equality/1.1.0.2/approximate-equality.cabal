-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:6451fd986c8980ca21ad0686baf85b4c
    SHA1:3537fa2d91afb95794da339279b918ed8a40d9ae
    SHA256:03a11e2bde0b81fcb97947d5dc4302d6712af9d9d405a4968e006ea3caf2bb5f
    SHA512:ed7498f1da7a23eb1eed7eaa56e7c3525904822e9f6387a98e9b2012fdc9724e65918a51d8e5ab85849a8892a1c96d3bcaee72adf1aaa6bc7769db8b820d47c6
    Skein512_512:e38b33ab0af4b161baa1f1be3103291f7c7271dccb0812406f8c7b7cf72053eaf73e1756d74504d330b8f847c458386b23b5fe763b20ad4f8ff460570a57bdfc

x-package-locations:
    https://hackage.haskell.org/package/approximate-equality-1.1.0.2/approximate-equality-1.1.0.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/approximate-equality-1.1.0.2.tar.gz

x-package-size: 6007
-- END Added by all-cabal-hashes-tool

Name:                approximate-equality
Version:             1.1.0.2
License:             BSD3
License-file:        LICENSE
Author:              Gregory Crosswhite
Maintainer:          Gregory Crosswhite <gcrosswhite@gmail.com>
Stability:           Provisional
Homepage:            http://github.com/gcross/approximate-equality
Synopsis:            Newtype wrappers for approximate equality
Description:         The purpose of this module is to provide newtype wrappers that allow one to effectively override the equality operator of a value so that it is /approximate/ rather than /exact/.  The wrappers use type annotations to specify the tolerance; the 'Digits' type constructor has been provided for specifying the tolerance using type-level natural numbers.  Instances for all of the classes in the numerical hierarchy have been provided for the wrappers, so the wrapped values can mostly be used in the same way as the original values. (In fact, most of the time one doesn't even have to wrap the starting values, since expressions such as @(1+sqrt 2/3)@ are automatically wrapped thanks to the 'fromIntegral' method of the 'Num' typeclass.) 

                     See the documentation for Data.Eq.Approximate for more detailed information on how to use this package.

                     New in version 1.1:  Added explicit Show constraints to the Show instances, as the Num class in the newest version of GHC (wisely) no longer includes Show as a constraint.
Cabal-version:       >= 1.6
Build-type:          Simple
Category:	          Data

Library
    Build-depends:   base >= 3 && < 5,
                     type-level-natural-number >= 1.0 && < 2.1
    Exposed-modules: Data.Eq.Approximate

Source-repository head
  Type:                git
  Location:            git://github.com/gcross/approximate-equality.git

Source-repository this
  Type:                git
  Location:            git://github.com/gcross/approximate-equality.git
  Tag:                 1.1.0.2
