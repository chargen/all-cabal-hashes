-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:f603e35bdd6f738c89ce1bae3ce1adeb
    SHA1:1fea24e0b678f12026265fd18a15cc86a5c5ace3
    SHA256:19c5e3effe09e046e52aedd19ef8ee5bfbaf2d1b1afda7aba204326830ae3199
    SHA512:60a38106099a5905a716a8a4be6272724693a297dc323936ef7a689e9248dad212c556dd85a8ae245dd3d01aa3ca1467c31b43d7ab4391b413842ec823970c65
    Skein512_512:501a36b4d49739920a7e22dfaffad4e2d4c21de297aec6123cd88f1bd2ec284ea59063df161de702843e427b520f4f5a10b1d02c1cacb686829c8a3380bab767

x-package-locations:
    https://hackage.haskell.org/package/ghc-typelits-natnormalise-0.3/ghc-typelits-natnormalise-0.3.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/ghc-typelits-natnormalise-0.3.tar.gz

x-package-size: 12550
-- END Added by all-cabal-hashes-tool

name:                ghc-typelits-natnormalise
version:             0.3
synopsis:            GHC typechecker plugin for types of kind GHC.TypeLits.Nat
description:
  A type checker plugin for GHC that can solve /equalities/ of types of kind
  @Nat@, where these types are either:
  .
  * Type-level naturals
  .
  * Type variables
  .
  * Applications of the arithmetic expressions @(+,-,*,^)@.
  .
  It solves these equalities by normalising them to /sort-of/ @SOP@
  (Sum-of-Products) form, and then perform a simple syntactic equality.
  .
  For example, this solver can prove the equality between:
  .
  @
  (x + 2)^(y + 2)
  @
  .
  and
  .
  @
  4*x*(2 + x)^y + 4*(2 + x)^y + (2 + x)^y*x^2
  @
  .
  Because the latter is actually the @SOP@ normal form of the former.
  .
  To use the plugin, add the
  .
  @
  OPTIONS_GHC -fplugin GHC.TypeLits.Normalise
  @
  .
  Pragma to the header of your file.
homepage:            http://www.clash-lang.org/
bug-reports:         http://github.com/clash-lang/ghc-typelits-natnormalise/issues
license:             BSD2
license-file:        LICENSE
author:              Christiaan Baaij
maintainer:          christiaan.baaij@gmail.com
copyright:           Copyright Â© 2015 University of Twente
category:            Type System
build-type:          Simple
extra-source-files:  README.md
                     CHANGELOG.md
cabal-version:       >=1.10

source-repository head
  type: git
  location: https://github.com/clash-lang/ghc-typelits-natnormalise.git

flag deverror
  description:
    Enables `-Werror` for development mode and TravisCI
  default: False
  manual: True

library
  exposed-modules:     GHC.TypeLits.Normalise,
                       GHC.TypeLits.Normalise.SOP,
                       GHC.TypeLits.Normalise.Unify
  Other-Modules:       GHC.Extra.Instances
  build-depends:       base >=4.8  && <5,
                       ghc  >=7.10 && <7.12,
                       ghc-tcplugins-extra >= 0.1
  hs-source-dirs:      src
  default-language:    Haskell2010
  if flag(deverror)
    ghc-options:         -Wall -Werror
  else
    ghc-options:         -Wall

test-suite test-ghc-typelits-natnormalise
  type:                exitcode-stdio-1.0
  main-is:             Tests.hs
  Other-Modules:       ErrorTests
  build-depends:       base >=4.8 && <4.9,
                       ghc-typelits-natnormalise >= 0.1,
                       tasty >= 0.10,
                       tasty-hunit >= 0.9
  hs-source-dirs:      tests
  default-language:    Haskell2010
  if flag(deverror)
    ghc-options:       -O0 -dcore-lint
