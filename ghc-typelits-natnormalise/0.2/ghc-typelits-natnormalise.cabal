-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:24398edebb8ec9180d5d4b1348af0f47
    SHA1:1cf287c48a19620774ff57669128070586acd834
    SHA256:8cba21b471d5a22702efe05ca1d72b5609b6de0074d679d04da1bab21f3daec6
    SHA512:efdf42c101a26088d7c18b586c4a0aa941fd3d94f936938efb04216bac13b93787c0ffd6733a258fddb996b3739cddda12f00fa9d5fc2b169192c8826f4732d9
    Skein512_512:10c5d45b3dcc94d7d3c488512451f388b0722bd106d9233f4cc0e809d7455b946cbee9a6b670ae514c8c48a082db9ddd881d8ef6e58765a7515a8a665f38bff3

package-locations:
    https://hackage.haskell.org/package/ghc-typelits-natnormalise-0.2/ghc-typelits-natnormalise-0.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/ghc-typelits-natnormalise-0.2.tar.gz

package-size: 11733
-- END Added by all-cabal-hashes-tool

name:                ghc-typelits-natnormalise
version:             0.2
synopsis:            GHC typechecker plugin for types of kind GHC.TypeLits.Nat
description:
  A type checker plugin for GHC that can solve /equalities/ of types of kind
  @Nat@, where these types are either:
  .
  * Type-level naturals
  .
  * Type variables
  .
  * Applications of the arithmetic expressions @(+,-,*,^)@.
  .
  It solves these equalities by normalising them to /sort-of/ @SOP@
  (Sum-of-Products) form, and then perform a simple syntactic equality.
  .
  For example, this solver can prove the equality between:
  .
  @
  (x + 2)^(y + 2)
  @
  .
  and
  .
  @
  4*x*(2 + x)^y + 4*(2 + x)^y + (2 + x)^y*x^2
  @
  .
  Because the latter is actually the @SOP@ normal form of the former.
  .
  To use the plugin, add the
  .
  @
  OPTIONS_GHC -fplugin GHC.TypeLits.Normalise
  @
  .
  Pragma to the header of your file.
homepage:            http://www.clash-lang.org/
bug-reports:         http://github.com/christiaanb/ghc-typelits-natnormalise/issues
license:             BSD2
license-file:        LICENSE
author:              Christiaan Baaij
maintainer:          christiaan.baaij@gmail.com
copyright:           Copyright Â© 2015 University of Twente
category:            Type System
build-type:          Simple
extra-source-files:  README.md
                     CHANGELOG.md
cabal-version:       >=1.10

source-repository head
  type: git
  location: https://github.com/christiaanb/ghc-typelits-natnormalise.git

library
  exposed-modules:     GHC.TypeLits.Normalise,
                       GHC.TypeLits.Normalise.SOP,
                       GHC.TypeLits.Normalise.Unify
  Other-Modules:       GHC.Type.Instances
  build-depends:       base >=4.8  && <5,
                       ghc  >=7.10 && <7.12
  hs-source-dirs:      src
  default-language:    Haskell2010
  ghc-options:         -Wall

test-suite test-ghc-tynat-normalise
  type:                exitcode-stdio-1.0
  main-is:             Tests.hs
  build-depends:       base >=4.8 && <4.9,
                       ghc-typelits-natnormalise >= 0.1,
                       tasty >= 0.10,
                       tasty-hunit >= 0.9
  hs-source-dirs:      tests
  default-language:    Haskell2010
  ghc-options:         -O0 -dcore-lint
