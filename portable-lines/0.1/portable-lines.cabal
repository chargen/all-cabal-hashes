-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:000d40e133e854607d081d81f7abe3c4
    SHA1:b773021e53e251b3ae7482b16a9c7f31358b2e40
    SHA256:5053f5bc42d4362062e0ec55dd111b0f6611be280c7f871876732853f4b824d1
    SHA512:08d06e6935a62d3661850f43afd7eb47fe2a607ab48e393b1e136911c836ef6a7835aa6e25433d76205c82c8fd69000a3470537cb2554a7b954df3da724b5c5a
    Skein512_512:9798e336a0b85bf7bf62aefca7abb6fe384e9a400674f83b8916ee60372a0ba782dfaa18264ec89eebc9fd9733a8b72fe9a516f6cf4a2490b272a073787f7867

package-locations:
    https://hackage.haskell.org/package/portable-lines-0.1/portable-lines-0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/portable-lines-0.1.tar.gz

package-size: 2768
-- END Added by all-cabal-hashes-tool

name:                portable-lines
version:             0.1
synopsis:            Alternative 'lines' implementation that understands CR-LF and CR
description:
    Provides an alternative implementation of the 'Prelude.lines' function that
    treats the following sequences as newline characters:
    .
    * @\"\\r\\n\"@ (Windows style)
    .
    * @\"\\r\"@ (Macintosh style, before OS X)
    .
    * @\"\\n\"@ (Unix style)
    .
    Haskell's IO system supports both platform-specific line ending conversion
    (by opening the file in \"text mode\"), and explicit setting of the newline
    mode for input and output (see 'System.IO.hSetNewlineMode').  However:
    .
    * If you don't know the line ending format in advance, you would have to
      open the file and detect the newline format manually.
    .
    * ByteString currently honors neither of these; see
      <http://stackoverflow.com/questions/6837628>.

license:             BSD3
license-file:        LICENSE
author:              Joey Adams
maintainer:          joeyadams3.14159@gmail.com
copyright:           Copyright (c) Joseph Adams 2011
category:            Text
build-type:          Simple
cabal-version:       >=1.8

source-repository head
    type:       git
    location:   git://github.com/joeyadams/haskell-portable-lines.git

library
    exposed-modules: Text.PortableLines
                   , Text.PortableLines.ByteString
                   , Text.PortableLines.ByteString.Lazy
    build-depends: base == 4.*
                 , bytestring
    ghc-options: -Wall -O2
