-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:4d4fbdb80aecb0fb3c9cfa0be0c1aed5
    SHA1:e21a3ef06a719bf178e9a694ea462d54e65ee8f9
    SHA256:ca210d5cabcc11724e648f573ae7147e7b23209ef1d392efee6e281b08758d1d
    SHA512:550e49d27ba17a18147f2781f74cc5b54e9656e5a815a55f15e0eca61ddb00bf75aca85466dad2648b580e8112bf556a79387019e31711b2db3232efa44a4b66
    Skein512_512:27701aa1fc5e9ddb3b78082c9c51eaa0862a8141c05cec45e501ad525e81006cf244a794be265333b596c303ee9cbc31322fe0280fc88327209cba6ed75f9da8

x-package-locations:
    https://hackage.haskell.org/package/wizards-0.1/wizards-0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/wizards-0.1.tar.gz

x-package-size: 6565
-- END Added by all-cabal-hashes-tool

-- wizards.cabal auto-generated by cabal init. For additional options,
-- see
-- http://www.haskell.org/cabal/release/cabal-latest/doc/users-guide/authors.html#pkg-descr.
-- The name of the package.
Name:                wizards

-- The package version. See the Haskell package versioning policy
-- (http://www.haskell.org/haskellwiki/Package_versioning_policy) for
-- standards guiding when and how versions should be incremented.
Version:             0.1

-- A short (one-line) description of the package.
Synopsis:            High level, generic library for interrogative user interfaces

-- A longer description of the package.
-- Description:         

-- The license under which the package is released.
License:             BSD3

-- The file containing the license text.
License-file:        LICENSE

-- The package author(s).
Author:              Liam O'Connor-Davis

-- An email address to which users can send suggestions, bug reports,
-- and patches.
Maintainer:          liamoc@cse.unsw.edu.au


Description: @wizards@ is a package designed for the quick and painless development of /interrogative/ programs, which
  revolve around a \"dialogue\" with the user, who is asked a series of questions in a sequence much like an 
  installation wizard.
  .
  Everything from interactive system scripts, to installation wizards, to full-blown shells can be implemented with
  the support of @wizards@.
  .
  It is developed transparently on top of a Prompt monad, which separates out the semantics of the program from any
  particular interface. A variety of backends exist, including "System.Console.Wizard.Haskeline" and 
  "System.Console.Wizard.BasicIO". It is also possible to write your own backends. While both built-in backends 
  operate on a console, there is no reason why @wizards@ cannot also be used for making GUI wizard interfaces.
  .
  .
  See the github page for examples on usage:
  .
  <http://www.github.com/liamoc/wizards>
  .
  For creating backends, the module "System.Console.Wizard.Internal" has a brief tutorial. 

-- A copyright notice.
-- Copyright:           

Category:            User Interfaces

Build-type:          Simple

-- Extra files to be distributed with the package, such as examples or
-- a README.
-- Extra-source-files:  

-- Constraint on the version of Cabal needed to build this package.
Cabal-version:       >=1.6

source-repository head
   type:     git   
   location: git://github.com/liamoc/wizards.git
   
source-repository this
   type:     git   
   location: git://github.com/liamoc/wizards.git
   tag:      0.1


Library
  -- Modules exported by the library.
  Exposed-modules: System.Console.Wizard
                   System.Console.Wizard.Internal
                   System.Console.Wizard.Haskeline
                   System.Console.Wizard.BasicIO
                   
  
  -- Packages needed in order to build this package.
  Build-depends: base == 4.*, haskeline == 0.6.*, mtl == 2.0.*, transformers == 0.2.*, MonadPrompt == 1.0.*
  
  -- Modules not exported by this package.
  -- Other-modules:       
  
  -- Extra tools (e.g. alex, hsc2hs, ...) needed to build the source.
  -- Build-tools:         
  