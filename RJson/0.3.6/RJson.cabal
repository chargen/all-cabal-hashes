-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:161f28809c495b653195164e7358bb67
    SHA1:cce9f48ff189163a2d5a77bd6e6e4ba7673c9b47
    SHA256:0fc6e88e2ddfcf28ed1e0f5ee5768635bb92795b8287b733ed5c6531c350875d
    SHA512:0d2bac15d32611c169b065be826045fc936110af199f1fdca556f39ae01e1a977294d5f3f4eb53fce160afd95533cc48bff15ac32b8193f2be2b9a8a06c0b2d3
    Skein512_512:01b611054b9e811aaf840f780a2b9a428c0fd2496be770a9661967d5ffa8d7539ee051dd15d5d855b06e6d39c839bbe04e85b3d640140429570d9fdd06941399

package-locations:
    https://hackage.haskell.org/package/RJson-0.3.6/RJson-0.3.6.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/RJson-0.3.6.tar.gz

package-size: 12486
-- END Added by all-cabal-hashes-tool

Name:          RJson
Version:       0.3.6
Cabal-Version: >= 1.2
License:       BSD3
License-File:  LICENSE
Author:        Alex Drummond
Maintainer:    a.d.drummond@gmail.com
Category:      Text
Synopsis:      A reflective JSON serializer/parser.
Stability:     experimental
Extra-Source-Files:   README
Build-Type:    Simple

Description:
  See included README for some examples.
  This package uses the Scrap Your Boilerplate With Class approach
  to generics to implement a reflective JSON serializer and deserializer.
  Nested record types are automatically converted to corresponding
  JSON objects and vice versa. In both cases, various aspects of
  serializing and deserializing can be customized by implementing instances of
  type classes. Note that only Haskell 98 types can be
  serialized and deserialized, and that the use of strict constructors will lead
  to runtime errors with the current implemetation. Apart from the
  reflective stuff, the package also provides a straightforward
  Haskell representation of JSON data, together with a unicode-safe
  parser and a suitable implementation of 'show'. The code hasn't yet
  been tested for performance; it might be quite slow.

Library
  Build-Depends:	base, mtl, parsec, bytestring, iconv, array, containers, syb-with-class
  Exposed-modules:      Text.RJson
  Extensions:           FlexibleInstances OverlappingInstances MultiParamTypeClasses FlexibleContexts UndecidableInstances
