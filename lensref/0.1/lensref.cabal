-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:9e9ad797d1cb2424fb4ff1bdc4573d57
    SHA1:7ea2b50b606a5c7d8f33dca15ddbff45545600b4
    SHA256:105212ad0cc26e6f2ff1af34531b0d61cf9bd5629582f4860d2f6dc78bde4a82
    SHA512:42fcc2593eb1e019059a1d1a062a648dcbb0fc62bc35cfa65170c0acea6c35640418f668a3a0e919ab115ef129f1cca1fa80e27b767d2f467a5333a76523ea51
    Skein512_512:8d5aaa63165ae150fb1ffd6202ed30d10ff010a8c48388c9b6eb41bf960292ca95460f6055befd0bb90efbc2dec7c33f587e183ee37daba42a2c14be8dc5f18c

package-locations:
    https://hackage.haskell.org/package/lensref-0.1/lensref-0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/lensref-0.1.tar.gz

package-size: 13915
-- END Added by all-cabal-hashes-tool

name:               lensref
version:            0.1
category:           Control, Data
synopsis:           References which can be joined and on which lenses can be applied
description:
    The lensref package provides and interface an two implementation
    for references which can be joined and on which lenses can be applied.
    .
    * The pure implementation is slow and has memory leaks but probably easier to follow.
    This is the reference implementation, so if the the other implementation
    differs this has the right behaviour.
    * The fast implementation is intended for real usage.
    .
    Status:
    .
    * The interface is getting stable. You can expect more functionality and minor changes on current functionality.
    * There are test cases for the first half of the interface.
    Both implementations fulfil the test cases.
    * The pure implementation is ready.
    * The fast implementation is much faster than the pure implementation,
    but it is far from being as fast as possible.
    Probably it also leaks memory.
    .
    To see what is possible to do with lens references, look at the test cases in "Data.LensRef.Test"
    .
    For more information visit the following links:
    .
    * <http://www.haskell.org/haskellwiki/LGtk haskell.org wiki page>
    * <http://lgtk.wordpress.com/ Wordpress blog>
    * <https://github.com/divipp/lensref GitHub repository>
    * <http://hackage.haskell.org/package/lensref Haddock documentation (this page)>
stability:          experimental
license:            BSD3
license-file:       LICENSE
author:             Péter Diviánszky
homepage:           http://www.haskell.org/haskellwiki/LGtk
bug-reports:        https://github.com/divipp/lensref/issues
maintainer:         divipp@gmail.com
cabal-version:      >= 1.8
build-type:         Simple

source-repository head
  type:             git
  location:         https://github.com/divipp/lensref.git

Flag Pure
  Description:      Use the pure but slow implementation
  Default:          False


library

  hs-source-dirs:
                    src
  build-depends:
                    base < 5
                  , transformers >= 0.3 && < 0.5
                  , mtl >= 2 && < 2.3
                  , monad-control == 0.3.*
                  , operational == 0.2.*
                  , lens == 4.1.*
                  , containers == 0.5.*

  exposed-modules:
                    Data.LensRef
                    Data.LensRef.Common
                    Data.LensRef.TestEnv
                    Data.LensRef.Test
                    Data.LensRef.Pure
                    Data.LensRef.Fast
                    Data.LensRef.Default
  if flag(Pure)
    cpp-options:
                    -D__PURE__

  ghc-options: 
                    -threaded
                    -Wall 
                    -fno-warn-incomplete-patterns 
                    -fno-warn-name-shadowing 
                    -fno-warn-missing-signatures 
                    -fno-warn-orphans
                    -fno-warn-type-defaults

