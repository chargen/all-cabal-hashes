-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:214253d470d4d261352842797f09b163
    SHA1:bb55d5334b959b2c344e6199e1747537c2cbe209
    SHA256:3201b438ad98fdbd15f4f864ca3579ad77ee1ffa012a720ced28ade67e25c547
    SHA512:7be64990700b60ceb6d41592837519ae22e36f38003736986daca42c2849018f94fca971c5084541878ce7951a0c348d1408797336330094226645223c1bb141
    Skein512_512:0c506cc13d22db57994b6c2a8e4e90b681752ade64b1255a41965ea6e5401d3fe4e23de38fb8ac197c99d3bad31761b5b55b08d3919bb3a0163c361f8dd598b4

package-locations:
    https://hackage.haskell.org/package/hemokit-0.5/hemokit-0.5.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/hemokit-0.5.tar.gz

package-size: 17308
-- END Added by all-cabal-hashes-tool

name:          hemokit
version:       0.5
license:       MIT
copyright:     2013 Niklas Hambüchen <mail@nh2.me>, Patrick Chilton <chpatrick@gmail.com>
author:        Niklas Hambüchen <mail@nh2.me>, Patrick Chilton <chpatrick@gmail.com>
maintainer:    Niklas Hambüchen <mail@nh2.me>
category:      Bioinformatics
build-type:    Simple
stability:     experimental
tested-with:   GHC==7.6.2
cabal-version: >= 1.10
homepage:      https://github.com/nh2/haskell-hemokit
bug-reports:   https://github.com/nh2/haskell-hemokit/issues
synopsis:      Haskell port of the Emokit EEG project
description:
  This package allows reading raw data from the Emotiv EPOC EEG devices.
  .
  It is inspired and based on the code of the Emokit project
  (<https://github.com/openyou/emokit>), but entirely written in Haskell.
  .
  It contains an extensive, well-documented library for connecting to devices,
  decrypting the stream, and parsing the relevant data out.
  .
  Data can be read from a given device via HIDAPI-hidraw or a dump file;
  reading from multiple devices is supported and when only one EEG is to
  be used, the correct device is automatically selected.
  .
  There is also an executable, @hemokit-dump@, that can print out
  .
  * raw data
  .
  * incremental packets as sent from the device
  .
  * the cumulative /state/ of the EEG
  .
  in both their plain form and as JSON, and optionally serve any of this
  via Websockets.

source-repository head
  type:      git
  location:  git://github.com/nh2/hemokit.git


library
  exposed-modules:
    Hemokit
    Hemokit.Conduit
    Hemokit.Internal.Utils
    Hemokit.Start
  build-depends:
      base                   >= 4 && < 5
    , aeson                  >= 0.6.1.0
    , bytestring             >= 0.9.2.1
    , cipher-aes             >= 0.1.7
    , conduit                >= 1
    , deepseq                >= 1.2
    , deepseq-generics       >= 0.1
    , hidapi                 >= 0.1.1
    , mtl                    >= 2.1.2
    , optparse-applicative   >= 0.5.2.1
    , vector                 >= 0.9
    , websockets             >= 0.7.3.0
  hs-source-dirs:
    src
  default-language: Haskell2010
  ghc-options: -Wall


executable hemokit-mouse
  default-language: Haskell2010
  hs-source-dirs:
    apps
  main-is:
    Mouse.hs
  build-depends:
      base
    , hemokit
    , pretty-show            >= 1.0
    , robot                  >= 1.0.1.1
    , xhb                    >= 0.5.2012.11.23
  ghc-options: -Wall


executable hemokit-dump
  default-language: Haskell2010
  hs-source-dirs:
    apps
  main-is:
    Dump.hs
  other-modules:
    WebsocketUtils
  build-depends:
      base
    , hemokit
    , aeson                  >= 0.6.1.0
    , base64-bytestring      >= 1.0.0.1
    , bytestring             >= 0.9.2.1
    , optparse-applicative   >= 0.5.2.1
    , pretty-show            >= 1.0
    , split                  >= 0.2.2
    , time                   >= 1.4.0.1
    , transformers           >= 0.3.0.0
    , websockets             >= 0.7.3.0
  ghc-options: -Wall


executable hemokit-dump-conduit
  default-language: Haskell2010
  hs-source-dirs:
    apps
  main-is:
    DumpConduit.hs
  build-depends:
      base
    , hemokit
    , aeson                  >= 0.6.1.0
    , base64-bytestring      >= 1.0.0.1
    , bytestring             >= 0.9.2.1
    , conduit                >= 1
    , optparse-applicative   >= 0.5.2.1
    , pretty-show            >= 1.0
    , split                  >= 0.2.2
    , time                   >= 1.4.0.1
    , transformers           >= 0.3.0.0
  ghc-options: -Wall


executable hemokit-fft
  default-language: Haskell2010
  hs-source-dirs:
    apps
  main-is:
    FFT.hs
  build-depends:
      base
    , hemokit
    , conduit
    , mtl                     >= 2.1.2
    , pretty-show             >= 1.0
    , vector                  >= 0.9
    , vector-fftw             >= 0.1.3.1
  ghc-options: -Wall


executable hemokit-headmap
  default-language: Haskell2010
  hs-source-dirs:
    apps
  main-is:
    Headmap.hs
  build-depends:
      base
    , hemokit
    , cairo                  >= 0.12.4
    , gtk                    >= 0.12.4
    , mtl                    >= 2.1.2
    , pretty-show            >= 1.0
    , svgcairo               >= 0.12.1.1
    , vector                 >= 0.9
  ghc-options: -Wall


test-suite tests
  default-language: Haskell2010
  type: exitcode-stdio-1.0
  hs-source-dirs:
    test
  main-is:
    Tests.hs
  build-depends:
      base
    , hemokit
    , bytestring             >= 0.9.2.1
    , HUnit                  >= 1.2
    , vector                 >= 0.9
  ghc-options: -Wall


benchmark bench
  default-language: Haskell2010
  type: exitcode-stdio-1.0
  hs-source-dirs:
    bench
  main-is:
    Bench.hs
  build-depends:
      base
    , hemokit
    , criterion              >= 0.8.0.0
  ghc-options: -Wall


benchmark bench-rollingbuffer
  default-language: Haskell2010
  type: exitcode-stdio-1.0
  hs-source-dirs:
    bench
  main-is:
    ConduitRollingBufferBench.hs
  build-depends:
      base
    , conduit
    , mtl
    , hemokit
    , criterion              >= 0.8.0.0
  ghc-options: -Wall
