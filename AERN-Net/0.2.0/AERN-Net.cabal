-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:555a24b160ac9746a9949562454f007d
    SHA1:1106e1dc90738e41ad0b083a882a3e284674a436
    SHA256:b28f2756e4899142c0de6c4455ddee9a6cb4478f4cdc731aa916058baffa1c54
    SHA512:aabb07a7dc0f2fc3761daa792939a04ebce63a41a2f4b8ff22ff709037db5ed5fcdd4a7dcbd50e02ba2b49d7a4f293af6386366cc457a39e5dd76515230c09c9
    Skein512_512:fa6f76842696886f0a5d8a90d75243dd0c0688f2ef94d3e6d84fce2a5dad6ab4ff0c4db3788b722486ade8688f85cf86ffa0c25217ea5e92f327c0ea40f9bf1b

x-package-locations:
    https://hackage.haskell.org/package/AERN-Net-0.2.0/AERN-Net-0.2.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/AERN-Net-0.2.0.tar.gz

x-package-size: 34148
-- END Added by all-cabal-hashes-tool

Name:           AERN-Net
Version:        0.2.0
Cabal-Version:  >= 1.2
Build-Type:     Simple
License:        BSD3
License-File:   LICENCE
Author:         Michal Konecny (Aston University)
Copyright:      (c) 2007-2008 Michal Konecny
Maintainer:     mik@konecny.aow.cz
Stability:      experimental
Category:       Math, Distributed Computing
Synopsis:       Compositional lazy dataflow networks for exact real number computation
Tested-with:    GHC ==6.8.3
Description:
    AERN-Net provides
    datatypes and abstractions for defining and executing
    networks of communicating processes.  These networks have a fixed
    topology, which can be infinite via recursion.
    The communication on each channel is driven by
    some query-response protocol.  Basic protocols
    for communicating approximations of real numbers and
    functions are provided together with protocol combinators
    eg for communicating value pairs or lists
    and communicating with additional query parameters
    or with optimised repetitions.
    .
    An class-based abstraction is provided to make it possible
    to execute networks on various distributed backends without modification.
    At the moment there is only one backend, which is not distributed.
    It is envisaged that truly distributed backends will be added soon,
    eg based on plain TCP, MPI or REST/SOAP Web services.
    .
    A mathematical foundation of these networks is described
    in the draft
    paper <http://www-users.aston.ac.uk/~konecnym/papers/ernets08-draft.html>.
    .
    Simple examples of usage can be found in modules @DemoMax@ and @DemoSqrt@ 
    in folder @tests@.
Extra-source-files:
    tests/DemoMax.hs tests/DemoSqrt.hs tests/ernet-trace.html src/ernet-trace.html
Data-files:
    ChangeLog

Flag containers-in-base
    Default: False

Library
  hs-source-dirs:  src
  if flag(containers-in-base)
    Build-Depends:
      base < 3, binary >= 0.4, html, time, stm, AERN-Real >= 0.9.8, AERN-RnToRm >= 0.4.2
  else
    Build-Depends:
      base >= 3, containers, binary >= 0.4, html, time, stm, AERN-Real >= 0.9.8, AERN-RnToRm >= 0.4.2
  Exposed-modules:
    Control.ERNet.Blocks.Basic
    Control.ERNet.Blocks.Control.Basic
    Control.ERNet.Blocks.Real.Basic
    Control.ERNet.Blocks.Real.Protocols
    Control.ERNet.Blocks.RnToRm.Basic
    Control.ERNet.Blocks.RnToRm.Protocols
    Control.ERNet.Foundations.Event.Logger
    Control.ERNet.Foundations.Event.JavaScript
    Control.ERNet.Foundations.Channel
    Control.ERNet.Foundations.Protocol.StandardCombinators
    Control.ERNet.Foundations.Manager
    Control.ERNet.Foundations.Process
    Control.ERNet.Foundations.Event
    Control.ERNet.Foundations.Protocol
    Control.ERNet.Deployment.Local.Channel
    Control.ERNet.Deployment.Local.Manager
    Control.ERNet.Deployment.Local.Logger

