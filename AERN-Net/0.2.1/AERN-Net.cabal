-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:114f2b4ec656de608f79569d9e33163e
    SHA1:808b732611f58d12e3afce14f4b9f0edb2375b88
    SHA256:c500c6709eea45f7266557646017d4a7ef9f3a8c79874c98975fe92403621357
    SHA512:0941723aeecc4a56bc66591896a6a081ae5e80336b3db4fe0f95eb2b8a8090c3d4eaf51efa6fc9b1214697f9023c596e76ad1891c9d53c4adb302b30e69d77b8
    Skein512_512:69f176f3ef8366c112c55b352d727811fa60105c5b7525df0ad382d23906294101079fa3d35f2023529775cade296d2626e77cb5a855945d6cf13b5bd833ad35

package-locations:
    https://hackage.haskell.org/package/AERN-Net-0.2.1/AERN-Net-0.2.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/AERN-Net-0.2.1.tar.gz

package-size: 38540
-- END Added by all-cabal-hashes-tool

Name:           AERN-Net
Version:        0.2.1
Cabal-Version:  >= 1.2
Build-Type:     Simple
License:        BSD3
License-File:   LICENCE
Author:         Michal Konecny (Aston University)
Copyright:      (c) 2007-2008 Michal Konecny
Maintainer:     mik@konecny.aow.cz
Stability:      experimental
Category:       Math, Distributed Computing
Synopsis:       Compositional lazy dataflow networks for exact real number computation
Tested-with:    GHC ==6.10.1
Description:
    AERN-Net provides
    datatypes and abstractions for defining and executing
    networks of communicating processes.  These networks have a fixed
    topology, which can be infinite via recursion.
    The communication on each channel is driven by
    some query-response protocol.  Basic protocols
    for communicating approximations of real numbers and
    functions are provided together with protocol combinators
    eg for communicating value pairs or lists
    and communicating with additional query parameters
    or with optimised repetitions.
    .
    An class-based abstraction is provided to make it possible
    to execute networks on various distributed backends without modification.
    At the moment there is only one backend, which is not distributed.
    It is envisaged that truly distributed backends will be added soon,
    eg based on plain TCP, MPI or REST/SOAP Web services.
    .
    A mathematical foundation of these networks is described
    in the draft
    paper <http://www-users.aston.ac.uk/~konecnym/papers/ernets08-draft.html>.
    .
    Simple examples of usage can be found in modules @DemoMax@ and @DemoSqrt@ 
    in folder @tests@.
Extra-source-files:
    tests/DemoMax.hs tests/DemoSqrt.hs tests/ernet-trace.html src/ernet-trace.html
Data-files:
    ChangeLog

Library
  hs-source-dirs:  src
  Build-Depends:
      base >= 3, base < 4, containers, binary >= 0.4, html, time, stm, AERN-Real >= 0.9.9, AERN-RnToRm >= 0.4.9
  Exposed-modules:
    Control.ERNet.Deployment.Local.Manager,
    Control.ERNet.Deployment.Local.Logger,
    Control.ERNet.Deployment.Local.Channel,
    Control.ERNet.Blocks.Basic,
    Control.ERNet.Blocks.Control.Basic,
    Control.ERNet.Blocks.RnToRm.Basic,
    Control.ERNet.Blocks.RnToRm.Protocols,
    Control.ERNet.Blocks.Real.Basic,
    Control.ERNet.Blocks.Real.LFT,
    Control.ERNet.Blocks.Real.Protocols,
    Control.ERNet.Foundations.Protocol.StandardCombinators,
    Control.ERNet.Foundations.Manager,
    Control.ERNet.Foundations.Event,
    Control.ERNet.Foundations.Event.JavaScript,
    Control.ERNet.Foundations.Event.Logger,
    Control.ERNet.Foundations.Channel,
    Control.ERNet.Foundations.Process,
    Control.ERNet.Foundations.Protocol
