-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:a0799e9f8f8730a183d787d890a2551c
    SHA1:6ddac7f2e30907cdc619b1baef610b154e1f71c2
    SHA256:7624ec97618fdb7a810e00f65e90cd25c00ad1961b94110a8883f2003ce01fc2
    SHA512:ce0eb35c1a37cf93ef0f30fa6ddfd942e95f93119b4622ed8302cf49ff66c82522b4e6a5812a5ea833eb94efa869891a9d5ff0131bcf6c829c7b30d5e16c7799
    Skein512_512:9657f6507c29bbc2b73f03cf6469abb0beba3d96b0c86db8da45483e0056ec6cb205bad4e832c9ad8ca06a476b01c71ab003a33bc447beab042439cb5bbb5068

package-locations:
    https://hackage.haskell.org/package/haskeline-0.6.1.2/haskeline-0.6.1.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/haskeline-0.6.1.2.tar.gz

package-size: 40695
-- END Added by all-cabal-hashes-tool

Name:           haskeline
Cabal-Version:  >=1.6
Version:        0.6.1.2
Category:       User Interfaces
License:        BSD3
License-File:   LICENSE
Copyright:      (c) Judah Jacobson
Author:         Judah Jacobson
Maintainer:     Judah Jacobson <judah.jacobson@gmail.com>
Category:       User Interfaces
Synopsis:       A command-line interface for user input, written in Haskell.
Description:    
                Haskeline provides a user interface for line input in command-line
                programs.  This library is similar in purpose to readline, but since
                it is written in Haskell it is (hopefully) more easily used in other
                Haskell programs.
                .
                Haskeline runs both on POSIX-compatible systems and on Windows
                (under MinGW).
Homepage:       http://trac.haskell.org/haskeline
Stability:      Experimental
Build-Type:     Simple
extra-source-files: examples/Test.hs

flag old-base
    Description: Use the base packages from before version 6.8

flag terminfo
    Description: Use the terminfo package for POSIX consoles.
    Default: True

flag libiconv
    Description: Explicitly link against the libiconv library.
    Default: False

Library
    if flag(old-base)
        Build-depends: base == 2.*
        cpp-options:    -DOLD_BASE
    else
        Build-depends: base>=3 && <5 , containers>=0.1, directory>=1.0,
                        bytestring==0.9.*
    Build-depends:  filepath==1.1.*, mtl==1.1.*,
                    utf8-string==0.3.* && >=0.3.1.1,
                    extensible-exceptions==0.1.* && >=0.1.1.0
    Extensions:     ForeignFunctionInterface, RankNTypes, FlexibleInstances,
                TypeSynonymInstances
                FlexibleContexts, ExistentialQuantification
                ScopedTypeVariables, GeneralizedNewtypeDeriving
                MultiParamTypeClasses, OverlappingInstances
                PatternSignatures, CPP, DeriveDataTypeable,
                PatternGuards
    Exposed-Modules:
                System.Console.Haskeline
                System.Console.Haskeline.Completion
                System.Console.Haskeline.Encoding
                System.Console.Haskeline.MonadException
                System.Console.Haskeline.History
                System.Console.Haskeline.IO
    Other-Modules:
                System.Console.Haskeline.Backend
                System.Console.Haskeline.Command
                System.Console.Haskeline.Command.Completion
                System.Console.Haskeline.Command.History
                System.Console.Haskeline.Directory
                System.Console.Haskeline.Emacs
                System.Console.Haskeline.InputT
                System.Console.Haskeline.Key
                System.Console.Haskeline.LineState
                System.Console.Haskeline.Monads
                System.Console.Haskeline.Prefs
                System.Console.Haskeline.Term
                System.Console.Haskeline.Command.Undo
                System.Console.Haskeline.Vi
    include-dirs: includes
    if os(windows) {
        Build-depends: Win32>=2.0
        Other-modules: System.Console.Haskeline.Backend.Win32
        c-sources: cbits/win_console.c
        includes: win_console.h
        install-includes: win_console.h
        cpp-options: -DMINGW
    } else {
        Build-depends: unix>=2.1 && < 2.4
                        -- unix-2.3 doesn't build on ghc-6.8.1 or earlier
        -- temporary hack: some OSes provide iconv in (g)libc, and
        -- some provide it as a separate libiconv.  It would be
        -- better if we could detect this automatically, though.
        if os(darwin) || os(freebsd) || flag(libiconv){
            Extra-libraries: iconv
        }
        c-sources: cbits/h_iconv.c
        includes: h_iconv.h
        install-includes: h_iconv.h
        Other-modules: 
                System.Console.Haskeline.Backend.Posix
                System.Console.Haskeline.Backend.IConv
                System.Console.Haskeline.Backend.DumbTerm
        if flag(terminfo) {
            Build-depends: terminfo==0.3.*
            Other-modules: System.Console.Haskeline.Backend.Terminfo
            cpp-options: -DTERMINFO
        }
        if os(solaris) {
            cpp-options: -DUSE_TERMIOS_H
        }
    }
    ghc-options: -Wall
