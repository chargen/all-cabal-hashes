-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:4225b291c09507d2f60a7420c0059167
    SHA1:c69bbd58caf139b4fd745939c1fc5eb5ef9f2e09
    SHA256:c5d58fc25be8a3bd1e996700a66057b2638dac3298715b7d45168b935b6083ec
    SHA512:9ee55099fcd03eb2cec386927fab3b26c98c42c4b1cb53a836c71b1499b24e268e801b9a5a92bfbe11b885897f4375e1b05336f6e8387773afd508ad0e132027
    Skein512_512:aa96e0df6c24572667eec09fcc4fc4c305e52f3464844d4dba109417bd2df5d31f316b01229b1d643018073966216101abe6944535d17c56520500737925de85

package-locations:
    https://hackage.haskell.org/package/nat-0.3/nat-0.3.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/nat-0.3.tar.gz

package-size: 5620
-- END Added by all-cabal-hashes-tool

name:                     nat
version:                  0.3
cabal-version:            >= 1.6
stability:                alpha
description:              Implementation of natural numbers and integers by a
                          binary representation. All functions are supposed to
                          be as non-strict as possible. Furthermore the
                          implementation is supposed to be reasonable efficient
                          (in comparison to peano numbers). This implementation
                          is inspired by a similar approach in the functional
                          logic programming language Curry.
synopsis:                 Lazy binary natural numbers
license:                  BSD3
license-file:             LICENSE
author:                   Jan Christiansen
maintainer:               Jan Christiansen <info@monoid-it.de>
category:                 Data, Math
build-type:               Simple
extra-source-files:       Tests.hs
bug-reports:              https://github.com/plancalculus/nat/issues
source-repository head
  type:      git
  location:  https://github.com/plancalculus/nat.git


library
  build-depends:	  base >= 4 && < 5
  ghc-options:            -Wall
  exposed-modules:        Data.Number.Nat, Data.Number.Nat1, Data.Number.Int
