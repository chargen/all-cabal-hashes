Cabal-Version: >= 1.6
Name: hexpat
Version: 0.19.1
Synopsis: XML parser/formatter based on expat
Description:
  This package provides a general purpose Haskell XML library using Expat to
  do its parsing (<http://expat.sourceforge.net/> - a fast stream-oriented XML
  parser written in C).  It is extensible to any string type, with @String@,
  @ByteString@ and @Text@ provided out of the box.
  .
  Basic usage: Parsing a tree (/Tree/), formatting a tree (/Format/).
  Other features: Helpers for processing XML trees (/Proc/), trees annotated with
  XML source location (/Annotated/), extended XML trees with comments,
  processing instructions, etc (/Extended/), XML cursors (/Cursor/),
  SAX-style parse (/SAX/), and access to the low-level interface in case speed
  is paramount (/Internal.IO/).
  .
  The design goals are speed, speed, speed, interface simplicity and modularity.
  .
  For introduction and examples, see the /Text.XML.Expat.Tree/ module. For benchmarks,
  <http://haskell.org/haskellwiki/Hexpat/>
  .
  If you want to do interactive I\/O, an obvious option is to use lazy parsing
  with one of the lazy I\/O functions such as hGetContents.  However, this can be
  problematic in some applications because it doesn't handle I\/O errors properly
  and can give no guarantee of timely resource cleanup.  In these cases, chunked
  I\/O is a better approach: Take a look at the /hexpat-iteratee/ package.
  .
  /IO/ is filed under /Internal/ because it's low-level and most users won't want
  it.  The other /Internal/ modules are re-exported by /Annotated/, /Tree/ and /Extended/,
  so you won't need to import them directly.
  .
  Credits to Iavor Diatchki and the @xml@ (XML.Light) package for /Proc/ and /Cursor/.
  Thanks to the many contributors.
  .
  INSTALLATION: Unix install requires an OS package called something like @libexpat-dev@.
  On MacOSX, expat comes with Apple's optional X11 package, or you can install it from source.
  To install on Windows, first install the Windows binary that's available from
  <http://expat.sourceforge.net/>, then type (assuming you're using v2.0.1):
  .
  @cabal install hexpat --extra-lib-dirs="C:\\Program Files\\Expat 2.0.1\\Bin" --extra-include-dirs="C:\\Program Files\\Expat 2.0.1\\Source\\Lib"@
  .
  Ensure @libexpat.dll@ can be found in your system PATH (or copy it into your executable's directory).
  .
  BOUND VS. UNBOUND THREADS: GHC (at least versions 6.12.X) will spawn threads
  if you call a safe FFI callback from an unbound thread.  This can get out of
  control in a busy application.  To avoid this, from version 0.19.1 we now delegate
  processing to a single worker thread if the calling thread is not bound.
  This essentially means that hexpat currently won't exploit multicores very well.
  It also means that hexpat may be more efficient on threads spawned with forkOS
  (to give you a bound thread) rather than forkIO.
  .
  ChangeLog: 0.15 changes intended to fix a (rare) \"error: a C finalizer called back into Haskell.\"
    that seemed only to happen only on ghc6.12.X; 0.15.1 Fix broken Annotated parse;
    0.16 switch from mtl to transformers; 0.17 fix mapNodeContainer & rename some things.;
    0.18 rename defaultEncoding to overrideEncoding. 0.18.3 formatG and indent were demanding list
    items more than once (inefficient in chunked processing); 0.19 add Extended.hs;
    0.19.1 fix a memory leak introduced in 0.19, delegate parsing to bound thread
    if unbound (see note above)
Category: XML
License: BSD3
License-File: LICENSE
Author:
  Stephen Blackheath [blackh] (the primary author),
  Doug Beardsley,
  Gregory Collins,
  Evan Martin (who started the project),
  Matthew Pocock [drdozer],
  Kevin Jardine
Maintainer: http://blacksapphire.com/antispam/
Copyright:
  (c) 2009 Doug Beardsley <mightybyte@gmail.com>,
  (c) 2009-2010 Stephen Blackheath <http://blacksapphire.com/antispam/>,
  (c) 2009 Gregory Collins,
  (c) 2008 Evan Martin <martine@danga.com>,
  (c) 2009 Matthew Pocock <matthew.pocock@ncl.ac.uk>,
  (c) 2007-2009 Galois Inc.,
  (c) 2010 Kevin Jardine
Homepage: http://haskell.org/haskellwiki/Hexpat/
Extra-Source-Files:
  test/hexpat-tests.cabal,
  test/test.xml,
  test/suite/TestSuite.hs,
  test/suite/Text/XML/Expat/Proc/Tests.hs,
  test/suite/Text/XML/Expat/UnitTests.hs,
  test/suite/Text/XML/Expat/Tests.hs,
  test/suite/Text/XML/Expat/Cursor/Tests.hs,
  test/suite/Text/XML/Expat/ParseFormat.hs,
  test/thread-leak/build.sh,
  test/thread-leak/callme.c,
  test/thread-leak/cleak.c,
  test/thread-leak/clean.sh,
  test/thread-leak/thread-leak.hs,
  test/hexpat-leak/instant-message.llsd,
  test/hexpat-leak/Parse.hs,
  test/hexpat-leak/run.sh,
  test/hexpat-leak/build.sh
Build-Type: Simple
Stability: beta
source-repository head
    type:     darcs
    location: http://code.haskell.org/hexpat/

Library
  Build-Depends:
    base >= 3 && < 5,
    bytestring,
    transformers,
    text >= 0.5 && < 0.9,
    utf8-string == 0.3.*,
    deepseq == 1.1.*,
    containers,
    extensible-exceptions == 0.1.*,
    List == 0.4.*
  Exposed-Modules:
    Text.XML.Expat.Annotated,
    Text.XML.Expat.Cursor,
    Text.XML.Expat.Extended,
    Text.XML.Expat.Format,
    Text.XML.Expat.IO,
    Text.XML.Expat.Namespaced,
    Text.XML.Expat.NodeClass,
    Text.XML.Expat.Proc,
    Text.XML.Expat.Qualified,
    Text.XML.Expat.SAX,
    Text.XML.Expat.Tree,
    Text.XML.Expat.Internal.DocumentClass,
    Text.XML.Expat.Internal.IO,
    Text.XML.Expat.Internal.Namespaced,
    Text.XML.Expat.Internal.NodeClass,
    Text.XML.Expat.Internal.Qualified
  Extra-Libraries: expat
  ghc-options: -Wall -fno-warn-name-shadowing


package-hashes:
    MD5:e347f8b1b0ca13ce5cf58137cf00be81
    SHA1:a7ee86b17ea75c1d767d50dd560c2acdd736c7eb
    SHA256:606b88d0d5b46b9f20771ccb81f319ef26e57e1dad7830d485e11da4bdae6505
    SHA512:86cee60f483b2029f21afc33aa55550a6b8ead1bae42f30cf361a2aa9f6e7cbbda63877b9137b10466ef857f615ef78e741f7aa8ec7b8e61c09be3aee566ac8f
    Skein512_512:539782b32dfa07bfcaf9fd418a9df49fc2b6dad1e394d49b22b593a00d7440d8e319ff51e78d115e79bba11b5f3a9bc4feaba9985751e0af36daaf9c3ae510fc

package-locations:
    https://hackage.haskell.org/package/hexpat-0.19.1/hexpat-0.19.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/hexpat-0.19.1.tar.gz

package-size: 51696
