Name:                yices-painless
Version:             0.1.1
Synopsis:            An embedded language for programming the Yices SMT solver
Description:         
    This library defines an embedded language in Haskell for programming
    the Yices SMT solver.
    .
    Yices is an efficient SMT solver that decides the satisfiability of
    arbitrary formulas containing uninterpreted function symbols with
    equality, linear real and integer arithmetic, scalar types,
    recursive datatypes, tuples, records, extensional arrays, fixed-size
    bit-vectors, quantifiers, and lambda expressions. Yices also does
    MaxSMT (and, dually, unsat cores) and is competitive as an ordinary
    SAT and MaxSAT solver.
    .
    The embedded language embeds both terms and types into Haskell, via
    a typed higher-order abstract syntax representation. Propositions in
    the embedding are represented as (typed) pure expressions.
    .
    Solution variables in the proposition (notionally, free variables)
    are bound an the outermost lambda term. Propositions constructed
    from logical primitives can then be executed by the solver to yield
    a satisfying assignment to those free variables in the proposition.
    .
    More information about Yices:
    .
    * <http://yices.csl.sri.com/>
    .
    The primary interface is via the EDSL, "Yices.Painless.Language",
    however, low and medium-level bindings to the Yices C API are also provided
    ("Yices.Painless.Base.C" and "Yices.Painless.Base"). The
    medium-level bindings add significant type and resource safety to
    that which the C API provides.
    .
    Documentation for this package is available:
    .
    * <http://www.galois.com/~dons/yices-painless/>
    .

Homepage:            http://code.haskell.org/~dons/code/yices-painless
License:             BSD3
License-file:        LICENSE
Author:              Don Stewart
Maintainer:          dons@galois.com
Copyright:           Don Stewart 2010.
Category:            Math, Theorem Provers, Formal Methods
Build-type:          Simple
Cabal-version:       >=1.2

Flag yices-dynamic
    default: True

Library
    Exposed-modules: 
        Yices.Painless.Language

        Yices.Painless.Base
        Yices.Painless.Base.C

        Yices.Painless.Type
        Yices.Painless.Tuple
  
    ghc-options: -Wall

    Build-depends:       base > 3 && < 5,
                         pretty,
                         strict-concurrency,
                         containers >= 0.2,
                         vector     >= 0.7

    Build-tools:         hsc2hs
    Extensions:          ForeignFunctionInterface
    includes:            yices_c.h
    extra-libraries:     yices

    if flag(yices-dynamic)
        extra-libraries:   gmp



package-hashes:
    MD5:ea16d91d2565104472dccb59c091a415
    SHA1:83d462ab28b252c502a0fccc4cc87c0cc119c4de
    SHA256:fdafad0f41b39049a3314b3d9ea63105053a91e0423ad2058da2a105dddc535f
    SHA512:b3748bb179133781faf271aff3872ecefbb6c4cd4fa50219c560c7d04185657d69b49de9e6c8608105b03c61067e8a67b9ef6779f9867ca4b3b277bacc93ac55
    Skein512_512:459a282d5830c1c5352cde1c5f4cea0521ccb160d10edaec1b3caadadab06981057adfcda7f96290d7053974a27954cd115a15c1cc1ef4d167259338c3d13576

package-locations:
    https://hackage.haskell.org/package/yices-painless-0.1.1/yices-painless-0.1.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/yices-painless-0.1.1.tar.gz

