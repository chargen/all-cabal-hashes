-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:24157b1de573279ff660e809c38aa9a8
    SHA1:ae51a0dba0aca052ed7d59622b978f7c6e7b69a9
    SHA256:b809e076a510e9cad2d89cc3d970eb464cbc2092e0571348d73ea2636e058f36
    SHA512:58918606da18ad0c8a8b80ef0cae1c46680d2a5b45ada52dc6b5d3344d20d6fd20583da265dfcad049316108be45401e346fe9f993cfdaf61b971bb737436965
    Skein512_512:c7bea702635ee5a1218fcccf9a3881b0811ef92e016f89826d56d1684e7defc60c3c84dc3e376c0297fbb437f375ac88030ede270fe34cd536bc24b3c563321d

package-locations:
    https://hackage.haskell.org/package/yices-painless-0.1/yices-painless-0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/yices-painless-0.1.tar.gz

package-size: 30522
-- END Added by all-cabal-hashes-tool

Name:                yices-painless
Version:             0.1
Synopsis:            An embedded language for programming the Yices SMT solver
Description:         
    This library defines an embedded language in Haskell for programming
    the Yices SMT solver.
    .
    Yices is an efficient SMT solver that decides the satisfiability of
    arbitrary formulas containing uninterpreted function symbols with
    equality, linear real and integer arithmetic, scalar types,
    recursive datatypes, tuples, records, extensional arrays, fixed-size
    bit-vectors, quantifiers, and lambda expressions. Yices also does
    MaxSMT (and, dually, unsat cores) and is competitive as an ordinary
    SAT and MaxSAT solver.
    .
    The embedded language embeds both terms and types into Haskell, via
    a typed higher-order abstract syntax representation. Propositions in
    the embedding are represented as (typed) pure expressions.
    .
    Solution variables in the proposition (notionally, free variables)
    are bound an the outermost lambda term. Propositions constructed
    from logical primitives can then be executed by the solver to yield
    a satisfying assignment to those free variables in the proposition.
    .
    More information about Yices:
    .
    * <http://yices.csl.sri.com/>
    .
    Low and medium-level bindings to the Yices C API are also provided.
    The medium-level bindings add significant type and resource safety
    to that which the C API provides.

Homepage:            http://code.haskell.org/~dons/code/yices-painless
License:             BSD3
License-file:        LICENSE
Author:              Don Stewart
Maintainer:          dons@galois.com
Copyright:           Don Stewart 2010.
Category:            Math, Theorem Provers, Formal Methods
Build-type:          Simple
Cabal-version:       >=1.2

Flag yices-dynamic
    default: True

Library
    Exposed-modules: 
        Yices.Painless.Language

        Yices.Painless.Base
        Yices.Painless.Base.C

        Yices.Painless.Type
        Yices.Painless.Tuple
  
    ghc-options: -Wall

    Build-depends:       base > 3 && < 5,
                         pretty,
                         strict-concurrency,
                         containers >= 0.2,
                         vector     >= 0.7

    Build-tools:         hsc2hs
    Extensions:          ForeignFunctionInterface
    includes:            yices_c.h
    extra-libraries:     yices

    if flag(yices-dynamic)
        extra-libraries:   gmp

