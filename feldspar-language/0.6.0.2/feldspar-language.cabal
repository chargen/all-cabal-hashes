name:           feldspar-language
version:        0.6.0.2
synopsis:       A functional embedded language for DSP and parallelism
description:    Feldspar (Functional Embedded Language for DSP and PARallelism)
                is an embedded DSL for describing digital signal processing
                algorithms. This package contains the language front-end and an
                interpreter.
category:       Language
copyright:      Copyright (c) 2012 Emil Axelsson, Gergely DÃ©vai,
                                   Anders Persson, Josef Svenningsson
                Copyright (c) 2009-2011, ERICSSON AB
author:         Functional programming group at Chalmers University of Technology
maintainer:     Emil Axelsson <emax@chalmers.se>
                Anders Persson <anders.cj.persson@gmail.com>
license:        BSD3
license-file:   LICENSE
stability:      experimental
homepage:       https://feldspar.github.com
bug-reports:    https://github.com/feldspar/feldspar-language/issues
build-type:     Simple
cabal-version:  >= 1.14
tested-with:    GHC==7.6.1, GHC==7.4.2

extra-source-files:
  examples/Examples/Simple/Basics.hs

source-repository head
  type:     git
  location: git://github.com/feldspar/feldspar-language.git

library
  exposed-modules:
    Feldspar.Prelude
    Feldspar.Lattice
    Feldspar.Range
    Feldspar.Algorithm.CRC
    Feldspar.Algorithm.FFT
    Feldspar.Core.Types
    Feldspar.Core.Interpretation
    Feldspar.Core.Interpretation.Typed
    Feldspar.Core.Constructs.Array
    Feldspar.Core.Constructs.Binding
    Feldspar.Core.Constructs.Bits
    Feldspar.Core.Constructs.Complex
    Feldspar.Core.Constructs.Condition
    Feldspar.Core.Constructs.ConditionM
    Feldspar.Core.Constructs.Conversion
    Feldspar.Core.Constructs.Eq
    Feldspar.Core.Constructs.Error
    Feldspar.Core.Constructs.Floating
    Feldspar.Core.Constructs.Fractional
    Feldspar.Core.Constructs.Future
    Feldspar.Core.Constructs.Integral
    Feldspar.Core.Constructs.Literal
    Feldspar.Core.Constructs.Logic
    Feldspar.Core.Constructs.Loop
    Feldspar.Core.Constructs.Mutable
    Feldspar.Core.Constructs.MutableArray
    Feldspar.Core.Constructs.MutableReference
    Feldspar.Core.Constructs.MutableToPure
    Feldspar.Core.Constructs.NoInline
    Feldspar.Core.Constructs.Par
    Feldspar.Core.Constructs.Num
    Feldspar.Core.Constructs.Ord
    Feldspar.Core.Constructs.SizeProp
    Feldspar.Core.Constructs.SourceInfo
    Feldspar.Core.Constructs.Trace
    Feldspar.Core.Constructs.Tuple
    Feldspar.Core.Constructs.FFI
    Feldspar.Core.Constructs.Save
    Feldspar.Core.Constructs
    Feldspar.Core.Frontend.Array
    Feldspar.Core.Frontend.Binding
    Feldspar.Core.Frontend.Bits
    Feldspar.Core.Frontend.Complex
    Feldspar.Core.Frontend.Condition
    Feldspar.Core.Frontend.ConditionM
    Feldspar.Core.Frontend.Conversion
    Feldspar.Core.Frontend.Eq
    Feldspar.Core.Frontend.Error
    Feldspar.Core.Frontend.Floating
    Feldspar.Core.Frontend.Fractional
    Feldspar.Core.Frontend.Future
    Feldspar.Core.Frontend.Integral
    Feldspar.Core.Frontend.Literal
    Feldspar.Core.Frontend.Logic
    Feldspar.Core.Frontend.Loop
    Feldspar.Core.Frontend.Mutable
    Feldspar.Core.Frontend.MutableArray
    Feldspar.Core.Frontend.MutableReference
    Feldspar.Core.Frontend.MutableToPure
    Feldspar.Core.Frontend.NoInline
    Feldspar.Core.Frontend.Par
    Feldspar.Core.Frontend.Num
    Feldspar.Core.Frontend.Ord
    Feldspar.Core.Frontend.Select
    Feldspar.Core.Frontend.SizeProp
    Feldspar.Core.Frontend.SourceInfo
    Feldspar.Core.Frontend.Trace
    Feldspar.Core.Frontend.Tuple
    Feldspar.Core.Frontend.FFI
    Feldspar.Core.Frontend.Save
    Feldspar.Core.Frontend
    Feldspar.Core.Collection
    Feldspar.Core
    Feldspar.BitVector
    Feldspar.FixedPoint
    Feldspar.Future
    Feldspar.Matrix
    Feldspar.Option
    Feldspar.Repa
    Feldspar.Stream
    Feldspar.Vector.Internal
    Feldspar.Vector
    Feldspar.Vector.Push
    Feldspar.Wrap
    Feldspar.Par
    Feldspar

  default-language: Haskell2010

  build-depends:
    array                       >= 0.4    && < 0.5,
    base                        >= 4      && < 4.7,
    containers                  >= 0.4    && < 0.6,
    data-hash                   >= 0.1    && < 0.3,
    data-lens                   >= 2.10   && < 2.11,
    mtl                         >= 2.0    && < 2.2,
    QuickCheck                  >= 2.5    && < 3,
    patch-combinators           >= 0.1    && < 0.2,
    syntactic                   >= 1.4    && < 1.5,
    tagged                      >= 0.4    && < 0.5,
    tuple                       >= 0.2    && < 0.3,
    type-level                  >= 0.2.4  && < 0.3,
    monad-par                   >= 0.3    && < 0.4,
    QuickAnnotate               >= 0.6    && < 0.7

  other-extensions:
    DeriveDataTypeable
    EmptyDataDecls
    FlexibleInstances
    FlexibleContexts
    FunctionalDependencies
    GADTs
    GeneralizedNewtypeDeriving
    MultiParamTypeClasses
    PatternGuards
    Rank2Types
    ScopedTypeVariables
    StandaloneDeriving
    TypeFamilies
    TypeOperators
    TypeSynonymInstances
    ViewPatterns

  hs-source-dirs: src examples

  ghc-options: -fcontext-stack=100

test-suite range
  type: exitcode-stdio-1.0

  hs-source-dirs: tests

  main-is: RangeTest.hs

  other-modules:
    Feldspar.Range.Test

  default-language: Haskell2010

  build-depends:
    feldspar-language,
    base >= 4 && < 4.7,
    random >= 1 && <2,
    QuickCheck >= 2.4 && <3,
    test-framework >= 0.6 && < 0.7,
    test-framework-quickcheck2 >= 0.2 && < 0.3

test-suite semantics
  type: exitcode-stdio-1.0

  hs-source-dirs: tests examples

  main-is: SemanticsTest.hs

  other-modules:
    Feldspar.Vector.Test
    SemanticsTest

  default-language: Haskell2010

  build-depends:
    feldspar-language,
    base                       >= 4   && < 4.7,
    QuickCheck                 >= 2.4 && < 3,
    test-framework             >= 0.6 && < 0.7,
    test-framework-th          >= 0.2 && < 0.3,
    test-framework-quickcheck2 >= 0.2 && < 0.3

test-suite decoration
  type: exitcode-stdio-1.0

  hs-source-dirs: tests examples

  main-is: DecorationTests.hs

  default-language: Haskell2010

  build-depends:
    feldspar-language,
    base                  >= 4   && < 4.7,
    bytestring            >= 0.9 && < 0.11,
    test-framework        >= 0.6 && < 0.7,
    test-framework-golden >= 1.1 && < 1.2



package-hashes:
    MD5:1172a152599f8cac6ee8b6237f7d54f2
    SHA1:ef61fa33cb41f07e5ecc08c0019b3651c4f9496a
    SHA256:716ef68d3ee3a17396673daa37ceb5b55d33a526f5543b210109a95a296bb343
    SHA512:fa8406aaf6854f8873477aff1c0d7d21585265c1bc248857cc89ad510969231b7954fa7f752a30618a3093f06a5d30a074c01e71b244e4721e5c447e356b3dd9
    Skein512_512:d4cdc28490c2b8bfc74af30b4292cf6be1e39ea61f91d3e076a75a15648e05c2271684dc3413f8172818a1b3d87bdd532c0f2a78a5cc8545664624b3f8142d11

package-locations:
    https://hackage.haskell.org/package/feldspar-language-0.6.0.2/feldspar-language-0.6.0.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/feldspar-language-0.6.0.2.tar.gz

