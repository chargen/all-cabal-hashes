-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:105d2726263e8088e77f79c018a7e578
    SHA1:3dc2ee3f8d3be26e6b0e86772d03ad3f3150adc9
    SHA256:7bfdc485d77e04dbd085f45870b8a83b7d3bf77d47edffbfc5f8b4b8488c75f7
    SHA512:46ee51ad2ca6e71b4a2ddbdc131e9ad3655615b59ef30419e47ed989843a66973ea80bd4f960494fee1fff5d55da9a8140cfdafccf90c23fc0cc696cf4897416
    Skein512_512:32014f3b3175b8f2621ab1329f2a07e42799722cf48cd2c8675b48bded8c08a2688570a4d65bd844b99d71efaa09fd9c98a41e985f6105085ccde1e491eb4d6a

x-package-locations:
    https://hackage.haskell.org/package/pretty-show-1.1/pretty-show-1.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/pretty-show-1.1.tar.gz

x-package-size: 16578
-- END Added by all-cabal-hashes-tool

name:           pretty-show
version:        1.1
x-revision: 2
category:       Text

synopsis:       Tools for working with derived Show instances.
description:
  We provide a library and an executable for working with derived 'Show'
  instances. By using the library, we can parse derived 'Show' instances into a
  generic data structure. The @ppsh@ tool uses the library to produce
  human-readable versions of 'Show' instances, which can be quite handy for
  debugging Haskell programs.

license:        BSD3
license-file:   LICENSE
author:         Iavor S. Diatchki
maintainer:     iavor.diatchki@gmail.com

homepage:       http://wiki.github.com/yav/pretty-show

cabal-version:  >= 1.2
build-type:     Simple

library
  exposed-modules:
    Text.Show.Pretty
  other-modules:
    Text.Show.Parser
    Text.Show.Value
  build-depends:
    array          >= 0.2  &&  < 2,
    base           >= 3    &&  < 4.7,
    haskell-lexer  >= 1    &&  < 2,
    pretty         >= 1    &&  < 2
  ghc-options: -Wall


executable ppsh
  main-is: ppsh.hs

  -- Silly.  Our real dependency is on 'pretty-show'.
  other-modules:
    Text.Show.Parser
    Text.Show.Pretty
    Text.Show.Value
  build-depends:
    array          >= 0.2  &&  < 2,
    base           >= 3    &&  < 5,
    haskell-lexer  >= 1    &&  < 2,
    pretty         >= 1    &&  < 2
  ghc-options: -Wall
