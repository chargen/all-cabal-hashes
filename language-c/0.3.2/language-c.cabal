-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:9056fcde8918cf0b7f9a469e039d8166
    SHA1:5e258c724903f0e58f1597f0afe1ff7553894247
    SHA256:b372ed745055163827dcf137a200d92b464572b3239342417e7ddde16628c19a
    SHA512:8843525ebe36b721530fd40dad1c97439d1c014bd8e6c324eecc707081a821353c09bad7bde3e9bab46e21865fedf5d19ab9ac82c10ff1d90565e8cc33c38be1
    Skein512_512:bc2a75246de8b1138bd78e0e5b149db1538c887780ecc5e4511e9721557d493f56577cf1b86fb44e12cf38e7b5140adb07d3e4a5dfc55886512bb180d2d97292

package-locations:
    https://hackage.haskell.org/package/language-c-0.3.2/language-c-0.3.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/language-c-0.3.2.tar.gz

package-size: 141677
-- END Added by all-cabal-hashes-tool

Name:           language-c
Version:        0.3.2
Cabal-Version:  >= 1.2.3
Build-Type:     Simple
License:        BSD3
License-File:   LICENSE
Copyright:      LICENSE
Author:         AUTHORS
Maintainer:     benedikt.huber@gmail.com
Stability:      experimental
Homepage:       http://www.sivity.net/projects/language.c/
Bug-reports:    http://www.sivity.net/projects/language.c/
Synopsis:       Analysis and generation of C code
Description:    Language C is a haskell library for the analysis and generation of C code.
                It features a complete, well tested parser and pretty printer for all of C99 and a large
                set of GNU extensions.
Category:       Language

Extra-Source-Files: AUTHORS AUTHORS.c2hs ChangeLog README
                    src/Language/C/Parser/Lexer.x
                    src/Language/C/Parser/Parser.y
Flag splitBase
    Description: Choose the new smaller, split-up base package.
Flag useByteStrings
    Description: Use ByteString as InputStream datatype
    Default: True
Flag separateSYB
  description: Data.Generics available in separate package.

Library
    Extensions: CPP, DeriveDataTypeable, PatternGuards, BangPatterns, ExistentialQuantification, GeneralizedNewtypeDeriving, ScopedTypeVariables
    Build-Depends:  filepath

    if flag(splitBase)
        Build-Depends: base >= 3 && < 5, process, directory, array, containers, pretty

        If flag(separateSYB)
          Build-Depends:
            base >=4 && <5,
            syb
        Else
          Build-Depends:
            base <4
    else
        Build-Depends: base < 3

    if flag(useByteStrings)
        Build-Depends: bytestring >= 0.9.0
    else
        cpp-options: -DNO_BYTESTRING
    Build-Tools:    happy, alex

    Hs-Source-Dirs: src
    Exposed-Modules:
                      -- top-level
                      Language.C
                      -- data
                      Language.C.Data
                      Language.C.Data.Position
                      Language.C.Data.Ident
                      Language.C.Data.Error
                      Language.C.Data.Name
                      Language.C.Data.Node
                      Language.C.Data.InputStream
                      -- syntax
                      Language.C.Syntax
                      Language.C.Syntax.AST
                      Language.C.Syntax.Constants
                      Language.C.Syntax.Ops
                      -- parser
                      Language.C.Parser
                      -- pretty printer
                      Language.C.Pretty
                      -- system
                      Language.C.System.Preprocess
                      Language.C.System.GCC
                      -- analysis [experimental]
                      Language.C.Analysis
                      Language.C.Analysis.SemError
                      Language.C.Analysis.SemRep
                      Language.C.Analysis.DefTable
                      Language.C.Analysis.TravMonad
                      Language.C.Analysis.AstAnalysis
                      Language.C.Analysis.DeclAnalysis
                      Language.C.Analysis.Debug
                      -- semrep -> code [alpha]
                      Language.C.Analysis.Export
    Other-Modules:
                      Language.C.Analysis.NameSpaceMap
                      Language.C.Data.RList
                      -- parser implementation
                      Language.C.Parser.Builtin
                      Language.C.Parser.Lexer
                      Language.C.Parser.ParserMonad
                      Language.C.Parser.Tokens
                      Language.C.Parser.Parser

