-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:a6722643c8416e3baa9ebeca94c6f631
    SHA1:b25c6eb35b680b4ecb20022ace5ad6e532db8c08
    SHA256:bdc6680ef0b66454989245b626c437d08e1b5378e522fa160b538a8bd03568e2
    SHA512:9be303f926cd1f31ff704affd02d6d08e0ed4b1db628f39ec16aaa98dd9ce1c6745c6433fb3345c1156228ebc5504709aba7e0c1db5038b7a0ad3aba4f47f014
    Skein512_512:1ccbea6830b9561c815f1cb93f79190632e6694a877f6295501a8d50f568922af6b1716cfc7264e8020e35d03de9b459cf64888b7dc34caae4ab29df68a96755

x-package-locations:
    https://hackage.haskell.org/package/language-c-0.3.2.1/language-c-0.3.2.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/language-c-0.3.2.1.tar.gz

x-package-size: 141660
-- END Added by all-cabal-hashes-tool

Name:           language-c
Version:        0.3.2.1
Cabal-Version:  >= 1.2.3
Build-Type:     Simple
License:        BSD3
License-File:   LICENSE
Copyright:      LICENSE
Author:         AUTHORS
Maintainer:     benedikt.huber@gmail.com
Stability:      experimental
Homepage:       http://www.sivity.net/projects/language.c/
Bug-reports:    http://www.sivity.net/projects/language.c/
Synopsis:       Analysis and generation of C code
Description:    Language C is a haskell library for the analysis and generation of C code.
                It features a complete, well tested parser and pretty printer for all of C99 and a large
                set of GNU extensions.
Category:       Language

Extra-Source-Files: AUTHORS AUTHORS.c2hs ChangeLog README
                    src/Language/C/Parser/Lexer.x
                    src/Language/C/Parser/Parser.y
Flag splitBase
    Description: Choose the new smaller, split-up base package.
Flag useByteStrings
    Description: Use ByteString as InputStream datatype
    Default: True
Flag separateSYB
  description: Data.Generics available in separate package.

Library
    Extensions: CPP, DeriveDataTypeable, PatternGuards, BangPatterns, ExistentialQuantification, GeneralizedNewtypeDeriving, ScopedTypeVariables
    Build-Depends:  filepath

    if flag(splitBase)
        Build-Depends: base >= 3 && < 5, process, directory, array, containers, pretty

        If flag(separateSYB)
          Build-Depends:
            base >=4 && <5,
            syb
        Else
          Build-Depends:
            base <4
    else
        Build-Depends: base < 3

    if flag(useByteStrings)
        Build-Depends: bytestring >= 0.9.0
    else
        cpp-options: -DNO_BYTESTRING
    Build-Tools:    happy, alex

    Hs-Source-Dirs: src
    Exposed-Modules:
                      -- top-level
                      Language.C
                      -- data
                      Language.C.Data
                      Language.C.Data.Position
                      Language.C.Data.Ident
                      Language.C.Data.Error
                      Language.C.Data.Name
                      Language.C.Data.Node
                      Language.C.Data.InputStream
                      -- syntax
                      Language.C.Syntax
                      Language.C.Syntax.AST
                      Language.C.Syntax.Constants
                      Language.C.Syntax.Ops
                      -- parser
                      Language.C.Parser
                      -- pretty printer
                      Language.C.Pretty
                      -- system
                      Language.C.System.Preprocess
                      Language.C.System.GCC
                      -- analysis [experimental]
                      Language.C.Analysis
                      Language.C.Analysis.SemError
                      Language.C.Analysis.SemRep
                      Language.C.Analysis.DefTable
                      Language.C.Analysis.TravMonad
                      Language.C.Analysis.AstAnalysis
                      Language.C.Analysis.DeclAnalysis
                      Language.C.Analysis.Debug
                      -- semrep -> code [alpha]
                      Language.C.Analysis.Export
    Other-Modules:
                      Language.C.Analysis.NameSpaceMap
                      Language.C.Data.RList
                      -- parser implementation
                      Language.C.Parser.Builtin
                      Language.C.Parser.Lexer
                      Language.C.Parser.ParserMonad
                      Language.C.Parser.Tokens
                      Language.C.Parser.Parser

