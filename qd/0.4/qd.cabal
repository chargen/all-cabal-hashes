Name:                 qd
Version:              0.4
Synopsis:             double-double and quad-double number type via libqd
Description:
                      This package supports both a double-double datatype (approx. 32 decimal digits)
                      and a quad-double datatype (approx. 64 decimal digits), using libqd (which is
                      implemented in C++ with C and Fortran wrappers).  To compile this package you
                      need libqd to be installed.
                      .
                      @'Numeric.QD.DoubleDouble.DoubleDouble'@ and @'Numeric.QD.QuadDouble.QuadDouble'@
                      are strict tuples of @CDouble@s, with instances of:
                      @'Eq'@, @'Floating'@, @'Fractional'@, @'Num'@, @'Ord'@, @'Read'@, @'Real'@,
                      @'RealFloat'@, @'RealFrac'@, @'Show'@, @'Storable'@, @'Typeable'@.
                      .
                      Additional note: libqd depends on 64bit doubles, while some FPU architectures
                      use 80bit.  It is highly recommended to compile with -fno-excess-precision and
                      set the FPU control words to avoid erroneous behaviour, perhaps by doing
                      something like this at the start of your program:
                      .
                      > import Foreign (nullPtr)
                      > import GHC.Conc (forkOnIO, numCapabilities)
                      > import Numeric.QD.FPU.Raw (fpu_fix_start)
                      > main :: IO ()
                      > main = do
                      >   mapM_ (flip forkOnIO $ fpu_fix_start nullPtr) [ 0 .. numCapabilities - 1 ]
                      >   -- ...

License:              BSD3
License-file:         LICENSE
Author:               Claude Heiland-Allen
Maintainer:           claudiusmaximus@goto10.org
Category:             Math
Build-type:           Simple
Cabal-version:        >=1.2

Library
  Build-depends:      base >= 4 && < 5
  Extra-Libraries:    qd
  if os(linux)
    Extra-libraries:  stdc++
  Exposed-modules:    Numeric.QD
                      Numeric.QD.DoubleDouble
                      Numeric.QD.DoubleDouble.Raw
                      Numeric.QD.FPU
                      Numeric.QD.FPU.Raw
                      Numeric.QD.QuadDouble
                      Numeric.QD.QuadDouble.Raw
                      Numeric.QD.Raw
  GHC-options:        -O2 -Wall -fno-excess-precision
  GHC-prof-options:   -O2 -Wall -fno-excess-precision -prof -auto-all -caf-all


package-hashes:
    MD5:8903e0b8f9323bcabd67b2e9f9db74fd
    SHA1:d41e4f5193e4e6b45804c0b78a7b266a5d1900ff
    SHA256:1ffba166ab9e70701450e3d43ab748d9cca6e51ff3d8505c1f241742ca4b32d6
    SHA512:9eced489dfb6a23ab0ca9c3d1ba24607577fac7a829b3cb3ebf8f3914b4e80056ac8bf153c709e056ab739b286ec63151166e84ae8d4be987c29f8a3eb344cb5
    Skein512_512:0d156e9f50e9033f29c77f7297a0143ff2e1acc2c7210bc9d69d4cadc0ea83bbbf43bc587098da312b0f18fcc6b4b7a417076257341c894c64ea25ffa4a5f1fe

package-locations:
    https://hackage.haskell.org/package/qd-0.4/qd-0.4.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/qd-0.4.tar.gz

