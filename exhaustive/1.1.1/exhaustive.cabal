-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:64cf88af6241f81102c1e031aeb5f842
    SHA1:50f6b542bc05851323a9ce95d583a05d7558326d
    SHA256:af86bfd0d10c88eecf7a84aa24de10f5302c3233bbaf104e6a30a40eb178ff2d
    SHA512:d6890289c69e0c1b964081fc339f6d73f3ea767ae153bb4082cdd860025ee555abf4b5a16a26c164b74281e0193ca485212dd6a5403ab13e8fb78cad18b64026
    Skein512_512:a2c304953c94da514aada37c23917dadcb46d9a37729b89beb1e62b44209bdf49fb586f82fdacd3f14a671a010db4da3c27390092ffc3726485b487b94995d62

x-package-locations:
    https://hackage.haskell.org/package/exhaustive-1.1.1/exhaustive-1.1.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/exhaustive-1.1.1.tar.gz

x-package-size: 5800
-- END Added by all-cabal-hashes-tool

name:                exhaustive
version:             1.1.1
synopsis:            Compile time checks that a computation considers producing data through all possible constructors
description: For a brief tutorial to @exhaustive@, check out the documentation for "Control.Exhaustive", which contains a small example.
homepage:            http://github.com/ocharles/exhaustive
license:             BSD3
license-file:        LICENSE
author:              Oliver Charles
maintainer:          ollie@ocharles.org.uk
-- copyright:
category:            Control
build-type:          Simple
extra-source-files: Changelog.md
cabal-version:       >=1.10

source-repository head
  type: git
  location: git://github.com/ocharles/exhaustive

library
  exposed-modules:     Control.Exhaustive
  -- other-modules:
  other-extensions:    ConstraintKinds, FlexibleContexts, FlexibleInstances, FunctionalDependencies, GADTs, RankNTypes, ScopedTypeVariables, TypeFamilies, TypeOperators, UndecidableInstances
  build-depends:       base >=4.7 && <4.9, generics-sop >=0.1 && <0.2, transformers >=0.3 && <0.5, template-haskell
  hs-source-dirs:      src
  default-language:    Haskell2010
  ghc-options: -Wall