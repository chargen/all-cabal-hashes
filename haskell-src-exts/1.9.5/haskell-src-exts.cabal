-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:19bfad84e4bc293a06a838cdf9c6df8d
    SHA1:ea20820252c72d7f372c0242ebf9d43f2d71e1ed
    SHA256:e3dbc5ca3bb2eb665bb2faed1e601415214be7c73c5b32365e536f4c700e92fb
    SHA512:7a12323661503137bea3c868a96b117f9d331985d4aa7def7417b01ee00f532783bec92db5193eeec614cae64e9a7f9eb87b6ed731b90c52667ec7f38a616683
    Skein512_512:6945c805602cb70662c08737ba6cf7be6b2235c1cbebcba8cc8d47abe3e2d5169b486fbbb2275c31c5c95cd85978bf3c69077c8224398e49cf7d0292bc95bb2d

package-locations:
    https://hackage.haskell.org/package/haskell-src-exts-1.9.5/haskell-src-exts-1.9.5.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/haskell-src-exts-1.9.5.tar.gz

package-size: 284927
-- END Added by all-cabal-hashes-tool

Name:                   haskell-src-exts
Version:                1.9.5
x-revision: 1
License:                BSD3
License-File:           LICENSE
Author:                 Niklas Broberg
Maintainer:             Niklas Broberg <d00nibro@chalmers.se>
Category:               Language
Synopsis:               Manipulating Haskell source: abstract syntax, lexer, parser, and pretty-printer
Description:            Haskell-Source with Extensions (HSE, haskell-src-exts)
                        is an extension of the standard haskell-src package,
                        and handles most registered syntactic extensions to Haskell, including:
                        .
                        * Multi-parameter type classes with functional dependencies
                        .
                        * Indexed type families (including associated types)
                        .
                        * Empty data declarations
                        .
                        * GADTs
                        .
                        * Implicit parameters
                        .
                        * Template Haskell
                        .
                        and a few more. All extensions implemented in GHC are supported.
                        Apart from these standard extensions,
                        it also handles regular patterns as per the HaRP extension
                        as well as HSX-style embedded XML syntax.
Homepage:               http://code.haskell.org/haskell-src-exts
Stability:              Stable
Tested-with:            GHC==6.10.2, GHC==6.10.4
Build-Type:             Custom
Cabal-Version:          >= 1.2
Extra-Source-Files:
			CHANGELOG
			Test/Runner.hs
			Test/failing.txt
			Test/printFail.txt
			Test/examples/ArrowLayout.hs
			Test/examples/Attributes.hs
			Test/examples/BangPatterns.hs
			Test/examples/Bug.hs
			Test/examples/ByteStringUtils.hs
			Test/examples/CParser.hs
			Test/examples/ClassInstType.hs
			Test/examples/DataHeadParen.hs
			Test/examples/Directory.hs
			Test/examples/EmptyAnn.hs
			Test/examples/EmptyContext.hs
			Test/examples/EmptyInstance.hs
			Test/examples/EmptyList.hs
			Test/examples/Ex1.hs
			Test/examples/FamilyKindSig.hs
			Test/examples/FixityTests.hs
			Test/examples/ForeignImport.hs
			Test/examples/GadtDeriving.hs
			Test/examples/GenericTree.hs
			Test/examples/GhcDeriving.hs
			Test/examples/GroupKeyword.hs
			Test/examples/HappyDoAction.hs
			Test/examples/HaskellParser.hs
			Test/examples/HexPrec.hs
			Test/examples/Hyphen.hs
			Test/examples/ImportSymbol.hs
			Test/examples/IndentedWhere.hs
			Test/examples/InfixParser.hs
			Test/examples/LanguagePragma.hs
			Test/examples/LineOptionsPragma.hs
			Test/examples/LinePragma.hs
			Test/examples/ListComp1.hs
			Test/examples/MagicHash.hs
			Test/examples/MultiCtxt.hs
			Test/examples/NPlusK.hs
			Test/examples/NestedAsPat.hs
			Test/examples/PackageImport.hs
			Test/examples/ParenFunBind.hs
			Test/examples/Pragma.hs
			Test/examples/QualifiedDot.hs
			Test/examples/QuasiQuoteLines.hs
			Test/examples/Rank2Types.hs
			Test/examples/ReadP.hs
			Test/examples/RealGHC.lhs
			Test/examples/RealHSE.hs
			Test/examples/RealHoogle.hs
			Test/examples/RealTagSoup.hs
			Test/examples/RecordInfixSelector.hs
			Test/examples/RecordWildcards.hs
			Test/examples/RelaxedDo.hs
			Test/examples/SCCPragmas.hs
			Test/examples/ScopedTypeVariables.hs
			Test/examples/SimpleDeriving.hs
			Test/examples/SingleClassAsst.hs
			Test/examples/SpecializeInstance.hs
			Test/examples/Testing.hs
			Test/examples/TupleSections.hs
			Test/examples/TypeFunctions.hs
			Test/examples/TypeOperatorsTest.hs
			Test/examples/Unicode.hs
			Test/examples/UnicodeSyntax.hs
			Test/examples/UnindentedPragmaClose.hs
			Test/examples/WhereBlock.hs
			Test/examples/WithKeyword.hs

Flag base4

Library
  Build-Tools:          happy >= 1.17
  Build-Depends:        array >= 0.1, pretty >= 1.0, cpphs >= 1.3
  if flag(base4)
    Build-depends:      base >= 4 && < 4.8
    cpp-options:        -DBASE4
  else
    Build-depends:      base >= 3 && < 4


  Exposed-modules:      Language.Haskell.Exts,
                        Language.Haskell.Exts.Parser,
                        Language.Haskell.Exts.Pretty,
                        Language.Haskell.Exts.Syntax,
                        Language.Haskell.Exts.Extension,
                        Language.Haskell.Exts.Build,
                        Language.Haskell.Exts.Fixity,
                        Language.Haskell.Exts.Comments,
                        Language.Haskell.Exts.SrcLoc,
                        
                        Language.Haskell.Exts.Annotated,
                        Language.Haskell.Exts.Annotated.Syntax,
                        Language.Haskell.Exts.Annotated.Fixity,
                        Language.Haskell.Exts.Annotated.Build,
                        Language.Haskell.Exts.Annotated.ExactPrint,
                        Language.Haskell.Exts.Annotated.Simplify

  Other-modules:        Language.Haskell.Exts.ExtScheme,
                        
                        Language.Haskell.Exts.ParseMonad,
                        Language.Haskell.Exts.ParseSyntax,
                        Language.Haskell.Exts.Lexer,
                        Language.Haskell.Exts.ParseUtils,
                        Language.Haskell.Exts.InternalParser
  Hs-source-dirs:       src
