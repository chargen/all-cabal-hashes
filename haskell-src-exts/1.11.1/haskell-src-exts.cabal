-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:c0c8f214de2e712455a5a250b7f898a9
    SHA1:9be54f314d14d30ebcbad5aa274e57039596d627
    SHA256:a6065470898741c3f16a96c871ddecd09b61c4025640e47c2efdf01f10450ecb
    SHA512:212baf7fe1a35f76bfd37ba0361c239543c899ae811123cd4caba1b3953ac9c50ded4598e480a2afb43f0b9c221306db2312264c065643fdbc30087b889152df
    Skein512_512:0eed1ac4a4700fc7477869a092bac9e91879a02e1516acbcfd177f4e890ac91064a9b2cc1188e7f852cfd81b01c696578cca04dce7e8d2106e3695bdf7332b6f

x-package-locations:
    https://hackage.haskell.org/package/haskell-src-exts-1.11.1/haskell-src-exts-1.11.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/haskell-src-exts-1.11.1.tar.gz

x-package-size: 286132
-- END Added by all-cabal-hashes-tool

Name:                   haskell-src-exts
Version:                1.11.1
x-revision: 2
License:                BSD3
License-File:           LICENSE
Author:                 Niklas Broberg
Maintainer:             Niklas Broberg <d00nibro@chalmers.se>
Category:               Language
Synopsis:               Manipulating Haskell source: abstract syntax, lexer, parser, and pretty-printer
Description:            Haskell-Source with Extensions (HSE, haskell-src-exts)
                        is an extension of the standard haskell-src package,
                        and handles most registered syntactic extensions to Haskell, including:
                        .
                        * Multi-parameter type classes with functional dependencies
                        .
                        * Indexed type families (including associated types)
                        .
                        * Empty data declarations
                        .
                        * GADTs
                        .
                        * Implicit parameters
                        .
                        * Template Haskell
                        .
                        and a few more. All extensions implemented in GHC are supported.
                        Apart from these standard extensions,
                        it also handles regular patterns as per the HaRP extension
                        as well as HSX-style embedded XML syntax.
Homepage:               http://code.haskell.org/haskell-src-exts
Stability:              Stable
Tested-with:            GHC==6.10.2, GHC==6.10.4, GHC==6.12.3
Build-Type:             Custom
Cabal-Version:          >= 1.2
Extra-Source-Files:
			CHANGELOG
			Test/Runner.hs
			Test/failing.txt
			Test/printFail.txt
			Test/examples/ArrowLayout.hs
			Test/examples/Attributes.hs
			Test/examples/BangPatterns.hs
			Test/examples/Bug.hs
			Test/examples/ByteStringUtils.hs
			Test/examples/CParser.hs
			Test/examples/ClassInstType.hs
			Test/examples/DataHeadParen.hs
			Test/examples/Directory.hs
			Test/examples/EmptyAnn.hs
			Test/examples/EmptyContext.hs
			Test/examples/EmptyInstance.hs
			Test/examples/EmptyList.hs
			Test/examples/Ex1.hs
			Test/examples/FamilyKindSig.hs
			Test/examples/FixityTests.hs
			Test/examples/ForeignImport.hs
			Test/examples/GadtDeriving.hs
			Test/examples/GenericTree.hs
			Test/examples/GhcDeriving.hs
			Test/examples/GroupKeyword.hs
			Test/examples/HappyDoAction.hs
			Test/examples/HaskellParser.hs
			Test/examples/HexPrec.hs
			Test/examples/Hyphen.hs
			Test/examples/ImportSymbol.hs
			Test/examples/IndentedWhere.hs
			Test/examples/InfixParser.hs
			Test/examples/LanguagePragma.hs
			Test/examples/LineOptionsPragma.hs
			Test/examples/LinePragma.hs
			Test/examples/ListComp1.hs
			Test/examples/MagicHash.hs
			Test/examples/MultiCtxt.hs
			Test/examples/NPlusK.hs
			Test/examples/NestedAsPat.hs
			Test/examples/PackageImport.hs
			Test/examples/ParenFunBind.hs
			Test/examples/Pragma.hs
			Test/examples/QualifiedDot.hs
			Test/examples/QuasiQuoteLines.hs
			Test/examples/Rank2Types.hs
			Test/examples/ReadP.hs
			Test/examples/RealGHC.lhs
			Test/examples/RealHSE.hs
			Test/examples/RealHoogle.hs
			Test/examples/RealTagSoup.hs
			Test/examples/RecordInfixSelector.hs
			Test/examples/RecordWildcards.hs
			Test/examples/RelaxedDo.hs
			Test/examples/SCCPragmas.hs
			Test/examples/ScopedTypeVariables.hs
			Test/examples/SimpleDeriving.hs
			Test/examples/SingleClassAsst.hs
			Test/examples/SpecializeInstance.hs
			Test/examples/Testing.hs
			Test/examples/TupleSections.hs
			Test/examples/TypeFunctions.hs
			Test/examples/TypeOperatorsTest.hs
			Test/examples/Unicode.hs
			Test/examples/UnicodeSyntax.hs
			Test/examples/UnindentedPragmaClose.hs
			Test/examples/WhereBlock.hs
			Test/examples/WithKeyword.hs

Flag base4

Library
  Build-Tools:          happy >= 1.17
  Build-Depends:        array >= 0.1, pretty >= 1.0, cpphs >= 1.3
  if flag(base4)
    Build-depends:      base >= 4 && < 4.8
    cpp-options:        -DBASE4
  else
    Build-depends:      base >= 3 && < 4


  Exposed-modules:      Language.Haskell.Exts,
                        Language.Haskell.Exts.Parser,
                        Language.Haskell.Exts.Pretty,
                        Language.Haskell.Exts.Syntax,
                        Language.Haskell.Exts.Extension,
                        Language.Haskell.Exts.Build,
                        Language.Haskell.Exts.Fixity,
                        Language.Haskell.Exts.Comments,
                        Language.Haskell.Exts.SrcLoc,
                        
                        Language.Haskell.Exts.Annotated,
                        Language.Haskell.Exts.Annotated.Syntax,
                        Language.Haskell.Exts.Annotated.Fixity,
                        Language.Haskell.Exts.Annotated.Build,
                        Language.Haskell.Exts.Annotated.ExactPrint,
                        Language.Haskell.Exts.Annotated.Simplify

  Other-modules:        Language.Haskell.Exts.ExtScheme,
                        
                        Language.Haskell.Exts.ParseMonad,
                        Language.Haskell.Exts.ParseSyntax,
                        Language.Haskell.Exts.Lexer,
                        Language.Haskell.Exts.ParseUtils,
                        Language.Haskell.Exts.InternalParser
  Hs-source-dirs:       src
