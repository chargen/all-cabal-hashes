Name:                comptrans
Version:             0.1.0.2
Synopsis:            
Description:         
License:             BSD3
License-File:        LICENSE
Author:              James Koppel
Maintainer:          James Koppel
Synopsis:            Automatically converting ASTs into compositional data types
Description:        
    Template Haskell for converting an AST for a language written using normal
    algebraic data types into ones written using multi-sorted compositional data types
    (`Data.Comp.Multi` from the `compdata` library) so that you can use generic and modular operators
    on it. You might need to add additional constructors that can e.g.: convert a `(Term e Foo)` into a
    `(Term e [Foo])`.
    .
    The sCource files have comments showing example output for a simple language. See the examples directory
    for an extended example of generating a compositional data type for the entire Java language, with labelled variants
    as well as variants where an entire project of source files can be treated as a single AST -- and you can use the same operations
    on all of them!
Homepage:            https://github.com/jkoppel/comptrans
Category:            Data,Generics
Build-type:          Simple
Cabal-version:       >=1.9.2

Source-Repository head
  Type:      git
  Location:  https://github.com/jkoppel/comptrans

Library

  Extensions:
    DeriveGeneric
    EmptyDataDecls
    FlexibleContexts
    FlexibleInstances
    FunctionalDependencies
    GADTs
    KindSignatures
    MultiParamTypeClasses
    OverlappingInstances
    TemplateHaskell
    TypeFamilies
    TypeOperators
    TypeSynonymInstances
    UndecidableInstances

  Ghc-Options:
    -Wall

  Exposed-Modules:     
                       Data.Comp.Derive.Generic
                       Data.Comp.Trans

  Other-Modules:       
                       Data.Comp.Trans.Collect
                       Data.Comp.Trans.DeriveMulti
                       Data.Comp.Trans.DeriveTrans
                       Data.Comp.Trans.DeriveUntrans
                       Data.Comp.Trans.Names

  Build-Depends:       base >= 4.7, base < 5
                     , compdata < 1
                     , containers <= 0.6
                     , lens < 5
                     , template-haskell
                     , th-expand-syns <= 0.4
                     , ghc-prim >= 0.2
                     , deepseq < 1.4
                     , deepseq-generics < 0.1.2


package-hashes:
    MD5:a6e0a0a4399017c4f79543f4675d94a7
    SHA1:f0c0a9505e087eebb27f346d7447e0e539c29c49
    SHA256:509d720608bc781866d40acdb1f93f23cc54b6b2a34f9a39580631a4e92aee84
    SHA512:7c7c0979f755fe1726c11798a2b572644ec958f955db98b2528e152a430f3103ffe35d80b1e17ff9dfd62d975d2dc0b2e0147046c8fab4d7c4f1afc20a5000aa
    Skein512_512:5ec1e3b688b7c9c3e67b91b645779f06d912779a16bab23aefcb34f3971c71bb5937a0a4c405da0cf3720e12bae7a3b9250fe4d411e2530eb4f14600eddbc046

package-locations:
    https://hackage.haskell.org/package/comptrans-0.1.0.2/comptrans-0.1.0.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/comptrans-0.1.0.2.tar.gz

