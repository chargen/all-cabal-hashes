name:                optparse-applicative
version:             0.3.2
x-revision: 2
synopsis:            Utilities and combinators for parsing command line options
description:
    Here is a simple example of an applicative option parser:
    .
    @
    data Sample = Sample
    &#x20; &#x7b; hello :: String
    &#x20; , quiet :: Bool &#x7d;
    .
    sample :: Parser Sample
    sample = Sample
    &#x20; \<$\> strOption
    &#x20;     ( long \"hello\"
    &#x20;     & metavar \"TARGET\"
    &#x20;     & help \"Target for the greeting\" )
    &#x20; \<*\> switch
    &#x20;     ( long \"quiet\"
    &#x20;     & help \"Whether to be quiet\" )
    @
    .
    The parser is built using applicative style starting from a set of basic
    combinators. In this example, @hello@ is defined as an 'option' with a
    @String@ argument, while @quiet@ is a boolean 'flag' (called 'switch').
    .
    A parser can be used like this:
    .
    @
    greet :: Sample -> IO ()
    greet (Sample h False) = putStrLn $ \"Hello, \" ++ h
    greet _ = return ()
    .
    main :: IO ()
    main = execParser opts \>\>= greet
    &#x20; where
    &#x20;   opts = info (helper \<*\> sample)
    &#x20;     ( fullDesc
    &#x20;     & progDesc \"Print a greeting for TARGET\"
    &#x20;     & header \"hello - a test for optparse-applicative\" )
    @
    .
    The @greet@ function is the entry point of the program, while @opts@ is a
    complete description of the program, used when generating a help text. The
    'helper' combinator takes any parser, and adds a @help@ option to it (which
    always fails).
    .
    The @hello@ option in this example is mandatory (since it doesn't have a
    default value), so running the program without any argument will display a
    help text:
    .
 >hello - a test for optparse-applicative
 >
 >Usage: hello --hello TARGET [--quiet]
 >  Print a greeting for TARGET
 >
 >Available options:
 >  -h,--help                Show this help text
 >  --hello TARGET           Target for the greeting
 >  --quiet                  Whether to be quiet
    .
    containing a short usage summary, and a detailed list of options with
    descriptions.
license:             BSD3
license-file:        LICENSE
author:              Paolo Capriotti
maintainer:          p.capriotti@gmail.com
copyright:           (c) 2012  Paolo Capriotti <p.capriotti@gmail.com>
category:            System
build-type:          Simple
cabal-version:       >= 1.8
extra-source-files:  README.md
homepage:            https://github.com/pcapriotti/optparse-applicative
bug-reports:         https://github.com/pcapriotti/optparse-applicative/issues

library
  exposed-modules:     Options.Applicative,
                       Options.Applicative.Arrows,
                       Options.Applicative.Common,
                       Options.Applicative.Types,
                       Options.Applicative.Builder,
                       Options.Applicative.Utils,
                       Options.Applicative.Extra,
                       Options.Applicative.Help
  build-depends:       base >= 4.5 && < 5,
                       transformers >= 0.2 && < 0.4
test-suite tests
  type:                exitcode-stdio-1.0
  hs-source-dirs:      tests
  main-is:             Tests.hs
  build-depends:       base >= 4.5 && < 5,
                       HUnit == 1.2.*,
                       optparse-applicative == 0.3.*,
                       test-framework == 0.6.*,
                       test-framework-hunit == 0.2.*,
                       test-framework-th-prime == 0.0.*


package-hashes:
    MD5:ec5378e29dd6f99987afc650bbe78dcc
    SHA1:2cc25a3b4dde923c2450085fe82fe384e4212c86
    SHA256:707eda5902062a03f932a8dcf0f152349ce325a561efcd93f833d3d280b1e0ff
    SHA512:66ff91f0487937532a6718195b76966997133f9371e6d2929bbca83a9ad474b57ea00e23dadcf1266de70f3908097811747d0c2d5c34489d7d2a3dcc2d25db63
    Skein512_512:3ecea6fa49abebe7ca87c585d7e755c7b2b3d9e8559996a5f5504a55ddf3d141cd9b1de241d81541fd32b6cd3cf32e35e28b9e1f64571aab8d7a5a6e7d3dadc5

package-locations:
    https://hackage.haskell.org/package/optparse-applicative-0.3.2/optparse-applicative-0.3.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/optparse-applicative-0.3.2.tar.gz

