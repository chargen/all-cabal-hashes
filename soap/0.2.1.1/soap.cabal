name:                soap
version:             0.2.1.1
synopsis:            SOAP client tools
description:
  Tools to build SOAP clients using xml-conduit.
  .
  A mildly-complicated example:
  .
  > main = do
  >     -- Initial one-time preparations.
  >     certP <- clientCert "priv/client.crt" "priv/client.key"
  >     transport <- initTransport "https://example.com/soap/endpoint" certP (iconv "cp-1251")
  >
  >     -- Making queries
  >     activeStaff <- listStaff transport True
  >     print activeStaff
  >
  > data Person = Person Text Int deriving Show
  > 
  > listStaff :: Transport -> Bool -> IO [Person]
  > listStaff t active = invokeWS t "urn:dummy:listStaff" () body parser
  >     where
  >         body = element "request" $ element "listStaff" $ do
  >                    element "active" active
  >                    element "order" $ T.pack "age"
  >                    element "limit" (10 :: Int)
  >
  >         parser = StreamParser $ force "no people" $ tagNoAttr "people" $ Parse.many parsePerson
  >
  >         parsePerson = tagName "person" (requireAttr "age") $ \age -> do
  >                           name <- Parse.content
  >                           return $ Person name (read . unpack $ age)
  .
  Changelog
  .
  * 0.2: Switch to xml-conduit-writer for more clean serializers.
         Pluggable transports.
         Raw and streaming parsers.
  .
  * 0.1: Initial implementation, somewhat inflexible and warty, but working
         with diverse services.

homepage:            https://bitbucket.org/dpwiz/haskell-soap
license:             MIT
license-file:        LICENSE
author:              Alexander Bondarenko
maintainer:          aenor.realm@gmail.com
-- copyright:           
category:            Web
build-type:          Simple
cabal-version:       >=1.8

library
  hs-source-dirs:    src/
  ghc-options: -Wall -O2
  exposed-modules:
    Network.SOAP
    Network.SOAP.Transport
    Network.SOAP.Exception
    Network.SOAP.Transport.HTTP.Conduit
    Network.SOAP.Transport.Mock
    Network.SOAP.Parsing.Cursor
    Network.SOAP.Parsing.Stream
  build-depends:
      base ==4.*
    , http-conduit ==1.9.*
    , resourcet
    , tls-extra
    , http-types

    , configurator

    , xml-conduit-writer
    , xml-conduit
    , xml-types
    , conduit
    , data-default

    , text
    , bytestring
    , iconv
    , unordered-containers
    , mtl

test-suite tests
  type: exitcode-stdio-1.0
  main-is: Main.hs
  hs-source-dirs: test/
  build-depends:
    base, soap, hspec, HUnit,
    xml-conduit, xml-conduit-writer,
    text, bytestring,
    unordered-containers


package-hashes:
    MD5:4161bb275f5fd35d38deea57ab77c738
    SHA1:81241d23f203fa44cd7e981412ba2f95bd3fa3f6
    SHA256:c8d02bffacbbd195b8c47ef92f25f71a15da5ccd2b3a8ed7148782d7d43ce126
    SHA512:0438bd93e2d6c73fea10f7b870dbe4aa90ba50f127ec9feaf95f6d969896815f8f1f2b24e2bae588a230b02b0796f130531f02211707cd5d19879ba028593ead
    Skein512_512:01ea7b9bb1b938e3aab62daaf0e0b38dfa030d01ddac4aa973afb7ccc46942eca7ce05ed027127449886627414604c42e5af6d8bdb5c7e497914b3c46e692298

package-locations:
    https://hackage.haskell.org/package/soap-0.2.1.1/soap-0.2.1.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/soap-0.2.1.1.tar.gz

