-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:d86ea817dc9fb9d8184c9ab5f4d5c4cc
    SHA1:00d5eeba77a72dd5f9be1a1bfa4049a550ba236d
    SHA256:e0119600e5f53e809af9d167ed2651c3a5d50bd8d9ce9ac35993ad64db83a664
    SHA512:13eb1cda14b3d175cb654c22d947e7c3856f030a6f2ce8d749930e4b084d827e90ab94da7fc019991b0f1973acebcb2f005cab7eb6100906b9a227b447a6d81b
    Skein512_512:4538594c85ccdd9ff75f6b3175561bbd305ba7f85c1e900ed779b8a53ec6de1fbde15228cc233a08416f0ae37e8ac47e547c1d70fcf6e3b298f3e06470e2894d

x-package-locations:
    https://hackage.haskell.org/package/Takusen-0.8.1/Takusen-0.8.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/Takusen-0.8.1.tar.gz

x-package-size: 203728
-- END Added by all-cabal-hashes-tool

Name:           Takusen
Version:        0.8.1
License:        BSD3
License-file:   LICENSE
Author:         Alistair Bayley, Oleg Kiselyov
Copyright:      2003-2007, Alistair Bayley, Oleg Kiselyov
Maintainer:     alistair@abayley.org, oleg@pobox.com
Stability:      experimental
Homepage:       http://darcs.haskell.org/takusen
Package-url:    http://darcs.haskell.org/takusen
Category:       Database
Build-Depends:  base, mtl, time, old-time
Build-type:     Custom
Synopsis:       Database library with left-fold interface, for PostgreSQL, Oracle, SQLite, ODBC.
Description:   
    Takusen is a DBMS access library. Like HSQL, we support
    arbitrary SQL statements (currently strings, extensible to anything
    that can be converted to a string).
    .
    Takusen's unique selling point is safety and efficiency.
    We statically ensure all acquired database resources - such
    as cursors, connections, and statement handles - are released, exactly
    once, at predictable times. Takusen can avoid loading the whole result
    set in memory, and so can handle queries returning millions of rows in
    constant space. Takusen also supports automatic marshalling and
    unmarshalling of results and query parameters. These benefits come
    from the design of query result processing around a left-fold
    enumerator.
    .
    Currently we fully support ODBC, Oracle, Sqlite, and PostgreSQL.
Exposed-modules:
    Database.Enumerator
    , Database.Util
    , Database.ODBC.Enumerator
    , Database.ODBC.OdbcFunctions
    , Database.Oracle.Enumerator
    , Database.Oracle.OCIConstants
    , Database.Oracle.OCIFunctions
    , Database.PostgreSQL.Enumerator
    , Database.PostgreSQL.PGFunctions
    , Database.Sqlite.Enumerator
    , Database.Sqlite.SqliteFunctions
    , Database.Stub.Enumerator
    , Control.Exception.MonadIO
    , Foreign.C.UTF8
Other-modules:
    Database.InternalEnumerator
    -- We don't expose the Test modules; the only reason to do so would be so Haddock
    -- can use them (to stop the warnings "could not find link destination for:"),
    -- and for that they'd have to be in Exposed-modules.
    -- Modules in Other-modules are passed to Haddock with --hide=<module-name>.
Ghc-Prof-Options: -prof -auto-all
        --Ghc-Options: -O2
        --Ghc-Options: -optl-Wl--enable-stdcall-fixup
Extensions: CPP
Extra-tmp-files: 
    Database/Oracle/OCIFunctions_stub.c
    Database/Oracle/OCIFunctions_stub.h
    Database/PostgreSQL/PGFunctions_stub.c
    Database/PostgreSQL/PGFunctions_stub.h
