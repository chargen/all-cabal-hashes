-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:914440d9cacc792f715459cbf9b9744d
    SHA1:705e154d8bcf1e2d2e9cce2fbc9cb4b1edd7a9a9
    SHA256:e885be02b91c0a9aac3cbfbf478122d5605bee20c162fb764fbfaa223d2798bc
    SHA512:f55eff47e79f6672fc7c83171dcae67e269a7594501c328ca7f13b92e55570d31381ecbf662b6d24c2d7024ab3ec36fc3f5d69c5726cf5eedf97dc5170abb92e
    Skein512_512:8369abb65e53218ab78f1719c379b8564071a5df691e28d5d0d78508f6565989ba3d4c69f4eada89456caf89c1c68c4c7cf0c4a6e9e6c67e1cd08b1c89914aed

x-package-locations:
    https://hackage.haskell.org/package/graphviz-2999.16.0.0/graphviz-2999.16.0.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/graphviz-2999.16.0.0.tar.gz

x-package-size: 218918
-- END Added by all-cabal-hashes-tool

Name:               graphviz
Version:            2999.16.0.0
Stability:          Beta
Synopsis:           Bindings to Graphviz for graph visualisation.
Description: {
This library provides bindings for the Dot language used by the
Graphviz (<http://graphviz.org/>) suite of programs for visualising
graphs, as well as functions to call those programs.
.
Main features of the graphviz library include:
.
* Almost complete coverage of all Graphviz attributes and syntax.
.
* Support for specifying clusters.
.
* The ability to use a custom node type.
.
* Functions for running a Graphviz layout tool with all specified
  output types.
.
* The ability to not only generate but also parse Dot code with two
  options: strict and liberal (in terms of ordering of statements).
.
* Functions to convert FGL graphs and other graph-like data structures
  to Dot code - including support to group them into clusters - with a
  high degree of customisation by specifying which attributes to use
  and limited support for the inverse operation.
.
* Round-trip support for passing an FGL graph through Graphviz to
  augment node and edge labels with positional information, etc.
}

Homepage:           http://projects.haskell.org/graphviz/
Category:           Graphs, Graphics
License:            BSD3
License-File:       LICENSE.md
Copyright:          Matthew Sackman, Ivan Lazar Miljenovic
Author:             Matthew Sackman, Ivan Lazar Miljenovic
Maintainer:         Ivan.Miljenovic+graphviz@gmail.com
Bug-Reports:        http://hub.darcs.net/ivanm/graphviz/issues
Build-Type:         Simple
Cabal-Version:      >= 1.14
Extra-Source-Files: TODO.md
                    Changelog.md
                    README.md
                    FAQ.md
                    utils/AttributeGenerator.hs
                    utils/TestParsing.hs

Source-Repository head
    Type:         darcs
    Location:     http://hub.darcs.net/ivanm/graphviz

Library {
        Default-Language:  Haskell98

        Build-Depends:     base == 4.*,
                           containers,
                           process,
                           directory,
                           temporary >=1.1 && <1.2,
                           fgl == 5.4.*,
                           filepath,
                           polyparse >= 1.7 && < 1.9,
                           bytestring >= 0.9 && < 0.11,
                           colour == 2.3.*,
                           transformers >= 0.2 && < 0.4,
                           text,
                           wl-pprint-text >= 1.1.0.0 && < 1.2.0.0,
                           dlist == 0.5.*

        Exposed-Modules:   Data.GraphViz
                           Data.GraphViz.Types
                           Data.GraphViz.Types.Canonical
                           Data.GraphViz.Types.Generalised
                           Data.GraphViz.Types.Graph
                           Data.GraphViz.Types.Monadic
                           Data.GraphViz.Parsing
                           Data.GraphViz.Printing
                           Data.GraphViz.Commands
                           Data.GraphViz.Commands.IO
                           Data.GraphViz.Attributes
                           Data.GraphViz.Attributes.Complete
                           Data.GraphViz.Attributes.Colors
                           Data.GraphViz.Attributes.Colors.X11
                           Data.GraphViz.Attributes.Colors.Brewer
                           Data.GraphViz.Attributes.Colors.SVG
                           Data.GraphViz.Attributes.HTML
                           Data.GraphViz.PreProcessing
                           Data.GraphViz.Exception
                           Data.GraphViz.Algorithms

        Other-Modules:     Data.GraphViz.Algorithms.Clustering
                           Data.GraphViz.Attributes.ColorScheme
                           Data.GraphViz.Attributes.Internal
                           Data.GraphViz.Attributes.Same
                           Data.GraphViz.Types.Common
                           Data.GraphViz.Types.State
                           Data.GraphViz.Util
                           Data.GraphViz.State

        if True
           Ghc-Options: -Wall

        if impl(ghc >= 6.12.1)
           Ghc-Options: -fno-warn-unused-do-bind

        Ghc-Prof-Options:  -prof -auto-all
}

Test-Suite graphviz-testsuite {
        Default-Language:  Haskell98

        Type:              exitcode-stdio-1.0

        -- Versions controlled by library section
        Build-Depends:     base,
                           containers,
                           process,
                           directory,
                           temporary,
                           fgl,
                           filepath,
                           polyparse,
                           bytestring,
                           colour,
                           transformers,
                           text,
                           wl-pprint-text,
                           dlist,
                           QuickCheck >= 2.3 && < 2.6

        hs-Source-Dirs:    . tests

        Main-Is:           RunTests.hs


        Other-Modules:       Data.GraphViz.Testing
                             Data.GraphViz.Testing.Instances
                             Data.GraphViz.Testing.Properties
                             Data.GraphViz.Testing.Instances.FGL
                             Data.GraphViz.Testing.Instances.Helpers
                             Data.GraphViz.Testing.Instances.Attributes
                             Data.GraphViz.Testing.Instances.Common
                             Data.GraphViz.Testing.Instances.Canonical
                             Data.GraphViz.Testing.Instances.Generalised
                             Data.GraphViz.Testing.Instances.Graph

        if True
           Ghc-Options: -O -Wall

        if impl(ghc >= 6.12.1)
           Ghc-Options: -fno-warn-unused-do-bind

        GHC-Prof-Options: -auto-all -caf-all -rtsopts
}

Benchmark graphviz-printparse {
        Default-Language: Haskell98

        Type:             exitcode-stdio-1.0

        Build-Depends:    base,
                          deepseq,
                          text,
                          graphviz,
                          criterion >= 0.5 && < 0.7

        hs-Source-Dirs:   utils

        Main-Is:          Benchmark.hs

        if True
           Ghc-Options: -O -Wall

        if impl(ghc >= 6.12.1)
           Ghc-Options: -fno-warn-unused-do-bind

        GHC-Prof-Options: -auto-all -caf-all -rtsopts
}
