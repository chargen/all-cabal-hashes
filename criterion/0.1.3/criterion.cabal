-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:9cb2ec6c209eadf390257850fc67aa4b
    SHA1:2f04bbd78163500d187a95e3de048ae52214a730
    SHA256:fe59fdb4fe4220ccc407acd0b604b0db3f2318bce65ff5d895c5ab9eadfd5886
    SHA512:b6501418c3798b1da28f5dd96a5065b7715eacf46f53d8abc53c1278d5dfadfea0f084b912c4d6278a5d97c96cf5a1c79c9f3eb9c70989f7dc0641e0e790826f
    Skein512_512:ba134520ca6e80f4c4139581ef1ff3d02bd5f985181ed91dfdd6d2161ae325d3529cdf4740e0f6e6d06746e99b0444e8c7e708a962e28f17e1c8230c350456eb

package-locations:
    https://hackage.haskell.org/package/criterion-0.1.3/criterion-0.1.3.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/criterion-0.1.3.tar.gz

package-size: 16761
-- END Added by all-cabal-hashes-tool

name:           criterion
version:        0.1.3
synopsis:       Robust, reliable performance measurement and analysis
license:        BSD3
license-file:   LICENSE
author:         Bryan O'Sullivan <bos@serpentine.com>
maintainer:     Bryan O'Sullivan <bos@serpentine.com>
copyright:      2009 Bryan O'Sullivan
category:       Development, Performance, Testing
build-type:     Simple
cabal-version:  >= 1.2
extra-source-files:
  README examples/Fibber.hs examples/Judy.hs
description:
  This library provides a powerful but simple way to measure the
  performance of Haskell code.  It provides both a framework for
  executing and analysing benchmarks and a set of driver functions
  that makes it easy to build and run benchmarks, and to analyse their
  results.
  .
  The fastest way to get started is to read the documentation and
  examples in the Criterion.Main module.

flag Chart
  Description: enable use of the Chart package

library
  exposed-modules:
    Criterion
    Criterion.Analysis
    Criterion.Config
    Criterion.Environment
    Criterion.IO
    Criterion.Main
    Criterion.Measurement
    Criterion.Monad
    Criterion.MultiMap
    Criterion.Plot
    Criterion.Types

  build-depends:
    base < 5,
    bytestring >= 0.9 && < 1.0,
    containers,
    filepath,
    mtl,
    parallel,
    parsec,
    statistics >= 0.3.5,
    time,
    uvector,
    uvector-algorithms >= 0.2

  if flag(chart)
    build-depends:
      Chart>=0.12,
      data-accessor
    cpp-options: -DHAVE_CHART

  -- gather extensive profiling data for now
  ghc-prof-options: -auto-all

  ghc-options: -Wall -funbox-strict-fields -O2
  if impl(ghc >= 6.8)
    ghc-options: -fwarn-tabs
