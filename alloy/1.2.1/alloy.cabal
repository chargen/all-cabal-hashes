-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:7a4a1223cbac8c73a9f1d3fdb1a6209b
    SHA1:e6300706642b7ea4f0d9aa9cba3d2995003cc18a
    SHA256:db73b7f02b642aec6a007c1542874d1bb674e482bc0d19f916a9410f466c7601
    SHA512:6774f0161267cd1b3f28c1312f3dce61c23480bd17fd5d688cc987a2eecda0ebb504c8e1fdfce0824fff1dd58bb6f8a3ccab92ff1dcea3044abe0ea049432e37
    Skein512_512:9b10fda7f470a046b7c4493956894a4673c9e7aee5769f41225ce789a4f904953f167c48c9847f0cda20d898a0d5f016d145ccbd9718a95cd31ca5322afd0a84

package-locations:
    https://hackage.haskell.org/package/alloy-1.2.1/alloy-1.2.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/alloy-1.2.1.tar.gz

package-size: 25910
-- END Added by all-cabal-hashes-tool

Name: alloy
Version: 1.2.1
License: BSD3
License-File: LICENSE
Author: Neil Brown and Adam Sampson
Copyright: Copyright 2008-2009, 2012 University of Kent
Maintainer: neil@twistedsquare.com
Cabal-Version: >= 1.2.3
Build-type: Simple
Synopsis: Generic programming library
Description: Alloy is a generic programming library for performing traversals
             of data and applying specific operations to certain types.  More
	     information is available in the tutorial
	     (<http://twistedsquare.com/Alloy-Tutorial.pdf>) and the draft
	     paper (<http://twistedsquare.com/Alloy.pdf>).
Category: Generics
Tested-With: GHC==6.8.2, GHC==6.10.3
Extra-Source-Files: tutorial/tutorial.tex
                    tutorial/CompanyDatatypes.lhs
                    tutorial/Constraints.lhs
                    tutorial/Effects.lhs
                    tutorial/EffectsSelective.lhs
                    tutorial/GenTypes.lhs
                    tutorial/GenTypesMapSet.lhs
                    tutorial/MapSet.lhs
                    tutorial/MapSetExample.lhs
                    tutorial/Paradise.lhs
                    tutorial/Query.lhs
                    tutorial/Routes.lhs
                    tutorial/Selective.lhs

Library
  Build-Depends:   base >= 4.3 && < 5, containers, mtl, syb, vector

  Exposed-modules: Data.Generics.Alloy
                   Data.Generics.Alloy.Effect
                   Data.Generics.Alloy.GenInstances
                   Data.Generics.Alloy.Pure
                   Data.Generics.Alloy.Route
                   Data.Generics.Alloy.Schemes

  Extensions: CPP
              ExistentialQuantification
              FlexibleContexts
              FlexibleInstances
              KindSignatures
              MultiParamTypeClasses
              Rank2Types
              ScopedTypeVariables
              TypeOperators

-- Rank2Types for the Route Monad stuff
--   (surely, this could be removed somehow?)
-- ExistentialQuantification for DataBox
--   (could be removed if we generate instances with TH or Derive)
-- MultiParamTypeClasses for the Alloy type-class
--   (unavoidable!)
-- TypeOperators for the opsets
--   (not going to change)
-- FlexibleContexts and FlexibleInstances all over the place
--   (unavoidable)





