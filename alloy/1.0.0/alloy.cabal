-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:1fc22a9d612c28dfd1a4bf449abc9ffd
    SHA1:6be55522fa36b7c2208ce0faae10fa7f25327985
    SHA256:3ed8110f1b16156946792f51a6bf79bd942e6852619daef0615a8097fb4ac310
    SHA512:1dfe1dfd5c111977813fe37c22ce505eff4ae1e5e553a5f5f20037dfee3631877311cbc06b6cb71f5cbf336414e90b212bcd50a7fc40d7462c32cd1c699ffe70
    Skein512_512:0b32e90fa31b6c4d06b2fcd5c06fe1a8cbc681bd7409c9312ea9583b9a8ac1de331ce7c23c2b85d0b5fee6e57959ea35f19dcd774a921aa147a89461c4eab572

x-package-locations:
    https://hackage.haskell.org/package/alloy-1.0.0/alloy-1.0.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/alloy-1.0.0.tar.gz

x-package-size: 24180
-- END Added by all-cabal-hashes-tool

Name: alloy
Version: 1.0.0
License: BSD3
License-File: LICENSE
Author: Neil Brown and Adam Sampson
Copyright: Copyright 2008-2009, University of Kent
Maintainer: neil@twistedsquare.com
Cabal-Version: >= 1.2.3
Build-type: Simple
Synopsis: Generic programming library
Description: Alloy is a generic programming library for performing traversals
             of data and applying specific operations to certain types.  More
	     information is available in the tutorial
	     (<http://twistedsquare.com/Alloy-Tutorial.pdf>) and the draft
	     paper (<http://twistedsquare.com/Alloy.pdf>).
Category: Generics
Tested-With: GHC==6.8.2, GHC==6.10.3
Extra-Source-Files: tutorial/tutorial.tex
                    tutorial/CompanyDatatypes.lhs
                    tutorial/Constraints.lhs
                    tutorial/Effects.lhs
                    tutorial/EffectsSelective.lhs
                    tutorial/GenTypes.lhs
                    tutorial/GenTypesMapSet.lhs
                    tutorial/MapSet.lhs
                    tutorial/MapSetExample.lhs
                    tutorial/Paradise.lhs
                    tutorial/Query.lhs
                    tutorial/Routes.lhs
                    tutorial/Selective.lhs

Library
  if (impl(ghc < 6.10))
    Build-Depends: base >= 3 && < 4, containers, mtl
  else
    Build-Depends: base >= 4 && < 5, containers, mtl, syb

  Exposed-modules: Data.Generics.Alloy
                   Data.Generics.Alloy.Effect
                   Data.Generics.Alloy.GenInstances
                   Data.Generics.Alloy.Pure
                   Data.Generics.Alloy.Route
                   Data.Generics.Alloy.Schemes

  Extensions: ExistentialQuantification
              FlexibleContexts
              FlexibleInstances
              KindSignatures
              MultiParamTypeClasses
              Rank2Types
              ScopedTypeVariables
              TypeOperators

-- Rank2Types for the Route Monad stuff
--   (surely, this could be removed somehow?)
-- ExistentialQuantification for DataBox
--   (could be removed if we generate instances with TH or Derive)
-- MultiParamTypeClasses for the Alloy type-class
--   (unavoidable!)
-- TypeOperators for the opsets
--   (not going to change)
-- FlexibleContexts and FlexibleInstances all over the place
--   (unavoidable)





