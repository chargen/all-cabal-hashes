-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:ee764435a24225414be37e73b76aaf0e
    SHA1:21c34d39b34f514a683e4de460a9008bdf7a7618
    SHA256:06a439b04ce2e9915cf84779c5e51dc127a8ceb5d58daa7fc8d34e445aae7381
    SHA512:d627b8b4835e693376ac6ea8fe7e264d44e55a37c4208a16d73c643f41add9efc09d7f3d3dfcb928ee56c37c7fff1037e8f4734aca13822d9083a276edc2b77c
    Skein512_512:882d5bed08d5e869ee781909935cecbea85bcc4a28063e07f70803e6ca6da8e0195cd7d29a869c6c5ac77ffa809d084209f8af8a9e24a7d229e75b150cb518f9

package-locations:
    https://hackage.haskell.org/package/HDBC-2.2.7.0/HDBC-2.2.7.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/HDBC-2.2.7.0.tar.gz

package-size: 32907
-- END Added by all-cabal-hashes-tool

Name: HDBC
Version: 2.2.7.0
License: LGPL
Maintainer: John Goerzen <jgoerzen@complete.org>
Author: John Goerzen
Copyright: Copyright (c) 2005-2010 John Goerzen
license-file: COPYRIGHT
extra-source-files: COPYING, Makefile, Memory.txt, README.txt
homepage: http://software.complete.org/hdbc
Category: Database
synopsis: Haskell Database Connectivity
Description: HDBC provides an abstraction layer between Haskell programs and SQL
 relational databases. This lets you write database code once, in
 Haskell, and have it work with any number of backend SQL databases
 (MySQL, Oracle, PostgreSQL, ODBC-compliant databases, etc.)
Stability: Stable
Build-Type: Simple

Cabal-Version: >=1.8

flag splitBase
  description: Choose the new smaller, split-up base package.
flag buildtests
  description: Build the executable to run unit tests
  default: False

flag time_gte_113
  description: time > 1.1.3 has defined some more instances so omit them here

library
  if flag(splitBase)
    Build-Depends: base>=3 && <5, old-time, time>=1.1.2.4 && <=1.2.0.3, bytestring, containers, old-locale
    if flag(time_gte_113)
      Build-Depends: time>=1.1.3
      CPP-OPTIONS: -DTIME_GT_113
    else
      Build-Depends: time<1.1.3
  else
    Build-Depends: base<3
  Build-Depends: mtl, convertible >= 1.0.10.0, text, utf8-string

  -- Hack for cabal-install weirdness.  cabal-install forces base 3,
  -- though it works fine for Setup.lhs manually.  Fix.
  if impl(ghc >= 6.9)
     build-depends: base >= 4

  GHC-Options: -O2 -Wall -fno-warn-orphans

  Exposed-Modules: Database.HDBC, Database.HDBC.Types, Database.HDBC.DriverUtils,
    Database.HDBC.ColTypes, Database.HDBC.Statement, Database.HDBC.SqlValue,
    Database.HDBC.Locale
  Other-Modules: Database.HDBC.Utils
  Extensions: ExistentialQuantification, CPP, MultiParamTypeClasses,
    FlexibleContexts, TypeSynonymInstances, TypeOperators, RankNTypes,
    FlexibleInstances
    
Executable runtests
   if flag(buildtests)
      Buildable: True
      Build-Depends: HUnit, QuickCheck (>= 2.0), testpack (>= 2.0)

      if flag(splitBase)
        Build-Depends: base>=3 && <5, old-time, time>=1.1.2.4 && <=1.1.4, bytestring, containers, old-locale
        if flag(time_gte_113)
          Build-Depends: time>=1.1.3
          CPP-OPTIONS: -DTIME_GT_113
        else
          Build-Depends: time<1.1.3
      else
        Build-Depends: base<3
      Build-Depends: mtl, convertible >= 1.0.9.1, utf8-string

      -- Hack for cabal-install weirdness.  cabal-install forces base 3,
      -- though it works fine for Setup.lhs manually.  Fix.
      if impl(ghc >= 6.9)
         build-depends: base >= 4
   else
      Buildable: False
   Main-Is: runtests.hs
   Other-Modules: TestSqlValue
                  TestInfrastructure
   Hs-Source-Dirs: ., testsrc
   GHC-Options: -O2
   Extensions: ExistentialQuantification, CPP, MultiParamTypeClasses,
     FlexibleContexts, TypeSynonymInstances, TypeOperators,
     RankNTypes, FlexibleInstances
   
