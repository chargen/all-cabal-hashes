-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:34c8e97f0e584b743edab5f76adcbb6f
    SHA1:2dc2113a458195ee409daa8d55e259b2fad33422
    SHA256:529112fec6dee92a30595c3f03955c3cf602db2f159de9730db905bd29f059c5
    SHA512:7d9de9f11d5f88c9caa86ace64a01672a7a7886238bd0dc0eebb6994391550475b936aa42b12f9f897417abadc16567976ac73a3b04d85548304f6ce228aa7b3
    Skein512_512:cac7b038dd1b90388a9f721eb43575670691be46d4909d91a9ff5baa14ca1aeb24c18915c8c247735eacdad2e3162c55e4f81c9d0bc397f8c3a4fd96a17367f5

x-package-locations:
    https://hackage.haskell.org/package/HDBC-2.0.1/HDBC-2.0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/HDBC-2.0.1.tar.gz

x-package-size: 29848
-- END Added by all-cabal-hashes-tool

Name: HDBC
Version: 2.0.1
License: LGPL
Maintainer: John Goerzen <jgoerzen@complete.org>
Author: John Goerzen
Copyright: Copyright (c) 2005-2009 John Goerzen
license-file: COPYRIGHT
extra-source-files: COPYING
homepage: http://software.complete.org/hdbc
Category: Database
synopsis: Haskell Database Connectivity
Description: HDBC provides an abstraction layer between Haskell programs and SQL
 relational databases. This lets you write database code once, in
 Haskell, and have it work with any number of backend SQL databases
 (MySQL, Oracle, PostgreSQL, ODBC-compliant databases, etc.)
Stability: Stable
Build-Type: Simple

Cabal-Version: >=1.2.3

flag splitBase
  description: Choose the new smaller, split-up base package.
flag buildtests
  description: Build the executable to run unit tests
  default: False

library
  if flag(splitBase)
    Build-Depends: base>=3, old-time, time, bytestring, containers, old-locale
  else
    Build-Depends: base<3
  Build-Depends: mtl, convertible >= 1.0.1, utf8-string

  -- Hack for cabal-install weirdness.  cabal-install forces base 3,
  -- though it works fine for Setup.lhs manually.  Fix.
  if impl(ghc >= 6.9)
     build-depends: base >= 4

  GHC-Options: -O2 -Wall -fno-warn-orphans

  Exposed-Modules: Database.HDBC, Database.HDBC.Types, Database.HDBC.DriverUtils,
    Database.HDBC.ColTypes, Database.HDBC.Statement, Database.HDBC.SqlValue
  Other-Modules: Database.HDBC.Utils
  Extensions: ExistentialQuantification, CPP, MultiParamTypeClasses,
    FlexibleContexts, TypeSynonymInstances, TypeOperators, RankNTypes,
    FlexibleInstances
    
Executable runtests
   if flag(buildtests)
      Buildable: True
   else
      Buildable: False
   Build-Depends: HUnit, QuickCheck, testpack
   Main-Is: runtests.hs
   Other-Modules: TestSqlValue
                  TestInfrastructure
   Hs-Source-Dirs: ., testsrc
   GHC-Options: -O2
   Extensions: ExistentialQuantification, CPP, MultiParamTypeClasses,
     FlexibleContexts, TypeSynonymInstances, TypeOperators,
     RankNTypes, FlexibleInstances
   
