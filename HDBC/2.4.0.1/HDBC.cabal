-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:dd5e26e5b675007b668ee68c4487f8e8
    SHA1:dd9585b346604537a917c546a8ce93ddea8a0001
    SHA256:7a3ee21c41e716111c4a3742a66eb448683719a9384afbf7021c5942ac73d2ad
    SHA512:1a20a533ffe7700cfb48c9875e9c6b09f940c1b808fd1a371327eed9c358abfe0167d206bb5b2dbb904b49f2081f91f81091d4164aad2aa08555f6de01a55d5a
    Skein512_512:615622ae9a3f38e6b7d6197855e581393183969772629ce2b24e57d761ff625f48391d0739991bf8bd43acbd1fb2dbde591dd2d83bf8bf99efa622aff7c8a077

package-locations:
    https://hackage.haskell.org/package/HDBC-2.4.0.1/HDBC-2.4.0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/HDBC-2.4.0.1.tar.gz

package-size: 23415
-- END Added by all-cabal-hashes-tool

Name: HDBC
Version: 2.4.0.1
License: BSD3
Maintainer: Nicolas Wu <nicolas.wu@gmail.com>
Author: John Goerzen, Nicolas Wu
homepage: https://github.com/hdbc/hdbc
Copyright: Copyright (c) 2005-2011 John Goerzen
license-file: LICENSE
extra-source-files: LICENSE, Makefile, README.md, CHANGELOG.md
Category: Database
synopsis: Haskell Database Connectivity
Description: HDBC provides an abstraction layer between Haskell programs and SQL
 relational databases. This lets you write database code once, in
 Haskell, and have it work with any number of backend SQL databases
 (MySQL, Oracle, PostgreSQL, ODBC-compliant databases, etc.)
Stability: Stable
Build-Type: Simple

Cabal-Version: >=1.8

source-repository head
  type:            git
  location:        https://github.com/hdbc/hdbc.git

flag splitBase
  description: Choose the new smaller, split-up base package.
flag buildtests
  description: Build the executable to run unit tests
  default: False
flag minTime15
  description: Use time 1.5 or higher.
  default: True

library
  if flag(splitBase)
    Build-Depends: base>=3 && <5, old-time, bytestring, containers
    if flag(minTime15)
      Build-Depends: time >= 1.5 && < 1.6
      CPP-Options: -DMIN_TIME_15
    else
      Build-Depends: time < 1.5, old-locale
  else
    Build-Depends: base<3
  Build-Depends: mtl, convertible >= 1.1.0.0, text, utf8-string

  -- Hack for cabal-install weirdness.  cabal-install forces base 3,
  -- though it works fine for Setup.lhs manually.  Fix.
  if impl(ghc >= 6.9)
     build-depends: base >= 4

  GHC-Options: -O2 -Wall -fno-warn-orphans

  Exposed-Modules: Database.HDBC, Database.HDBC.Types, Database.HDBC.DriverUtils,
    Database.HDBC.ColTypes, Database.HDBC.Statement, Database.HDBC.SqlValue,
    Database.HDBC.Locale
  Other-Modules: Database.HDBC.Utils
  Extensions: ExistentialQuantification, CPP, MultiParamTypeClasses,
    FlexibleContexts, TypeSynonymInstances, TypeOperators, RankNTypes,
    FlexibleInstances, DeriveDataTypeable
    
Executable runtests
   if flag(buildtests)
      Buildable: True
      Build-Depends: HUnit, QuickCheck (>= 2.0), testpack (>= 2.0)

      if flag(splitBase)
        Build-Depends: base>=3 && <5, old-time, bytestring, containers
        if flag(minTime15)
          Build-Depends: time >= 1.5 && < 1.6
        else
          Build-Depends: time < 1.5, old-locale
      else
        Build-Depends: base<3
      Build-Depends: mtl, convertible >= 1.1.0.0, utf8-string, text

      -- Hack for cabal-install weirdness.  cabal-install forces base 3,
      -- though it works fine for Setup.lhs manually.  Fix.
      if impl(ghc >= 6.9)
         build-depends: base >= 4
   else
      Buildable: False
   Main-Is: runtests.hs
   Other-Modules: TestSqlValue
                  TestInfrastructure
   Hs-Source-Dirs: ., testsrc
   GHC-Options: -O2
   Extensions: ExistentialQuantification, CPP, MultiParamTypeClasses,
     FlexibleContexts, TypeSynonymInstances, TypeOperators,
     RankNTypes, FlexibleInstances
   
