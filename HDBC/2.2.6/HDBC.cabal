-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:859e77b2c8efeb7acbdb3dc82d71cd8a
    SHA1:630a3982330ef3d57ed34c9ce3680517d86b6ae7
    SHA256:31ddaf99af4ccc2d3d7f91f345f58d270d1116feca9350bbbb1661388c85ab2c
    SHA512:55966240fce104b0c2c5ed24012dbfb0699b4c0ea3165a7c1e56993f67049f3da10504dc482a972d9ae0aba41aa6181a5644cde65ea6ba3a76e32b27bd90cf73
    Skein512_512:fe6fc92a20572e51c876db3b72568b3eb4c9f8b18feea6b5051e05b7767c9ffd12144627409c576616808618589db7a0addeca5b54f1e0dbcdf10b294e19a736

package-locations:
    https://hackage.haskell.org/package/HDBC-2.2.6/HDBC-2.2.6.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/HDBC-2.2.6.tar.gz

package-size: 32859
-- END Added by all-cabal-hashes-tool

Name: HDBC
Version: 2.2.6
License: LGPL
Maintainer: John Goerzen <jgoerzen@complete.org>
Author: John Goerzen
Copyright: Copyright (c) 2005-2010 John Goerzen
license-file: COPYRIGHT
extra-source-files: COPYING, Makefile, Memory.txt, README.txt
homepage: http://software.complete.org/hdbc
Category: Database
synopsis: Haskell Database Connectivity
Description: HDBC provides an abstraction layer between Haskell programs and SQL
 relational databases. This lets you write database code once, in
 Haskell, and have it work with any number of backend SQL databases
 (MySQL, Oracle, PostgreSQL, ODBC-compliant databases, etc.)
Stability: Stable
Build-Type: Simple

Cabal-Version: >=1.2.3

flag splitBase
  description: Choose the new smaller, split-up base package.
flag buildtests
  description: Build the executable to run unit tests
  default: False

flag time_gte_113
  description: time > 1.1.3 has defined some more instances so omit them here

library
  if flag(splitBase)
    Build-Depends: base>=3 && <5, old-time, time>=1.1.2.4 && <=1.1.4, bytestring, containers, old-locale
    if flag(time_gte_113)
      Build-Depends: time>=1.1.3
      CPP-OPTIONS: -DTIME_GT_113
    else
      Build-Depends: time<1.1.3
  else
    Build-Depends: base<3
  Build-Depends: mtl, convertible >= 1.0.1, utf8-string

  -- Hack for cabal-install weirdness.  cabal-install forces base 3,
  -- though it works fine for Setup.lhs manually.  Fix.
  if impl(ghc >= 6.9)
     build-depends: base >= 4

  GHC-Options: -O2 -Wall -fno-warn-orphans

  Exposed-Modules: Database.HDBC, Database.HDBC.Types, Database.HDBC.DriverUtils,
    Database.HDBC.ColTypes, Database.HDBC.Statement, Database.HDBC.SqlValue,
    Database.HDBC.Locale
  Other-Modules: Database.HDBC.Utils
  Extensions: ExistentialQuantification, CPP, MultiParamTypeClasses,
    FlexibleContexts, TypeSynonymInstances, TypeOperators, RankNTypes,
    FlexibleInstances
    
Executable runtests
   if flag(buildtests)
      Buildable: True
      Build-Depends: HUnit, QuickCheck >= 2.0, testpack >= 2.0

      if flag(splitBase)
        Build-Depends: base>=3 && <5, old-time, time>=1.1.2.4 && <=1.1.4, bytestring, containers, old-locale
        if flag(time_gte_113)
          Build-Depends: time>=1.1.3
          CPP-OPTIONS: -DTIME_GT_113
        else
          Build-Depends: time<1.1.3
      else
        Build-Depends: base<3
      Build-Depends: mtl, convertible >= 1.0.1, utf8-string

      -- Hack for cabal-install weirdness.  cabal-install forces base 3,
      -- though it works fine for Setup.lhs manually.  Fix.
      if impl(ghc >= 6.9)
         build-depends: base >= 4
   else
      Buildable: False
   Main-Is: runtests.hs
   Other-Modules: TestSqlValue
                  TestInfrastructure
   Hs-Source-Dirs: ., testsrc
   GHC-Options: -O2
   Extensions: ExistentialQuantification, CPP, MultiParamTypeClasses,
     FlexibleContexts, TypeSynonymInstances, TypeOperators,
     RankNTypes, FlexibleInstances
   
