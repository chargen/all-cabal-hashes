-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:7a48b64e3323d3eb12023579aa89da0a
    SHA1:8148bb9d13a66d48eec83b737dcbdaa686f1f9f2
    SHA256:a60bb7dab09df2972c0c4c5f271a796b0159c9f75b83c7ea469f88707fe10fdb
    SHA512:0f384dd3290ca2a30e0ada35b3adcfa70917ce2fdd0be817fc5ba8f82b1ca09c667d4136b6109788553f6f5f4c8a397b9bfbd4af3509a50375f3550e98bce756
    Skein512_512:b7e14dd9fbd3305b147d2a53488edd170323e4bdcc483625051c532186d7add27b8c65637969edbca50cb48fbc12248698c6f82b40781e5b81b92630c2eccbda

x-package-locations:
    https://hackage.haskell.org/package/reify-0.1/reify-0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/reify-0.1.tar.gz

x-package-size: 17143
-- END Added by all-cabal-hashes-tool

name:                reify
version:             0.1
synopsis:            Serialize data
description:         This is a library for reifying Haskell data structures in GHC.

                     Haskell values are mapped into representations that we call
                     graphs (for want of a better name). The representations are
                     encoded in the Haskell type Graph, which is just an ordinary
                     algebraic data type. This will not reify functions.
                     .
                     Bitrotten.
category:            Data
license:             GPL
license-file:        LICENSE
author:              Bernie Pope <bjpop@csse.unimelb.edu.au>
maintainer:          None
homepage:            http://www.cs.mu.oz.au/~bjpop/code.html

build-depends:       base, ghc
build-type:          Simple
tested-with:         GHC==6.5
Extensions:          CPP, ForeignFunctionInterface

data-files:          README, Makefile
extra-source-files:  GhcInternalsC.c, HeapGraph.c, ReifyC.c, Hash.h, Internals.h

exposed-modules:   PrettyGraph, ReifyHs

executable:          reify
main-is:             Main.hs


ghc-options:         -O2 -Wall -optl-Wl,-s
ghc-prof-options:    -prof -auto-all
