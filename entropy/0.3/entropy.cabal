-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:f34fca588f85147329f144f12e464e93
    SHA1:4eebc2835a4ef8f72e231228266516cee3b3a60b
    SHA256:58486ef1c2b6663c174b385a80fcb9845bc9742fc92099c59788f704c8e93e2c
    SHA512:39ac5d8c7732734817c6679fd44eb11640655a8f71fa817a68b02824bacdce54c0a48541a919db98e387a6faefef963467b8bcb2d2a346be39e9190a8ef11af3
    Skein512_512:3c743ff3e4ff628f362d3ce7780e68c70c493a7077136dafb4e899a6aaa75d9b89ea16e5488b003e4a8c399baf8c72f28de7c2851d136f72df3987d7b4bf00f4

package-locations:
    https://hackage.haskell.org/package/entropy-0.3/entropy-0.3.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/entropy-0.3.tar.gz

package-size: 5538
-- END Added by all-cabal-hashes-tool

name:           entropy
version:        0.3
description:    A platform independent method to obtain cryptographically strong entropy 
                (urandom on Linux, CryptAPI on Windows, patches welcome). 
                Users looking for cryptographically strong (number-theoretically
                sound) PRNGs should see the 'DRBG' package too!
synopsis:       A platform independent entropy source
license:        BSD3
license-file:   LICENSE
copyright:      Thomas DuBuisson <thomas.dubuisson@gmail.com>
author:         Thomas DuBuisson <thomas.dubuisson@gmail.com>
maintainer:     Thomas DuBuisson <thomas.dubuisson@gmail.com>
category:       Data, Cryptography
homepage:       https://github.com/TomMD/entropy
bug-reports:    https://github.com/TomMD/entropy/issues
stability:      stable
-- build-type:  Simple
-- ^^ Used for HaLVM
build-type:        Custom
-- ^^ Test for RDRAND support using 'ghc'
cabal-version:  >=1.10
tested-with:    GHC == 7.6.3
-- data-files:
extra-source-files:   ./cbits/rdrand.c, ./cbits/rdrand.h, README.md

-- Notice to compile  with HaLVM the above 'build-type' must be changed
-- to 'Simple' instead of 'Custom'.  The current build system naively
-- runs GHC to determine if the compiler supports RDRAND before proceeding.
flag halvm
    description:        Build for the HaLVM
    default:            False
library
  ghc-options:  -O2
  exposed-modules: System.Entropy
  if os(windows)
    other-modules: System.EntropyWindows
  else
    other-modules: System.EntropyNix
  other-extensions:    CPP, ForeignFunctionInterface, BangPatterns, ScopedTypeVariables
  build-depends: base == 4.*, bytestring
  default-language:    Haskell2010
  if(flag(halvm))
    cpp-options: -DXEN -DHAVE_RDRAND
  if arch(x86_64)
    cpp-options: -Darch_x86_64
    c-sources:    cbits/rdrand.c
    include-dirs: cbits
  if os(windows)
    cpp-options: -DisWindows
    extra-libraries: advapi32
  else
    if !flag(halvm)
       Build-Depends: unix

source-repository head
    type:       git
    location:   https://github.com/TomMD/entropy
