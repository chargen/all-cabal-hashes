-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:48c249188637ab25847f002f006350aa
    SHA1:321449315fa2c2ba2f1492e32a6e40fe486e290c
    SHA256:5fd4a87ce24be9658397f2aa63b89d79269a5967a3926e8af482cffe1156ee5a
    SHA512:20e7664a8700a8e11ed729148fc2155d818783ca6aaeb854553312eed6337d0c65f050325a72829c5efa5f73a815d7b7cf366c3abb46fc8f74eef2808110f0a6
    Skein512_512:173cbee64f362cb1d41cf33743c12ad094503c37912a81ee0372b5e55a271ac9da66ba7a5cc8486790795f52982e291ebb87e51d7f58e1a4eb3b2d6deb25210d

x-package-locations:
    https://hackage.haskell.org/package/dataflow-0.6.0.0/dataflow-0.6.0.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/dataflow-0.6.0.0.tar.gz

x-package-size: 9312
-- END Added by all-cabal-hashes-tool

name:                dataflow
version:             0.6.0.0
synopsis:            Generate Graphviz documents from a Haskell representation.
description:         Outputs .dot files that can be processed by the dot
                     command. Currently it only supports the DFD output format
                     (http://en.wikipedia.org/wiki/Data_flow_diagram). Support
                     for a Graphviz-like input format (instead of using the
                     data structures in Haskell) is planned.
homepage:            https://github.com/owickstrom/dataflow
license:             MIT
license-file:        LICENSE
author:              Oskar WickstrÃ¶m
maintainer:          oskar.wickstrom@gmail.com
copyright:           oskar.wickstrom@gmail.com
category:            Code Generation, Compiler, Graphs

build-type:          Simple
extra-source-files:  README.md,
                     LICENSE,
                     examples/webapp.flow,
                     examples/webapp.svg,
                     examples/legend.flow,
                     examples/legend.svg,
                     examples/Makefile
cabal-version:       >=1.10

source-repository head
  type: git
  location: git@github.com:owickstrom/dataflow.git

library
  exposed-modules:
    DataFlow.Core,
    DataFlow.Reader,
    DataFlow.Graphviz,
    DataFlow.Graphviz.EdgeNormalization,
    DataFlow.Graphviz.Renderer,
    DataFlow.DFD
  build-depends:
    base >=4 && <4.8,
    mtl >=2.2,
    containers >= 0.4,
    parsec
  hs-source-dirs:      src
  default-language:    Haskell2010

executable dataflow
  main-is: Main.hs
  build-depends:
    base >=4 && <4.8,
    dataflow
  hs-source-dirs:      cli
  default-language:    Haskell2010

test-suite spec
  type: exitcode-stdio-1.0
  main-is: Spec.hs
  default-language: Haskell98
  hs-source-dirs: test
  build-depends:
    base,
    HUnit,
    hspec == 2.*,
    dataflow
  ghc-options: -Wall
