-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:6a8365db9f30a61f77566c1cd00d1e00
    SHA1:c3910ac72455cc552be81f249ce9e1de7c937b5e
    SHA256:259e9b9e4143f5ed90534f4b06f501e86cc71dd9125f36947177406fd4808d74
    SHA512:bf0b53e438c136a6e5aa3ce650e62ccfb42b0338a4bdc7ba1c2d0cd8a4edb37ca6bf78825e925c0368be596c80aa96c0177bba58f408feb05cd99907ddf6e01b
    Skein512_512:aba96f6585742e9cc3a63cf7810bcbd9672e43ddd37c7dc08ada2eb29eacb9ccd26f5d2aebbd4222d1ab34164aca7490f3bc31c71f7717487527336c1dbc1aed

package-locations:
    https://hackage.haskell.org/package/dataflow-0.5.4.0/dataflow-0.5.4.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/dataflow-0.5.4.0.tar.gz

package-size: 8315
-- END Added by all-cabal-hashes-tool

name:                dataflow
version:             0.5.4.0
synopsis:            Generate Graphviz documents from a Haskell representation.
description:         Outputs .dot files that can be processed by the dot
                     command. Currently it only supports the DFD output format
                     (http://en.wikipedia.org/wiki/Data_flow_diagram). Support
                     for a Graphviz-like input format (instead of using the
                     data structures in Haskell) is planned.
homepage:            https://github.com/owickstrom/dataflow
license:             MIT
license-file:        LICENSE
author:              Oskar WickstrÃ¶m
maintainer:          oskar.wickstrom@gmail.com
copyright:           oskar.wickstrom@gmail.com
category:            Code Generation, Compiler, Graphs

build-type:          Simple
extra-source-files:  README.md,
                     LICENSE,
                     examples/webapp.hs,
                     examples/webapp.svg,
                     examples/legend.hs,
                     examples/legend.svg,
                     examples/Makefile
cabal-version:       >=1.10

source-repository head
  type: git
  location: git@github.com:owickstrom/dataflow.git

library
  exposed-modules:
    DataFlow.Core,
    DataFlow.Graphviz,
    DataFlow.Graphviz.EdgeNormalization,
    DataFlow.Graphviz.Renderer,
    DataFlow.DFD
  build-depends:
    base >=4 && <4.8,
    mtl >=2.2,
    containers >= 0.4
  hs-source-dirs:      src
  default-language:    Haskell2010

test-suite spec
  type: exitcode-stdio-1.0
  main-is: Spec.hs
  default-language: Haskell98
  hs-source-dirs: test
  build-depends:
    base,
    HUnit,
    hspec == 2.*,
    dataflow
  ghc-options: -Wall
