-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:6cfe22db1906843829cd768de4ab0e56
    SHA1:ee36e52d892a3edbd818e4bf7b81cf1b2e7ec8a3
    SHA256:7faa9fa1cdcc1c918f97909e8f883c528447da777b3598b3cce2c65c490b8240
    SHA512:29b327a013284073edc1cfe14d4d5de8ab57c2fd23c70a47eed7709579be3497432a887cf727cbfee0b5e29bc4926ecdefef7643a86721ead6cde6ca8ed9cedd
    Skein512_512:412de932c472c92c081e1738304285e211966fe0459f6f17137d7171cd99f7c252157df28116825a5e7a77e4547a355fb25d3fc02ce105819b280c8a164a57df

x-package-locations:
    https://hackage.haskell.org/package/dataflow-0.5.2.0/dataflow-0.5.2.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/dataflow-0.5.2.0.tar.gz

x-package-size: 7962
-- END Added by all-cabal-hashes-tool

name:                dataflow
version:             0.5.2.0
synopsis:            Generate Graphviz documents from a Haskell representation.
description:         Outputs .dot files that can be processed by the dot
                     command. Currently it only supports the DFD output format
                     (http://en.wikipedia.org/wiki/Data_flow_diagram). Support
                     for a Graphviz-like input format (instead of using the
                     data structures in Haskell) is planned.
homepage:            https://github.com/owickstrom/dataflow
license:             MIT
license-file:        LICENSE
author:              Oskar WickstrÃ¶m
maintainer:          oskar.wickstrom@gmail.com
copyright:           oskar.wickstrom@gmail.com
category:            Code Generation, Compiler, Graphs

build-type:          Simple
extra-source-files:  README.md,
                     LICENSE,
                     examples/webapp.hs,
                     examples/webapp.svg,
                     examples/legend.hs,
                     examples/legend.svg,
                     examples/Makefile
cabal-version:       >=1.10

source-repository head
  type: git
  location: git@github.com:owickstrom/dataflow.git

library
  exposed-modules:
    DataFlow.Core,
    DataFlow.Graphviz,
    DataFlow.Graphviz.EdgeNormalization,
    DataFlow.Graphviz.Renderer,
    DataFlow.DFD
  build-depends:
    base >=4 && <4.8,
    mtl >=2.2,
    containers >= 0.4
  hs-source-dirs:      src
  default-language:    Haskell2010

test-suite spec
  type: exitcode-stdio-1.0
  main-is: Spec.hs
  default-language: Haskell98
  hs-source-dirs: test
  build-depends:
    base,
    HUnit,
    hspec == 2.*,
    dataflow
  ghc-options: -Wall
