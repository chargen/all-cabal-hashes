-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:dd9d94d879d04606e1a53f66b48131c0
    SHA1:feccc03933a50c8783d1b98e87c9040c9366d633
    SHA256:934429d19d20073ce3d09d3fe74783d63fc518f82a01d8accad5f2091188de2a
    SHA512:8aa7e01d2a75c9baa8db03f6153c9928dec6e4f34a50f7f9670f1118c1ffd969e830c0c59c530d0c33f13710f06a6cb326070cf5a20a2c802b0cd2648faee20d
    Skein512_512:bda80e6302d422e7391eacf1799a1048e0323c67920c366c36edf1d199348a50cdfc0f42e31e65a490938c16baa1f7e02ef54819995b9222b230f08dfaf34f4f

x-package-locations:
    https://hackage.haskell.org/package/trifecta-0.24/trifecta-0.24.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/trifecta-0.24.tar.gz

x-package-size: 39208
-- END Added by all-cabal-hashes-tool

name:          trifecta
category:      Text, Parsing, Diagnostics, Pretty Printer, Logging
version:       0.24
license:       BSD3
cabal-version: >= 1.6
license-file:  LICENSE
author:        Edward A. Kmett
maintainer:    Edward A. Kmett <ekmett@gmail.com>
stability:     experimental
homepage:      http://github.com/ekmett/trifecta/
copyright:     Copyright (C) 2010-2011 Edward A. Kmett
synopsis:      A modern parser combinator library with convenient diagnostics
description:   A modern unicode-aware parser combinator library with slicing and Clang-style colored diagnostics
build-type:    Simple  

source-repository head
  type: git
  location: git://github.com/ekmett/trifecta.git

library
  exposed-modules:
    Text.Trifecta
    Text.Trifecta.CharSet
    Text.Trifecta.CharSet.Common
    Text.Trifecta.CharSet.Posix
    Text.Trifecta.CharSet.Posix.Ascii
    Text.Trifecta.CharSet.Posix.Unicode
    Text.Trifecta.CharSet.Unicode
    Text.Trifecta.CharSet.Unicode.Block
    Text.Trifecta.CharSet.Unicode.Category
    Text.Trifecta.Rope
    Text.Trifecta.Rope.Bytes
    Text.Trifecta.Rope.Delta
    Text.Trifecta.Rope.Hunk
    Text.Trifecta.Rope.Path
    Text.Trifecta.Rope.Prim
    Text.Trifecta.Rope.Strand
    Text.Trifecta.Diagnostic
    Text.Trifecta.Diagnostic.Prim
    Text.Trifecta.Diagnostic.Class
    Text.Trifecta.Diagnostic.Combinators
    Text.Trifecta.Diagnostic.Level
    Text.Trifecta.Diagnostic.Err
    Text.Trifecta.Diagnostic.Err.State
    Text.Trifecta.Diagnostic.Rendering
    Text.Trifecta.Diagnostic.Rendering.Prim
    Text.Trifecta.Diagnostic.Rendering.Caret
    Text.Trifecta.Diagnostic.Rendering.Fixit
    Text.Trifecta.Diagnostic.Rendering.Span
    Text.Trifecta.Parser
    Text.Trifecta.Parser.Char
    Text.Trifecta.Parser.Class
    Text.Trifecta.Parser.Combinators
    Text.Trifecta.Parser.Expr
    Text.Trifecta.Parser.It
    Text.Trifecta.Parser.Literals
    Text.Trifecta.Parser.Prim
    Text.Trifecta.Parser.Result
    Text.Trifecta.Parser.Step
    Text.Trifecta.Parser.Token
    Text.Trifecta.Parser.Token.Class
    Text.Trifecta.Parser.Token.Combinators
    Text.Trifecta.Parser.Token.Style
    Text.Trifecta.Parser.Token.Identifier
    Text.Trifecta.Parser.Token.Identifier.Style

  other-modules:
    Text.Trifecta.Util
    Text.Trifecta.CharSet.AsciiSet

  ghc-options: -Wall

  build-depends: 
    base                 >= 4       && < 5,
    array                >= 0.3.0.2 && < 0.4, 
    containers           >= 0.3     && < 0.5,
    unordered-containers >= 0.1.4   && < 0.2,
    bifunctors           >= 0.1.1.3 && < 0.2,
    intern               >= 0.5.1.1 && < 0.6,
    hashable             >= 1.1.2.1 && < 1.2,
    bytestring           >= 0.9.1   && < 0.10,
    mtl                  >= 2.0.1   && < 2.1,
    semigroups           >= 0.7.1   && < 0.8, 
    fingertree           >= 0.0.1   && < 0.1,
    reducers             >= 0.1.2   && < 0.2,
    profunctors          >= 0.1.1   && < 0.2,
    utf8-string          >= 0.3.6   && < 0.4,
    semigroupoids        >= 1.2.4   && < 1.3,
    parallel             >= 3.1.0.1 && < 3.2,
    transformers         >= 0.2.2   && < 0.3,
    comonad              >= 1.1.1   && < 1.2,
    terminfo             >= 0.3.2   && < 0.4,
    keys                 >= 2.0.1   && < 2.1,
    wl-pprint-extras     >= 1.4     && < 1.5,
    wl-pprint-terminfo   >= 0.4     && < 0.5
