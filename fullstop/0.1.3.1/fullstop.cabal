-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:a3c1460923843d96bbb27379e3904679
    SHA1:3e30c3046dd88ee8d65d3a9ea97a23c032f0e68f
    SHA256:31fb1c858e5b6df7113db41949355a75de1e536fabf01a9a6120de93b22537e4
    SHA512:967122d9993257d475a054efd950cc89dbed07a4ffe0c1d32be062e87a5a30ffce5e7c64b88162e1845d98141908015de0d18023f648a02286a3f8341cbeb994
    Skein512_512:26c6b22c5a7dbdf067288cbb53e14e0449f7a5c1492a96c820fe94b5592989ec4a9310d1f2744f58e5fa75010b01c07547159f1ad4038740bd5af1e5d3f65203

x-package-locations:
    https://hackage.haskell.org/package/fullstop-0.1.3.1/fullstop-0.1.3.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/fullstop-0.1.3.1.tar.gz

x-package-size: 4621
-- END Added by all-cabal-hashes-tool

name:                fullstop
version:             0.1.3.1
synopsis:            Simple sentence segmenter
description:         FullStop splits texts into sentences, using some orthographical
                     conventions (used in English and hopefully other languages).
                     .
                     It recognises certain punctuation characters as sentence
                     delimiters (@.?!@) and handles some abbreviations such as
                     @Mr.@ and decimal numbers (eg. @4.2@).
                     .
                     Note that this package is mostly a placeholder.  I hope
                     the Haskell/NLP communities will run with it and upload
                     a more sophisticated (family of) segmenter(s) in its
                     place.  Patches (and new maintainers) would be greeted
                     with delight!
category:            Natural Language Processing
license:             BSD3
license-file:        LICENSE
author:              Eric Kow
maintainer:          Eric Kow <kowey@comp-ling.com>
homepage:            http://hub.darcs.net/kowey/fullstop
cabal-version:       >= 1.10
build-type:          Custom

source-repository head
  type:     darcs
  location: http://hub.darcs.net/kowey/fullstop

library
    exposed-modules:  NLP.FullStop

    -- NB: there actualy isn't any particular need for GHC 6.10
    build-Depends: base >= 3 && < 5
                 , split == 0.1.*
    default-language: Haskell98

executable fullstop
    main-is:  fullstop.hs
    build-Depends: base
                 , fullstop
    hs-source-dirs:  fullstop
    default-language: Haskell98

test-suite hstest-fullstop
  type:            exitcode-stdio-1.0
  hs-source-dirs:  test
  main-is:         Tests.hs
  other-modules:   Tests.NLP.FullStop

  build-depends:   base
               ,   fullstop
               ,   HUnit == 1.2.*
               ,   QuickCheck == 2.4.*
               ,   test-framework
               ,   test-framework-hunit
               ,   test-framework-quickcheck2
