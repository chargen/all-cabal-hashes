-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:8a713f491359294ac51a491941402044
    SHA1:7e9b6309e1d96b73ce8bd8919ee4d9c84523dc01
    SHA256:7b0135f239d3862e81fc9d2726901a8293bb1d16454f3fd4dbb44f1c6035cdd6
    SHA512:c706cd5dca74c179cd9146bdc2c21891a004db84b7f9fd3e870e0e4e7072af3a02ea7e91a39f74314c68daa553d780276d35f71394dbe399dc3eb7ef5756cb3f
    Skein512_512:549c35a3f44ca984a862fb1e213cadd52b395f458a2cc803804eab5e19134738b92ea63eb8cce349abb345c30679e16b36679215381681616dc8388b8e89bce5

x-package-locations:
    https://hackage.haskell.org/package/harpy-0.6.0.1/harpy-0.6.0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/harpy-0.6.0.1.tar.gz

x-package-size: 50278
-- END Added by all-cabal-hashes-tool

Cabal-version:  >=1.6
Build-type: Simple
Name:           harpy
Version:        0.6.0.1
License:        BSD3
License-file:   LICENSE
Author:         Dirk Kleeblatt <dirk.kleeblatt@gmx.de>
                Martin Grabmueller <martin@grabmueller.de>
Maintainer:     martin@grabmueller.de
Category:       Code Generation
Synopsis:       Runtime code generation for x86 machine code
Description:	The package contains the following components:
	.
	* An x86 assembler.  We provide both low-level code generation in
	  module "Harpy.X86CodeGen" as well as a (slightly) higher-level
	  implementation in module "Harpy.X86Assembler", which figures out
	  addressing modes based on an instruction's operand types.
	.
	* An x86 disassembler which knows most of the opcodes available on
	  modern x86 processors and can display its output both in the style
	  used in Intel documents an in AT&T style, like the GNU tools. The
	  disassembler can be found in module "Harpy.X86Disassembler".  The
          disassembler is re-exported from the disassembler package for
          compatibility with earlier Harpy releases.
	.
	* Some abstractions over the abovementioned code generation modules,
	  such as automatic label management and code generation
	  combinators (for if-then-else statements, while-loops, functions)
	  (module "Harpy.X86CGCombinators").
	.
	* All the above modules use the code generation monad defined in module
	  "Harpy.CodeGenMonad".
homepage:            https://github.com/mgrabmueller/harpy
bug-reports:         https://github.com/mgrabmueller/harpy/issues
Stability:      Experimental

Extra-source-files:
    NEWS README.md Makefile ChangeLog.md
    doc/Makefile doc/tutorial.lhs doc/larger-tutorial.lhs
    examples/evaluator/ArithTypes.hs examples/evaluator/ArithParser.hs
    examples/evaluator/Evaluator.hs

source-repository head
  type:     git
  location: https://github.com/mgrabmueller/harpy

Library
  Build-depends:
    base >= 4 && < 5,
    parsec >= 1 && < 4,
    mtl >= 1 && < 3,
    template-haskell >= 2 && < 3,
    pretty >= 1 && < 2,
    containers >= 0.3 && < 1,
    array >= 0.3 && < 1,
    disassembler >= 0.2.0.0
  Exposed-Modules:
    Harpy,
    Harpy.X86CodeGen,
    Harpy.X86Assembler,
    Harpy.CodeGenMonad,
    Harpy.Call,
    Harpy.X86Disassembler,
    Harpy.X86CGCombinators
  Extensions:
    ForeignFunctionInterface, MultiParamTypeClasses,
    TemplateHaskell, CPP, FlexibleContexts, FlexibleInstances,
    RankNTypes

