-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:baa08ff2f81c5a2ec15eefa765765124
    SHA1:4330af43342475854df4cef83e17cc9010167e57
    SHA256:08f358502d291b857a7186123906fb33884a05a17dd6f5f94f5ac71ac5b9866d
    SHA512:2b76115e240698f4521891e1f74b067d8cca12286c8763266e5eb54163b24ac61a3e27b0b22271d3445fee14146ce7d2cfe48d2482f2a6ca400759b2e411123c
    Skein512_512:67cbb04c1d9f3ca35295d2cd5fa740ed08759b67bd088829817ffc7038f7b903161d49267ac951c0efc64269bc205236159a583f7e3e929e63e7f15740de0389

x-package-locations:
    https://hackage.haskell.org/package/harpy-0.6.0.0/harpy-0.6.0.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/harpy-0.6.0.0.tar.gz

x-package-size: 50295
-- END Added by all-cabal-hashes-tool

Cabal-version:  >=1.2
Build-type: Simple
Name:           harpy
Version:        0.6.0.0
License:        BSD3
License-file:   LICENSE
Author:         Dirk Kleeblatt <dirk.kleeblatt@gmx.de>
                Martin Grabmueller <martin@grabmueller.de>
Maintainer:     martin@grabmueller.de
Category:       Code Generation
Synopsis:       Runtime code generation for x86 machine code
Description:	The package contains the following components:
	.
	* An x86 assembler.  We provide both low-level code generation in
	  module "Harpy.X86CodeGen" as well as a (slightly) higher-level
	  implementation in module "Harpy.X86Assembler", which figures out
	  addressing modes based on an instruction's operand types.
	.
	* An x86 disassembler which knows most of the opcodes available on
	  modern x86 processors and can display its output both in the style
	  used in Intel documents an in AT&T style, like the GNU tools. The
	  disassembler can be found in module "Harpy.X86Disassembler".  The
          disassembler is re-exported from the disassembler package for
          compatibility with earlier Harpy releases.
	.
	* Some abstractions over the abovementioned code generation modules,
	  such as automatic label management and code generation
	  combinators (for if-then-else statements, while-loops, functions)
	  (module "Harpy.X86CGCombinators").
	.
	* All the above modules use the code generation monad defined in module
	  "Harpy.CodeGenMonad".
Stability:      Experimental

Extra-source-files:
    NEWS README Makefile ChangeLog.md
    doc/Makefile doc/tutorial.lhs doc/larger-tutorial.lhs
    examples/evaluator/ArithTypes.hs examples/evaluator/ArithParser.hs
    examples/evaluator/Evaluator.hs

Library
  Build-depends:
    base >= 4 && < 5,
    parsec >= 1 && < 4,
    mtl >= 1 && < 3,
    template-haskell >= 2 && < 3,
    pretty >= 1 && < 2,
    containers >= 0.3 && < 1,
    array >= 0.3 && < 1,
    disassembler >= 0.2.0.0
  Exposed-Modules:
    Harpy,
    Harpy.X86CodeGen,
    Harpy.X86Assembler,
    Harpy.CodeGenMonad,
    Harpy.Call,
    Harpy.X86Disassembler,
    Harpy.X86CGCombinators
  Extensions:
    ForeignFunctionInterface, MultiParamTypeClasses,
    TemplateHaskell, CPP, FlexibleContexts, FlexibleInstances,
    RankNTypes

