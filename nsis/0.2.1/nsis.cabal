-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:a91a49cd26ab666e81ff399a3c1b19d9
    SHA1:4b2b5e20967cb668e23e3f44080829d46015bfb1
    SHA256:a775b2b31733160ce0c755ccf3abda326530697dea9359b3ae1d9527f596ddbd
    SHA512:0f5b7cfb42705d9e7079d6f1b0a62613dd9f7600d4aaa0361eccad5fb88b44f7737fccef6eaf94aecf7c5f97262c226d0f9fe5590e1ecbf120bb9a79baddac50
    Skein512_512:47dd6407f0d91ae1c610ad0a357315265dc1074cac3d716080606b9d96bdaebfc91f82a3e46151246c64ba89138f11fd92cb3e8f93e432c22fab84e59ae52108

package-locations:
    https://hackage.haskell.org/package/nsis-0.2.1/nsis-0.2.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/nsis-0.2.1.tar.gz

package-size: 27110
-- END Added by all-cabal-hashes-tool

cabal-version:      >= 1.6
build-type:         Simple
name:               nsis
version:            0.2.1
-- license is GPL v2 only
license:            GPL
license-file:       LICENSE
category:           Development
author:             Neil Mitchell <ndmitchell@gmail.com>
maintainer:         Neil Mitchell <ndmitchell@gmail.com>
copyright:          Neil Mitchell 2012-2013
synopsis:           DSL for producing Windows Installer using NSIS.
description:
    NSIS (Nullsoft Scriptable Install System, <http://nsis.sourceforge.net/>) is a tool that allows programmers
    to create installers for Windows.
    This library provides an alternative syntax for NSIS scripts, as an embedded Haskell language, removing much
    of the hard work in developing an install script. Simple NSIS installers should look mostly the same, complex ones should
    be significantly more maintainable.
homepage:           http://community.haskell.org/~ndm/nsis/
stability:          Beta

source-repository head
    type:     darcs
    location: http://community.haskell.org/~ndm/darcs/nsis/

library
    build-depends:
        base == 4.*,
        transformers >= 0.2 && < 0.4,
        uniplate >= 1.5 && < 1.7

    exposed-modules:
        Development.NSIS
    other-modules:
        Development.NSIS.Library
        Development.NSIS.Optimise
        Development.NSIS.Show
        Development.NSIS.Sugar
        Development.NSIS.Type

flag testprog
    default: False
    description: Build the test program


executable nsis
    main-is: Main.hs
    if flag(testprog)
        buildable: True
    else
        buildable: False
    build-depends:
        process

    other-modules:
        Examples.Example1
        Examples.Example2
        Examples.Primes
