-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:89bf21a8f4589dcef099bbd25560c9e6
    SHA1:ffe649cbfebbc04465cb4197525198389bae7bdc
    SHA256:63a11f7c3ca8a4e146743f43d424475130aad3554c62ac2af213212df8f4108c
    SHA512:5d25b92c66f5d88d907ab1585982fb2d95d4d6ec600013642c00635e3ab8bda1ca030801cd67861b06f43c1b5baa19804873f0a093e2414bfab02d36f026ff52
    Skein512_512:4d59ddd78e4b3e6d7b9703313ed49239d886a6570c84a35df75af6a3576612600a0807734774e65902e79d7b20fff85ac1b8ca74e285a3938b77fee27ecb1d30

x-package-locations:
    https://hackage.haskell.org/package/nsis-0.2/nsis-0.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/nsis-0.2.tar.gz

x-package-size: 27053
-- END Added by all-cabal-hashes-tool

cabal-version:      >= 1.6
build-type:         Simple
name:               nsis
version:            0.2
-- license is GPL v2 only
license:            GPL
license-file:       LICENSE
category:           Development
author:             Neil Mitchell <ndmitchell@gmail.com>
maintainer:         Neil Mitchell <ndmitchell@gmail.com>
copyright:          Neil Mitchell 2012-2013
synopsis:           DSL for producing Windows Installer using NSIS.
description:
    NSIS (Nullsoft Scriptable Install System, <http://nsis.sourceforge.net/>) is a tool that allows programmers
    to create installers for Windows.
    This library provides an alternative syntax for NSIS scripts, as an embedded Haskell language, removing much
    of the hard work in developing an install script. Simple NSIS installers should look mostly the same, complex ones should
    be significantly more maintainable.
homepage:           http://community.haskell.org/~ndm/nsis/
stability:          Beta

source-repository head
    type:     darcs
    location: http://community.haskell.org/~ndm/darcs/nsis/

library
    build-depends:
        base == 4.*,
        transformers >= 0.2 && < 0.4,
        uniplate >= 1.5 && < 1.7

    exposed-modules:
        Development.NSIS
    other-modules:
        Development.NSIS.Library
        Development.NSIS.Optimise
        Development.NSIS.Show
        Development.NSIS.Sugar
        Development.NSIS.Type

flag testprog
    default: False
    description: Build the test program


executable nsis
    main-is: Main.hs
    if flag(testprog)
        buildable: True
    else
        buildable: False
    build-depends:
        process

    other-modules:
        Examples.Example1
        Examples.Example2
        Examples.Primes
