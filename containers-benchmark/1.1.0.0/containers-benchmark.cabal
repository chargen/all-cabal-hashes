-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:a568a3a00cdb8069ccdcc5cbab241883
    SHA1:fead081c9b830b6cc3bed61343807ebdd875b2ba
    SHA256:a09ee8011bcd47c43ff803784b62c0b2f992605426cdb4d266cac7c71f450886
    SHA512:eb7d8549496768d76fa6bbd9029ec1c1eea350893ded7070fb301cf5a8c6cb40e84fece7c89050c6ae149910581b4afa7172bbffdfa214ce548be8e48cb049f2
    Skein512_512:96831999fcd9272fc8f3fe7cba976b1bc3a3587afca7206a1ffc1e5848a8dd29c65a9f64e779043ffd8db097e2c2efbf01daf88d849ff99294a420ea3e3fc49a

package-locations:
    https://hackage.haskell.org/package/containers-benchmark-1.1.0.0/containers-benchmark-1.1.0.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/containers-benchmark-1.1.0.0.tar.gz

package-size: 9285
-- END Added by all-cabal-hashes-tool

Name:                containers-benchmark
Version:             1.1.0.0
Synopsis:            Extensive benchmark suite for containers package.
Description:         This package evaluates performance of a containers package
                     from multiple perspectives.
                     .
                     It measures time and memory allocation of methods specialised
                     to several types. It can also measure the size and memory
                     allocation of GHC compiled with the containers package.
                     .
                     The containers package used can be both system-installed or
                     any darcs repository.
Homepage:            http://git.auryn.cz/haskell/containers-benchmark/
License:             BSD3
License-file:        LICENSE
Author:              Milan Straka
Maintainer:          fox@ucw.cz
Stability:           Experimental
Category:            Benchmarking
Build-type:          Simple
Cabal-version:       >=1.6
Extra-source-files:  CHANGES
                     README
                     scripts/benchmark.sh
                     scripts/cmp.pl
                     scripts/cmp.sh
                     scripts/collect.pl
                     scripts/compile.sh
                     scripts/custom_containers.sh
                     scripts/ghc.sh
                     scripts/run.sh
                     scripts/see.sh
                     scripts/system_containers.sh
                     src/Driver.inc.hs
                     src/Benchmark/Map-like.inc.hs
                     src/Benchmark/Set-like.inc.hs
                     src/Variants/gen.sh

source-repository head
  type:     git
  location: http://git.auryn.cz/haskell/containers-benchmark/

Executable benchmark
  Main-is:           Main.hs
  Build-depends:     base >= 3 && < 5,
                     bytestring >= 0.9 && < 1.0,
                     containers >= 0.5 && < 0.6,
                     criterion >= 0.5 && < 0.6,
                     random >= 1.0 && < 1.1,
                     deepseq,
                     ghc-prim
  Hs-source-dirs:    src
  Other-modules:     Container.IntMap
                     Container.IntMap.Base
                     Container.IntMap.Lazy
                     Container.IntMap.Strict
                     Container.IntSet
                     Container.Map
                     Container.Map.Base
                     Container.Map.Lazy
                     Container.Map.Strict
                     Container.Set
                     Container.StrictPair
                     InputData.ByteString
                     InputData.Int
                     InputData.IntegerBig
                     InputData.IntegerSmall
                     InputData.String
                     Variants.IntMap_Int
                     Variants.IntSet_Int
                     Variants.Map_ByteString
                     Variants.Map_Int
                     Variants.Map_IntegerBig
                     Variants.Map_IntegerSmall
                     Variants.Map_String
                     Variants.Set_ByteString
                     Variants.Set_Int
                     Variants.Set_IntegerBig
                     Variants.Set_IntegerSmall
                     Variants.Set_String
  if impl(ghc >= 7.0)
    Ghc-Options: -rtsopts
