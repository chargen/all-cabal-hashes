-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:0c5b937d90c717ade85e57f2c460733c
    SHA1:09cb243ec4cd4ff01aefcf54d4d922ddea15952f
    SHA256:f8ec2fcbd6a20b48b1f05452455f26dd9936044696f52897205fd7fad9c1f930
    SHA512:23449fdf70a7ed3645144cff5b7eab7007c59b0cc3ed4eb319e613da0bc6c43cd4a1ed2241dc91c171a1e678a1efba854da17e18d0a1547c9bbe75e9881e639d
    Skein512_512:8630f8917aec9c839769682e42d8ee7d45d8769b63dd1bcc6ffa6b70240b2afff0a59136d26a3c3fb21da4e733a6e609d23017fa7ff95487c55bc4f1fe8249ab

package-locations:
    https://hackage.haskell.org/package/concurrent-sa-1.0.0/concurrent-sa-1.0.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/concurrent-sa-1.0.0.tar.gz

package-size: 2551
-- END Added by all-cabal-hashes-tool

Name:		concurrent-sa
Version:	1.0.0
Category:	Algorithms
Author:		Louis Wasserman
License:	BSD3
License-file:	LICENSE
Stability:	experimental
Synopsis:	Concurrent simulated annealing system.
Description:	An extremely lightweight system for concurrent simulated annealing.
Maintainer:	Louis Wasserman <wasserman.louis@gmail.com>
Build-type:	Simple
cabal-version:  >= 1.6
Library{
  build-depends: base >= 4 && < 5, MonadRandom
  exposed-modules:
    Control.Concurrent.Annealer
  other-modules:
    Control.Concurrent.Annealer.Population
}