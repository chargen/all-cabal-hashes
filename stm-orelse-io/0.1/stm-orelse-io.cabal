-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:9c994c9eeced85b7c57caf7ea896a0de
    SHA1:bf6ee4d453345bc63506978ee306321616df51a9
    SHA256:a496773a80375a3757e53bf6d1f54a9eb0fe21a668966c5c0dc470fa0beb6087
    SHA512:26557b59a3edcaab4a868d51b91cf275f9393784b4e3f1ba0d1e884e178fb2277e672816a7af96752b865004e4f960cd4122d540c5ae44b6f1488a541202685a
    Skein512_512:5c8b5953a99d3fd88313d2dfe1eb9bd1fce837c67c6e6ca6bba08062ea4beadf9d47f9549c4424b9026d7256de3720019f4b33f23906ede110923181475ecf57

package-locations:
    https://hackage.haskell.org/package/stm-orelse-io-0.1/stm-orelse-io-0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/stm-orelse-io-0.1.tar.gz

package-size: 3163
-- END Added by all-cabal-hashes-tool

Name:                stm-orelse-io
Version:             0.1
Synopsis:	     Choose between the return value of an STM operation and an IO action.
Homepage:            http://nonempty.org/software/stm-orelse-io
License:             BSD3
License-file:        LICENSE
Author:              Gard Spreemann
Maintainer:          Gard Spreemann <gspreemann@gmail.com>
Copyright:           2012 Gard Spreemann
Category:            Concurrency
Build-type:          Simple
Cabal-version:       >=1.2
Description:         While tinkering on a project, I frequently found myself
		     wanting to wait for an IO operation /unless/ something
		     more important came up. The "Control.Concurrent.STM.OrElseIO"
		     module is meant to reduce the boilerplate needed when choosing
		     between IO actions and STM operations.
		     .
		     You must use the threaded runtime with this package.
		     .
		     TODO:
		     .
		     * Kill off IO threads whose return values will never be needed.
		     .
		     * Possibly rename @runOrElse@ and friends to @orElseIO@ or similar. 


Library
  Exposed-modules:     Control.Concurrent.MVarIO,
                       Control.Concurrent.STM.TMVarIO,
                       Control.Concurrent.STM.OrElseIO  
  hs-source-dirs:      src
  Build-depends:       base >= 4 && <5, stm

