-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:3a3dfc2e321dcbe089ae1363f9f25560
    SHA1:46b16256d1424679a1eb2859e12dd3cc7c637b0f
    SHA256:4a64855fb168c0fcfba742779c12cff350649b58f3a1cbb5bb3eb04431cd46b5
    SHA512:b742aabb40cebc3ef7a64aa33224af1264fa8843b5afd9d9d297713ce3ef250e7b6dbe30466e05a5e9edb9f43f27dadd3d571e292883c05b8a9d64c0e671ea63
    Skein512_512:f4def35bee06e19b0b6cee375da1a25c80f94f8573234d1c00ca97c5295d92c81ddb9d3af87a3df6deffa01cef4de7c03de56a5967236eaebbab8678b3b16aec

package-locations:
    https://hackage.haskell.org/package/SVGFonts-1.1.1/SVGFonts-1.1.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/SVGFonts-1.1.1.tar.gz

package-size: 309572
-- END Added by all-cabal-hashes-tool

Name:             SVGFonts
Version:          1.1.1
Synopsis:         Fonts from the SVG-Font format
Description:      Native font support for the diagrams library. The SVG-Font format is easy to parse
                  and was therefore chosen for a font library completely written in Haskell.
                  .
                  You can convert your own font to SVG with <http://fontforge.sourceforge.net/> or use the included LinLibertine, Bitstream
                  .
                  Features
                  .
                  * Complete implementation of the features that Fontforge produces (but not the complete SVG format)
                  .
                  * Kerning (i.e. the two characters in \"VA\" have a shorter distance than in \"VV\")
                  .
                  * Unicode
                  .
                  * Ligatures
                  .
                  XML speed issues can be solved by trimming the svg file to only those characters that are used (or maybe binary xml one day).
                  . 
                  Version 1.0 of this library supports texturing which would only make sense in a Diagrams Backend that does rasterization in Haskell.
                  .
                  Example:
                  .
                  >  # LANGUAGE NoMonomorphismRestriction #
                  >
                  > import Diagrams.Prelude
                  > import Diagrams.Backend.Cairo.CmdLine
                  > import Graphics.SVGFonts.ReadFont (textSVG,textSVG_)
                  >
                  >
                  > main = defaultMain ( (text' "Hello World") <> (rect 8 1) # alignBL )
                  >
                  > text'  t = stroke (textSVG t 1) # fc purple # fillRule EvenOdd
                  > text'' t = stroke (textSVG_ $ TextOpts t lin INSIDE_H KERN 1 1 ) # fc purple # fillRule EvenOdd
                  .
category:         Graphics
License:          BSD3
License-file:     LICENSE
Author:           Tillmann Vogt
Maintainer:       tillk.vogt@googlemail.com
Build-Type:       Simple
Cabal-Version:    >=1.6

data-files: src/Test/*.svg

Library
    hs-source-dirs: src
    other-modules: Paths_SVGFonts
    build-depends:
        attoparsec-text,
        base == 4.*,
        containers == 0.4.*,
        data-default,
        diagrams-lib >= 0.5,
        directory >= 1.0 && <1.2,
        parsec,
        split,
        text,
        tuple,
        vector,
        vector-space,
        xml == 1.3.*
    exposed-modules:
        Graphics.SVGFonts.ReadFont
        Graphics.SVGFonts.CharReference
        Graphics.SVGFonts.ReadPath

