Name:             SVGFonts
Version:          1.2.1
Synopsis:         Fonts from the SVG-Font format
Description:      Native font support for the Diagrams library. The SVG-Font format is easy to parse
                  and was therefore chosen for a font library completely written in Haskell.
                  .
                  You can convert your own font to SVG with <http://fontforge.sourceforge.net/> or use the included LinLibertine, Bitstream
                  .
                  Features
                  .
                  * Complete implementation of the features that Fontforge produces (but not the complete SVG format)
                  .
                  * Kerning (i.e. the two characters in \"VA\" have a shorter distance than in \"VV\")
                  .
                  * Unicode
                  .
                  * Ligatures
                  .
                  * An example that shows how to do text boxes with syntax highlighting using highlighting-kate:
                  . http://hackage.haskell.org/package/highlighting-kate-0.5.3.8
                  .
                  XML speed issues can be solved by trimming the svg file to only those characters that are used (or maybe binary xml one day).
                  . 
                  Version 1.0 of this library supports texturing which would only make sense in a Diagrams Backend that does rasterization in Haskell.
                  .
                  Example:
                  .
                  >  # LANGUAGE NoMonomorphismRestriction #
                  >
                  > import Diagrams.Prelude
                  > import Diagrams.Backend.Cairo.CmdLine
                  > import Graphics.SVGFonts.ReadFont (textSVG)
                  >
                  >
                  > main = defaultMain (text' "Hello World")
                  >
                  > text'   t = stroke (textSVG t 1) # fc purple # fillRule EvenOdd
                  > text''  t = stroke (textSVG' $ TextOpts t lin INSIDE_H KERN False 1 1 ) # fillRule EvenOdd
                  > text''' t =        (textSVG_ $ TextOpts t lin INSIDE_H KERN True  1 1 ) # fillRule EvenOdd
                  .
category:         Graphics
License:          BSD3
License-file:     LICENSE
Author:           Tillmann Vogt
Maintainer:       diagrams-discuss@googlegroups.com
build-type:       Custom
Cabal-Version:    >=1.10

data-files: fonts/*.svg
extra-source-files: diagrams/*

source-repository head
  type: git
  location: https://github.com/tkvogt/SVGFonts.git

Library
    hs-source-dirs: src
    ghc-options: -W -Wall -O2 -fno-warn-unused-do-bind
    other-modules: Paths_SVGFonts
    build-depends:
        attoparsec,
        base == 4.*,
        containers >= 0.4 && < 0.6,
        data-default,
        diagrams-lib >= 0.6,
        directory >= 1.1,
        parsec,
        split,
        text,
        tuple,
        vector,
        vector-space,
        xml
    exposed-modules:
        Graphics.SVGFonts.ReadFont
        Graphics.SVGFonts.CharReference
        Graphics.SVGFonts.ReadPath
    default-language: Haskell2010



package-hashes:
    MD5:3d7b5b7a4d80b376f2a9d1434b0184c0
    SHA1:0111d9457aa5bee1b78301c8f565ce0c098dc4c4
    SHA256:1e8cf06128af1597cddcf7eb610bc3c6e3a608c52d65a143d9a31c2a8af1ada5
    SHA512:996042a91de961623fb8b176cbe5e4dc2f1fe3f90a4690d9293310182247bc5af280dfd26df713abf06e1df839cdc63dcbeeb03299e208253a1de0ecabe02602
    Skein512_512:cac25d43f2bd608b11ecb453cb9941c422f806553f2138ec547479a300618c43b6d9ca4cc64f23a1b942c4c48146f82f498f1a1e415af526f8565cbedf5cddeb

package-locations:
    https://hackage.haskell.org/package/SVGFonts-1.2.1/SVGFonts-1.2.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/SVGFonts-1.2.1.tar.gz

