-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:7470a9233c480777694bb1c5aaf133dc
    SHA1:2f04c4d73e9fe27b1c38582a7841133f770dcb95
    SHA256:2f41572d2bce996f6011d293be9125db708929faa83c6e444253e94abd88b5e0
    SHA512:15ae1ff2dd33b9a4c1f20f322d8204162c414663218446da773797616fecbc47dc887111ea7e1dacd770e5c5214c2769f161a60c305e0b7575d9a5bd00bc8dcc
    Skein512_512:0cf29414e2823a9ccc98e988026055dcc10683404d2e6173fc10c4ad9d24526947b1f238eddc6f3e3f1c81914b647cc09f2b5fc9d48e197a4d43617e3e5be494

package-locations:
    https://hackage.haskell.org/package/monad-gen-0.1.0.0/monad-gen-0.1.0.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/monad-gen-0.1.0.0.tar.gz

package-size: 2207
-- END Added by all-cabal-hashes-tool

name:                monad-gen
version:             0.1.0.0
synopsis:            A simple monad for generating fresh integers
description:         It's a common in Haskell programs to thread some state
                     through the application using @State@ or some other similar pattern.

                     This package simply wraps @State@ and uses it to generate fresh values,
                     any @Enum@ value will work.
license:             MIT
license-file:        LICENSE
author:              Danny Gratzer
maintainer:          danny.gratzer@gmail.com
category:            Utility

build-type:          Simple

cabal-version:       >=1.10


library
  exposed-modules:     Control.Monad.Gen
  other-extensions:    FlexibleInstances, MultiParamTypeClasses, UndecidableInstances, DeriveFunctor
  build-depends:       base >=4.6 && <5.0, mtl == 2.*, transformers > 0.3
  hs-source-dirs:      src
  default-language:    Haskell2010
  