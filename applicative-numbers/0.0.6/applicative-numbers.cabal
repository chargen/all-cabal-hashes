name:                applicative-numbers
version:             0.0.6
cabal-version:       >= 1.2
synopsis:            Applicative-based numeric instances
category:            Data, Numerical
description:
  Any applicative functor can be given numeric instances in a boilerplate way.
  The /applicative-numbers/ package provides an include file that makes it a
  snap to define these instances.
  See "Data.Numeric.Function" for an example.
  .
  Project wiki page: <http://haskell.org/haskellwiki/applicative-numbers>
  .
  Copyright 2009 Conal Elliott; BSD3 license.
  .
  .
  Instances of @Num@ classes for applicative functors.  To be @#include@'d after
  defining @APPLICATIVE@ as the applicative functor name and @CONSTRAINTS@ as a
  list of constraints, which must carry its own trailing comma if non-empty.
  The @APPLICATIVE@ symbol gets @#undef@'d at the end of the include file, so
  that multiple includes are convenient.
  .
  For instance,
  .
  @
      -- Generate Ord & Enum, but not Eq & Show
      #define INSTANCE_Ord
      #define INSTANCE_Enum
  .
      #define APPLICATIVE Vec2
      #include \"ApplicativeNumeric-inc.hs\"
  .
      #define APPLICATIVE Vec3
      #include \"ApplicativeNumeric-inc.hs\"
  .
      #define APPLICATIVE Vec4
      #include \"ApplicativeNumeric-inc.hs\"
  @
  .
  You'll also have to import 'pure' and 'liftA2' from "Control.Applicative"
  and specify @the FlexibleContexts@ language extension (due to an implementation hack).
  .
  Some instances are generated only if a corresponding CPP symbol is
  defined: @INSTANCE_Eq@, @INSTANCE_Ord@, @INSTANCE_Show@, @INSTANCE_Enum@
author:              Conal Elliott 
maintainer:          conal@conal.net
homepage:            http://haskell.org/haskellwiki/applicative-numbers
package-url:         http://code.haskell.org/applicative-numbers
copyright:           (c) 2009 by Conal Elliott
license:             BSD3
license-file:        COPYING
stability:           experimental
build-type:          Simple

Library
  hs-source-dirs:      src
  include-dirs:        src

  extensions:
  build-depends:       base, wl-pprint
  exposed-modules:     
                       Data.Numeric.Function
  install-includes:    ApplicativeNumeric-inc.hs
  ghc-options:         -Wall

--  ghc-prof-options:    -prof -auto-all 


package-hashes:
    MD5:4a3d0c16ecd9de7d5cb2d48adcfb6d5f
    SHA1:7f5d98de01e68bb66fa3e948b07f2b0a2c3be4ac
    SHA256:c819091a4ea04e87055279f7d1429b089283ec1026b475f033ae32f768445423
    SHA512:99accc5cfda5786fde9e55419ee83ff4e00c84776437bb5310e9a7842896ae65e5669e2faa0a253b1380fb1410d2a58964e218d27c3c7bb5b85f2361e3638b51
    Skein512_512:3e7f5c461184480d090e4c73142b9644d7041041c2416f7d4a0f179fe7ae9c464d8c0cec1579b46fb8e19b65eba3a4fbee8cd908cfa3adb90a8b5503dfefa905

package-locations:
    https://hackage.haskell.org/package/applicative-numbers-0.0.6/applicative-numbers-0.0.6.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/applicative-numbers-0.0.6.tar.gz

