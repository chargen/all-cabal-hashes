name:                applicative-numbers
version:             0.0.9
cabal-version:       >= 1.2
synopsis:            Applicative-based numeric instances
category:            Data, Numerical
description:
  Any applicative functor can be given numeric instances in a boilerplate way.
  The /applicative-numbers/ package provides an include file that makes it a
  snap to define these instances.
  See "Data.Numeric.Function" for an example.
  .
  Project wiki page: <http://haskell.org/haskellwiki/applicative-numbers>
  .
  Copyright 2009 Conal Elliott; BSD3 license.
  .
  .
  Instances of @Num@ classes for applicative functors.  To be @#include@'d after
  defining @APPLICATIVE@ as the applicative functor name and @CONSTRAINTS@ as a
  list of constraints, which must carry its own trailing comma if non-empty.
  The @APPLICATIVE@ symbol gets @#undef@'d at the end of the include file, so
  that multiple includes are convenient.
  .
  For instance,
  .
  @
      -- Generate Ord & Enum, but not Eq & Show
      #define INSTANCE_Ord
      #define INSTANCE_Enum
  .
      #define APPLICATIVE Vec2
      #include \"ApplicativeNumeric-inc.hs\"
  .
      #define APPLICATIVE Vec3
      #include \"ApplicativeNumeric-inc.hs\"
  .
      #define APPLICATIVE Vec4
      #include \"ApplicativeNumeric-inc.hs\"
  @
  .
  You'll also have to import 'pure' and 'liftA2' from "Control.Applicative"
  and specify @the FlexibleContexts@ language extension (due to an implementation hack).
  .
  Some instances are generated only if a corresponding CPP symbol is
  defined: @INSTANCE_Eq@, @INSTANCE_Ord@, @INSTANCE_Show@, @INSTANCE_Enum@
author:              Conal Elliott 
maintainer:          conal@conal.net
homepage:            http://haskell.org/haskellwiki/applicative-numbers
package-url:         http://code.haskell.org/applicative-numbers
copyright:           (c) 2009 by Conal Elliott
license:             BSD3
license-file:        COPYING
stability:           experimental
build-type:          Simple

Library
  hs-source-dirs:      src
  include-dirs:        src

  extensions:
  build-depends:       base<5, wl-pprint
  exposed-modules:     
                       Data.Numeric.Function
  install-includes:    ApplicativeNumeric-inc.hs
  ghc-options:         -Wall

--  ghc-prof-options:    -prof -auto-all 


package-hashes:
    MD5:a9fbc6f9971db52072a590351c0d3bac
    SHA1:3787ab20f7c3ea3aaf4a634797940788a36b08fb
    SHA256:71cc465b7e7e17564150dea833e67aaf9b5723b46cbe437b8b05731e08f729fe
    SHA512:0a28487be90bf26f8a7a46cac3ce5e0b61b34e0a6848afde92a3b39eb094b5fb902442ce21d01b5db4af8a89029c831e9534f6c301b7dc56e2c45785a55c11fc
    Skein512_512:4b1868e290eef1d1c793c1b5df737c74a4b6208b15fea66e49fab1b625ecdba2e4a0e867842123d00602d04d899a26bb279dc9c3785fbbb551827eb53d2f05aa

package-locations:
    https://hackage.haskell.org/package/applicative-numbers-0.0.9/applicative-numbers-0.0.9.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/applicative-numbers-0.0.9.tar.gz

