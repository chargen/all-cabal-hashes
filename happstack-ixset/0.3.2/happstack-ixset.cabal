Name:                happstack-ixset
Version:             0.3.2
Synopsis:            Efficient relational queries on Haskell sets. 
Description:         Just pick which parts of your data structures you want indexed using an easy to use template-haskell function. Spare yourself the need to write, run, and maintain code that marshalls your data to/from an external relational database just for efficient queries. happstack-ixset relies on generics and TH to spare you the boilerplate normally required for such tasks. 
License:             BSD3
License-file:        COPYING
Author:              Happstack team, HAppS LLC
Maintainer:          Happstack team <happs@googlegroups.com>
homepage:            http://happstack.com
Category:            Web, Distributed Computing
Build-Type:          Simple
Cabal-Version:       >= 1.6

source-repository head
    type:     darcs
    subdir:   happstack-ixset
    location: http://patch-tag.com/publicrepos/happstack

flag base4

Flag tests
    Description: Build the testsuite, and include the tests in the library
    Default: False

Library
  if flag(base4)
    Build-Depends:     base >=4 && < 5, syb
  else
    Build-Depends:     base < 4

  Build-Depends:       containers,
                       happstack-data >= 0.3.2 && < 0.4,
                       happstack-util >= 0.3.2 && < 0.4,
                       mtl,
                       syb-with-class,
                       template-haskell

  hs-source-dirs:      src
  if flag(tests)
    hs-source-dirs:    tests
  Exposed-modules:     
                       Happstack.Data.IxSet
                       Happstack.Data.IxSet.Ix
                       Happstack.Data.IxSet.Usage
  if flag(tests)
    Exposed-modules:   
                       Happstack.Data.IxSet.Tests

  extensions:          UndecidableInstances, OverlappingInstances,
                       FlexibleInstances, MultiParamTypeClasses,
                       TemplateHaskell, RankNTypes, FunctionalDependencies,
                       DeriveDataTypeable, GADTs, CPP, PolymorphicComponents,
                       ExistentialQuantification, TypeSynonymInstances

  -- Should have ", DeriveDataTypeable", but Cabal complains
  cpp-options:         -DUNIX
  ghc-options:         -Wall
  GHC-Prof-Options:    -auto-all

Executable happstack-ixset-tests
  Main-Is: Test.hs
  GHC-Options: -threaded
  Build-depends: HUnit
  hs-source-dirs: tests, src
  if flag(tests)
    Buildable: True
  else
    Buildable: False


package-hashes:
    MD5:22addd76d1ab91c3362c5ad976875f23
    SHA1:8b07d3cc71abccd4284cee2bde28dbff06161153
    SHA256:e1e3cfb7d1ce628de4b08b581c115b393f9dfd48c8ce4b65f5f2591abad3710d
    SHA512:14f22b7911b229698c8523ab5fbf3fa8468dd86c43e3c1015909b7bfef90df7c13e76e2654d717dc5af80480d3310a77591f960beb3b8e66d9f781ed72525e8b
    Skein512_512:cad23df7177e8fad1c7b80c5e9e626d51ed642bbe52e4d0f255b7224596a42ea3cc166e46824e5a9784eefd6285ece54d2a32a66d8b3764bed97005b9844e4f1

package-locations:
    https://hackage.haskell.org/package/happstack-ixset-0.3.2/happstack-ixset-0.3.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/happstack-ixset-0.3.2.tar.gz

package-size: 8816
