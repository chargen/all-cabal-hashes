-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:9be496f06a85c54fab7798c3c42579d0
    SHA1:4cec998ed36ad5c9882aa8237bbd42a45bde5b1e
    SHA256:a984d9563821bd3610cbb81ee244b19e2858ec8f6a53cd436076c0b60de15cb9
    SHA512:722f491c6d3ad69819e8244a7f22dffc475723486bc95abd97e786a312044829315da674bc05989d5b514e554e819d56a861b88883fd9bafab52050ed5687605
    Skein512_512:6bc297a7778a012466fccd5d52ef729a7dbb1589ab0ac6ba285f5728b73d13bb7bb871a2d17abfceecdd34d0d4012f50e1793b47298488e2cdcd16ef1104e92c

package-locations:
    https://hackage.haskell.org/package/unamb-0.0/unamb-0.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/unamb-0.0.tar.gz

package-size: 3617
-- END Added by all-cabal-hashes-tool

Name:                unamb
Version:             0.0
Cabal-Version:       >= 1.2
Synopsis:            Unambiguous choice
Category:            Concurrency, Data, Other
Description:
  unamb contains the "unambiguous choice" operator "unamb", which
  wraps thread racing up in a purely functional, semantically simple
  wrapper.  Originally a part of Reactive, I moved unamb to its own
  package in order to encourage experimentation.
  .
  Project wiki page: <http://haskell.org/haskellwiki/unamb>
  .
  The module documentation pages have links to colorized source code and
  to wiki pages where you can read and contribute user comments.  Enjoy!
  .
  &#169; 2008 by Conal Elliott; BSD3 license.
Author:              Conal Elliott 
Maintainer:          conal@conal.net
Homepage:            http://haskell.org/haskellwiki/unamb
Package-Url:         http://code.haskell.org/unamb
Copyright:           (c) 2008 by Conal Elliott
License:             BSD3
Stability:           experimental
build-type:          Simple

Flag test
  Description: Enable testing
  Default:     False

Library
  hs-Source-Dirs:      src
  Extensions:
  Build-Depends:       base
  Exposed-Modules:     
                       Data.Unamb
  ghc-options:         -Wall

--  ghc-prof-options:    -prof -auto-all 


-- Support testing with a pattern from Sean Leather
-- Compilation works, but the executable segfaults:
--   both identity: Segmentation fault/access violation in generated code
-- I have no idea what could be going on there.  The tests work fine
-- in ghci but segfault when compiled via "ghc --make Main" also.

Executable test-unamb
  hs-source-dirs:       src, tests
  main-is:              Tests.hs
  -- Only enable the build-depends here if configured with "-ftest". This
  -- keeps users from having to install QuickCheck 2 in order to use EMGM.
  if flag(test)
    build-depends:      QuickCheck, checkers
  else
    buildable:          False
