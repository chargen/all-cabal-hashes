-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:a0a78ac7a7a4aa47957fa087602e538b
    SHA1:0c576e1236b1c8ba4200fc7dcf1c67062921c2da
    SHA256:273159807a3490cc35d49218c9eb79f21eaf0082d78f50f9bf793ecf9f5c63e5
    SHA512:e970dc8a9676335fe0ec3becb110ee39b67b68e439cafb23398fc12aaf5a78c39a21a2aa2885bfc7ac6b78ca87efff83281db84bb88e97ec128bef6c18806196
    Skein512_512:c56aceca410bd3fb7464d92f1540fbb15aac86c873df8fbcc99e3991d5b5980c9a44c68a9cff54d46a6acfe7e079f2298df18fcad0be6cf89e3e8699b8599ab5

x-package-locations:
    https://hackage.haskell.org/package/unamb-0.1.5/unamb-0.1.5.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/unamb-0.1.5.tar.gz

x-package-size: 4526
-- END Added by all-cabal-hashes-tool

Name:                unamb
Version:             0.1.5
Cabal-Version:       >= 1.2
Synopsis:            Unambiguous choice
Category:            Concurrency, Data, Other
Description:
  unamb contains the "unambiguous choice" operator "unamb", which
  wraps thread racing up in a purely functional, semantically simple
  wrapper.  Originally a part of Reactive, I moved unamb to its own
  package in order to encourage experimentation.
  .
  Project wiki page: <http://haskell.org/haskellwiki/unamb>
  .
  &#169; 2008 by Conal Elliott; BSD3 license.
  .
  Contributions from: Luke Palmer, Spencer Janssen
Author:              Conal Elliott 
Maintainer:          conal@conal.net
Homepage:            http://haskell.org/haskellwiki/unamb
Package-Url:         http://code.haskell.org/unamb
Copyright:           (c) 2008 by Conal Elliott
License:             BSD3
Stability:           experimental
build-type:          Simple

Flag test
  Description: Enable testing
  Default:     False

Library
  hs-Source-Dirs:      src
  Extensions:
  Build-Depends:       base >= 4
  Exposed-Modules:     
                       Data.Unamb
  ghc-options:         -Wall

--  ghc-prof-options:    -prof -auto-all 


-- Support testing with a pattern from Sean Leather
-- Compilation works, but the executable segfaults:
--   both identity: Segmentation fault/access violation in generated code
-- I have no idea what could be going on there.  The tests work fine
-- in ghci but segfault when compiled via "ghc --make Main" also.

Executable test-unamb
  hs-source-dirs:       src, tests
  main-is:              Tests.hs
  -- Only enable the build-depends here if configured with "-ftest". This
  -- keeps users from having to install QuickCheck 2 in order to use EMGM.
  if flag(test)
    build-depends:      QuickCheck, checkers
  else
    buildable:          False
