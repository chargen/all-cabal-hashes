-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:8418a80d2ba94da77bbcb0e14cf1d95d
    SHA1:63447fbcc5d758c02d79159416f2095cdf5c2ee6
    SHA256:f2552f212296554b999fb8a7ade9f8957546745e628c9016d304faaf84f72363
    SHA512:cb2b6d76a25216c021f60f775bf00c445086f6aa57c723aa72c82b768ecb17929d4c1b5b9f03809e455c9fb3e124e63c68f1551bd5ee6af658d717d6c5ba9421
    Skein512_512:d818d15e2a4f4857e050e6bb790b4791e79bfb391d0499a9aedd9cefa4c7e70497b64ecb6dc2b7145404684e20bc7b122543429af36693c5a1da961a2deaf127

x-package-locations:
    https://hackage.haskell.org/package/unamb-0.2.2/unamb-0.2.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/unamb-0.2.2.tar.gz

x-package-size: 7661
-- END Added by all-cabal-hashes-tool

Name:                unamb
Version:             0.2.2
Cabal-Version:       >= 1.2
Synopsis:            Unambiguous choice
Category:            Concurrency, Data, Other
Description:
  unamb contains the "unambiguous choice" operator "unamb", which
  wraps thread racing up in a purely functional, semantically simple
  wrapper.  Originally a part of Reactive, I moved unamb to its own
  package in order to encourage experimentation.
  .
  Project wiki page: <http://haskell.org/haskellwiki/unamb>
  .
  &#169; 2008 by Conal Elliott; BSD3 license.
  .
  Contributions from: Luke Palmer, Spencer Janssen, Sterling Clover,
  Bertram Felgenhauer, Peter Verswyvelen, and Svein Ove Aas.
  Please let me know if I've forgotten to list you.
Author:              Conal Elliott 
Maintainer:          conal@conal.net
Homepage:            http://haskell.org/haskellwiki/unamb
Package-Url:         http://code.haskell.org/unamb
Copyright:           (c) 2008 by Conal Elliott
License:             BSD3
Stability:           experimental
build-type:          Simple

Flag test
  Description: Enable testing
  Default:     False

Library
  hs-Source-Dirs:      src
  Extensions:
  Build-Depends:       base >= 4 && < 5
  Exposed-Modules:     
                       Data.Unamb
  ghc-options:         -Wall

--  ghc-prof-options:    -prof -auto-all 


-- Support testing with a pattern from Sean Leather
-- Compilation works, but the executable segfaults:
--   both identity: Segmentation fault/access violation in generated code
-- I have no idea what could be going on there.  The tests work fine
-- in ghci but segfault when compiled via "ghc --make Main" also.

Executable test-unamb
  hs-source-dirs:       src, tests
  main-is:              Tests.hs
  -- Only enable the build-depends here if configured with "-ftest". This
  -- keeps users from having to install QuickCheck 2 in order to use EMGM.
  if flag(test)
    build-depends:      QuickCheck >= 2, checkers
  else
    buildable:          False
  ghc-options:         -threaded

-- Tests run /much/ faster with -threaded .
