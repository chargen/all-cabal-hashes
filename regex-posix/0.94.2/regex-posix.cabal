-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:e3ebbd6b66fdb2f8c4f0ad95c4580852
    SHA1:b8e1e821d849065f0f5c2b4ea594f11c3c36ac09
    SHA256:ea0c1ed0ab49ade4dba1eea7a42197652ccb18b7a98c4040e37ba11d26f33067
    SHA512:c3ec91a5d43bdacb6bc24f40cb5a54e9b5fbd8103a60c5bcdca63162809a525e365727241c93b5daf836cd9b300a35013190e4515a4d7133199c237939cdd629
    Skein512_512:a443529d5440fb0f339ca30429abc0445ec1806f2f2e5f323a2ed577ee6ac8cd00affab5d0cbfdcfa19d7789ff86c265d0919ea10076687bc4cc676478c126d6

x-package-locations:
    https://hackage.haskell.org/package/regex-posix-0.94.2/regex-posix-0.94.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/regex-posix-0.94.2.tar.gz

x-package-size: 13071
-- END Added by all-cabal-hashes-tool

Name:                   regex-posix
-- Keep the Version below in sync with ./Text/Regex/Posix.hs value getVersion_Text_Regex_Posix :: Version
Version:                0.94.2
Cabal-Version:          >=1.2
Build-Type:             Custom
License:                BSD3
License-File:           LICENSE
Copyright:              Copyright (c) 2007, Christopher Kuklewicz
Author:                 Christopher Kuklewicz
Maintainer:             TextRegexLazy@personal.mightyreason.com
Stability:              Seems to work, passes a few tests
Homepage:               http://sourceforge.net/projects/lazy-regex
Package-URL:            http://darcs.haskell.org/packages/regex-unstable/regex-posix/
Synopsis:               Replaces/Enhances Text.Regex
Description:            The posix regex backend for regex-base
Category:               Text
Tested-With:            GHC
Build-Type:             Simple
flag newBase
  description: Choose base >= 4
  default: True
flag splitBase
  description: Choose the new smaller, split-up base package.
  default: True
library
  if flag(newBase)
      Build-Depends: regex-base >= 0.93, base >= 4 && < 5, array, containers, bytestring
      -- Need the next symbol for using CPP to get Data.ByteString.Base|Unsafe in
      --  ./Text/Regex/Posix/ByteString.hs and  ./Text/Regex/Posix/ByteString/Lazy.hs
      CPP-Options: "-DSPLIT_BASE=1"
      Extensions:         MultiParamTypeClasses, FunctionalDependencies, CPP, ForeignFunctionInterface, GeneralizedNewtypeDeriving, FlexibleContexts, TypeSynonymInstances, FlexibleInstances

  else
    if flag(splitBase)
      Build-Depends:      regex-base >= 0.93, base >= 3.0, array, containers, bytestring
      -- Need the next symbol for using CPP to get Data.ByteString.Base|Unsafe in
      --  ./Text/Regex/Posix/ByteString.hs and  ./Text/Regex/Posix/ByteString/Lazy.hs
      CPP-Options: "-DSPLIT_BASE=1"
      Extensions:         MultiParamTypeClasses, FunctionalDependencies, CPP, ForeignFunctionInterface, GeneralizedNewtypeDeriving, FlexibleContexts, TypeSynonymInstances, FlexibleInstances

    else
      Build-Depends:      regex-base >= 0.93, base < 3.0
      Extensions:         MultiParamTypeClasses, FunctionalDependencies, CPP

  -- Data-Files:
  -- Extra-Source-Files:
  -- Extra-Tmp-Files:
  -- This is the library
  Exposed-Modules:        Text.Regex.Posix
                          Text.Regex.Posix.Wrap
                          Text.Regex.Posix.String
                          Text.Regex.Posix.Sequence
                          Text.Regex.Posix.ByteString
                          Text.Regex.Posix.ByteString.Lazy
  -- Futher fields
  Buildable:              True
  -- Other-Modules:
  -- HS-Source-Dirs:         "."
  -- The CPP is for using -DSPLIT_BASE=1 to get Data.ByteString.Base|Unsafe
  GHC-Options:            -Wall -O2
  -- GHC-Options:            -Wall -Werror -O2
  -- GHC-Options:            -Wall -ddump-minimal-imports
  -- GHC-Prof-Options: 
  -- Hugs-Options:
  -- NHC-Options:
  -- C-Sources:
  -- LD-Options:
  -- Frameworks:
  CC-Options:             -DHAVE_REGEX_H
  -- Includes:
  -- Include-Dirs:           include
  -- Extra-Libraries:
  -- Extra-Lib-Dirs:
