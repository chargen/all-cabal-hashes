-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:e928249af32d5a1772103ab7c550673f
    SHA1:61712f1a61316d87f05c1cee85d426c5f8432df4
    SHA256:43f78e2f30f48f4c8636320ed84ddddc68e413ddadb8958498f146d586a3d94f
    SHA512:ff5fecffb5afa9d05082cb98301269443acc43b7e2ec465e568ec8a1df657318f570e148a143e007c9942393ecb1c97e49a65b037749299f3354f64949b10883
    Skein512_512:ddbf1eb012590f99d62633d2e170288d7a525e1e26034fabfdf189907368a70491992322c11b8ecf7ef3d10c1c6411438e20ec93d32113935919ddc7da7622ae

x-package-locations:
    https://hackage.haskell.org/package/treeviz-0.0.7/treeviz-0.0.7.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/treeviz-0.0.7.tar.gz

x-package-size: 11833
-- END Added by all-cabal-hashes-tool

name: treeviz
version: 0.0.7
cabal-version: >=1.8
build-type: Simple
license: BSD3
license-file: LICENSE
copyright: Copyright (c) 2013 David Banas; all rights reserved World wide.
maintainer: capn.freako@gmail.com
stability: Experimental
homepage: http://www.haskell.org/haskellwiki/Treeviz
synopsis: Visualization of computation decomposition trees.
description: This Haskell package provides some tools for visualizing the decomposition
             of different divide and conquer algorithms.
category: Algorithm Visualization
author: David B. Banas
tested-with: GHC -any
data-dir: ""
extra-source-files: README TODO
 
source-repository head
    type: git
    location: git://github.com/capn-freako/treeviz.git
 
source-repository this
    type: git
    location: git://github.com/capn-freako/treeviz.git
    tag: v0.0.7
 
library
    build-depends: QuickCheck -any, base >=2 && <5, containers -any,
                   mtl -any, random -any
    exposed-modules: Data.Newtypes.PrettyDouble Data.Tree.LogTree
                     Data.Tree.LogTreeUtil Data.Tree.LogTrees.FFTTree
    exposed: True
    buildable: True
    cpp-options: -DMAIN_FUNCTION=testMain
    hs-source-dirs: src
 
executable treeviz
    build-depends: QuickCheck -any, base >=2 && <5, containers -any,
                   mtl -any, random -any
    main-is: Main.hs
    buildable: True
    hs-source-dirs: src
    other-modules: Data.Tree.LogTreeUtil Data.Tree.LogTrees.FFTTree
 
test-suite test-treeviz
    build-depends: QuickCheck -any, base >=2 && <5, containers -any,
                   mtl -any, random -any
    type: exitcode-stdio-1.0
    main-is: Main.hs
    buildable: True
    cpp-options: -DMAIN_FUNCTION=testMain
    hs-source-dirs: src
