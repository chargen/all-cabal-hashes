-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:954789998b19b1ecb8fa8e78da56af3d
    SHA1:aadad449f05a4ba86ed2bd2fe7caf609ada406ca
    SHA256:b46a68ac0d7bd514f04acc2e2232944e6d3de7ff55e14813f12323f738a13cb9
    SHA512:2c8c2f1b3d0a22b770a4c9bcbfac8b3f952f280306b5c574d592a24bca44628d7fd976a722216ed2c91342f07342da162ee08c03c340f5752f89d1678bade085
    Skein512_512:4ed52be7e59ce71cf0e43d8c4dc77cc0e701e4722b64fbe524aaff9c71e326d93b7e1981af4278bd7d6041e383f3bcdc2173a93f39721bdde0e97630c927d8df

package-locations:
    https://hackage.haskell.org/package/hath-0.0.1/hath-0.0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/hath-0.0.1.tar.gz

package-size: 14468
-- END Added by all-cabal-hashes-tool

name:           hath
version:        0.0.1
cabal-version:  >= 1.8
author:         Michael Orlitzky
maintainer:	Michael Orlitzky <michael@orlitzky.com>
category:       Utils
license:        GPL-3
license-file:   doc/LICENSE
build-type:     Simple
synopsis:
  Hath manipulates network blocks in CIDR notation.
description:
  Hath is a Haskell program for working with network blocks in CIDR
  notation. When dealing with blocks of network addresses, there are a
  few things that one usually wants to do with them:
  .
    * Create a regular expression matching the CIDR block(s). This is
      because grep will throw up if you feed it CIDR.
  .
    * Combine small blocks into larger ones. For example, if you have two
      consecutive \/24s, they might combine into a larger \/23.
  .
    * View the result of block combination in a useful way.
  .
  Hath has four modes to perform these functions:
  .
    [@Regexed@]
    This computes a (Perl-compatible) regular expression matching
    the input CIDR blocks. It's the default mode of operation.
  .
    [@Reduced@]
    This combines small blocks into larger ones where possible, and
    eliminates redundant blocks. The output should be equivalent to
    the input, though.
  .
    [@Duped@]
    Shows only the blocks that would be removed by reduce; that is, it
    shows the ones that would get combined into larger blocks or are
    simply redundant.
  .
    [@Diffed@]
    Shows what would change if you used reduce. Uses diff-like
    notation.
  .
  /Examples/:
  .
  Combine two \/24s into a \/23:
  .
  @
  $ hath reduced <<< \"10.0.0.0\/24 10.0.1.0\/24\"
  10.0.0.0/23
  @
  .
  Create a perl-compatible regex to be fed to grep:
  .
  @
  $ grep -P `hath regexed -i cidrs.txt` mail.log
  @

executable hath
  build-depends:
    base                        == 4.*,
    HUnit                       == 1.2.*,
    QuickCheck                  == 2.6.*,
    MissingH                    == 1.2.*,
    split                       == 0.2.*,
    test-framework              == 0.8.*,
    test-framework-hunit        == 0.3.*,
    test-framework-quickcheck2  == 0.3.*

  main-is:
    Main.hs

  hs-source-dirs:
    src/

  ghc-options:
    -Wall
    -fwarn-hi-shadowing
    -fwarn-missing-signatures
    -fwarn-name-shadowing
    -fwarn-orphans
    -fwarn-type-defaults
    -fwarn-tabs
    -fwarn-incomplete-record-updates
    -fwarn-monomorphism-restriction
    -fwarn-unused-do-bind
    -rtsopts
    -threaded
    -optc-O3
    -optc-march=native
    -O2

  ghc-prof-options:
    -prof
    -auto-all
    -caf-all


test-suite testsuite
  type: exitcode-stdio-1.0
  hs-source-dirs: src test
  main-is: TestSuite.hs
  build-depends:
    base                        == 4.*,
    HUnit                       == 1.2.*,
    QuickCheck                  == 2.6.*,
    MissingH                    == 1.2.*,
    split                       == 0.2.*,
    test-framework              == 0.8.*,
    test-framework-hunit        == 0.3.*,
    test-framework-quickcheck2  == 0.3.*

  -- It's not entirely clear to me why I have to reproduce all of this.
  ghc-options:
    -Wall
    -fwarn-hi-shadowing
    -fwarn-missing-signatures
    -fwarn-name-shadowing
    -fwarn-orphans
    -fwarn-type-defaults
    -fwarn-tabs
    -fwarn-incomplete-record-updates
    -fwarn-monomorphism-restriction
    -fwarn-unused-do-bind
    -rtsopts
    -threaded
    -optc-O3
    -optc-march=native
    -O2

source-repository head
  type: git
  location: http://michael.orlitzky.com/git/hath.git
  branch: master
