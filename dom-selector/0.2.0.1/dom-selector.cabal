-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:84e77d84bb83c28b21f17e7c9aa2b589
    SHA1:944520a672d4ad742e46c685b697a9d56ff574b0
    SHA256:42ac991bfc11576838c841b4712f2c162cb841389b28eb0aa4454732d3c9a3da
    SHA512:a45520893713051b65406b313000bed88622fbbe6fb07f0f7f80d64cacf45ccf13f81460fd8205f8fe4cd47f504d6a3c9825c6d120888bb312d5f05d46030fd9
    Skein512_512:cb5f474b8a2d801cf6a51ed6d43f013977c1752eb4839273c3cb99e75031092233682eef758e53ea920c6024579b49ff8b889e5db27b25c197664455c4176729

x-package-locations:
    https://hackage.haskell.org/package/dom-selector-0.2.0.1/dom-selector-0.2.0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/dom-selector-0.2.0.1.tar.gz

x-package-size: 9125
-- END Added by all-cabal-hashes-tool

-- Initial dom-selector.cabal generated by cabal init.  For further 
-- documentation, see http://haskell.org/cabal/users-guide/

-- The name of the package.
name:                dom-selector
version:             0.2.0.1
synopsis:            DOM traversal by CSS selectors for xml-conduit package
description:
  CSS selector support for xml-conduit/html-conduit. This package supports compile-time checking of CSS selectors using quasiquotes. All DOM traversals are purely functional.
  .
  * Quick start
  .
  > -- The following pragmas should be put first (Haddock does not accept a pragma notation.)
  > -- LANGUAGE OverloadedStrings, QuasiQuotes
  > 
  > module Main (main) where
  > 
  > import Text.XML.Cursor (fromDocument)
  > import Text.HTML.DOM (parseLBS)
  > import qualified Data.Text.Lazy.IO as TI (putStrLn)
  > 
  > import Control.Monad (mapM_)
  > 
  > import Text.XML.Scraping (innerHtml)
  > import Text.XML.Selector.TH
  > 
  > import Network.HTTP.Conduit
  > import Data.Conduit.Binary
  > 
  > main :: IO ()
  > main = do
  >    root <- fmap (fromDocument . parseLBS) $ simpleHttp "https://news.google.com/"
  >    let cs = queryT [jq| h2 span.titletext |] root
  >    mapM_ (TI.putStrLn . innerHtml) cs

  .
  You can use some elementary CSS selectors for traversing a DOM tree.
  .
  * Other examples
  .
  <https://github.com/nebuta/dom-selector/tree/master/examples>
  .
  Changes:
  .
  Ver 0.2.1: Inappropriate Safe Haskell pragma was removed.
  .
  Ver 0.2: All scraping functions in Text.XML.Scraping return lazy text now. They are implemented with a type class.

homepage:            https://github.com/nebuta/
license:             BSD3
license-file:        LICENSE
author:              Nebuta Lab
maintainer:          nebuta.office@gmail.com
copyright:           Copyright 2012-2013 by Nebuta Lab           
category:            Web
stability:           beta
build-type:          Simple
cabal-version:       >=1.8


source-repository head
  type:     git
  location: https://github.com/nebuta/dom-selector

library
  exposed-modules:     Text.XML.Scraping, Text.XML.Selector, Text.XML.Selector.Parser, Text.XML.Selector.Test, Text.XML.Selector.TH, Text.XML.Selector.Types
  other-modules:       
  build-depends:       base >=4.0 && <5, text >= 0.11, xml-conduit, html-conduit >=0.1, containers >=0.4, blaze-html >=0.5,  parsec >=3.1, QuickCheck >=2.4, template-haskell >=2.5, th-lift >=0.5

Test-Suite test
  type: exitcode-stdio-1.0
  main-is: test-scraping.hs
  build-depends:       base >=4.0 && <5, text >= 0.11, xml-conduit, html-conduit >=0.1, containers >=0.4, blaze-html >=0.5,  parsec >=3.1, QuickCheck >=2.4, template-haskell >=2.5, th-lift >=0.5



