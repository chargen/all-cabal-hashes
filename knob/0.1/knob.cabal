-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:2c75ba68593288ba0ab33d0f3cda9e77
    SHA1:beabef8945a82f7b394c46cb3f893fff17d5ef09
    SHA256:c3e5006384e427d13322bbb1bfeb8ab39d624b7c7dfb05b5ffe744f0b69287a9
    SHA512:f93586f47eb67864ff0282c14f8d5fae021c328966e37d770f44b75079afd0c2f1c0f15f8f384d1440cba2f0f995da3eb1397166da0b44506da5523a16cb81ce
    Skein512_512:78e14583d11f3f7ae0e2fda7e78241f7a47dca12ce94d9a1b7085072bbe9db99968d187ad0ba1840a24b9f1bb8f54644a11214f8b506a3918ba26a43a1b802b3

package-locations:
    https://hackage.haskell.org/package/knob-0.1/knob-0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/knob-0.1.tar.gz

package-size: 3540
-- END Added by all-cabal-hashes-tool

name: knob
version: 0.1
license: MIT
license-file: license.txt
author: John Millikin <jmillikin@gmail.com>
maintainer: John Millikin <jmillikin@gmail.com>
build-type: Simple
cabal-version: >= 1.6
category: System
stability: experimental
homepage: https://john-millikin.com/software/knob/
bug-reports: mailto:jmillikin@gmail.com

synopsis: Memory-backed handles
description:
  Create memory-backed 'IO.Handle's, referencing virtual files. This is
  mostly useful for testing 'Handle'-based APIs without having to
  interact with the filesystem.
  .
  > import Data.ByteString (pack)
  > import Data.Knob
  > import System.IO
  >
  > main = do
  >     knob <- newKnob (pack [])
  >     h <- newFileHandle knob "test.txt" WriteMode
  >     hPutStrLn h "Hello world!"
  >     hClose h
  >     bytes <- Data.Knob.getContents knob
  >     putStrLn ("Wrote bytes: " ++ show bytes)

source-repository head
  type: bazaar
  location: https://john-millikin.com/software/knob/

source-repository this
  type: bazaar
  location: https://john-millikin.com/branches/knob/0.1/
  tag: knob_0.1

library
  hs-source-dirs: lib
  ghc-options: -Wall -O2

  build-depends:
      base >= 4.2 && < 5.0
    , bytestring >= 0.9 && < 0.10
    , transformers >= 0.2 && < 0.3

  exposed-modules:
    Data.Knob
