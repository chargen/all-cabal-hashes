-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:7d785a90b77293ceac5dbe7b8f2139c0
    SHA1:68fb93cab4b21cae20f73b818afb05e73b57e8e2
    SHA256:19341a7d3d2e4d4ae3a4a232c566edb071c895a17e5f1d1ad092b1d3fe026583
    SHA512:4f9f98a593aba5abfd11ac1fe5e5c737e651df6df68c4420dba619d56a301e77eb62c54e949f924e973b58c694d6d789aa468cb704c8df3e1d4fa64140225464
    Skein512_512:9284ac227e717125519a33a590c984b035ffacae59af37d8e189d41999dbf08260ea7debe42f2da04fbb0cc16b7ebcb1d3892195a2fd139ea6819d25804fb724

package-locations:
    https://hackage.haskell.org/package/unsafely-0.2.0.0/unsafely-0.2.0.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/unsafely-0.2.0.0.tar.gz

package-size: 4456
-- END Added by all-cabal-hashes-tool

name:                unsafely
version:             0.2.0.0
synopsis:            Flexible access control for unsafe operations and instances
description:         This module aims at providing simple interface to control the acccess for /unsafe/
                     operations and instance.

                     The motivation of this package is somewhat similar to
                     @<https://ghc.haskell.org/trac/ghc/ticket/7642 NullaryTypeClasses>@ extension,
                     but permits more flexible access control.

homepage:            http://github.com/konn/unsafely
license:             BSD3
license-file:        LICENSE
author:              Hiromi ISHII
maintainer:          konn.jinro_at_gmail.com
copyright:           2014 (c) Hiromi ISHII
category:            Data
build-type:          Simple
extra-source-files:  README.md
cabal-version:       >=1.10

flag examples
  default: False

source-repository head
  type: git
  location: git://github.com/konn/unsafely.git

library
  exposed-modules:     Data.Constraint.Unsafely, Data.Constraint.Unsafely.Really
  other-extensions:    FlexibleContexts, FlexibleInstances, RankNTypes, ScopedTypeVariables, UndecidableInstances
  build-depends:       base >=4.6 && <4.8
  hs-source-dirs:      src
  default-language:    Haskell2010

executable semigroup
  if flag(examples)
    buildable:           True
  else
    buildable:           False
  build-depends:       base >=4.6 && <4.8, unsafely
  if impl(ghc < 7.8)
    build-depends:     tagged >=0.6 && <0.7
  hs-source-dirs:      examples
  main-is:             semigroup.hs
  default-language:    Haskell2010

executable safe-unsafe
  if flag(examples)
    buildable:           True
  else
    buildable:           False
  build-depends:       base >=4.6 && <4.8, unsafely
  if impl(ghc < 7.8)
    build-depends:     tagged >=0.6 && <0.7
  hs-source-dirs:      examples
  main-is:             safe-unsafe.hs
  default-language:    Haskell2010
