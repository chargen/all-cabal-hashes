-- Initial modulespection.cabal generated by cabal init.  For further 
-- documentation, see http://haskell.org/cabal/users-guide/

name:                modulespection
version:             0.1.0.7
synopsis:            Template Haskell for introspecting a module's declarations
description: 
 Collect all of the declarations in a module using Template Haskell (via the GHC API). 
 . 
 One can either get all the names, or just the declarations (only type declarations
 are supported right now).
 .
 Here is a quick example:
 . 
 > import Language.Haskell.TH.Module.Magic (names)
 > 
 > data Test = Test Int
 > newtype OtherTest = OtherTest Test
 > 
 > someFunction :: String -> String
 > someFunction = id
 > 
 > -- 'names' is Template Haskell function that will collect all of the 
 > -- toplevel declaration names of the current file.
 > names >>= runIO . print >> return []
 .
 Which will spew the following when compiling:
 .
 > [Test,OtherTest,someFunction]
 . 
 There is also 'declarations' which can be used, for example, to make sure that all
 types have @ToJSON@/@FromJSON@ instances. 
 .
 > import Data.Aeson.TH (deriveJSON, defaultOptions)
 > import MonadUtils (concatMapM)
 > import Language.Haskell.TH.Module.Magic (declarations)
 > 
 > data Test = Test Int
 > newtype OtherTest = OtherTest Test
 >
 > concatMapM (deriveJSON defaultOptions) =<< declarations
 .
 Which will make JSON instances for Test, OtherTest and any other types
 added to the file.
 .
 You can also do the same thing for an existing module.
 .
 > import Data.Aeson.TH (deriveJSON, defaultOptions)
 > import MonadUtils (concatMapM)
 > import Language.Haskell.TH.Module.Magic (moduleDeclarations)
 > import Data.Monoid
 > 
 > concatMapM (deriveJSON defaultOptions) =<< moduleDeclarations "Data.Monoid"
 .
 Which will build instances for all the types in "Data.Monoid".

license:             BSD3
license-file:        LICENSE
author:              Jonathan Fischoff
maintainer:          jonathangfischoff@gmail.com
homepage: https://github.com/jfischoff/modulespection
-- copyright:           
category:            Language
build-type:          Simple
-- extra-source-files:  
cabal-version:       >=1.10

library
  exposed-modules:     Language.Haskell.TH.Module.Magic
  -- other-modules:       
  other-extensions: LambdaCase
                  , FlexibleInstances
  build-depends: base >=4.6 && <4.7
               , template-haskell >=2.7 && <2.9
               , ghc-paths >=0.1 && <0.2
               , ghc
               , temporary == 1.2.*
               , exceptions == 0.3.*
               , transformers == 0.3.*
               , filepath == 1.3.*
  hs-source-dirs:      src
  default-language:    Haskell2010

package-hashes:
    MD5:dfb83796e34ef670e7b9b5a7749448d2
    SHA1:876126414f234511fc0ee4eb9f88a2b2995d8d00
    SHA256:602ed8647ae53f8a220e6a18d931319b4f486647c0b63fda21970077fef9e703
    SHA512:813e240acbeec5b79d0df7675fa4e7d796d6bd8dc92ee27b484f9b4350b5345a2541b8099765a9da2179a2525313354662e839b5ea773abe399f67b344e442fc
    Skein512_512:e7007269d73cba63086d31d93437e03748c3672dd062140a1f7f337b6b43886106ed29f8ce4c07b90d9d19e8f99316028343d5c66a7e9396f8b2214ee880b951

package-locations:
    https://hackage.haskell.org/package/modulespection-0.1.0.7/modulespection-0.1.0.7.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/modulespection-0.1.0.7.tar.gz

package-size: 4988
