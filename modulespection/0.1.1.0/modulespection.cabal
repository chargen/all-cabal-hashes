-- Initial modulespection.cabal generated by cabal init.  For further 
-- documentation, see http://haskell.org/cabal/users-guide/

name:                modulespection
version:             0.1.1.0
synopsis:            Template Haskell for introspecting a module's declarations
description: 
 Collect all of the declarations in a module using Template Haskell (via the GHC API). 
 . 
 One can either get all the names, or just the declarations (only type declarations
 are supported right now).
 .
 Here is a quick example:
 . 
 > import Language.Haskell.TH.Module.Magic (names)
 > 
 > data Test = Test Int
 > newtype OtherTest = OtherTest Test
 > 
 > someFunction :: String -> String
 > someFunction = id
 > 
 > -- 'names' is Template Haskell function that will collect all of the 
 > -- toplevel declaration names of the current file.
 > names >>= runIO . print >> return []
 .
 Which will spew the following when compiling:
 .
 > [Test,OtherTest,someFunction]
 . 
 There is also 'declarations' which can be used, for example, to make sure that all
 types have @ToJSON@/@FromJSON@ instances. 
 .
 > import Data.Aeson.TH (deriveJSON, defaultOptions)
 > import MonadUtils (concatMapM)
 > import Language.Haskell.TH.Module.Magic (declarations)
 > 
 > data Test = Test Int
 > newtype OtherTest = OtherTest Test
 >
 > concatMapM (deriveJSON defaultOptions) =<< declarations
 .
 Which will make JSON instances for Test, OtherTest and any other types
 added to the file.
 .
 You can also do the same thing for an existing module.
 .
 > import Data.Aeson.TH (deriveJSON, defaultOptions)
 > import MonadUtils (concatMapM)
 > import Language.Haskell.TH.Module.Magic (moduleDeclarations)
 > import Data.Monoid
 > 
 > concatMapM (deriveJSON defaultOptions) =<< moduleDeclarations "Data.Monoid"
 .
 Which will build instances for all the types in "Data.Monoid".

license:             BSD3
license-file:        LICENSE
author:              Jonathan Fischoff
maintainer:          jonathangfischoff@gmail.com
homepage: https://github.com/jfischoff/modulespection
-- copyright:           
category:            Language
build-type:          Simple
-- extra-source-files:  
cabal-version:       >=1.10

library
  exposed-modules:     Language.Haskell.TH.Module.Magic
  -- other-modules:       
  other-extensions: LambdaCase
                  , FlexibleInstances
  build-depends: base >=4.6 && < 666
               , template-haskell >=2.7 
               , ghc-paths >=0.1 && <0.2
               , ghc
               , temporary == 1.2.*
               , exceptions == 0.3.*
               , transformers == 0.3.*
               , filepath == 1.3.*
  hs-source-dirs:      src
  default-language:    Haskell2010

package-hashes:
    MD5:93de47c732ff6c295b5dc5eab866e06a
    SHA1:fc17b376a15145edcf165a502b8f3bbfbbc87ba6
    SHA256:c95b910a8ba06b1392bc46f029b28a06d1ca297b26fba4f7112ce9387cc21dd4
    SHA512:d21923c6e1a074e94d24c3525eded3933ac346e4ffaf8d9fae7d31950ddf3907967843359c0bc32257998078199b4093f5ccfaf0e6e6f0cbddedb67f1eeabbe2
    Skein512_512:41a61a062c105a319b069222f83b27c593827d6ca256cc7d6e72a3322687e7cce9cc14c92c9f5d6960de4d65bd3c8aa0ff694903e3c2584f669fea6d2191b6c9

package-locations:
    https://hackage.haskell.org/package/modulespection-0.1.1.0/modulespection-0.1.1.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/modulespection-0.1.1.0.tar.gz

