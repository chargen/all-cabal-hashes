-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:7ca67c6135f36702f5ac19923b1b0e07
    SHA1:2e32b727d76c824e4a126b0b0991bdcd9d7eae46
    SHA256:bfc30b9e2518eb496017a36f2c919f1e89ad8d9d50faa81d86f866985db029f9
    SHA512:714c4b71b3ced44d38a600edcc5dc816cf013d3e1b25e34c5c755c60354941c5e516b484cdfa7f72c141fadec743d9ac54c6ee4edaf58d08dea970f585d1f7fc
    Skein512_512:47e1c581aa84ab6a640b66b5b29cd2dd87a8817733c8300eff692d9a654defacd18e699f5b7af2c03fe252ca734f6e6b862b7d676dcf9904171b9d356ce29eeb

package-locations:
    https://hackage.haskell.org/package/recursion-schemes-0.1/recursion-schemes-0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/recursion-schemes-0.1.tar.gz

package-size: 4104
-- END Added by all-cabal-hashes-tool

name:          recursion-schemes
category:      Control, Recursion
version:       0.1
license:       BSD3
cabal-version: >= 1.6
license-file:  LICENSE
author:        Edward A. Kmett
maintainer:    Edward A. Kmett <ekmett@gmail.com>
stability:     provisional
homepage:      http://github.com/ekmett/recursion-schemes/
copyright:     Copyright (C) 2008-2011 Edward A. Kmett
synopsis:      Generalized bananas, lenses and barbed wire
description:   Generalized bananas, lenses and barbed wire
build-type:    Simple

source-repository head
  type: git
  location: git://github.com/ekmett/recursion-schemes.git

library
  build-depends: 
    base >= 4 && < 4.4,
    transformers >= 0.2.0 && < 0.3,
    semigroups >= 0.3.4 && < 0.5,
    comonad >= 0.9.0.1 && < 0.10,
    comonad-transformers >= 0.10.1.1 && < 0.11,
    streams >= 0.5.0 && < 0.6

  exposed-modules:
    Data.Functor.Foldable

  ghc-options: -Wall 
