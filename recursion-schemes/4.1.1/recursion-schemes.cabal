-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:f5d268958d04b0749ec0f2aa706f2562
    SHA1:27595d4bade19ec12d0ec44e6da2a33c23acce93
    SHA256:944b163295ffd3fa2462512ec74700264a3b025130c332ae2145bc33ed943f02
    SHA512:f710f27c41d50a72bc5394b11293aed1e962e03ae52f74065ac235db4259ff9303beac859ae500ecbe19a2e83f915dbd7de762a06102c1bb1a82351a51db6493
    Skein512_512:8184eb37a99b11419e2e12695c0b553bd199109cfd3229c9df8678de335d523bafbd6a4bdd9008e7cf0d0f46a4ec9111ceb93ce4133e0620e3005fa10888db37

package-locations:
    https://hackage.haskell.org/package/recursion-schemes-4.1.1/recursion-schemes-4.1.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/recursion-schemes-4.1.1.tar.gz

package-size: 5597
-- END Added by all-cabal-hashes-tool

name:          recursion-schemes
category:      Control, Recursion
version:       4.1.1
license:       BSD3
cabal-version: >= 1.6
license-file:  LICENSE
author:        Edward A. Kmett
maintainer:    Edward A. Kmett <ekmett@gmail.com>
stability:     provisional
homepage:      http://github.com/ekmett/recursion-schemes/
bug-reports:   http://github.com/ekmett/recursion-schemes/issues
copyright:     Copyright (C) 2008-2013 Edward A. Kmett
synopsis:      Generalized bananas, lenses and barbed wire
description:   Generalized bananas, lenses and barbed wire

build-type:    Simple
extra-source-files: .travis.yml CHANGELOG.markdown

source-repository head
  type: git
  location: git://github.com/ekmett/recursion-schemes.git

library
  extensions: CPP
  other-extensions:
    TypeFamilies
    Rank2Types
    FlexibleContexts
    FlexibleInstances
    GADTs
    StandaloneDeriving
    UndecidableInstances

  build-depends:
    base                 >= 4   && < 5,
    comonad              >= 4   && < 5,
    free                 >= 4   && < 5,
    transformers         >= 0.2 && < 1

  exposed-modules:
    Data.Functor.Foldable

  ghc-options: -Wall
