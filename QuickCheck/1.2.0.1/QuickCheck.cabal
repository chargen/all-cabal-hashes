-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:e1ee0f7751055c048a9505ee13752218
    SHA1:7895efa29941acb0d0c749bc34bdadd37730fc46
    SHA256:8daee0117004a5c8962092a1eadfafc31f86d1b37fb15f5619962c05d8dab7bf
    SHA512:759f3107878b1e32732dad8583b99303276393649fb7eba8e0f452d438133075f986a3d8457684b024f642ed72b5e1600cbef73706cb8897f76112976c61ae64
    Skein512_512:2a4fe0888ecec63e9a9e3084221df0270d26721f46a0d39ecee0a0b577e87c497e6e15695e3296d940c44965af192b3590b324fd8ea62d166889ec897ad686e9

x-package-locations:
    https://hackage.haskell.org/package/QuickCheck-1.2.0.1/QuickCheck-1.2.0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/QuickCheck-1.2.0.1.tar.gz

x-package-size: 8874
-- END Added by all-cabal-hashes-tool

name:		QuickCheck
version:	1.2.0.1
x-revision: 2
license:	BSD3
license-file:	LICENSE
author:		Koen Classen and John Hughes
maintainer:	libraries@haskell.org
category:	Testing
homepage:	http://www.math.chalmers.se/~rjmh/QuickCheck/
synopsis:	Automatic testing of Haskell programs
description:
	A library for testing Haskell programs automatically.
	The programmer provides a specification of the program, in
	the form of properties which functions should satisfy, and
	QuickCheck then tests that the properties hold in a large number
	of randomly generated cases.  Specifications are expressed in
	Haskell, using combinators defined in the QuickCheck library.
	QuickCheck provides combinators to define properties, observe
	the distribution of test data, and define test
	data generators.
build-type: Simple
cabal-version: >=1.2

flag base3
flag base4

library
  exposed-modules:
          Debug.QuickCheck.Batch,
          Debug.QuickCheck.Poly,
          Debug.QuickCheck.Utils,
          Debug.QuickCheck,
          Test.QuickCheck.Batch,
          Test.QuickCheck.Poly,
          Test.QuickCheck.Utils,
          Test.QuickCheck
  if flag(base3)
    build-depends:	base >= 3 && < 4, random
  else 
    if flag(base4)
      build-depends:      base >= 4 && < 4.8, random
      cpp-options: -DBASE4=1
    else
      build-depends:	base < 3
  extensions:	CPP
