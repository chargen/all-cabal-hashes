-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:ccb0352618e7ccff5a911d32b9bc6116
    SHA1:c7b73d90d467febaf2e5c1ca3dc053af877e2aa5
    SHA256:ca414a92c8744e98d04d17f77273245ce317b9b5e8bb504f4d97b38662a9c906
    SHA512:c09f82232679713559d45c160e56bbcb37cd67b2eee9c2bdae5c7cf64979ed72811c90464d3e5da6ce6abe53f3ff16e234e581c6d8af46a2aa1e683f0da14cc8
    Skein512_512:e328557895f1bfc9b1967cb41fd3fac337eeb3ccf73bc9897594a8be251084d87b5c970e17210495fcb23656cb0ebd9726b16311d7b85a88b8354d649dc72e04

x-package-locations:
    https://hackage.haskell.org/package/command-qq-0.1.0.0/command-qq-0.1.0.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/command-qq-0.1.0.0.tar.gz

x-package-size: 6266
-- END Added by all-cabal-hashes-tool

name:                command-qq
version:             0.1.0.0
synopsis:            Quasiquoters for external commands
description:
  Features:
  .
  * Quasiquotation syntax for external commands:
  .
  > [sh| echo hello world! |]
  .
  * Easy way to define custom quasiquoters (see @examples/CustomQQ.hs@)
  .
  > ghci = QQ.quoter $ QQ.callCommand "ghc" ["-ignore-dot-ghci", "-e"]
  .
  * Can embed Haskell variables in scripts
  .
  > class Embed a where
  >   embed :: a -> String
  >
  > instance Embed String
  >   embed = id
  >
  > main :: IO ()
  > main = let excl = replicate 3 '!' in -- I'd love to show an example but haddock markup fails here
  .
  * Can embed quasiquoters in DSLs (see @examples/CommandT.hs@)
  .
  > class Eval r where
  >   eval :: String -> [String] -> r
  >
  > instance Eval (IO ExitCode) where
  >   eval command args = System.Process.rawSystem command args
  .
homepage:            http://biegunka.github.io/command-qq/
license:             BSD3
license-file:        LICENSE
author:              Matvey Aksenov
maintainer:          matvey.aksenov@gmail.com
category:            System
build-type:          Simple
cabal-version:       >= 1.10
extra-source-files:
  examples/CommandT.hs
  examples/CustomQQ.hs


library
  default-language:  Haskell2010
  build-depends:
    base == 4.*,
    process,
    template-haskell,
    unix
  hs-source-dirs:    src
  exposed-modules:   System.Command.QQ

test-suite doctests
  default-language:  Haskell2010
  type:              exitcode-stdio-1.0
  build-depends:
    base == 4.*,
    doctest
  hs-source-dirs:    tests
  main-is:           Doctests.hs

test-suite spec
  default-language:  Haskell2010
  type:              exitcode-stdio-1.0
  build-depends:
    base == 4.*,
    hspec,
    command-qq,
    template-haskell
  hs-source-dirs:
    tests,
    examples
  main-is:           Spec.hs
  other-modules:     EmbeddingSpec


source-repository head
  type:              git
  location:          https://github.com/biegunka/command-qq
