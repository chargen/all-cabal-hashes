-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:fe7f3b9dd4dd62d3e5fc49a12d5584ec
    SHA1:7451e46644589864bb914f6655aae40b1fa1f528
    SHA256:d41b9112589705328338351a57ab315675c698e77f89ad8757c8b2676d1437e1
    SHA512:4c88ddecedac07396f4153c40289ccb62c65977092ea20feb83eefe7053d3a9535e5c57f33c2b644b065a4aca0b2341e954f1bb498f9065a23efd0158353b35e
    Skein512_512:5f5fbc3e2886224a23218004d134da396de521bdd0cf380d01adce797e3df73f9d87aeea775ef20b223e949c160b46b2f0adff28a96933e84456c02b3ba2d7b4

package-locations:
    https://hackage.haskell.org/package/amazonka-swf-0.0.1/amazonka-swf-0.0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/amazonka-swf-0.0.1.tar.gz

package-size: 79067
-- END Added by all-cabal-hashes-tool

name:                  amazonka-swf
version:               0.0.1
synopsis:              Amazon Simple Workflow Service SDK.
homepage:              https://github.com/brendanhay/amazonka
license:               OtherLicense
license-file:          LICENSE
author:                Brendan Hay
maintainer:            Brendan Hay <brendan.g.hay@gmail.com>
copyright:             Copyright (c) 2013-2014 Brendan Hay
category:              Network, AWS, Cloud
build-type:            Simple
extra-source-files:    README.md
cabal-version:         >= 1.10

description:
    Amazon Simple Workflow Service (Amazon SWF) makes it easy to build
    applications that coordinate work across distributed components. In
    Amazon SWF, a task represents a logical unit of work that is performed
    by a component of your application. Coordinating tasks across the
    application involves managing intertask dependencies, scheduling, and
    concurrency in accordance with the logical flow of the application.
    Amazon SWF gives you full control over implementing tasks and
    coordinating them without worrying about underlying complexities such
    as tracking their progress and maintaining their state.
    .
    /See:/ <http://docs.aws.amazon.com/amazonswf/latest/apireference/Welcome.html AWS API Reference>
    .
    /Warning:/ This is an experimental preview release which is still under
    heavy development and not intended for public consumption, caveat emptor!

source-repository head
    type:     git
    location: git://github.com/brendanhay/amazonka.git

library
    default-language:  Haskell2010
    hs-source-dirs:    src gen

    ghc-options:       -Wall

    exposed-modules:
          Network.AWS.SWF
        , Network.AWS.SWF.CountClosedWorkflowExecutions
        , Network.AWS.SWF.CountOpenWorkflowExecutions
        , Network.AWS.SWF.CountPendingActivityTasks
        , Network.AWS.SWF.CountPendingDecisionTasks
        , Network.AWS.SWF.DeprecateActivityType
        , Network.AWS.SWF.DeprecateDomain
        , Network.AWS.SWF.DeprecateWorkflowType
        , Network.AWS.SWF.DescribeActivityType
        , Network.AWS.SWF.DescribeDomain
        , Network.AWS.SWF.DescribeWorkflowExecution
        , Network.AWS.SWF.DescribeWorkflowType
        , Network.AWS.SWF.GetWorkflowExecutionHistory
        , Network.AWS.SWF.ListActivityTypes
        , Network.AWS.SWF.ListClosedWorkflowExecutions
        , Network.AWS.SWF.ListDomains
        , Network.AWS.SWF.ListOpenWorkflowExecutions
        , Network.AWS.SWF.ListWorkflowTypes
        , Network.AWS.SWF.PollForActivityTask
        , Network.AWS.SWF.PollForDecisionTask
        , Network.AWS.SWF.RecordActivityTaskHeartbeat
        , Network.AWS.SWF.RegisterActivityType
        , Network.AWS.SWF.RegisterDomain
        , Network.AWS.SWF.RegisterWorkflowType
        , Network.AWS.SWF.RequestCancelWorkflowExecution
        , Network.AWS.SWF.RespondActivityTaskCanceled
        , Network.AWS.SWF.RespondActivityTaskCompleted
        , Network.AWS.SWF.RespondActivityTaskFailed
        , Network.AWS.SWF.RespondDecisionTaskCompleted
        , Network.AWS.SWF.SignalWorkflowExecution
        , Network.AWS.SWF.StartWorkflowExecution
        , Network.AWS.SWF.TerminateWorkflowExecution
        , Network.AWS.SWF.Types

    other-modules:

    build-depends:
          amazonka-core == 0.0.1.*
        , base          >= 4.7     && < 5
