-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:1188ac7d96a4e8105d67d22df8b5cb04
    SHA1:589956c368a456a425e12254bf717bb1a4c81116
    SHA256:04f81e712885c5ba239edb32b834d0a1375848d043e1cf0e8c057ce7914e7042
    SHA512:3d73be788f17028100c56e7a0b4c2812307ad1e9e9172a7febcf2397ffa159771f98bd4a55e21c2685378b9539ac528c733097826e81f520bc8d21b2b2adb434
    Skein512_512:72cc459fe7c0db3bef6e44b2f499f1a15905d9cd85768ad6ad0358e4616ac9949e8033447297d026d0b2ea12ad1e18d9cb0eb9c555fc750c5d6896e293a22491

x-package-locations:
    https://hackage.haskell.org/package/lio-0.1.0/lio-0.1.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/lio-0.1.0.tar.gz

x-package-size: 71281
-- END Added by all-cabal-hashes-tool

Name:           lio
Version:        0.1.0
build-type:     Simple
License:        GPL
License-File:   LICENSE
Author:         HAILS team
Maintainer:	Deian Stefan  <deian at cs dot stanford dot edu>
Stability:      experimental
Synopsis:       Labeled IO Information Flow Control Library
Category:       Security
Description:
        The /Labeled IO/ (LIO) library provides information flow
        control for incorporating untrusted code within Haskell
        applications.  Most code should import module "LIO" and
        whichever label type the application is using (e.g.,
        "LIO.DCLabel").  The core functionality of the library is
        documented in "LIO.TCB".  LIO was implemented by David
        Mazieres (<http://www.scs.stanford.edu/~dm/>), Deian Stefan
        (<http://www.scs.stanford.edu/~deian/>), Alejandro Russo
        (<http://www.cse.chalmers.se/~russo/>) and John C. Mitchell
        (<http://www.stanford.edu/~jcm/>).

        The extended version of our paper, that includes the proofs
        is available here:
        <http://www.scs.stanford.edu/~deian/pubs/stefan:2011:flexible-ext.pdf>.

        The library depends on the @DCLabel@ module. You can read more on
        DC Labels here:
        <http://www.scs.stanford.edu/~deian/dclabels/>.
Cabal-Version:  >= 1.6

Build-Type:     Configure
Extra-source-files:
    examples/LambdaChair/AliceCode.hs
    examples/LambdaChair/BobCode.hs
    examples/LambdaChair/LambdaChair.hs
    examples/LambdaChair/Main.hs
    examples/LambdaChair/Safe.hs
    examples/fsExample.hs
    examples/maskExample.hs
    examples/waitAndCatch.hs
    configure.ac
    configure
    include/HsTmpConfig.h.in
Extra-Tmp-Files:
    include/HsTmpConfig.h

Source-repository head
  Type:     git
  Location: http://www.scs.stanford.edu/~deian/lio.git


Library
  Build-Depends: base >= 4 && < 5,
                 array >= 0.2 && < 1,
                 bytestring >= 0.9 && < 1,
                 containers >= 0.2 && < 1,
                 directory >= 1.0 && < 2,
                 filepath >= 1.1 && < 2,
                 mtl >= 1.1.0.2 && < 3,
                 old-time >= 1 && < 2,
                 unix >= 2.5.0.0 && < 3,
                 SHA >= 1.4.1.1 && < 2,
                 time >= 1.1.4 && < 2,
                 dclabel >= 0.0.4 && < 2,
                 cereal >= 0.3.3 && < 0.4,
                 base64-bytestring >= 0.1.0.4

  ghc-options: -Wall -fno-warn-orphans

  Exposed-modules:
    -- Core:
    LIO,
    LIO.Safe,
    LIO.TCB,
    LIO.MonadCatch,
    LIO.MonadLIO,
    -- Label formats:
    LIO.DCLabel,
    -- References:
    LIO.LIORef,
    LIO.LIORef.TCB,
    LIO.LIORef.Safe,
    -- Concurrency:
    LIO.Concurrent,
    LIO.Concurrent.LMVar,
    LIO.Concurrent.LMVar.Safe,
    LIO.Concurrent.LMVar.TCB,
    -- Filesystem:
    LIO.FS,
    LIO.Handle
  if impl(ghc < 7.6)
    Other-Modules:
      System.Posix.Tmp
    Include-Dirs: include
    Includes: HsTmp.h
    Install-Includes: HsTmp.h HsTmpConfig.h
    C-Sources:	cbits/HsTmp.c
