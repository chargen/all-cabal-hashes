-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:f7f3c34de2b8c213dca0ce6f9524ed53
    SHA1:1c6ef9360d09c42d5a5f5ea2da7b7aeae212ae67
    SHA256:a024bbff6555303ca813db5cf1d50785176075bb118da81ac32f2e38ffe1a6cf
    SHA512:e37177ae69f4858d54d4c1d57da8a72ec97722036887397201e90656c70ae0820f22710077fd14ecfe821a8d3380f889490a7672ac1723b6281d2b7d6b0b7e10
    Skein512_512:d79ba2bb88bb9aac2f1b6722a62c67b6a3ba6c1e770b0e399a22b95b2aa55695810824240cb7b41613a6557c89a1381410ab91e52ad8d5c577fb0bbe147a1c94

package-locations:
    https://hackage.haskell.org/package/lio-0.1.1/lio-0.1.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/lio-0.1.1.tar.gz

package-size: 71281
-- END Added by all-cabal-hashes-tool

Name:           lio
Version:        0.1.1
build-type:     Simple
License:        GPL
License-File:   LICENSE
Author:         HAILS team
Maintainer:	Deian Stefan  <deian at cs dot stanford dot edu>
Stability:      experimental
Synopsis:       Labeled IO Information Flow Control Library
Category:       Security
Description:
        The /Labeled IO/ (LIO) library provides information flow
        control for incorporating untrusted code within Haskell
        applications.  Most code should import module "LIO" and
        whichever label type the application is using (e.g.,
        "LIO.DCLabel").  The core functionality of the library is
        documented in "LIO.TCB".  LIO was implemented by David
        Mazieres (<http://www.scs.stanford.edu/~dm/>), Deian Stefan
        (<http://www.scs.stanford.edu/~deian/>), Alejandro Russo
        (<http://www.cse.chalmers.se/~russo/>) and John C. Mitchell
        (<http://www.stanford.edu/~jcm/>).

        The extended version of our paper, that includes the proofs
        is available here:
        <http://www.scs.stanford.edu/~deian/pubs/stefan:2011:flexible-ext.pdf>.

        The library depends on the @DCLabel@ module. You can read more on
        DC Labels here:
        <http://www.scs.stanford.edu/~deian/dclabels/>.
Cabal-Version:  >= 1.6

Build-Type:     Configure
Extra-source-files:
    examples/LambdaChair/AliceCode.hs
    examples/LambdaChair/BobCode.hs
    examples/LambdaChair/LambdaChair.hs
    examples/LambdaChair/Main.hs
    examples/LambdaChair/Safe.hs
    examples/fsExample.hs
    examples/maskExample.hs
    examples/waitAndCatch.hs
    configure.ac
    configure
    include/HsTmpConfig.h.in
Extra-Tmp-Files:
    include/HsTmpConfig.h

Source-repository head
  Type:     git
  Location: http://www.scs.stanford.edu/~deian/lio.git


Library
  Build-Depends: base >= 4 && < 5,
                 array >= 0.2 && < 1,
                 bytestring >= 0.9 && < 1,
                 containers >= 0.2 && < 1,
                 directory >= 1.0 && < 2,
                 filepath >= 1.1 && < 2,
                 mtl >= 1.1.0.2 && < 3,
                 old-time >= 1 && < 2,
                 unix >= 2.5.0.0 && < 3,
                 SHA >= 1.4.1.1 && < 2,
                 time >= 1.1.4 && < 2,
                 dclabel >= 0.0.4 && < 2,
                 cereal >= 0.3.3 && < 0.4,
                 base64-bytestring >= 0.1.1.0

  ghc-options: -Wall -fno-warn-orphans

  Exposed-modules:
    -- Core:
    LIO,
    LIO.Safe,
    LIO.TCB,
    LIO.MonadCatch,
    LIO.MonadLIO,
    -- Label formats:
    LIO.DCLabel,
    -- References:
    LIO.LIORef,
    LIO.LIORef.TCB,
    LIO.LIORef.Safe,
    -- Concurrency:
    LIO.Concurrent,
    LIO.Concurrent.LMVar,
    LIO.Concurrent.LMVar.Safe,
    LIO.Concurrent.LMVar.TCB,
    -- Filesystem:
    LIO.FS,
    LIO.Handle
  if impl(ghc < 7.6)
    Other-Modules:
      System.Posix.Tmp
    Include-Dirs: include
    Includes: HsTmp.h
    Install-Includes: HsTmp.h HsTmpConfig.h
    C-Sources:	cbits/HsTmp.c
