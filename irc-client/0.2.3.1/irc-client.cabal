-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:aa0e67e532dda53eaa99fc8b07c5806f
    SHA1:7023b9b7227547d3ed05a4dd6ab5bd3788366a31
    SHA256:3b515e38b49b269ebae210b21bd4a4184389dbb161c94ed81e102cf427d6bcc4
    SHA512:67354741972e35e6f21d537773bf7fcee9c10d998be73a0a2e6dd2c93480fdc5d3d3dc6343f835a8d8552963e47feb0c13709604c0e0ba91d8261dd58c5ddb7d
    Skein512_512:04cd3dfbc0ec73482b2a6db10f6934b50861382121b7e2522f338426d0ca733e59d9270281f64c7899e7a96f01c4afca53b17dc201db60ba08c111890c59dff5

x-package-locations:
    https://hackage.haskell.org/package/irc-client-0.2.3.1/irc-client-0.2.3.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/irc-client-0.2.3.1.tar.gz

x-package-size: 8725
-- END Added by all-cabal-hashes-tool

-- Initial idte.cabal generated by cabal init.  For further documentation, 
-- see http://haskell.org/cabal/users-guide/

-- The name of the package.
name:                irc-client

-- The package version.  See the Haskell package versioning policy (PVP) 
-- for standards guiding when and how versions should be incremented.
-- http://www.haskell.org/haskellwiki/Package_versioning_policy
-- PVP summary:      +-+------- breaking API changes
--                   | | +----- non-breaking API additions
--                   | | | +--- code changes with no API change
version:             0.2.3.1

-- A short (one-line) description of the package.
synopsis:            An IRC client library.

-- A longer description of the package.
description:
  An IRC client library built atop
  <http://hackage.haskell.org/package/irc-conduit irc-conduit>. Why
  another IRC client library, you cry? I didn't really find one that
  did what I wanted (specifically, handle connecting to servers and
  calling event handlers, possibly with TLS), but which didn't
  implement almost a full IRC bot for you. That takes out all the fun!
  .
  <http://hackage.haskell.org/package/irc-conduit irc-conduit> and
  <http://hackage.haskell.org/package/irc-ctcp irc-ctcp> are my
  solution to the first part of that, this is my solution to the
  latter. It's a simple IRC client library that does the basics for
  you, but isn't an all-singing, all-dancing, fully-featured IRC
  /application/. It is a merely a simple library.

-- URL for the project homepage or repository.
homepage:            https://github.com/barrucadu/irc-client

-- URL where users should direct bug reports.
bug-reports:         https://github.com/barrucadu/irc-client/issues

-- The license under which the package is released.
license:             OtherLicense

-- The file containing the license text.
license-file:        LICENSE

-- The package author(s).
author:              Michael Walker

-- An email address to which users can send suggestions, bug reports, and 
-- patches.
maintainer:          mike@barrucadu.co.uk

-- A copyright notice.
-- copyright:           

category:            Network

build-type:          Simple

-- Extra files to be distributed with the package, such as examples or a 
-- README.
-- extra-source-files:  

-- Constraint on the version of Cabal needed to build this package.
cabal-version:       >=1.10


library
  -- Modules exported by the library.
  exposed-modules:     Network.IRC.Client
                     , Network.IRC.Client.Handlers
                     , Network.IRC.Client.Types
                     , Network.IRC.Client.Utils
  
  -- Modules included in this library but not exported.
  other-modules:       Network.IRC.Client.Internal
  
  -- Compile with -Wall by default
  ghc-options:         -Wall
                       -fno-warn-unused-do-bind
  
  -- LANGUAGE extensions used by modules in this package.
  -- other-extensions:    
  
  -- Other library packages from which modules are imported.
  build-depends:       base         >=4.7 && <5
                     , bytestring   >=0.10
                     , conduit      >=1.2
                     , data-default-class >=0.0.1
                     , irc-conduit  >=0.1.1
                     , irc-ctcp     >=0.1.2
                     , stm          >=2.4
                     , stm-conduit  >=2.5
                     , text         >=1.1
                     , time         >=1.4
                     , transformers >=0.3
                     , old-locale   >=1.0
  
  -- Directories containing source files.
  -- hs-source-dirs:      
  
  -- Base language which the package is written in.
  default-language:    Haskell2010
  
