Name:		hake
Version:	0.9.9
License:	GPL
License-file:	LICENSE
Author:		Yoshikuni Jujo
Maintainer:	Yoshikuni Jujo <PAF01143@nifty.ne.jp>
Category:	Development
Synopsis:	make tool. ruby : rake = haskell : hake

Description:	Like ruby's rake, hake have Hakefile which is Haskell source.
		.
		And Hakefile is like rake's Rakefile, and make's Makefile.
		.
		Hakefile is just Haskell source code,
		then you can use all Haskell features.
		.
		I have changed Hakefile syntax.
		If you want to use old Hakefile,
		put 'import Development.Hake.OldFunSet'.
		.
		> import Development.Hake
		> import Development.Hake.FunSetRaw
		> hake_rules = [
		>
		>  dflt	[ "greeting" ]
		>  ,
		>  file	[ "greeting", "greeting.log" ] [ "hello.o", "good-bye.o" ] $
		> 		const [ [ "linker", "-o", "greeting", "hello.o", "good-bye.o" ] ]
		>  ,
		>  rule	".o" ".sfx1" $
		> 		\t (s:_) -> [ [ "compiler1", s, "-o", t ] ]
		>  ,
		>  rule	".o" ".sfx2" $
		> 		\t (s:_) -> [ [ "compiler2", s, "-o", t ] ]
		>  ,
		>  task	"clean"
		>       [ [ "rm", "-f", "hello.o", "good-by.o", "greeting", "greeting.log" ] ]
		>  ,
		>  mkfl	"script.sh" [ "#!/bin/sh", "echo This is script", "echo made by Hakefile" ]
		>  ,
		>  ruleSS "" ".o" $ \t (s:_) -> [ (".c",  [ [ "gcc", s, "-o", t ] ] ) ,
		>                             (".cc", [ [ "g++", s, "-o", t ] ] ) ] )
		>  ,
		>  rule   ".o" ".c" $ \_ (s:_) -> [ [ "gcc", "-c", s ] ]
		>  ,
		>  rule   ".o" ".cc" $ \_ (s:_) -> [ [ "g++", "-c", s ] ]
		>  ,
		>  base   (=="foo") (const [ "foo.gen", "Hakefile" ]) $ \t (s:_) _ _ -> do
		>               gen <- readFile s
		>               writeFile t $ unlines $
		>                 [ "#!/bin/sh", "echo This is script" ] ++ lines gen
		>               return ExitSuccess
		>
		>  ]
		>
		> main = hake hake_rules

Stability:	semi-stable
Homepage:	http://homepage3.nifty.com/salamander/second/projects/hake/index.xhtml
Package-Url:	http://code.haskell.org/hake/
Cabal-Version:	>= 1.2
Build-type:	Simple
Tested-With:	GHC
Data-Files:
Extra-Source-Files:
Extra-Tmp-Files:

Library
  GHC-Options:		-Wall
  Build-Depends:	base, old-time, mtl, filepath
  Exposed-Modules:	Development.Hake, Development.Hake.OldFunSet, Development.Hake.FunSet, Development.Hake.FunSetRaw, Development.Hake.FunSetIO
  Other-Modules:	Development.Hake.Variables, Development.Hake.Types, Development.Hake.Tools, Development.Hake.RunHake, Development.Hake.Core

Executable hake
  GHC-Options:		-Wall
  Build-Depends:	directory, process, yjtools >= 0.9.5, regexpr >= 0.3
  Main-Is:		Main.hs


package-hashes:
    MD5:ef6802a7f270041554e8ecff283ed6b2
    SHA1:4ca32b44d99ea75c29ece4f23b5d67607b9812dc
    SHA256:5da7a2e9fe6fdd348bd327453200f319bdcc9dbb254ebabeab5d02f33b06f7f7
    SHA512:f83e7f910509abe9f1bd37b085ff2f0da80265c7fe02e0994440bdda98c7974da9b5018361a1602f88f4e34cf48c3d61802f2fb020cc27c1c7b618f77345c2d8
    Skein512_512:28156ef46cd4068aa02b2d3f8652abbc4ee4ee5c4426fc877a9ed90b3342778fd63413e06374b7fac1c5cd65567dd58ce524423ace707cdb5cee501e79829e1e

package-locations:
    https://hackage.haskell.org/package/hake-0.9.9/hake-0.9.9.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/hake-0.9.9.tar.gz

package-size: 18811
