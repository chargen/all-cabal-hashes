Name:		hake
Version:	0.7
License:	GPL
License-file:	LICENSE
Author:		Yoshikuni Jujo
Maintainer:	Yoshikuni Jujo <PAF01143@nifty.ne.jp>
Category:	Development
Synopsis:	make tool. ruby : rake = haskell : hake

Description:	Like ruby's rake, hake have Hakefile which is Haskell source.
		.
		And Hakefile is like rake's Rakefile, and make's Makefile.
		.
		Hakefile is just Haskell source code,
		then you can use all Haskell features.
		.
		> import Development.Hake
		> hake_rules = [
		>
		>  dflt	[ "greeting" ]
		>  ,
		>  file	( [ "greeting", "greeting.log" ], [ "hello.o", "good-bye.o" ] ,
		> 		[ "linker -o greeting hello.o good-bye.o" ] )
		>  ,
		>  rule	( ".o", ".sfx1",
		> 		\t s -> [ "compiler1 " ++ s ++ " -o " ++ t ] )
		>  ,
		>  rule	( ".o", ".sfx2",
		> 		\t s -> [ "compiler2 " ++ s ++ " -o " ++ t ] )
		>  ,
		>  task	( "clean" , [ "rm -f *.o greeting greeting.log" ] )
		>  ,
		>  mkfl	( "script.sh", [ "#!/bin/sh", "echo This is script", "echo made by Hakefile" ] )
		>  ,
		>  ruleSS ( "", ".o", \t s -> [ (".c",  [ "gcc " ++ s ++ " -o " ++ t ] ) ,
		>                               (".cc", [ "g++ " ++ s ++ " -o " ++ t ] ) ] )
		>  ,
		>  rule   ( ".o", ".c",  \_ s -> [ "gcc -c " ++ s ] )
		>  ,
		>  rule   ( ".o", ".cc", \_ s -> [ "g++ -c " ++ s ] )
		>  ,
		>  base   ( [ (=="foo") ], const [ "foo.gen", "Hakefile" ], \t [s] -> [ \_ -> do
		>               gen <- readFile s
		>               writeFile t $ unlines $
		>                 [ "#!/bin/sh", "echo This is script" ] ++ lines gen
		>               return ExitSuccess ] )
		>
		>  ]
		>
		> main = hake hake_rules

Stability:	experimental
Homepage:	http://homepage3.nifty.com/salamander/second/projects/hake/index.xhtml
Package-Url:	http://code.haskell.org/hake/
Cabal-Version:	>= 1.2
Build-type:	Simple
Tested-With:	GHC
Data-Files:
Extra-Source-Files:
Extra-Tmp-Files:

Library
  GHC-Options:		-Wall
--  CPP-Options:		-DDEBUG
  Build-Depends:	base, old-time, mtl, filepath
  Exposed-Modules:	Development.Hake
  Other-Modules:	Development.Hake.HiddenTools

Executable hake
  GHC-Options:		-Wall
--  CPP-Options:		-DDEBUG
  Build-Depends:	directory, process, yjtools >= 0.5, regexpr >= 0.3
  Other-Modules:	Development.Hake.HiddenTools
  Main-Is:		Main.hs


package-hashes:
    MD5:93cc0f73b2e25875eb63a07af6f0555a
    SHA1:c98d147d5e3d9ed546c004f06cd1e14b6e654344
    SHA256:cc5ae968f6ee2ada9b69c318eda6404c634fca836ab4296d0b2e31f3a69ee255
    SHA512:3280d1a4aeaa20db1a5c8a6736aa104cb5ba3858687ecefffd67564edf1e824f6a152a03666eac4a1236817e3d2278c90820fc69cec7c2f62f4ab6038b2efbbb
    Skein512_512:db7ac6060b7936f4a1ec305d60c72b58ce91d7d2a3628a871c805c36e58bfcb6ab6461f44240dc3dad877764acd6d05e0ffb1c258d0ebc2a623b75cd467c9bff

package-locations:
    https://hackage.haskell.org/package/hake-0.7/hake-0.7.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/hake-0.7.tar.gz

package-size: 16645
