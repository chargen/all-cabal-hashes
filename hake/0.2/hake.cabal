-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:0f86d800614c0b4260eb9bd7b229208e
    SHA1:15ba3a1ad5d216e0c4a123b6ca4d5c1753f6b8e0
    SHA256:40c9b9a646ef270d288f6a39acdf49959cb801351db9c046597c21f50bab6179
    SHA512:dab8447d90449fd6d2b83049427a0ede7c1349a9ba71d4280ca50be4a77e8aa747dd6f8f535c92c1d14ba330f2702caf5373f76887513df2a0de80132166fd2b
    Skein512_512:2498684e20b456a703d9ef03e6875768292baa41ab9e2d7dd1c82d74ee8ced233f3c5238a56cddbb68ecfca5a4f4ac0401185fbdbc894382d21e5d569fa522e1

x-package-locations:
    https://hackage.haskell.org/package/hake-0.2/hake-0.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/hake-0.2.tar.gz

x-package-size: 16236
-- END Added by all-cabal-hashes-tool

Name:		hake
Version:	0.2
License:	GPL
License-file:	LICENSE
Author:		Yoshikuni Jujo
Maintainer:	Yoshikuni Jujo <PAF01143@nifty.ne.jp>
Category:	Development
Synopsis:	ruby : rake = haskell : hake

Description:	Like ruby's rake, hake have Hakefile which is Haskell source.
		.
		And Hakefile is like rake's Rakefile, and make's Makefile.
		.
		Hakefile is just Haskell source code,
		then you can use all Haskell features.
		.
		> import Development.Hake
		> hake_rules = [
		>
		>  dflt	[ "greeting" ]
		>  ,
		>  file	( [ "greeting", "greeting.log" ], [ "hello.o", "good-bye.o" ] ,
		> 		[ "linker -o greeting hello.o good-bye.o" ] )
		>  ,
		>  rule	( ".o", ".sfx1",
		> 		\t s -> [ "compiler1 " ++ s ++ " -o " ++ t ] )
		>  ,
		>  rule	( ".o", ".sfx2",
		> 		\t s -> [ "compiler2 " ++ s ++ " -o " ++ t ] )
		>  ,
		>  task	( "clean" , [ "rm -f *.o greeting greeting.log" ] )
		>  ,
		>  mkfl ( "script.sh", [ "#!/bin/sh", "echo This is script", "echo made by Hakefile" ] )
		>
		>  ]
		>
		> main = hake hake_tree

Stability:	experimental
Homepage:	http://homepage3.nifty.com/salamander/second/projects/hake/index.xhtml
Package-Url:	http://homepage3.nifty.com/salamander/second/portage/distfiles/hake-0.2.tar.gz
Cabal-Version:	>= 1.2
Build-type:	Simple
Tested-With:	GHC
Data-Files:
Extra-Source-Files:
Extra-Tmp-Files:

Library
  GHC-Options:		-Wall
--  CPP-Options:		-DDEBUG
  Build-Depends:	base, old-time, mtl
  Exposed-Modules:	Development.Hake
  Other-Modules:	Development.Hake.HiddenTools

Executable hake
  GHC-Options:		-Wall
--  CPP-Options:		-DDEBUG
  Build-Depends:	directory, process, yjtools
  Other-Modules:	Development.Hake.HiddenTools
  Main-Is:		Main.hs
