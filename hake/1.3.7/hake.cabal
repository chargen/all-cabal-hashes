Name:		hake
Version:	1.3.7
License:	GPL
License-file:	LICENSE
Author:		Yoshikuni Jujo
Maintainer:	Yoshikuni Jujo <PAF01143@nifty.ne.jp>
Category:	Development
Synopsis:	make tool. ruby : rake = haskell : hake

Description:
		Like ruby's rake, hake have Hakefile which is Haskell source.
		.
		And Hakefile is like rake's Rakefile, and make's Makefile.
		.
		Hakefile is just Haskell source code,
		then you can use all Haskell features.
		.
		New:
                .
                > deps :: [ String ] -> [ String] -> Rule
		> deps trgts srcs == file trgts srcs $ \_ _ -> []
		.
		Use 'deps' if you want to define no command rule for new
		Targets.
		Please use addDeps if you will add dependencies to already
		existing targets.
		.
		Hakefile example:
		.
		> import Development.Hake
		> import Development.Hake.FunSetRaw
		> hake_rules = [
		>
		>  dflt	[ "greeting" ]
		>  ,
		>  file	[ "greeting", "greeting.log" ] [ "hello.o", "good-bye.o" ] $
		> 		const2 [ [ "linker", "-o", "greeting", "hello.o", "good-bye.o" ] ]
		>  ,
		>  rule	".o" ".sfx1" $
		> 		\t (s:_) -> [ [ "compiler1", s, "-o", t ] ]
		>  ,
		>  rule	".o" ".sfx2" $
		> 		\t (s:_) -> [ [ "compiler2", s, "-o", t ] ]
		>  ,
		>  task	"clean"
		>       [ [ "rm", "-f", "hello.o", "good-by.o", "greeting", "greeting.log" ] ]
		>  ,
		>  mkfl	"script.sh" [ "#!/bin/sh", "echo This is script", "echo made by Hakefile" ]
		>  ,
		>  ruleSS "" ".o" $ \t (s:_) -> [ (".c",  [ [ "gcc", s, "-o", t ] ] ) ,
		>                             (".cc", [ [ "g++", s, "-o", t ] ] ) ] )
		>  ,
		>  rule   ".o" ".c" $ \_ (s:_) -> [ [ "gcc", "-c", s ] ]
		>  ,
		>  rule   ".o" ".cc" $ \_ (s:_) -> [ [ "g++", "-c", s ] ]
		>  ,
		>  base   (=="foo") (const [ "foo.gen", "Hakefile" ]) $ \t (s:_) _ _ -> do
		>               gen <- readFile s
		>               writeFile t $ unlines $
		>                 [ "#!/bin/sh", "echo This is script" ] ++ lines gen
		>               return ExitSuccess
		>
		>  ]
		>
		> main = hake hake_rules

Stability:	stable
Homepage:	http://homepage3.nifty.com/salamander/second/projects/hake/index.xhtml
Package-Url:	http://code.haskell.org/hake/
Cabal-Version:	>= 1.2
Build-type:	Simple
Tested-With:	GHC
Data-Files:
Extra-Source-Files:
Extra-Tmp-Files:

Library
  GHC-Options:		-Wall
  Build-Depends:	base<=4.3.1.0, old-time, mtl, filepath
  Exposed-Modules:	Development.Hake, Development.Hake.OldFunSet, Development.Hake.FunSet, Development.Hake.FunSetRaw, Development.Hake.FunSetIO
  Other-Modules:	Development.Hake.Variables, Development.Hake.Types,
    Development.Hake.Tools, Development.Hake.RunHake, Development.Hake.Core,
    Development.Hake.Tribial, Development.Hake.DirectoryTools

Executable hake
  GHC-Options:		-Wall
  Build-Depends:	directory, process, regexpr >= 0.5.1, yjtools >= 0.9.10
  Main-Is:		Main.hs


package-hashes:
    MD5:54595979e3726e89d47c76282102c57f
    SHA1:5709c3ca1532b2edf45d6fc1afdde287e707538e
    SHA256:6a030a0fb7977d115e26041ee7730fac5c3f56324e7a14a27ef5cf3c6028fa50
    SHA512:b440b7b9d499137bea810446ae62ca10a4b633a3ff7e4a1f74e5aadf6deb43d1e1ba8bde25bf7e26977157fef6f81689ea3007bf0aef89cb43f74490057ea82c
    Skein512_512:4d3a9d1a12025e80a9477de2757540424f7437557ae671a0a5eab1c766558a058805e4b5c2f2aa09600003b6c2b45888a3501e14142e090586f022127ca93c5b

package-locations:
    https://hackage.haskell.org/package/hake-1.3.7/hake-1.3.7.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/hake-1.3.7.tar.gz

package-size: 19423
