Name:		hake
Version:	0.9.5
License:	GPL
License-file:	LICENSE
Author:		Yoshikuni Jujo
Maintainer:	Yoshikuni Jujo <PAF01143@nifty.ne.jp>
Category:	Development
Synopsis:	make tool. ruby : rake = haskell : hake

Description:	Like ruby's rake, hake have Hakefile which is Haskell source.
		.
		And Hakefile is like rake's Rakefile, and make's Makefile.
		.
		Hakefile is just Haskell source code,
		then you can use all Haskell features.
		.
		I have changed Hakefile syntax.
		If you want to use old Hakefile,
		put 'import Development.Hake.OldFunSet'.
		.
		> import Development.Hake
		> import Development.Hake.FunSet
		> hake_rules = [
		>
		>  dflt	[ "greeting" ]
		>  ,
		>  file	[ "greeting", "greeting.log" ] [ "hello.o", "good-bye.o" ]
		> 		[ [ "linker", "-o", "greeting", "hello.o", "good-bye.o" ] ]
		>  ,
		>  rule	".o" ".sfx1" $
		> 		\t (s:_) -> [ [ "compiler1", s, "-o", t ] ]
		>  ,
		>  rule	".o" ".sfx2" $
		> 		\t (s:_) -> [ [ "compiler2", s, "-o", t ] ]
		>  ,
		>  task	"clean"
		>       [ [ "rm", "-f", "hello.o", "good-by.o", "greeting", "greeting.log" ] ]
		>  ,
		>  mkfl	"script.sh" [ "#!/bin/sh", "echo This is script", "echo made by Hakefile" ]
		>  ,
		>  ruleSS "" ".o" $ \t (s:_) -> [ (".c",  [ [ "gcc", s, "-o", t ] ] ) ,
		>                             (".cc", [ [ "g++", s, "-o", t ] ] ) ] )
		>  ,
		>  rule   ".o" ".c" $ \_ (s:_) -> [ [ "gcc", "-c", s ] ]
		>  ,
		>  rule   ".o" ".cc" $ \_ (s:_) -> [ [ "g++", "-c", s ] ]
		>  ,
		>  base   (=="foo") (const [ "foo.gen", "Hakefile" ]) $ \t (s:_) _ -> do
		>               gen <- readFile s
		>               writeFile t $ unlines $
		>                 [ "#!/bin/sh", "echo This is script" ] ++ lines gen
		>               return ExitSuccess
		>
		>  ]
		>
		> main = hake hake_rules

Stability:	experimental
Homepage:	http://homepage3.nifty.com/salamander/second/projects/hake/index.xhtml
Package-Url:	http://code.haskell.org/hake/
Cabal-Version:	>= 1.2
Build-type:	Simple
Tested-With:	GHC
Data-Files:
Extra-Source-Files:
Extra-Tmp-Files:

Library
  GHC-Options:		-Wall
--  CPP-Options:		-DDEBUG
  Build-Depends:	base, old-time, mtl, filepath
  Exposed-Modules:	Development.Hake, Development.Hake.OldFunSet, Development.Hake.FunSet
  Other-Modules:	Development.Hake.HiddenTools, Development.Hake.Types

Executable hake
  GHC-Options:		-Wall
--  CPP-Options:		-DDEBUG
  Build-Depends:	directory, process, yjtools >= 0.6, regexpr >= 0.3
  Other-Modules:	Development.Hake.HiddenTools
  Main-Is:		Main.hs


package-hashes:
    MD5:0b819aacc54e6c452026c7c90d18325d
    SHA1:edda0ffdbe7d382d5c4284d8bc4dc90d2f35bc32
    SHA256:5d217ebdf04be387aa56f737553b92a424cdd3c7db79cc639541f912657bef77
    SHA512:9cc4f6a817af001163fe00eccc431f06f886442ada352f058e96f09edd0cca4398031b36850a3d72f8357bf63d2c61f626a21d61c05edaffab664d7f9fb3453b
    Skein512_512:e064cf908171050d00e99ee7feecb96927519688fdba73e17ac63d20f6338a3fb20045dee64f84d5d3b4cb2f7bd4c4840d9c5ab9e1b8942674ff615a665af30c

package-locations:
    https://hackage.haskell.org/package/hake-0.9.5/hake-0.9.5.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/hake-0.9.5.tar.gz

package-size: 17440
