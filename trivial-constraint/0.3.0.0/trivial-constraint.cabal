-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:69efa60fed6a491471ca1f68101a249b
    SHA1:76c37c69ff1f3b53b14b4bf67b48af2d734991f2
    SHA256:7ef4f1f6892aacb43cb3539f20c661d9b11e47dc8b8d0ea9e3457a131517873a
    SHA512:40968158e39c5d53c30ba4e65d7379e1fefa0ed563f14b369e9c830aa57ef3e8485502e4624820aa3a58a32787017d2a9de05f02787d5468195cc802c410526a
    Skein512_512:ecdb2a26959e330685febc141575e7e9396ce770e11bd24cee79164a5f5fff384e7e85fbd3ce922664f4780f8c124e14b62052d7fefed9f244faf2f98a357516

x-package-locations:
    https://hackage.haskell.org/package/trivial-constraint-0.3.0.0/trivial-constraint-0.3.0.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/trivial-constraint-0.3.0.0.tar.gz

x-package-size: 13567
-- END Added by all-cabal-hashes-tool

-- Initial trivial-constraint.cabal generated by cabal init.  For further 
-- documentation, see http://haskell.org/cabal/users-guide/

name:                trivial-constraint
version:             0.3.0.0
x-revision: 1
synopsis:            Constraints that any type, resp. no type fulfills
description:         Since GHC 7.4, constraints are first-class: we have the constraint kind, and thus type-classes have a kind such as @* -> Constraint@.
                     .
                     These can be used as parameters to data types. They also can be combined quite nicely,
                     .
                     @
                     type NewConstraint a = (Constraint1 a, Constraint2 a)
                     @
                     .
                     however you always need to start with a plain old type class when building constraints.
                     .
                     This library provides a type class that is not really a constraint at all, so you can "start from zero" with building up a custom constraint.
                     Also its opposite (a constraint that no type can ever fulfill).
license:             GPL-3
license-file:        LICENSE
author:              Justus SagemÃ¼ller
maintainer:          sagemueller@geo.uni-koeln.de
homepage:            https://github.com/leftaroundabout/trivial-constraint
-- copyright:           
category:            Constraints
build-type:          Simple
-- extra-source-files:  
cabal-version:       >=1.10

library
  exposed-modules:     Data.Constraint.Trivial
  -- other-modules:       
  -- other-extensions:    
  build-depends:       base>=4.5 && <5
  hs-source-dirs:      src
  default-language:    Haskell2010
