-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:a98b34c685c2246fac5236c800788e98
    SHA1:fcd8599e584a5c89fd83ac0fc4f25c9c36bd02fa
    SHA256:e3a91303e70f69b0397edcea635b3b37979cfef730f0a1e67e8e7fe142b2f4be
    SHA512:ac11948ab20fd1021c5d0b1dee8f654a9c8173c0e8f29430e335cf729770da88355ee1365dc6c01c3742e175212db76d8e4fce09a7cba266770a1077f317a2e1
    Skein512_512:881055bdd3b711ff39244b3f676db035194856202c958d4b2f0605b0e8d8520cc55f2974c4edd87725245d18fff582129df938b790070db25bafac7ee8f24dba

package-locations:
    https://hackage.haskell.org/package/trivial-constraint-0.1.0.0/trivial-constraint-0.1.0.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/trivial-constraint-0.1.0.0.tar.gz

package-size: 13387
-- END Added by all-cabal-hashes-tool

-- Initial trivial-constraint.cabal generated by cabal init.  For further 
-- documentation, see http://haskell.org/cabal/users-guide/

name:                trivial-constraint
version:             0.1.0.0
synopsis:            A class / constraint that any type fulfills
description:         Since GHC 7.4, constraints are first-class: we have the constraint kind, and thus type-classes have a kind such as @* -> Constraint@.
                     .
                     These can be used as parameters to data types. They also can be combined quite nicely,
                     .
                     @
                     type NewConstraint a = (Constraint1 a, Constraint2 a)
                     @
                     .
                     however you always need to start with a plain old type class when building constraints.
                     .
                     This library provides a type class that is not really a constraint at all, so you can "start from zero" with building up a custom constraint.
license:             GPL-3
license-file:        LICENSE
author:              Justus SagemÃ¼ller
maintainer:          sagemuej@smail.uni-koeln.de
homepage:            https://github.com/leftaroundabout/trivial-constraint
-- copyright:           
category:            Constraints
build-type:          Simple
-- extra-source-files:  
cabal-version:       >=1.10

library
  exposed-modules:     Data.Constraint.Trivial
  -- other-modules:       
  -- other-extensions:    
  build-depends:       base>=4 && <5
  hs-source-dirs:      src
  default-language:    Haskell2010
