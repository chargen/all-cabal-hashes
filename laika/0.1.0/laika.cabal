-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:ad378618b8ae22ea6bac695f7d09a39f
    SHA1:840394bb29ce13d397e26eee2e10dbb88580ab9b
    SHA256:241c65efb63ed40f318295c76e32e34f513838dae47c419e9466a18eef3b0a99
    SHA512:27963456464ce45295f6b7890f178e35e1ec362525c75fe12bb66f04aafa3d4eb0758ddbdd4b3b6dc955cad34914aab4d2321f06fac6a425082f62c11b86bc13
    Skein512_512:e4495cfb975ef2fe5c2e4825d37c737085234ac4aa971c9de9f14b72be224487dbeeef0752018779ea85221f8f06ee20ec18111fd6c8418c40afa7091cc33764

x-package-locations:
    https://hackage.haskell.org/package/laika-0.1.0/laika-0.1.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/laika-0.1.0.tar.gz

x-package-size: 5673
-- END Added by all-cabal-hashes-tool

name:
  laika
version:
  0.1.0
synopsis:
  Minimalistic type-checked compile-time template engine
description:
  The library integrates flawlessly with Haskell's new 
  <https://github.com/nikita-volkov/record first-class records>.
  .
  It inherits a remarkable quality from the dogs however:
  unlike most other template engines
  at compile time it barks at you whenever you do anything wrong in your templates.
  Hence the title (from Russian "lai" means "bark").
  Also it commemorates Laika, the hero dog, 
  which became the first animal to orbit Earth and died in space.
category:
homepage:
  https://github.com/nikita-volkov/laika 
bug-reports:
  https://github.com/nikita-volkov/laika/issues 
author:
  Nikita Volkov <nikita.y.volkov@mail.ru>
maintainer:
  Nikita Volkov <nikita.y.volkov@mail.ru>
copyright:
  (c) 2015, Nikita Volkov
license:
  MIT
license-file:
  LICENSE
build-type:
  Simple
cabal-version:
  >=1.10
extra-source-files:
  demo/template.html.laika


source-repository head
  type:
    git
  location:
    git://github.com/nikita-volkov/laika.git


library
  hs-source-dirs:
    library
  ghc-options:
    -funbox-strict-fields
  default-extensions:
    Arrows, BangPatterns, ConstraintKinds, DataKinds, DefaultSignatures, DeriveDataTypeable, DeriveFunctor, DeriveGeneric, EmptyDataDecls, FlexibleContexts, FlexibleInstances, FunctionalDependencies, GADTs, GeneralizedNewtypeDeriving, ImpredicativeTypes, LambdaCase, LiberalTypeSynonyms, MagicHash, MultiParamTypeClasses, MultiWayIf, NoImplicitPrelude, NoMonomorphismRestriction, OverloadedStrings, PatternGuards, ParallelListComp, QuasiQuotes, RankNTypes, RecordWildCards, ScopedTypeVariables, StandaloneDeriving, TemplateHaskell, TupleSections, TypeFamilies, TypeOperators, UnboxedTuples
  default-language:
    Haskell2010
  other-modules:
    Laika.Prelude
    Laika.Lexer
    Laika.Parser
  exposed-modules:
    Laika
  build-depends:
    --
    template-haskell,
    -- 
    system-filepath == 0.4.*,
    system-fileio == 0.3.*,
    -- 
    attoparsec >= 0.10 && < 0.13,
    --
    text >= 1 && < 1.3,
    --
    either >= 4.3 && < 4.4,
    transformers >= 0.3 && < 0.5,
    --
    record >= 0.1.1 && < 0.2,
    base-prelude >= 0.1 && < 0.2


-- Well, it's not a benchmark actually, 
-- but in Cabal there's no better way to specify an executable, 
-- which is not intended for distribution.
benchmark demo
  type: 
    exitcode-stdio-1.0
  hs-source-dirs:
    demo
  main-is:
    Main.hs
  ghc-options:
    -O2
    -threaded
    "-with-rtsopts=-N"
    -funbox-strict-fields
    -ddump-splices
  default-extensions:
    Arrows, BangPatterns, ConstraintKinds, DataKinds, DefaultSignatures, DeriveDataTypeable, DeriveFunctor, DeriveGeneric, EmptyDataDecls, FlexibleContexts, FlexibleInstances, FunctionalDependencies, GADTs, GeneralizedNewtypeDeriving, ImpredicativeTypes, LambdaCase, LiberalTypeSynonyms, MagicHash, MultiParamTypeClasses, MultiWayIf, NoImplicitPrelude, NoMonomorphismRestriction, OverloadedStrings, PatternGuards, ParallelListComp, QuasiQuotes, RankNTypes, RecordWildCards, ScopedTypeVariables, StandaloneDeriving, TemplateHaskell, TupleSections, TypeFamilies, TypeOperators, UnboxedTuples
  default-language:
    Haskell2010
  build-depends:
    laika,
    text,
    record,
    base-prelude
