-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:ccb6fc292ddf9ef856e82d5e4694e84e
    SHA1:1d42fb341e8fa981746ce69b7ee73185134f42d6
    SHA256:bcafd21ea884b119c966ef9bf46e895978bbac7b51cf2990450052a86203e506
    SHA512:31f0816c439021e645e4fc51f06ecf4457957d9b7fe1aeea623548c99ae19ab94ab3c9a475681b8a1ed4a8fd6714e3e0e8046d564749ff9ae4f095c3525664f0
    Skein512_512:c3d31c63de3a4197088a6772206d855f25416d9316f0b9ce9bcaba4c154e299271c90d938f47c5d786fa4f200d181c97c592426488b867a0602ce06e4e7f5494

package-locations:
    https://hackage.haskell.org/package/cmdargs-0.6.8/cmdargs-0.6.8.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/cmdargs-0.6.8.tar.gz

package-size: 43684
-- END Added by all-cabal-hashes-tool

cabal-version:      >= 1.6
build-type:         Simple
name:               cmdargs
version:            0.6.8
license:            BSD3
license-file:       LICENSE
category:           Console
author:             Neil Mitchell <ndmitchell@gmail.com>
maintainer:         Neil Mitchell <ndmitchell@gmail.com>
copyright:          Neil Mitchell 2009-2011
synopsis:           Command line argument processing
description:
    This library provides an easy way to define command line parsers. Most users
    will want to use the "System.Console.CmdArgs.Implicit" module, whose
    documentation contains an example.
    .
    * "System.Console.CmdArgs.Explicit" provides a way to write command line
      parsers for both single mode programs (most programs) and multiple
      mode programs (e.g. darcs or cabal). Parsers are defined by constructing
      a data structure.
    .
    * "System.Console.CmdArgs.Implicit" provides a way to concisely define
      command line parsers, up to three times shorter than getopt. These parsers
      are translated into the Explicit data type.
    .
    * "System.Console.CmdArgs.GetOpt" provides a wrapper allowing compatiblity
      with existing getopt parsers, mapping to the Explicit data type.
    .
    For a general reference on what command line flags are commonly used,
    see <http://www.faqs.org/docs/artu/ch10s05.html>.
homepage:           http://community.haskell.org/~ndm/cmdargs/
stability:          Beta
extra-source-files:
    cmdargs.htm

flag testprog
    default: True
    description: Build the test program

library
    build-depends:
        base == 4.*,
        transformers == 0.2.*

    exposed-modules:
        System.Console.CmdArgs
        System.Console.CmdArgs.Annotate
        System.Console.CmdArgs.Default
        System.Console.CmdArgs.Explicit
        System.Console.CmdArgs.GetOpt
        System.Console.CmdArgs.Implicit
        System.Console.CmdArgs.Text
        System.Console.CmdArgs.Verbosity

    other-modules:
        Data.Generics.Any
        Data.Generics.Any.Prelude
        System.Console.CmdArgs.Explicit.Help
        System.Console.CmdArgs.Explicit.Process
        System.Console.CmdArgs.Explicit.Type
        System.Console.CmdArgs.Implicit.Ann
        System.Console.CmdArgs.Implicit.Global
        System.Console.CmdArgs.Implicit.Local
        System.Console.CmdArgs.Implicit.Read
        System.Console.CmdArgs.Implicit.Reform
        System.Console.CmdArgs.Implicit.Type
        System.Console.CmdArgs.Implicit.UI

executable cmdargs
    main-is: Main.hs
    if flag(testprog)
        buildable: True
    else
        buildable: False

    other-modules:
        System.Console.CmdArgs.Test.All
        System.Console.CmdArgs.Test.Explicit
        System.Console.CmdArgs.Test.GetOpt
        System.Console.CmdArgs.Test.Implicit
        System.Console.CmdArgs.Test.Implicit.Diffy
        System.Console.CmdArgs.Test.Implicit.HLint
        System.Console.CmdArgs.Test.Implicit.Maker
        System.Console.CmdArgs.Test.Implicit.Tests
        System.Console.CmdArgs.Test.Implicit.Util
        System.Console.CmdArgs.Test.Util
