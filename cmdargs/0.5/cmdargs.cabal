-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:37068a06b36cb0bb2fb36e8ce06b2d09
    SHA1:2c68d510b6910cf5edd3b05ebeb470981751cdda
    SHA256:a7d87e3569b5dcd3580173b1c78bf6dae0bef24c4ba9c550dd2e01636d0e7521
    SHA512:8714916b31077a32b6eef245f4af78dd3d7d6a3e266a5b96bac0fc55566f0eed4226025ee596a1e3b7b2a0c637ccade3c02c77e445d970f209da2b8cfa90bb6d
    Skein512_512:caefb257f6c2d9f9b8fe82353be49ee0877a2f37ca8ae739463308a055a0efa755e89701271d2536fbdabb8dd85d034c52bcb96bef1d69cbb948634dfd184fc4

x-package-locations:
    https://hackage.haskell.org/package/cmdargs-0.5/cmdargs-0.5.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/cmdargs-0.5.tar.gz

x-package-size: 40821
-- END Added by all-cabal-hashes-tool

cabal-version:      >= 1.6
build-type:         Simple
name:               cmdargs
version:            0.5
license:            BSD3
license-file:       LICENSE
category:           Console
author:             Neil Mitchell <ndmitchell@gmail.com>
maintainer:         Neil Mitchell <ndmitchell@gmail.com>
copyright:          Neil Mitchell 2009-2010
synopsis:           Command line argument processing
description:
    This library provides an easy way to define command line parsers. Most users
    will want to use the "System.Console.CmdArgs.Implicit" module, whose
    documentation contains an example.
    .
    * "System.Console.CmdArgs.Explicit" provides a way to write command line
      parsers for both single mode programs (most programs) and multiple
      mode programs (e.g. darcs or cabal). Parsers are defined by constructing
      a data structure.
    .
    * "System.Console.CmdArgs.Implicit" provides a way to concisely define
      command line parsers, up to three times shorter than getopt. These parsers
      are translated into the Explicit data type.
    .
    * "System.Console.CmdArgs.GetOpt" provides a wrapper allowing compatiblity
      with existing getopt parsers, mapping to the Explicit data type.
    .
    For a general reference on what command line flags are commonly used,
    see <http://www.faqs.org/docs/artu/ch10s05.html>.
homepage:           http://community.haskell.org/~ndm/cmdargs/
stability:          Beta
extra-source-files:
    cmdargs.htm

flag testprog
    default: True
    description: Build the test program

library
    build-depends: base == 4.*, mtl, filepath

    exposed-modules:
        System.Console.CmdArgs
        System.Console.CmdArgs.Annotate
        System.Console.CmdArgs.Default
        System.Console.CmdArgs.Explicit
        System.Console.CmdArgs.GetOpt
        System.Console.CmdArgs.Implicit
        System.Console.CmdArgs.Text
        System.Console.CmdArgs.Verbosity

    other-modules:
        Data.Generics.Any
        Data.Generics.Any.Prelude
        System.Console.CmdArgs.Explicit.Help
        System.Console.CmdArgs.Explicit.Process
        System.Console.CmdArgs.Explicit.Type
        System.Console.CmdArgs.Implicit.Ann
        System.Console.CmdArgs.Implicit.Read
        System.Console.CmdArgs.Implicit.Local
        System.Console.CmdArgs.Implicit.Global
        System.Console.CmdArgs.Implicit.Type
        System.Console.CmdArgs.Implicit.UI

executable cmdargs
    main-is: Main.hs
    if flag(testprog)
        buildable: True
    else
        buildable: False

    other-modules:
        System.Console.CmdArgs.Test.All
        System.Console.CmdArgs.Test.Explicit
        System.Console.CmdArgs.Test.GetOpt
        System.Console.CmdArgs.Test.Implicit
        System.Console.CmdArgs.Test.Implicit.Diffy
        System.Console.CmdArgs.Test.Implicit.HLint
        System.Console.CmdArgs.Test.Implicit.Maker
        System.Console.CmdArgs.Test.Implicit.Tests
        System.Console.CmdArgs.Test.Implicit.Util
        System.Console.CmdArgs.Test.Util
