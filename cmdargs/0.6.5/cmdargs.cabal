-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:f495f42c360d6ff56ff4172d617140c6
    SHA1:940d84231d40541d0a97a69dee1ede0ff3cf8e33
    SHA256:68a460717cdefb19da018d8a77ac9de0a613dd42ffc520acd17dff6756b4a5cf
    SHA512:ca876864d299e76ded79b9f7c823e0840f418edfca76a32784e702c4ba5e91d527a32cd97c14409c587d056c9395659b5fe6ee0b051be705ac48ae51feb7dd2f
    Skein512_512:3ecadd1b92a4f71fb4c8cdf27381893bf37793fb3ef5a8542f1068f9f62a1070fcde43e9dd710c8fa714028508d19b1d057ea15a3622323143f6ab69736e0a68

package-locations:
    https://hackage.haskell.org/package/cmdargs-0.6.5/cmdargs-0.6.5.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/cmdargs-0.6.5.tar.gz

package-size: 42052
-- END Added by all-cabal-hashes-tool

cabal-version:      >= 1.6
build-type:         Simple
name:               cmdargs
version:            0.6.5
license:            BSD3
license-file:       LICENSE
category:           Console
author:             Neil Mitchell <ndmitchell@gmail.com>
maintainer:         Neil Mitchell <ndmitchell@gmail.com>
copyright:          Neil Mitchell 2009-2010
synopsis:           Command line argument processing
description:
    This library provides an easy way to define command line parsers. Most users
    will want to use the "System.Console.CmdArgs.Implicit" module, whose
    documentation contains an example.
    .
    * "System.Console.CmdArgs.Explicit" provides a way to write command line
      parsers for both single mode programs (most programs) and multiple
      mode programs (e.g. darcs or cabal). Parsers are defined by constructing
      a data structure.
    .
    * "System.Console.CmdArgs.Implicit" provides a way to concisely define
      command line parsers, up to three times shorter than getopt. These parsers
      are translated into the Explicit data type.
    .
    * "System.Console.CmdArgs.GetOpt" provides a wrapper allowing compatiblity
      with existing getopt parsers, mapping to the Explicit data type.
    .
    For a general reference on what command line flags are commonly used,
    see <http://www.faqs.org/docs/artu/ch10s05.html>.
homepage:           http://community.haskell.org/~ndm/cmdargs/
stability:          Beta
extra-source-files:
    cmdargs.htm

flag testprog
    default: True
    description: Build the test program

library
    build-depends:
        base == 4.*,
        transformers == 0.2.*

    exposed-modules:
        System.Console.CmdArgs
        System.Console.CmdArgs.Annotate
        System.Console.CmdArgs.Default
        System.Console.CmdArgs.Explicit
        System.Console.CmdArgs.GetOpt
        System.Console.CmdArgs.Implicit
        System.Console.CmdArgs.Text
        System.Console.CmdArgs.Verbosity

    other-modules:
        Data.Generics.Any
        Data.Generics.Any.Prelude
        System.Console.CmdArgs.Explicit.Help
        System.Console.CmdArgs.Explicit.Process
        System.Console.CmdArgs.Explicit.Type
        System.Console.CmdArgs.Implicit.Ann
        System.Console.CmdArgs.Implicit.Read
        System.Console.CmdArgs.Implicit.Local
        System.Console.CmdArgs.Implicit.Global
        System.Console.CmdArgs.Implicit.Type
        System.Console.CmdArgs.Implicit.UI

executable cmdargs
    main-is: Main.hs
    if flag(testprog)
        buildable: True
    else
        buildable: False

    other-modules:
        System.Console.CmdArgs.Test.All
        System.Console.CmdArgs.Test.Explicit
        System.Console.CmdArgs.Test.GetOpt
        System.Console.CmdArgs.Test.Implicit
        System.Console.CmdArgs.Test.Implicit.Diffy
        System.Console.CmdArgs.Test.Implicit.HLint
        System.Console.CmdArgs.Test.Implicit.Maker
        System.Console.CmdArgs.Test.Implicit.Tests
        System.Console.CmdArgs.Test.Implicit.Util
        System.Console.CmdArgs.Test.Util
