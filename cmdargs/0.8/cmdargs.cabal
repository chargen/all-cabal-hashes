-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:7d147d53d170c86683243690c154a1e7
    SHA1:3ed6598b126eee2c24edbf8c7d7653a8c1fc3b40
    SHA256:33711f4b77172a3ff31239da4e49a6dd39e9bb632dc503f0435285c9b279127a
    SHA512:9f88ad42d76cf20d6c30beb065c3352094c203fd622180dfae2088e255281aafed17c007611ac32c880134160e40b9ebafa4c30944d7774b1da318e7e8477dfc
    Skein512_512:8f273b34ddc258b012214deadf900e3afac3ed7638b8de98535630a927828052d777d8a3d4e6f965d0057e66982aa120b6aa32e4a6a27a7181acf45ba10a53e1

package-locations:
    https://hackage.haskell.org/package/cmdargs-0.8/cmdargs-0.8.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/cmdargs-0.8.tar.gz

package-size: 44689
-- END Added by all-cabal-hashes-tool

cabal-version:      >= 1.6
build-type:         Simple
name:               cmdargs
version:            0.8
license:            BSD3
license-file:       LICENSE
category:           Console
author:             Neil Mitchell <ndmitchell@gmail.com>
maintainer:         Neil Mitchell <ndmitchell@gmail.com>
copyright:          Neil Mitchell 2009-2011
synopsis:           Command line argument processing
description:
    This library provides an easy way to define command line parsers. Most users
    will want to use the "System.Console.CmdArgs.Implicit" module, whose
    documentation contains an example.
    .
    * "System.Console.CmdArgs.Explicit" provides a way to write command line
      parsers for both single mode programs (most programs) and multiple
      mode programs (e.g. darcs or cabal). Parsers are defined by constructing
      a data structure.
    .
    * "System.Console.CmdArgs.Implicit" provides a way to concisely define
      command line parsers, up to three times shorter than getopt. These parsers
      are translated into the Explicit data type.
    .
    * "System.Console.CmdArgs.GetOpt" provides a wrapper allowing compatiblity
      with existing getopt parsers, mapping to the Explicit data type.
    .
    For a general reference on what command line flags are commonly used,
    see <http://www.faqs.org/docs/artu/ch10s05.html>.
homepage:           http://community.haskell.org/~ndm/cmdargs/
stability:          Beta
extra-source-files:
    cmdargs.htm

source-repository head
    type:     darcs
    location: http://community.haskell.org/~ndm/darcs/cmdargs/

flag testprog
    default: True
    description: Build the test program

library
    build-depends:
        base == 4.*,
        transformers == 0.2.*

    exposed-modules:
        System.Console.CmdArgs
        System.Console.CmdArgs.Annotate
        System.Console.CmdArgs.Default
        System.Console.CmdArgs.Explicit
        System.Console.CmdArgs.GetOpt
        System.Console.CmdArgs.Implicit
        System.Console.CmdArgs.Text
        System.Console.CmdArgs.Verbosity

    other-modules:
        Data.Generics.Any
        Data.Generics.Any.Prelude
        System.Console.CmdArgs.Explicit.Help
        System.Console.CmdArgs.Explicit.Process
        System.Console.CmdArgs.Explicit.Type
        System.Console.CmdArgs.Implicit.Ann
        System.Console.CmdArgs.Implicit.Global
        System.Console.CmdArgs.Implicit.Local
        System.Console.CmdArgs.Implicit.Reader
        System.Console.CmdArgs.Implicit.Reform
        System.Console.CmdArgs.Implicit.Type
        System.Console.CmdArgs.Implicit.UI

executable cmdargs
    main-is: Main.hs
    if flag(testprog)
        buildable: True
    else
        buildable: False

    other-modules:
        System.Console.CmdArgs.Test.All
        System.Console.CmdArgs.Test.Explicit
        System.Console.CmdArgs.Test.GetOpt
        System.Console.CmdArgs.Test.Implicit
        System.Console.CmdArgs.Test.Implicit.Diffy
        System.Console.CmdArgs.Test.Implicit.HLint
        System.Console.CmdArgs.Test.Implicit.Maker
        System.Console.CmdArgs.Test.Implicit.Tests
        System.Console.CmdArgs.Test.Implicit.Util
        System.Console.CmdArgs.Test.Util
