-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:af698e16cd4c245f275686cf6aa99528
    SHA1:44862e146088be5d106336e90a1a4134f3307cf7
    SHA256:7853758c48ad2627a16d5e4adf331f9d51914d576f608e0987cb588605f6fad0
    SHA512:b6f49883f104def2921a91a963d93e9c2ce378559531ae299dfbd356a1a2bebcd22f16c138ca0c20e0cfee5038971456360c3574e5ddf2d3cb80cf742080eef6
    Skein512_512:e34a7cc4889a40337e6122203deae6abb69490578c8c8ee9c1f3c8dcf3a961bb12f710ba3fc2152335aa7a7aedb27c76bafbf17bae1dcebf3e4de80a9fc92a8c

x-package-locations:
    https://hackage.haskell.org/package/cmdargs-0.6/cmdargs-0.6.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/cmdargs-0.6.tar.gz

x-package-size: 41012
-- END Added by all-cabal-hashes-tool

cabal-version:      >= 1.6
build-type:         Simple
name:               cmdargs
version:            0.6
license:            BSD3
license-file:       LICENSE
category:           Console
author:             Neil Mitchell <ndmitchell@gmail.com>
maintainer:         Neil Mitchell <ndmitchell@gmail.com>
copyright:          Neil Mitchell 2009-2010
synopsis:           Command line argument processing
description:
    This library provides an easy way to define command line parsers. Most users
    will want to use the "System.Console.CmdArgs.Implicit" module, whose
    documentation contains an example.
    .
    * "System.Console.CmdArgs.Explicit" provides a way to write command line
      parsers for both single mode programs (most programs) and multiple
      mode programs (e.g. darcs or cabal). Parsers are defined by constructing
      a data structure.
    .
    * "System.Console.CmdArgs.Implicit" provides a way to concisely define
      command line parsers, up to three times shorter than getopt. These parsers
      are translated into the Explicit data type.
    .
    * "System.Console.CmdArgs.GetOpt" provides a wrapper allowing compatiblity
      with existing getopt parsers, mapping to the Explicit data type.
    .
    For a general reference on what command line flags are commonly used,
    see <http://www.faqs.org/docs/artu/ch10s05.html>.
homepage:           http://community.haskell.org/~ndm/cmdargs/
stability:          Beta
extra-source-files:
    cmdargs.htm

flag testprog
    default: True
    description: Build the test program

library
    build-depends: base == 4.*, mtl, filepath

    exposed-modules:
        System.Console.CmdArgs
        System.Console.CmdArgs.Annotate
        System.Console.CmdArgs.Default
        System.Console.CmdArgs.Explicit
        System.Console.CmdArgs.GetOpt
        System.Console.CmdArgs.Implicit
        System.Console.CmdArgs.Text
        System.Console.CmdArgs.Verbosity

    other-modules:
        Data.Generics.Any
        Data.Generics.Any.Prelude
        System.Console.CmdArgs.Explicit.Help
        System.Console.CmdArgs.Explicit.Process
        System.Console.CmdArgs.Explicit.Type
        System.Console.CmdArgs.Implicit.Ann
        System.Console.CmdArgs.Implicit.Read
        System.Console.CmdArgs.Implicit.Local
        System.Console.CmdArgs.Implicit.Global
        System.Console.CmdArgs.Implicit.Type
        System.Console.CmdArgs.Implicit.UI

executable cmdargs
    main-is: Main.hs
    if flag(testprog)
        buildable: True
    else
        buildable: False

    other-modules:
        System.Console.CmdArgs.Test.All
        System.Console.CmdArgs.Test.Explicit
        System.Console.CmdArgs.Test.GetOpt
        System.Console.CmdArgs.Test.Implicit
        System.Console.CmdArgs.Test.Implicit.Diffy
        System.Console.CmdArgs.Test.Implicit.HLint
        System.Console.CmdArgs.Test.Implicit.Maker
        System.Console.CmdArgs.Test.Implicit.Tests
        System.Console.CmdArgs.Test.Implicit.Util
        System.Console.CmdArgs.Test.Util
