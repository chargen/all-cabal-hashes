-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:eaf90c2fdf1629de332b6ff6426b967b
    SHA1:cbfb516daf58fa164d841f97e594f9f808e27f40
    SHA256:418ed631f1fb7f8ab8cc66a1bb6de6618b028b1d89dc9d3524b122bd09ed0938
    SHA512:d1d2794ed9b727f9925e761a8ee0d9c67b20f6d0acc45ef79f0fb5062a3c44ec58913665e1ae3d451959fe063701ed0db6381994139d02fef3eb41842ad023a0
    Skein512_512:194be8a545dd4f50628483218517160b5684af4b26da3e4f0f229f134063323f0b3c03ac1ae39d9625472b10dabf88cdf0d2477c295bf44568ea979c4e6415a8

package-locations:
    https://hackage.haskell.org/package/cmdargs-0.2/cmdargs-0.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/cmdargs-0.2.tar.gz

package-size: 35975
-- END Added by all-cabal-hashes-tool

cabal-version:      >= 1.6
build-type:         Simple
name:               cmdargs
version:            0.2
license:            BSD3
license-file:       LICENSE
category:           Console
author:             Neil Mitchell <ndmitchell@gmail.com>
maintainer:         Neil Mitchell <ndmitchell@gmail.com>
copyright:          Neil Mitchell 2009-2010
synopsis:           Command line argument processing
description:
    This library provides an easy way to define command line parsers. Most users
    will want to use the "System.Console.CmdArgs.Implicit" module, whose
    documentation contains an example.
    .
    * "System.Console.CmdArgs.Explicit" provides a way to write command line
      parsers for both single mode programs (most programs) and multiple
      mode programs (e.g. darcs or cabal). Parsers are defined by constructing
      a data structure.
    .
    * "System.Console.CmdArgs.Implicit" provides a way to concisely define
      command line parsers, up to three times shorter than getopt. These parsers
      are translated into the Explicit data type.
    .
    * "System.Console.CmdArgs.GetOpt" provides a wrapper allowing compatiblity
      with existing getopt parsers, mapping to the Explicit data type.
homepage:           http://community.haskell.org/~ndm/cmdargs/
stability:          Beta
extra-source-files:
    cmdargs.htm

flag testprog
    default: True
    description: Build the test program

library
    build-depends: base == 4.*, mtl, filepath

    exposed-modules:
        System.Console.CmdArgs
        System.Console.CmdArgs.Default
        System.Console.CmdArgs.Explicit
        System.Console.CmdArgs.GetOpt
        System.Console.CmdArgs.Implicit
        System.Console.CmdArgs.Text
        System.Console.CmdArgs.Verbosity

    other-modules:
        Data.Generics.Any
        Data.Generics.Any.Prelude
        System.Console.CmdArgs.Explicit.Help
        System.Console.CmdArgs.Explicit.Process
        System.Console.CmdArgs.Explicit.Type
        System.Console.CmdArgs.Implicit.Ann
        System.Console.CmdArgs.Implicit.Capture
        System.Console.CmdArgs.Implicit.Read
        System.Console.CmdArgs.Implicit.Step1
        System.Console.CmdArgs.Implicit.Step2
        System.Console.CmdArgs.Implicit.Step3
        System.Console.CmdArgs.Implicit.UI

executable cmdargs
    main-is: Main.hs
    if flag(testprog)
        buildable: True
    else
        buildable: False

    other-modules:
        System.Console.CmdArgs.Test.All
        System.Console.CmdArgs.Test.Explicit
        System.Console.CmdArgs.Test.GetOpt
        System.Console.CmdArgs.Test.Implicit
        System.Console.CmdArgs.Test.Implicit.Diffy
        System.Console.CmdArgs.Test.Implicit.HLint
        System.Console.CmdArgs.Test.Implicit.Maker
        System.Console.CmdArgs.Test.Implicit.Tests
        System.Console.CmdArgs.Test.Implicit.Util
        System.Console.CmdArgs.Test.Util
