-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:de2d6783a3148b043864455233cdb661
    SHA1:964417de648825688c013e0c2acc686f61aa3aae
    SHA256:0feaffdfa9c2ae7dcb77873405b54165e187b1c568907b3ed4c83b9cd6b9e982
    SHA512:9f7cde8efd6bc3a1f13510d669ac11c9d0094cdb523c79df2d189962cf6d80c24fb09a8e6862b6c6625e5a1b24f71fec366d0ea5afc9a39c1cd55d6494139c1d
    Skein512_512:a52366b0c3a91c34eb741077b9425c13e68c51cfc0ca983a4cece4f2aeccbf5241614f2d60d6c13b2a149862816ef9186bafa744713983578964e4c75d80e272

package-locations:
    https://hackage.haskell.org/package/cmdargs-0.6.1/cmdargs-0.6.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/cmdargs-0.6.1.tar.gz

package-size: 41015
-- END Added by all-cabal-hashes-tool

cabal-version:      >= 1.6
build-type:         Simple
name:               cmdargs
version:            0.6.1
license:            BSD3
license-file:       LICENSE
category:           Console
author:             Neil Mitchell <ndmitchell@gmail.com>
maintainer:         Neil Mitchell <ndmitchell@gmail.com>
copyright:          Neil Mitchell 2009-2010
synopsis:           Command line argument processing
description:
    This library provides an easy way to define command line parsers. Most users
    will want to use the "System.Console.CmdArgs.Implicit" module, whose
    documentation contains an example.
    .
    * "System.Console.CmdArgs.Explicit" provides a way to write command line
      parsers for both single mode programs (most programs) and multiple
      mode programs (e.g. darcs or cabal). Parsers are defined by constructing
      a data structure.
    .
    * "System.Console.CmdArgs.Implicit" provides a way to concisely define
      command line parsers, up to three times shorter than getopt. These parsers
      are translated into the Explicit data type.
    .
    * "System.Console.CmdArgs.GetOpt" provides a wrapper allowing compatiblity
      with existing getopt parsers, mapping to the Explicit data type.
    .
    For a general reference on what command line flags are commonly used,
    see <http://www.faqs.org/docs/artu/ch10s05.html>.
homepage:           http://community.haskell.org/~ndm/cmdargs/
stability:          Beta
extra-source-files:
    cmdargs.htm

flag testprog
    default: True
    description: Build the test program

library
    build-depends: base == 4.*, mtl, filepath

    exposed-modules:
        System.Console.CmdArgs
        System.Console.CmdArgs.Annotate
        System.Console.CmdArgs.Default
        System.Console.CmdArgs.Explicit
        System.Console.CmdArgs.GetOpt
        System.Console.CmdArgs.Implicit
        System.Console.CmdArgs.Text
        System.Console.CmdArgs.Verbosity

    other-modules:
        Data.Generics.Any
        Data.Generics.Any.Prelude
        System.Console.CmdArgs.Explicit.Help
        System.Console.CmdArgs.Explicit.Process
        System.Console.CmdArgs.Explicit.Type
        System.Console.CmdArgs.Implicit.Ann
        System.Console.CmdArgs.Implicit.Read
        System.Console.CmdArgs.Implicit.Local
        System.Console.CmdArgs.Implicit.Global
        System.Console.CmdArgs.Implicit.Type
        System.Console.CmdArgs.Implicit.UI

executable cmdargs
    main-is: Main.hs
    if flag(testprog)
        buildable: True
    else
        buildable: False

    other-modules:
        System.Console.CmdArgs.Test.All
        System.Console.CmdArgs.Test.Explicit
        System.Console.CmdArgs.Test.GetOpt
        System.Console.CmdArgs.Test.Implicit
        System.Console.CmdArgs.Test.Implicit.Diffy
        System.Console.CmdArgs.Test.Implicit.HLint
        System.Console.CmdArgs.Test.Implicit.Maker
        System.Console.CmdArgs.Test.Implicit.Tests
        System.Console.CmdArgs.Test.Implicit.Util
        System.Console.CmdArgs.Test.Util
