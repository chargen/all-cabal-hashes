-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:ece9a850b1840a4777a042fe8d6e1129
    SHA1:163090ce8585ed1b17745f02aecf901fad65beb3
    SHA256:c070aea8a41853d3f74382bb6691ce02cf67b0e1bf790cf00a8e780955ea12b2
    SHA512:d5d9f4587f6423ab6b2850237d9b9b105a7eac7cfd007bc3f8758fd7125280feeafbeec17c709396e7f5056f0cd65ca18e9f4f17e028b25d8499e3bd6f2b1b01
    Skein512_512:6f23aa19ed4d6a9220bd766b8acac9281ee8451a78479706a6f2152023f3c92c1f4b20fe54882a243b76060abf801adeb0ea886acbf22b595c235f3918667492

x-package-locations:
    https://hackage.haskell.org/package/csv-conduit-0.1/csv-conduit-0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/csv-conduit-0.1.tar.gz

x-package-size: 7092
-- END Added by all-cabal-hashes-tool

Name:                csv-conduit
Version:             0.1
Synopsis:            A flexible, fast, conduit-based CSV parser library for Haskell.  
Homepage:            http://github.com/ozataman/csv-conduit
License:             BSD3
License-file:        LICENSE
Author:              Ozgun Ataman 
Maintainer:          Ozgun Ataman <ozataman@gmail.com>
Category:            Data
Build-type:          Simple
Cabal-version:       >=1.6
Description:

  CSV files are the de-facto standard in many situations involving data transfer,
  particularly when dealing with enterprise application or disparate database
  systems.

  .

  While there are a number of CSV libraries in Haskell, at the time of this
  project's start in 2010, there wasn't one that provided all of the following:

  .

  * Full flexibility in quote characters, separators, input/output
  .
  * Constant space operation
  .
  * Robust parsing, correctness and error resiliency
  .
  * Convenient interface that supports a variety of use cases
  .
  * Fast operation
  .

  This library is an attempt to close these gaps. Please note that
  this library started its life based on the enumerator package and
  has recently been ported to work with conduits instead. In the
  process, it has been greatly simplified thanks to the modular nature
  of the conduits library.

  . 
  
  Following the port to conduits, the library has also gained the
  ability to parameterize on the stream type and work both with
  ByteString and Text.

  .

  For more documentation and examples, check out the README at:
  .

  <http://github.com/ozataman/csv-conduit>
  .
  

extra-source-files:
  README.markdown
  test/csv-enumerator-test.cabal
  test/test.csv
  test/Test.hs

Library
  hs-source-dirs: src
  Exposed-modules:     
      Data.CSV.Conduit
      Data.CSV.Conduit.Parser.ByteString
      Data.CSV.Conduit.Parser.Text
  Other-modules:
      Data.CSV.Conduit.Types
  build-depends:
      attoparsec >= 0.10
    , attoparsec-conduit
    , conduit == 0.4.*
    , base >= 4 && < 5
    , containers >= 0.3
    , directory
    , bytestring
    , text
    , transformers >= 0.2
    , safe
    , unix-compat >= 0.2.1.1
    , monad-control
  extensions:
    ScopedTypeVariables
  ghc-options: -funbox-strict-fields
