-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:f614accbd31ec8588d83dec60b91030f
    SHA1:6f4d08e2ce4a23b46996c5d50200856c13d0f297
    SHA256:d1cb126508178178f997f24f15c5ffe99ea988699e0945bd97f8f7a8a5c2294c
    SHA512:688b028da9db24783faf98acc4826e17e6d8f2675ac666a2005ea502fe9287f19c007e5b80c56293e213e5514942ff0ae095adea3c59b934cacfa4ff90f6e9e5
    Skein512_512:1f06e6b72001d7eef2a79a6312813e4d9851641480f231880589b62cda47093bdfeae5a74c735963d8ebb0556f913108b5ba1ff22262ebb41ad18eb2305ba0f8

package-locations:
    https://hackage.haskell.org/package/csv-conduit-0.2.1.1/csv-conduit-0.2.1.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/csv-conduit-0.2.1.1.tar.gz

package-size: 8125
-- END Added by all-cabal-hashes-tool

Name:                csv-conduit
Version:             0.2.1.1
Synopsis:            A flexible, fast, conduit-based CSV parser library for Haskell.  
Homepage:            http://github.com/ozataman/csv-conduit
License:             BSD3
License-file:        LICENSE
Author:              Ozgun Ataman 
Maintainer:          Ozgun Ataman <ozataman@gmail.com>
Category:            Data, Conduit
Build-type:          Simple
Cabal-version:       >=1.6
Description:

  CSV files are the de-facto standard in many situations involving data transfer,
  particularly when dealing with enterprise application or disparate database
  systems.

  .

  While there are a number of CSV libraries in Haskell, at the time of this
  project's start in 2010, there wasn't one that provided all of the following:

  .

  * Full flexibility in quote characters, separators, input/output
  .
  * Constant space operation
  .
  * Robust parsing, correctness and error resiliency
  .
  * Convenient interface that supports a variety of use cases
  .
  * Fast operation
  .

  This library is an attempt to close these gaps. Please note that
  this library started its life based on the enumerator package and
  has recently been ported to work with conduits instead. In the
  process, it has been greatly simplified thanks to the modular nature
  of the conduits library.

  . 
  
  Following the port to conduits, the library has also gained the
  ability to parameterize on the stream type and work both with
  ByteString and Text.

  .

  For more documentation and examples, check out the README at:
  .

  <http://github.com/ozataman/csv-conduit>
  .
  

extra-source-files:
  README.markdown
  test/csv-enumerator-test.cabal
  test/test.csv
  test/Test.hs

Library
  hs-source-dirs: src
  Exposed-modules:     
      Data.CSV.Conduit
      Data.CSV.Conduit.Parser.ByteString
      Data.CSV.Conduit.Parser.Text
  Other-modules:
      Data.CSV.Conduit.Types
  build-depends:
      attoparsec >= 0.10
    , attoparsec-conduit
    , conduit == 0.4.*
    , base >= 4 && < 5
    , containers >= 0.3
    , directory
    , bytestring
    , text
    , transformers >= 0.2
    , safe
    , unix-compat >= 0.2.1.1
    , monad-control
  extensions:
    ScopedTypeVariables
  ghc-options: -funbox-strict-fields
