-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:7797eb19a9670f948ffd5dd0a6745cb1
    SHA1:5b31c7731cd9d63729fe79972151b0150527ff99
    SHA256:e42711dde5be65630d63dfabf48dff5bbf47fe83e1e5591972de67402fe561b5
    SHA512:ed05d9b49ade8656158e7a1258754b7b7be3e6b663cd44909dbff698a0db0fc5497f2a1e96b026f0bd880df9403b1c957624e694e0f61cf04a9b849a624e2322
    Skein512_512:14029e143ae591cee822cfef7063735d0ec584480c569deea0f6472e5f9dd89197e0e4e83acb37e951a5a3edb14d6bf05f688eafc63f5db81b37ace54bfc827a

package-locations:
    https://hackage.haskell.org/package/csv-conduit-0.6.3/csv-conduit-0.6.3.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/csv-conduit-0.6.3.tar.gz

package-size: 18836
-- END Added by all-cabal-hashes-tool

Name:                csv-conduit
Version:             0.6.3
Synopsis:            A flexible, fast, conduit-based CSV parser library for Haskell.
Homepage:            http://github.com/ozataman/csv-conduit
License:             BSD3
License-file:        LICENSE
Author:              Ozgun Ataman
Maintainer:          Ozgun Ataman <ozataman@gmail.com>
Category:            Data, Conduit, CSV, Text
Build-type:          Simple
Cabal-version:       >= 1.9.2
Tested-with:         GHC == 7.6.1
Description:
  CSV files are the de-facto standard in many situations involving data transfer,
  particularly when dealing with enterprise application or disparate database
  systems.

  .

  While there are a number of CSV libraries in Haskell, at the time of this
  project's start in 2010, there wasn't one that provided all of the following:

  .

  * Full flexibility in quote characters, separators, input/output
  .
  * Constant space operation
  .
  * Robust parsing, correctness and error resiliency
  .
  * Convenient interface that supports a variety of use cases
  .
  * Fast operation
  .

  This library is an attempt to close these gaps. Please note that
  this library started its life based on the enumerator package and
  has recently been ported to work with conduits instead. In the
  process, it has been greatly simplified thanks to the modular nature
  of the conduits library.

  .

  Following the port to conduits, the library has also gained the
  ability to parameterize on the stream type and work both with
  ByteString and Text.

  .

  For more documentation and examples, check out the README at:
  .

  <http://github.com/ozataman/csv-conduit>
  .


extra-source-files:
  README.markdown
  test/test.csv
  test/Test.hs
  test/Bench.hs

library
  exposed-modules:
      Data.CSV.Conduit
      Data.CSV.Conduit.Types
      Data.CSV.Conduit.Conversion
      Data.CSV.Conduit.Parser.ByteString
      Data.CSV.Conduit.Parser.Text
  other-modules:
      Data.CSV.Conduit.Conversion.Internal
      Data.CSV.Conduit.Monoid
  ghc-options: -Wall -funbox-strict-fields
  hs-source-dirs: src
  build-depends:
      attoparsec >= 0.10
    , attoparsec-conduit >= 0.5.0.2
    , base >= 4 && < 5
    , bytestring
    , conduit >= 1.0 && < 2.0
    , conduit-extra
    , containers >= 0.3
    , monad-control
    , text
    , data-default
    , vector
    , array 
    , blaze-builder
    , unordered-containers
    , transformers
    , mtl
    , mmorph
    , primitive
    , resourcet
  ghc-prof-options: -fprof-auto

  if impl(ghc >= 7.2.1)
    cpp-options: -DGENERICS
    build-depends: ghc-prim >= 0.2 && < 0.4


test-suite test
  type: exitcode-stdio-1.0
  main-is: Test.hs
  ghc-options: -Wall
  hs-source-dirs: test
  build-depends:
      base >= 4 && < 5
    , bytestring
    , containers >= 0.3
    , csv-conduit
    , directory
    , vector
    , HUnit >= 1.2
    , test-framework
    , test-framework-hunit
    , text
    , transformers
    , mtl
    , primitive

flag bench
  default: False
  manual: True

executable bench
  main-is: Bench.hs
  if flag(bench)
    buildable: True
  else
    buildable: False
  ghc-options: -Wall
  hs-source-dirs: test
  build-depends:
      base >= 4 && < 5
    , bytestring
    , containers >= 0.3
    , csv-conduit
    , vector
    , directory
    , text
    , transformers
    , mtl
    , primitive

  ghc-options: -rtsopts
  ghc-prof-options: -rtsopts -caf-all -auto-all
