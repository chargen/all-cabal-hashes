Name:                file-location
Version:             0.4.5
Synopsis:            common functions that show file location information
Homepage:            https://github.com/gregwebs/FileLocation.hs
License:             BSD3
License-file:        LICENSE
Author:              Greg Weber
Maintainer:          greg@gregweber.info
Category:            Development
Build-type:          Simple
Cabal-version:       >=1.8
Description: 
    Common debugging\/error\/exception functions that give file location information
    .
    @
    $(err \"OH NO!\")
       
    main:Main main.hs:16:1 OH NO!
    @
    .
    Notice how it displays package:module file:line:character
    .
    It exposes the functions err (error), undef (undefined), and trc (Debug.Trace.trace). All of these behave the same as their normal counterpart but also spit out a location.
    .
    Here is my favorite helper, debug, which is like trace but just show the value.
    .
    @
    debug [1,2,3]
    
    DEBUG: [1,2,3]
    [1,2,3]
    @
    .
    And The Template Haskell version.
    .
    @
    $(dbg) [1,2,3]
    
    DEBUG main:Main main.hs:1:3 [1,2,3]
    [1,2,3]
    @
    .
    Also there is a version of thrwIO that gives location information
    .
    @
    ($(thrwIO) $ AException) `catch` \e -> putStrLn (\"Caught \" ++ show (e :: AException))
    
    Caught AException \"main:Main test/main.hs:25:6\"
    @
    .
    See module for a listing of all the functions with short descriptions, and the homepage for some more examples https://github.com/gregwebs/ErrorLocation.hs

extra-source-files:
    test/*.sh
    test/*.hs
    test/*.shelltest
    test/bench/*.hs
    test/bench/*.md
    test/bench/*.h

Library
  Exposed-modules: FileLocation,
                   Debug.FileLocation,
                   Control.Exception.FileLocation,
                   Debug.Util,
                   FileLocation.LocationString
  
  -- Packages needed in order to build this package.
  Build-depends:  base >= 4 && < 5
                , template-haskell
                , transformers     >= 0.2 && < 0.4
                , containers

-- This just helps you get the packages for test/main.hs
-- tests are ran with test/run.sh
-- probably can run it entirely through this interface with just a little work
test-suite test
    type:           exitcode-stdio-1.0
    main-is:        main.hs
    hs-source-dirs: ., test
    ghc-options: -Wall
    Build-depends: base
                 , file-location
                 , lifted-base
                 , containers
                 , template-haskell
                 , transformers
                  -- shelltestrunner: need shelltest executable

Source-Repository head
  type: git
  location:    https://github.com/gregwebs/FileLocation.hs


package-hashes:
    MD5:d8f75eacfa7a0ec0e801ca6f98a49a80
    SHA1:1911a388aa7a9b885850c6bfbf90e3a16250f098
    SHA256:bed5bf90d5ea9b2b7b0c98e636adf722dc68bb2febcc6e409f38790ed397fc2b
    SHA512:2ed70d9b8e5457241aeced1131de564261ab16633f5b8d99187a50f9a22b1f4ba506c2cf9dd2f15e069077c410028023bdddf88ecdfa13f28a94e2be8f2d5653
    Skein512_512:999d098a3067be391ebee5692f6771ab0e374cd5b9d4ce917c473ea7dc36ea663d0ea9f6d9fd48f314640f2e1071045423e3a4b18266a45537a1a284ece9cba4

package-locations:
    https://hackage.haskell.org/package/file-location-0.4.5/file-location-0.4.5.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/file-location-0.4.5.tar.gz

package-size: 6163
