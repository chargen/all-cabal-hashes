name:                buffer-builder
version:             0.1.0.0
synopsis:            Library for efficiently building up buffers, one piece at a time
description:

    'BufferBuilder' is an efficient library for incrementally building
    up 'ByteString's, one chunk at a time.  Early benchmarks show it
    is over twice as fast as ByteString Builder, primarily because
    'BufferBuilder' is built upon an ST-style restricted monad and
    mutable state instead of ByteString Builder's monoidal AST.
    .
    Internally, BufferBuilder is backed by a few C functions.
    Examination of GHC's output shows nearly optimal code generation
    with no intermediate thunks -- and thus, continuation passing and
    its associated indirect jumps and stack traffic only occur when
    BufferBuilder is asked to append a non-strict ByteString.
    .
    I benchmarked four major implementations and benchmarked with the buildURL benchmark:
    .
      * State monad, concatenating ByteStrings: __6.98 us__
    .
      * State monad, ByteString Builder: __2.48 us__
    .
      * Crazy explicit RealWorld baton passing with unboxed state: __28.94 us__ (GHC generated really awful code for this, but see the revision history for the technique)
    .
      * C + FFI + ReaderT: __1.11 us__
    .
    Using BufferBuilder is very simple:
    .
    > import qualified Data.BufferBuilder as BB
    > 
    > let byteString = BB.runBufferBuilder $ do
    >       BB.appendBS "http"
    >       BB.appendChar8 '/'
    >       BB.appendBS "//"
    

license:             BSD3
license-file:        LICENSE
author:              Chad Austin
maintainer:          chad@chadaustin.me
copyright:           IMVU Inc., Chad Austin
category:            Data
build-type:          Simple
stability:           experimental
homepage:            https://github.com/chadaustin/buffer-builder
cabal-version:       >=1.10

library
  exposed-modules:
    Data.BufferBuilder

  build-depends: base ==4.*
               , bytestring
               , mtl

  default-language: Haskell2010
  ghc-options: -O2 -Wall

  c-sources: buffer.cpp
  cc-options: -O2 -Wall

test-suite tests
  type: exitcode-stdio-1.0
  main-is: Main.hs
  hs-source-dirs: test
  default-language: Haskell2010
  ghc-options: -O2 -Wall

  build-depends: base ==4.*
               , buffer-builder
               , tasty
               , tasty-hunit
               , tasty-th
               , HUnit

benchmark bench
  type: exitcode-stdio-1.0
  main-is: Bench.hs
  hs-source-dirs: bench
  default-language: Haskell2010
  ghc-options: -O2 -Wall -ddump-ds -ddump-simpl -ddump-stg -ddump-opt-cmm -ddump-asm -ddump-to-file

  build-depends: base ==4.*
               , bytestring
               , buffer-builder
               , criterion


package-hashes:
    MD5:62d5d8e3892a8f929f08810d247f37c1
    SHA1:0f4182e8177700439c89fb1496729572c4d304d1
    SHA256:a0f7c6e6b2a401b4c5658536068f2c3e93cc0d543ab9b74e3f2cd501fa98635e
    SHA512:fe112cb13edcfce3c7bfef98e9333485a336a814ff1e9a66759058049bb6787af341ba23f7ad58f570dad511b055dcf5d449035335c47a8872aab046dca4e9f1
    Skein512_512:6ced50ebf793aa15056cdbe0c13125f4f6ccb1c7d385135772726a315f400782e42ea9af80eaba39cfbf1c2905f87f188876514d6b8524023a11e621c22731ed

package-locations:
    https://hackage.haskell.org/package/buffer-builder-0.1.0.0/buffer-builder-0.1.0.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/buffer-builder-0.1.0.0.tar.gz

