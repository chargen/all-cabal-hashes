-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:a42eced17406da2fbfc8a8655f2e4390
    SHA1:02cc1aaacca813ec82da2714a7b6c9f8261e64d6
    SHA256:90864ea8ed281be9e2a6451f3bd71a8993d0c5cfa0d794ab134557a5194c68f6
    SHA512:490deda9f4aec229b11d1e84e67a2b0ffd5858321abd75b9d8956fb2ac2bbd9c0786ee6c602bc1d648b75f271e0a1cf328093576d4288887ec3a79cf2285f053
    Skein512_512:2713c7dc4ac586bf36704ca9651eeb531347e599628fe868135686e2e23e9a2f58aee4efefd2885eb582eb8df64a594c48670755413dff79f3308078c5ff3515

x-package-locations:
    https://hackage.haskell.org/package/datalog-0.1.0.0/datalog-0.1.0.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/datalog-0.1.0.0.tar.gz

x-package-size: 22344
-- END Added by all-cabal-hashes-tool

-- Initial datalog.cabal generated by cabal init.  For further
-- documentation, see http://haskell.org/cabal/users-guide/

name:                datalog
version:             0.1.0.0
synopsis:            An implementation of datalog in Haskell
license:             BSD3
license-file:        LICENSE
author:              Tristan Ravitch
maintainer:          travitch@cs.wisc.edu
category:            Database
build-type:          Simple
cabal-version:       >=1.10
description: This is an implementation of datalog in pure Haskell.
             It is implemented as a library and can be used from within
             any Haskell application.  As a consequence, it supports both
             standard Datalog operations and arbitrary predicates written
             in Haskell.
             .
             One day it will have a command-line program as well.

library
  default-language: Haskell2010
  exposed-modules: Database.Datalog
  other-modules:   Database.Datalog.Adornment
                   Database.Datalog.Database
                   Database.Datalog.Errors
                   Database.Datalog.Evaluate
                   Database.Datalog.MagicSets
                   Database.Datalog.Relation
                   Database.Datalog.Rules
                   Database.Datalog.Stratification
  build-depends: base == 4.*,
                 containers,
                 unordered-containers,
                 hashable,
                 failure,
                 text,
                 transformers >= 0.3,
                 vector >= 0.9
  hs-source-dirs: src
  ghc-options: -Wall -auto-all
  ghc-prof-options: -auto-all

test-suite NQueensTest
  default-language: Haskell2010
  hs-source-dirs: tests
  type: exitcode-stdio-1.0
  main-is: NQueens.hs
  ghc-options: -Wall -auto-all
  ghc-prof-options: -auto-all
  build-depends: datalog == 0.1.0.0,
                 base == 4.*,
                 text,
                 containers,
                 hashable,
                 test-framework,
                 test-framework-hunit,
                 HUnit

test-suite AncestorTest
  default-language: Haskell2010
  hs-source-dirs: tests
  type: exitcode-stdio-1.0
  main-is: AncestorTest.hs
  ghc-options: -Wall
  ghc-prof-options: -auto-all
  build-depends: datalog == 0.1.0.0,
                 base == 4.*,
                 text,
                 containers,
                 test-framework,
                 test-framework-hunit,
                 HUnit

test-suite WorksForTest
  default-language: Haskell2010
  hs-source-dirs: tests
  type: exitcode-stdio-1.0
  main-is: WorksForTest.hs
  ghc-options: -Wall
  ghc-prof-options: -auto-all
  build-depends: datalog == 0.1.0.0,
                 base == 4.*,
                 text,
                 containers,
                 hashable,
                 test-framework,
                 test-framework-hunit,
                 HUnit

source-repository head
  type: git
  location: git://github.com/travitch/datalog.git
