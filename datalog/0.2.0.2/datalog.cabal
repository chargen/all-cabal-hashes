-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:471fc82abe66e1feef185927ff8799be
    SHA1:252b986f98d994f7ac331842ada8aa0445df49e2
    SHA256:0665f0580449d79218b71b5a4d4ff3d1a9b9e678eecc9a0530482169dcabd2d9
    SHA512:ef29893d274b96c58f7fd5acbcab34f105092c6dcaa736fe619a7acd9ded7c6bb22d633ef91febebb44158fe3535a8de79abce3df44300446b958bab3af688a0
    Skein512_512:7fdbd9f98e6559403dafe124734544b05e3ba21f23bbf0614d9c9e3f210f984b0d6bf4e6d7204e388d7026261eb9c1e5ea908e1178f8d954c23e6f0cb2249d41

x-package-locations:
    https://hackage.haskell.org/package/datalog-0.2.0.2/datalog-0.2.0.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/datalog-0.2.0.2.tar.gz

x-package-size: 24771
-- END Added by all-cabal-hashes-tool

name:                datalog
version:             0.2.0.2
synopsis:            An implementation of datalog in Haskell
license:             BSD3
license-file:        LICENSE
author:              Tristan Ravitch
maintainer:          tristan@nochair.net
category:            Database
build-type:          Simple
cabal-version:       >=1.10
description: This is an implementation of datalog in pure Haskell.
             It is implemented as a library and can be used from within
             any Haskell application.  As a consequence, it supports both
             standard Datalog operations and arbitrary predicates written
             in Haskell.

extra-source-files: CHANGES.md

library
  default-language: Haskell2010
  exposed-modules: Database.Datalog
  other-modules:   Database.Datalog.Adornment
                   Database.Datalog.Database
                   Database.Datalog.Errors
                   Database.Datalog.Evaluate
                   Database.Datalog.MagicSets
                   Database.Datalog.Relation
                   Database.Datalog.Rules
                   Database.Datalog.Stratification
  build-depends: base == 4.*,
                 containers,
                 unordered-containers,
                 hashable,
                 exceptions >= 0.5 && < 0.7,
                 text,
                 transformers >= 0.3 && < 0.5,
                 vector >= 0.9 && < 0.11
  hs-source-dirs: src
  ghc-options: -Wall -auto-all
  ghc-prof-options: -auto-all

executable datalog-repl
  default-language: Haskell2010
  main-is: Main.hs
  hs-source-dirs: tools/repl
  ghc-options: -Wall -auto-all
  build-depends: base == 4.*,
                 datalog,
                 containers,
                 exceptions >= 0.5 && < 0.7,
                 hashable,
                 haskeline,
                 parsec,
                 pretty,
                 text,
                 transformers,
                 unordered-containers,
                 vector

test-suite NQueensTest
  default-language: Haskell2010
  hs-source-dirs: tests
  type: exitcode-stdio-1.0
  main-is: NQueens.hs
  ghc-options: -Wall -auto-all -rtsopts
  ghc-prof-options: -auto-all
  build-depends: datalog,
                 base == 4.*,
                 text,
                 containers,
                 hashable,
                 test-framework,
                 test-framework-hunit,
                 HUnit

test-suite AncestorTest
  default-language: Haskell2010
  hs-source-dirs: tests
  type: exitcode-stdio-1.0
  main-is: AncestorTest.hs
  ghc-options: -Wall
  ghc-prof-options: -auto-all
  build-depends: datalog,
                 base == 4.*,
                 text,
                 containers,
                 test-framework,
                 test-framework-hunit,
                 HUnit

test-suite WorksForTest
  default-language: Haskell2010
  hs-source-dirs: tests
  type: exitcode-stdio-1.0
  main-is: WorksForTest.hs
  ghc-options: -Wall
  ghc-prof-options: -auto-all
  build-depends: datalog,
                 base == 4.*,
                 text,
                 containers,
                 hashable,
                 test-framework,
                 test-framework-hunit,
                 HUnit

source-repository head
  type: git
  location: git://github.com/travitch/datalog.git
