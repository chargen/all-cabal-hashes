-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:0e69dac9b4527b873613e4b887f4d5de
    SHA1:e8b05b8ee4c89028be8690a460e241ddbd61ee43
    SHA256:8a9314db50522d9d8b8fbf503a58133db524edee445b8e9a3dedbfdcd4be9d77
    SHA512:a63d419c07c6a37c7abffa0ba87501593178cd54557eaf5044de70345c1145b34ef4bb1f8450a19f970620599863a7b50ddbfe0e3c40f396aeccda2681c518c9
    Skein512_512:6cc8289b9ad5b18cb014f86c40774acd7d8cb36e8f12322f2a885af525f90b96e6f33b830da4181256955bcd951f2adec88b71d216fab97a3df9b232ba193cb9

x-package-locations:
    https://hackage.haskell.org/package/lio-eci11-0.1/lio-eci11-0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/lio-eci11-0.1.tar.gz

x-package-size: 29858
-- END Added by all-cabal-hashes-tool

Name:           lio-eci11
Version:        0.1
Cabal-Version:  >= 1.2.3
build-type:     Simple
License:        GPL
License-File:   LICENSE
Author:         HAILS team
Stability:      experimental
Maintainer:     http://www.scs.stanford.edu/~dm/addr/
Category:       Security
Synopsis:       Labeled IO library
Extra-source-files:
  Examples/LambdaChair/Main.hs

Description: A package that provides dynamic tracking of information-flow. This package is intended to only be used at the computer science school ECI 2011 (Buenos Aires, Argentina) <http://www.dc.uba.ar/events/eci/2011/index_html>. Please, refer to the official version of this package if you intended to use it for other purposes.  The /Labeled IO/ (LIO) library provides information flow
        control for incorporating untrusted code within Haskell
        applications.  Most code should import module "LIO.LIO" and
        whichever label type the application is using (e.g.,
        "LIO.DCLabel").  The core functionality of the library is
        documented in "LIO.TCB".  LIO was implemented by David
        Mazieres (<http://www.scs.stanford.edu/~dm/>), Deian Stefan
        (<http://www.scs.stanford.edu/~deian/>), Alejandro Russo
        (<http://www.cse.chalmers.se/~russo/>) and John C. Mitchell
        (<http://www.stanford.edu/~jcm/>).

        The extended version of our paper, that includes the proofs
        is available here:
        <http://www.scs.stanford.edu/~deian/lio/extended.pdf>.

        To obtain the latest experimental source code, run:


        @git clone http:\/\/www.scs.stanford.edu\/~dm\/repos\/lio.git@

Library
  Build-Depends: base >= 4 && < 5,
                 array >= 0.2 && < 1,
                 bytestring >= 0.9 && < 1,
                 containers >= 0.2 && < 1,
                 directory >= 1.0 && < 2,
                 filepath >= 1.1 && < 2,
                 mtl >= 1.1.0.2 && < 3,
                 old-time >= 1 && < 2,
                 unix >= 2.3 && < 3,
                 SHA >= 1.4.1.1 && < 2,
                 time >= 1.1.4 && < 2,
                 dclabel-eci11 >= 0.3 && < 2

  ghc-options: -O2 -funbox-strict-fields
               -threaded -fno-warn-unused-imports 

  Exposed-modules:
    LIO.Armor,
    LIO.Base,
    LIO.DCLabel,
    LIO.FS,
    LIO.Handle,
    LIO.HiStar,
    LIO.LIO,
    LIO.LIORef,
    LIO.MonadCatch,
    LIO.MonadLIO,
    LIO.TCB,
    LIO.TmpFile

  Extensions:
    DeriveDataTypeable,
    ExistentialQuantification,
    FlexibleContexts,
    FlexibleInstances,
    ForeignFunctionInterface,
    FunctionalDependencies,
    GeneralizedNewtypeDeriving,
    MultiParamTypeClasses,
    ScopedTypeVariables
