-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:fafae06ea004c1b58eaa2d5f8b5a8c88
    SHA1:f5f2ca6339a33c22526c715050b4fdbb959c9bbd
    SHA256:bb4798695d588cb2355987e1d3f687e2494e026c9156e7fe14589752fe33d150
    SHA512:fa567e7204737283fde3a8270e071ed0ed1aa505ed180019c9ea066667806df5f6394764a5b60de13e6de2721d04b7aa365b55e5a02b418e06e1b8b37e6616a2
    Skein512_512:1491bc88f655d690a924670bca706e3e67bb704f947ce32cea2a8a4be7728512e62ceb75e44aa0e87c733987d9cbcdcd4e4e9762b0bcb6688150e28a3c4397c0

x-package-locations:
    https://hackage.haskell.org/package/interpolation-0.0/interpolation-0.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/interpolation-0.0.tar.gz

x-package-size: 7103
-- END Added by all-cabal-hashes-tool

Name:             interpolation
Version:          0.0
License:          BSD3
License-File:     LICENSE
Author:           Henning Thielemann
Maintainer:       Henning Thielemann <haskell@henning-thielemann.de>
Homepage:         http://code.haskell.org/~thielema/interpolation/
Category:         Math
Synopsis:         piecewise linear and cubic Hermite interpolation
Description:
  Represent real functions by linear or cubic segments.
  The package provides both data structures
  for efficient lookup of interpolation intervals,
  and computation of basis functions.
  .
  There are two examples that can be built with
  .
  > cabal install -fbuildExamples
  .
  * @example/Plot.hs@:
    Interpolate a sinus curve using piecewise linear interpolation
    and piecewise Hermite cubic interpolation.
    For the latter one we provide the derivatives of the sinus function
    at the interpolation nodes.
  .
  * @example/Fit.hs@:
    Demonstrates how to use the basis functions
    for fitting an interpolation function to a given function
    using a linear least squares solver like @<\>@ from @hmatrix@.
    We use a distorted sinus as target.
  .
  The package needs only Haskell 98.
Tested-With:      GHC==7.4.2, GHC==7.6.3, GHC==7.8.2
Cabal-Version:    >=1.8
Build-Type:       Simple

Flag buildExamples
  description: Build example executables
  default:     False

Flag hmatrix
  description: Build examples that depend on hmatrix
  default:     True

Source-Repository this
  Tag:         0.0
  Type:        darcs
  Location:    http://code.haskell.org/~thielema/interpolation/

Source-Repository head
  Type:        darcs
  Location:    http://code.haskell.org/~thielema/interpolation/

Library
  Build-Depends:
    utility-ht >=0.0.1 && <0.1,
    base >=4 && <5

  GHC-Options:      -Wall
  Hs-Source-Dirs:   src, private
  Exposed-Modules:
    Numeric.Interpolation.NodeList
    Numeric.Interpolation.Piece
    Numeric.Interpolation.Piecewise
    Numeric.Interpolation.Type
    Numeric.Interpolation.Basis
    Numeric.Interpolation.Basis.Compact
    Numeric.Interpolation.Basis.Full
  Other-Modules:
    Numeric.Interpolation.Private.Piece
    Numeric.Interpolation.Private.Basis

Executable interpolation-plot
  Main-Is:             Plot.hs
  Hs-Source-Dirs:      example
  GHC-Options:         -Wall
  If flag(buildExamples)
    Build-Depends:
      interpolation,
      gnuplot >=0.5.2 && <0.6,
      utility-ht >=0.0.9 && <0.1,
      base >=4.5 && <4.8
  Else
    Buildable: False

Executable interpolation-fit
  Main-Is:             Fit.hs
  Hs-Source-Dirs:      example
  GHC-Options:         -Wall
  If flag(buildExamples) && flag(hmatrix)
    Build-Depends:
      interpolation,
      hmatrix >=0.15 && <0.16,
      random >=1.0 && <1.1,
      gnuplot >=0.5.2 && <0.6,
      utility-ht >=0.0.9 && <0.1,
      base >=4.5 && <4.8
  Else
    Buildable: False

Test-Suite interpolation-test
  Type:                exitcode-stdio-1.0
  Main-Is:             Test.hs
  Other-Modules:
    Test.Piece
  Hs-Source-Dirs:      test, private
  GHC-Options:         -Wall
  Build-Depends:
    interpolation,
    QuickCheck >=2.4 && <2.8,
    utility-ht >=0.0.9 && <0.1,
    base >=4.5 && <4.8
