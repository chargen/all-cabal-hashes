-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:fe3fd40bfe95aebd1789fd16a6cb5271
    SHA1:5b82cbe585c79b75bdcd937a00eb3539a211587b
    SHA256:d66de9a9eb45aeb9fa53170a35b85b99a81e9db46daa916db55b02dd6bce22ad
    SHA512:07d10d0aad3d20d9dbc1529445d236f34f41b7d59be48001e0dd36c8538759129b9184aabd5697114bf89780bccbce75e593a8a1f7710023e913d9f6826e7101
    Skein512_512:95cec65d969a429e3c1c7fe23f86b0428fe69ada4e77b64ea4f307f297f7ce817136c6920c7c652e15a95f832f4a8ed41d08eceb192b075b2b9311c072e25158

package-locations:
    https://hackage.haskell.org/package/download-0.3.1/download-0.3.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/download-0.3.1.tar.gz

package-size: 29792
-- END Added by all-cabal-hashes-tool

name:            download
version:         0.3.1
homepage:        http://code.haskell.org/~dons/code/download
synopsis:        High-level file download based on URLs
description:     High-level file download based on URLs
 .
 Download web content as strict bytestring, strings, HTML tags, XML, RSS
 or Atom feeds or JSON, via HTTP, FTP or file protocols, using a URL
 interface.
 .
 Importing the library:
 .                 
 > import Network.Download
 .
 Loading a webpage as a "ByteString":
 .
 > doc  <- openURI "http://haskell.org"
 .
 Loading from a file:
 .
 > doc  <- openURI "file:///tmp/A.hs"
 .
 Loading a HTML page as a list of tags:
 .
 > tags <- openAsTags "http://haskell.org"
 .
 Loading a HTML page as XML:
 .
 > tags <- openAsXML "http://haskell.org"
 .
 Loading an RSS or Atom feed:
 .
 > feed <- openAsFeed "http://haskell.org"
 .
 These data types can the be processed further with the XML, Feed and
 TagSoup libraries.
 .
category:        Network
license:         BSD3
license-file:    LICENSE
copyright:       (c) 2008, Don Stewart <dons@galois.com>
author:          Don Stewart
maintainer:      Don Stewart <dons@galois.com>
cabal-version:   >= 1.6
build-type:      Simple
tested-with:     GHC ==6.8.2, GHC ==6.12.1

-- flag external
--  description: Build with an external libdownload
--  default:     False

flag small_base
  description: Build with new smaller base library

library
    exposed-modules: Network.Download
    extensions:      CPP,
                     ForeignFunctionInterface,
                     EmptyDataDecls,
                     GeneralizedNewtypeDeriving

    ghc-options:     -Wall

    if flag(small_base)
        build-depends:   base >= 3 && < 4, bytestring
    else
        build-depends:   base > 3 && < 5

    build-depends: tagsoup == 0.8.*, feed, xml

    ------------------------------------------------------------------------
    -- Building libdownload
    --
    -- We can build against either an external libdownload, or an internal one.

--    if flag(external)
--        extra-libraries:    download
--        c-sources:          cbits/hs_download_utils.c
--        include-dirs:       cbits
--        includes:           hs_download_utils.h
--        install-includes:   hs_download_utils.h
--    else

    cc-options:         -DINET6
                        -D_GNU_SOURCE
                        -D_FILE_OFFSET_BITS=64
                        -UDEBUG

    c-sources:          cbits/download.c
                        cbits/common.c
                        cbits/ftp.c
                        cbits/http.c
                        cbits/file.c
                        cbits/hs_download_utils.c

    include-dirs:       cbits
    includes:           download.h
                        common.h
                        ftperr.h
                        httperr.h
                        hs_download_utils.h

    install-includes:   common.h
                        download.h
                        ftperr.h
                        httperr.h
                        hs_download_utils.h
                                               
