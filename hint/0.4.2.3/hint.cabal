-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:ac83c4de9e979c738f5086fd8193662e
    SHA1:076b16672b2726a4c46140ac4a79b41dfc536cc7
    SHA256:cf2b3f98ba6929e2e79dfc373e101ee6ae1711a5706e718cf0152733da4a40b7
    SHA512:e70d49cb3c7af54c5eb8d189c80d2ac92f64befc51e38f538cca28f0d74b6b43761c8fc8ebd5c8eeb295060b245e1351cfc3a1667413715cb533f49109831b24
    Skein512_512:cec6b21cfd31f86ba2b7c0515e49cc78decb9d2f772d244db8a06e6bd9277b8358aaa8dfa8f03e51007a16388e76c06e74963253b3f2e18ea8606888d7c96857

x-package-locations:
    https://hackage.haskell.org/package/hint-0.4.2.3/hint-0.4.2.3.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/hint-0.4.2.3.tar.gz

x-package-size: 30117
-- END Added by all-cabal-hashes-tool

name:                hint
version:             0.4.2.3
description:
        This library defines an @Interpreter@ monad. It allows to load Haskell
        modules, browse them, type-check and evaluate strings with Haskell
        expressions and even coerce them into values. The library is
        thread-safe and type-safe (even the coercion of expressions to
        values).

        It is, essentially, a huge subset of the GHC API wrapped in a simpler
        API. 
synopsis:           Runtime Haskell interpreter (GHC API wrapper)
category:           Language, Compilers/Interpreters
license:            BSD3
license-file:       LICENSE
author:             Daniel Gorin
maintainer:         jcpetruzza@gmail.com
homepage:           http://hub.darcs.net/jcpetruzza/hint

cabal-version:      >= 1.9.2
build-type:         Simple

extra-source-files: README
                    AUTHORS
                    CHANGELOG.markdown
                    examples/example.hs
                    examples/SomeModule.hs

source-repository head
  type: darcs
  location:  http://hub.darcs.net/jcpetruzza/hint

Test-Suite unit-tests
  type: exitcode-stdio-1.0
  hs-source-dirs: unit-tests
  main-is: run-unit-tests.hs
  build-depends: base < 5
                ,hint
                ,HUnit==1.2.*
                ,directory
                ,filepath
                ,mtl
                ,extensible-exceptions
                ,exceptions

Library
  build-depends:      ghc >= 7.4.2,
                      ghc-paths,
                      mtl,
                      filepath,
                      extensible-exceptions,
                      exceptions
  if impl(ghc >= 6.8) {
    build-depends:    random,
                      directory

    if impl(ghc >= 6.10) {
      build-depends:  base >= 4, base < 5,
                      ghc-mtl == 1.2.1.*
                        -- version 1.1.* uses exceptions instead of MonadCatchIO
                        -- version 1.2.* uses the exceptions-0.4 api
                        -- version 1.2.1.* uses the exceptions-0.6 api
    } else {
      build-depends:  base >= 3, base < 4
    }
  }
  else {
      -- ghc < 6.8
      build-depends:    utf8-string < 0.3
  }

  if !os(windows) {
      build-depends:    unix >= 2.2.0.0
  }

  exposed-modules:    Language.Haskell.Interpreter
                      Language.Haskell.Interpreter.Extension
                      Language.Haskell.Interpreter.Unsafe
                      Language.Haskell.Interpreter.GHC
                      Language.Haskell.Interpreter.GHC.Unsafe
  other-modules:      Hint.GHC
                      Hint.Base
                      Hint.InterpreterT
                      Hint.Compat
                      Hint.CompatPlatform
                      Hint.Configuration
                      Hint.Extension
                      Hint.Context
                      Hint.Conversions
                      Hint.Eval
                      Hint.Parsers
                      Hint.Reflection
                      Hint.Typecheck
                      Hint.Sandbox
                      Hint.SignalHandlers
                      Hint.Util

  if impl(ghc >= 6.11) {
      other-modules: Hint.Annotations
  }

  hs-source-dirs:     src

  ghc-options:        -Wall -O2
  extensions:         CPP
                      GeneralizedNewtypeDeriving
                      MultiParamTypeClasses
                      DeriveDataTypeable
                      MagicHash
                      TypeSynonymInstances
                      FlexibleInstances
                      FlexibleContexts
                      FunctionalDependencies
                      KindSignatures
                      Rank2Types
                      ScopedTypeVariables
                      ExistentialQuantification
                      PatternGuards
