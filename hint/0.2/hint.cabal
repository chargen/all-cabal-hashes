-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:dcb3c26f856ecef72980eb68a1e1a540
    SHA1:099d422ef11ca010a0f80f27d94dc812e3796c0d
    SHA256:42529e0255076a8ac63a313ac2a7cefd37e3bbe61085de325e2c5cc5a43bc0c8
    SHA512:454807803b6c6b4fb3d58c426b9a4d79f3db3078f1ab6cdc19477881abf112c837bf3245cc33ffa2fdb5366810fd65b38096bb02da821d6fb1102e957b9999e6
    Skein512_512:7259637f2b79866fa12db63ab07817083b90535f8739b25b99242dea22a24746a84503ae4c7d51078c36dead351865a9b7fb726f6f592ab6543abc135df72452

package-locations:
    https://hackage.haskell.org/package/hint-0.2/hint-0.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/hint-0.2.tar.gz

package-size: 11006
-- END Added by all-cabal-hashes-tool

name:                hint
version:             0.2
x-revision: 1
description:
	This library defines an @Interpreter@ monad. It allows to load Haskell
        modules, browse them, type-check and evaluate strings with Haskell
        expressions and even coerce them into values. The library is
        thread-safe and type-safe (even the coertion of expressions to
        values).

	It is, esentially, a huge subset of the GHC API wrapped in a simpler
	API. Works with GHC 6.6.x and 6.8.x.
synopsis:            Runtime Haskell interpreter (GHC API wrapper)
category:            Language, Compilers/Interpreters
license:             BSD3
license-file:        LICENSE
author:              Daniel Gorin
maintainer:          jcpetruzza@gmail.com

cabal-version:       >= 1.2
build-type:          Custom
tested-with:         GHC==6.6.1, GHC==6.8.2


build-depends:       base < 4.3, haskell-src, ghc < 7, mtl

exposed-modules:     Language.Haskell.Interpreter.GHC
other-modules:       Language.Haskell.Interpreter.GHC.Base
                     Language.Haskell.Interpreter.GHC.Compat
		     Language.Haskell.Interpreter.GHC.Conversions
                     Language.Haskell.Interpreter.GHC.Parsers
                     Language.Haskell.Interpreter.GHC.LibDir

hs-source-dirs:      src
extra-source-files:  README
		     Changes
		     examples/example.hs
		     examples/SomeModule.hs

ghc-options:         -Wall -O2
extensions:          CPP
	             GeneralizedNewtypeDeriving
	    	     MultiParamTypeClasses
	    	     DeriveDataTypeable
		     MagicHash
		     TypeSynonymInstances
		     FlexibleInstances
