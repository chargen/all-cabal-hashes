-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:ad0e418fa89e22e6dc7db73e9ae4aeb5
    SHA1:dcca86ba9afa18902f4022161214cfa92c997e17
    SHA256:f4822d0151247f080d9457c23c92040a22c548cda2343860a959a6f79d3786c1
    SHA512:d8e1311529a2b98fd27b2d5dd780c9dbc0523a50f1f503761ed2cacf47c0aa626ca8a20ee24d83f60d181fcbb330a0f83c24e18fb46c6dbef8d8028e457af771
    Skein512_512:020d01cff4aa6b00ff105cabd13d40b65b7ca802682e7d0635b05b7806c024b5a6e3e279ca41a2b8d78f3cf23756270bfe83694e95605f7dd3490dc137e52ae7

package-locations:
    https://hackage.haskell.org/package/hint-0.4.1.0/hint-0.4.1.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/hint-0.4.1.0.tar.gz

package-size: 29397
-- END Added by all-cabal-hashes-tool

name:                hint
version:             0.4.1.0
x-revision: 2
description:
        This library defines an @Interpreter@ monad. It allows to load Haskell
        modules, browse them, type-check and evaluate strings with Haskell
        expressions and even coerce them into values. The library is
        thread-safe and type-safe (even the coercion of expressions to
        values).

        It is, esentially, a huge subset of the GHC API wrapped in a simpler
        API. 
synopsis:           Runtime Haskell interpreter (GHC API wrapper)
category:           Language, Compilers/Interpreters
license:            BSD3
license-file:       LICENSE
author:             Daniel Gorin
maintainer:         jcpetruzza@gmail.com
homepage:           http://hub.darcs.net/jcpetruzza/hint

cabal-version:      >= 1.9.2
build-type:         Simple
tested-with:        GHC==6.8.3, GHC==6.10

extra-source-files: README
                    AUTHORS
                    CHANGELOG.markdown
                    examples/example.hs
                    examples/SomeModule.hs

Test-Suite unit-tests
  type: exitcode-stdio-1.0
  hs-source-dirs: unit-tests
  main-is: run-unit-tests.hs
  build-depends: base < 5
                ,hint
                ,HUnit==1.2.*
                ,directory
                ,filepath
                ,mtl
                ,extensible-exceptions
                ,exceptions

Library
  build-depends:      ghc > 6.6,
                      ghc-paths,
                      mtl,
                      filepath,
                      utf8-string < 1,
                      extensible-exceptions,
                      exceptions < 0.6
  if impl(ghc >= 6.8) {
    build-depends:    random,
                      directory

    if impl(ghc >= 6.10) {
      build-depends:  base >= 4, base < 5,
                      ghc-mtl == 1.2.*
                        -- version 1.1.* uses exceptions instead of MonadCatchIO
                        -- version 1.2.* uses the exceptions-0.4 api
    } else {
      build-depends:  base >= 3, base < 4
    }
  }
  else {
      build-depends:    utf8-string < 0.3
  }

  if !os(windows) {
      build-depends:    unix >= 2.2.0.0
  }

  exposed-modules:    Language.Haskell.Interpreter
                      Language.Haskell.Interpreter.Extension
                      Language.Haskell.Interpreter.Unsafe
                      Language.Haskell.Interpreter.GHC
                      Language.Haskell.Interpreter.GHC.Unsafe
  other-modules:      Hint.GHC
                      Hint.Base
                      Hint.InterpreterT
                      Hint.Compat
                      Hint.CompatPlatform
                      Hint.Configuration
                      Hint.Extension
                      Hint.Context
                      Hint.Conversions
                      Hint.Eval
                      Hint.Parsers
                      Hint.Reflection
                      Hint.Typecheck
                      Hint.Sandbox
                      Hint.SignalHandlers
                      Hint.Util

  if impl(ghc >= 6.11) {
      other-modules: Hint.Annotations
  }

  hs-source-dirs:     src

  ghc-options:        -Wall -O2
  extensions:         CPP
                      GeneralizedNewtypeDeriving
                      MultiParamTypeClasses
                      DeriveDataTypeable
                      MagicHash
                      TypeSynonymInstances
                      FlexibleInstances
                      FlexibleContexts
                      FunctionalDependencies
                      KindSignatures
                      Rank2Types
                      ScopedTypeVariables
                      ExistentialQuantification
                      PatternGuards
