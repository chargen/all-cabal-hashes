name: cluss
category: type system, constraints
version: 0.1
x-revision: 4
license: BSD3
license-file: LICENSE
cabal-version: >= 1.10
tested-with: GHC==7.8.3
author: Yusuke Matsushita
maintainer: Yusuke Matsushita <y.skm24t@gmail.com>
stability: provinsional
homepage: https://github.com/Kinokkory/cluss
bug-reports: https://github.com/Kinokkory/cluss/issues
copyright: Copyright (C) 2014 Yusuke Matsushita
synopsis: simple alternative to type classes
description:
    A /cluss/ enables you to achieve /function overloading/, or ad-hoc polymorphism,
    without creating a new type class.
    .
    In order to give ad-hoc polymorphism to a type variable @a@,
    you simply use @In@ with a list of \"type patterns\" like @In [Type T, ...] a@,
    which indicates that the type matches some of the patterns;
    which is analogous to a type class indicating that a type matches some of its \"instances\".
    The constraint @In [Type T, ...] a@ is what we call a \"cluss\".
    .
    Cluss instances are /closed/ and cluss methods are /open/,
    unlike type classes, whose instances are open and whose methods are closed.
    .
    Clusses can easily be used in a nested way,
    and can even be /recursive/, just like recursive type classes,
    and therefore clusses are expressive enough to imitate Haskell-98-style type classes.
    .
    More information can be found in the Haddock or the comments in the source code.
    The updated haddock is here: <http://kinokkory.github.io/cluss/>.

build-type: Simple

source-repository head
    type: git
    location: git@github.com:Kinokkory/cluss.git

library
    hs-source-dirs: src
    default-language: Haskell2010
    other-extensions:
        TypeFamilies
        PolyKinds
        DataKinds
        TypeOperators
        MultiParamTypeClasses
        FlexibleInstances
        ScopedTypeVariables
        UndecidableInstances
        FlexibleContexts
        ConstraintKinds
        RankNTypes
    build-depends: base == 4.*
    exposed-modules: Type.Cluss
    ghc-options: -Wall


package-hashes:
    MD5:ac434394eae8652c8997295cb7f1c8ba
    SHA1:7577099b611ef9d69f911ee651239c91fe761f6c
    SHA256:f708b0e88fd4ad1e0dc914ee52036b7ea3f35f8b7618071d10b285d6777604bc
    SHA512:a232d7299df7869ce53c88945f1d1a2cef8249b22cfbe0d9675916415687aa53a59078c8073586bb7b43ed6f61689c37cf600ec420f53ec6bcc5c83e2196e00b
    Skein512_512:59fc28a9d222b674f8511da8f6beffa146d875555f2e7bff5d8e39a3daa4680c3c228284711c220dd6f992c1e77aaae5c00ffa81981f4b4d10463f2a8613d4f2

package-locations:
    https://hackage.haskell.org/package/cluss-0.1/cluss-0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/cluss-0.1.tar.gz

package-size: 6546
