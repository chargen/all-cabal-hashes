Name:               vault
Version:            0.3.0.0
Synopsis:           a persistent store for values of arbitrary types
Description:
  A /vault/ is a persistent store for values of arbitrary types.
  It's like having first-class access to the storage space behind IORefs.
  .
  The data structure is analogous to a bank vault,
  where you can access different bank boxes with different keys;
  hence the name.
  .
  Also provided is a /locker/ type, representing a store for a single element.
  .
  Changelog:
  .
  * 0.3.0.0 Split modules into Lazy and Strict variants, no default choice.
  Add Hashable instance to Data.Unique.Really for all implementations.
    
Category:           Data
License:            BSD3
License-file:       LICENSE
Author:             Heinrich Apfelmus, Elliott Hird
Maintainer:         Heinrich Apfelmus <apfelmus at quantentunnel de>
Homepage:           https://github.com/HeinrichApfelmus/vault
Copyright:          (c) Heinrich Apfelmus 2011-2013

build-type:         Simple
cabal-version:      >= 1.6

extra-source-files: Readme.md

source-repository head
    type:           git
    location:       git://github.com/HeinrichApfelmus/vault.git

    
Library
    hs-source-dirs:     src
    build-depends:      base == 4.6.*, containers == 0.5.*,
                        unordered-containers >= 0.2.3.0 && < 0.3,
                        hashable >= 1.1.2.5 && < 1.3

    extensions:         CPP
    ghc-options:        -Wall -fno-warn-missing-signatures

    exposed-modules:
                        Data.Vault.Lazy,
                        Data.Vault.Strict,
                        Data.Vault.ST.Lazy,
                        Data.Vault.ST.Strict,
                        Data.Unique.Really
                        
    if impl(ghc)
        CPP-options:    -DUseGHC
        other-modules:
                        Data.Vault.ST.GHC_Lazy,
                        Data.Vault.ST.GHC_Strict
    else
        other-modules:
                        Data.Vault.ST.Pure_Lazy,
                        Data.Vault.ST.Pure_Strict


package-hashes:
    MD5:ceb1c042ca1c099206ff8346d2f225ae
    SHA1:dac9c6e199fe9fe515318a7e6b2361bb155bf1b4
    SHA256:a8125db9e13b386599d87481490f35c4c28610eeab141e6d5f121159b8167bd3
    SHA512:a8d01722d12c2bf6f1182ef959d1864e2908f221e61fc4c6c5f99eb8ac225f9f42dddb4e7f901ceae73ba175e0a0fd272cdf30fed84f5abf4d7f6b6fb6970b2e
    Skein512_512:8c7b5b86fe1f5b0f08b767327307718476a65625dbc3022017e2bf9da51ba633ee54e88e05ece29b1efc0671a92ddfebcb55998b70fd081a30c4a8661215e93e

package-locations:
    https://hackage.haskell.org/package/vault-0.3.0.0/vault-0.3.0.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/vault-0.3.0.0.tar.gz

package-size: 5338
