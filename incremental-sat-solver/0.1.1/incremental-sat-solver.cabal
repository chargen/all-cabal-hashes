-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:b3668f2298d6903bb6e7384cca1c1a8e
    SHA1:3ff4fc3407c228917971500aa72c4d7b23e59997
    SHA256:25fa97adc07a67a92893780df616a5b626140b61a28a36996cad85f94ad30082
    SHA512:120cd530a8a34fe0704cd9db1e1529158cfb15fb0150ee1547f146a3d8b9607c55b02e1875835749b4dad9cbfbb70c6c7712328b987d25c57ff70deb60f0fa7e
    Skein512_512:d8f59607e931d72b2c27eba2c5bf98506cd4a0e572aa3f45e33c11ae3041dce44b11b2ee169a1059b02b2b294600a4da6cd2116ef294dab6417176c6fbcf8df5

x-package-locations:
    https://hackage.haskell.org/package/incremental-sat-solver-0.1.1/incremental-sat-solver-0.1.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/incremental-sat-solver-0.1.1.tar.gz

x-package-size: 4221
-- END Added by all-cabal-hashes-tool

Name:          incremental-sat-solver
Version:       0.1.1
Cabal-Version: >= 1.6
Synopsis:      Simple, Incremental SAT Solving as a Library
Description:   This Haskell library provides an implementation of the
               Davis-Putnam-Logemann-Loveland algorithm
               (cf. <http://en.wikipedia.org/wiki/DPLL_algorithm>) for
               the boolean satisfiability problem. It not only allows
               to solve boolean formulas in one go but also to add
               constraints and query bindings of variables
               incrementally.
Category:      Algorithms
License:       BSD3
License-File:  LICENSE
Author:        Sebastian Fischer
Maintainer:    sebf@informatik.uni-kiel.de
Bug-Reports:   mailto:sebf@informatik.uni-kiel.de
Homepage:      http://github.com/sebfisch/incremental-sat-solver
Build-Type:    Simple
Stability:     experimental

Extra-Source-Files: README

Library
  Build-Depends:    base, containers, mtl
  Exposed-Modules:  Data.Boolean.SatSolver
  Other-Modules:    Data.Boolean
  Ghc-Options:      -Wall

Source-Repository head
  type:     git
  location: git://github.com/sebfisch/incremental-sat-solver.git
