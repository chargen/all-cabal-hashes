-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:1055089afe83fa5511ee7a361e22614a
    SHA1:01bc1132b6eb9e89e8336f56609b217599fd9da6
    SHA256:0e07b7f487312588478dc1087c97a1f83778d248b408ae10dcffdd6d5f1c67b8
    SHA512:21aa453b03c452063a87dfe5a7015c6ebd03e154fbe221355ab70e9acf0169769a06013a05e5f5ac10ac220ff21f240b0cc183b0d7f1e372427e0f1d9094a2f4
    Skein512_512:ff92ee4848ca2412e49b242575272b924f71ab7b1c1db19f502fd82ace4b155ed0b740a76be949fffe7874ec7fc40c63b6a6a3345a03e838b0fb0916a767f1bf

package-locations:
    https://hackage.haskell.org/package/logging-1.2.0/logging-1.2.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/logging-1.2.0.tar.gz

package-size: 5382
-- END Added by all-cabal-hashes-tool

Name:                logging
Version:             1.2.0
Synopsis:            Simplified logging in IO for application writers.
License-file:        LICENSE
License:             MIT
Author:              John Wiegley
Maintainer:          johnw@newartisans.com
Build-Type:          Simple
Cabal-Version:       >=1.10
Category:            System
Description:
  @logging@ is a wrapper around @monad-logger@ and @fast-logger@ which makes
  it easy to log from any 'MonadLogger' environment, or from 'IO'.  It
  provides the following conveniences on top of those libraries:
  .
  - A 'MonadLogger' instance for 'IO'.  Usually this is bad for libraries, but
    can be very convenience for application writers who know they always want
    to log from IO to the console.  If you need to log to other sources, or to
    make logging compile-time optional, use @monad-logger@ directly.
  .
  - A set of shorter functions to type: 'debug', 'log', 'warn', plus others
    that flush after each message, or which allow providing a message source
    string.
  .
  - Logging variants of 'error', 'trace' and 'traceShow', called 'errorL',
    'traceL' and 'traceShowL'.  These use 'unsafePerformIO' in order to act as
    direct replacements, so the usual caveats apply.
  .
  - A global function, 'setDebugLevel', which uses a global 'IORef' to record
    the logging level, saving you from having to carry around the notion of
    "verbosity level" in a Reader environment.
  .
  - A set of "timed" variants, 'timedLog' and 'timedDebug', which report how
    long the specified action took to execute in wall-clock time.

Source-repository head
  type: git
  location: git://github.com/jwiegley/logging.git

Library
    default-language:   Haskell98
    ghc-options: -Wall
    build-depends:
        base                 >= 3 && < 5
      , binary               >= 0.5.1.1
      , bytestring           >= 0.9.2.1
      , fast-logger          >= 2.1.5
      , old-locale           >= 1.0.0.5
      , thyme                >= 0.3.1.0
      , monad-control        >= 0.3.2.3
      , monad-logger         >= 0.3.4.0
      , text                 >= 0.11.3.1
      , transformers         >= 0.3.0.0
      , lifted-base          >= 0.2.2.0
      , vector-space         >= 0.8.6
      , pcre-light           >= 0.4
    exposed-modules:
        Control.Logging
    default-extensions: 
        BangPatterns
        FlexibleContexts
        OverloadedStrings

test-suite test
    hs-source-dirs: test
    default-language: Haskell2010
    main-is: main.hs
    type: exitcode-stdio-1.0
    ghc-options: -Wall -threaded
    build-depends:
        base
      , logging
      , unix                 >= 2.5.1.1
      , hspec                >= 1.4
      , monad-logger         >= 0.3.4.0
    default-extensions: 
        OverloadedStrings
