-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:2def78a50abb0105483c05abb194b5fd
    SHA1:ffbab86324a0593549638fad8280f356e6e985b6
    SHA256:1793bc62c8e6a0e86d965ad87bdd2816ec9a2ba7c62b55e5bd8b948390548c2b
    SHA512:b8dd90898a6c6c488a6fc9fcf76e331f4ad08e4de265fba1f69864627f682b1adefc156627e76bf203341efafb6fc22a3391c1e12081669a8c887e428ef5b024
    Skein512_512:f70697d25132d2f76ca62400822bbb709d0d3d283ef91a3b237febc767cc42f2bc45fcbc4c7086e776de9ba9f8fa13490197a83a9bc7195130b9a9d78360b3ab

x-package-locations:
    https://hackage.haskell.org/package/logging-2.2.0/logging-2.2.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/logging-2.2.0.tar.gz

x-package-size: 5480
-- END Added by all-cabal-hashes-tool

Name:                logging
Version:             2.2.0
Synopsis:            Simplified logging in IO for application writers.
License-file:        LICENSE
License:             MIT
Author:              John Wiegley
Maintainer:          johnw@newartisans.com
Build-Type:          Simple
Cabal-Version:       >=1.10
Category:            System
Description:
  @logging@ is a wrapper around @monad-logger@ and @fast-logger@ which makes
  it easy to log from any 'MonadLogger' environment, or from 'IO'.  It
  provides the following conveniences on top of those libraries:
  .
  - A 'MonadLogger' instance for 'IO'.  Usually this is bad for libraries, but
    can be very convenient for application writers who know they always want
    to log from IO to the console.  If you need to log to other sources, or to
    make logging compile-time optional, use @monad-logger@ directly.
  .
  - A set of shorter functions to type: 'debug', 'log', 'warn', plus others
    that flush after each message, or which allow providing a message source
    string.
  .
  - Logging variants of 'error', 'trace' and 'traceShow', called 'errorL',
    'traceL' and 'traceShowL'.  These use 'unsafePerformIO' in order to act as
    direct replacements, so the usual caveats apply.
  .
  - A global function, 'setDebugLevel', which uses a global 'IORef' to record
    the logging level, saving you from having to carry around the notion of
    "verbosity level" in a Reader environment.
  .
  - A set of "timed" variants, 'timedLog' and 'timedDebug', which report how
    long the specified action took to execute in wall-clock time.

Source-repository head
  type: git
  location: git://github.com/jwiegley/logging.git

Library
    default-language:   Haskell98
    ghc-options: -Wall
    build-depends:
        base                 >= 3 && < 5
      , binary               >= 0.5.1.1
      , bytestring           >= 0.9.2.1
      , fast-logger          >= 2.1.5
      , old-locale           >= 1.0.0.5
      , time                 >= 1.4
      , monad-control        >= 0.3.2.3
      , monad-logger         >= 0.3.4.0
      , text                 >= 0.11.3.1
      , transformers         >= 0.3.0.0
      , lifted-base          >= 0.2.2.0
      , pcre-light           >= 0.4
    exposed-modules:
        Control.Logging
    default-extensions: 
        BangPatterns
        FlexibleContexts
        OverloadedStrings

test-suite test
    hs-source-dirs: test
    default-language: Haskell2010
    main-is: main.hs
    type: exitcode-stdio-1.0
    ghc-options: -Wall -threaded
    build-depends:
        base
      , logging
      , unix                 >= 2.5.1.1
      , hspec                >= 1.4
      , monad-logger         >= 0.3.4.0
    default-extensions: 
        OverloadedStrings
