-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:f4816dfcb258550e297510e07e064c19
    SHA1:95e98279f036bc9bd27a21103fdeeca5de3b0a12
    SHA256:75e566d5f7343d423fac02db6a825f746752aa5d6714f33064b2ef4e20ce9773
    SHA512:0c467abfefb311f465e7a1d843f743d05096e241d5630b96881da1cf55e5d49f28530ea521c874ea3424b6d6cec7ce5668557998c81de3ba5b2224eae99d70cd
    Skein512_512:1a03816e35bc7ce47ce315efe2e5e8d855d4bdb32b973ca0d2d32bb9cad91ce87511bb5b9175f3c6200550ed7871919baffad5dab2be87d5c85fb0b10d22ac63

package-locations:
    https://hackage.haskell.org/package/disjoint-set-0.1/disjoint-set-0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/disjoint-set-0.1.tar.gz

package-size: 5861
-- END Added by all-cabal-hashes-tool

Name:                disjoint-set
Version:             0.1
Synopsis:            Persistent disjoint-sets, a.k.a union-find.
Description:         This is a persistent data structure for disjoint sets.
                     .
                     The algorithm is described in "Introduction to
                     Algorithms" by Cormen, et al. The implementation here
                     uses both union by rank and path compression. We
                     incur an O(logn) overhead because of the use of
                     persistent maps.
                     .
                     Data.IntDisjointSet is as strict as possible.
License:             LGPL
License-file:        LICENSE
Author:              Maxwell Sayles <maxwellsayles@gmail.com>
Maintainer:          Maxwell Sayles <maxwellsayles@gmail.com>
Category:            Data
Build-type:          Simple
Stability:           stable
Homepage:            https://github.com/maxwellsayles/disjoint-set
Cabal-version:       >= 1.8

Library
  Exposed-modules:   Data.IntDisjointSet
  Build-depends:     base >= 3 && < 5,
                     containers >= 0.3,
                     mtl >= 2,
                     transformers >= 0.3
