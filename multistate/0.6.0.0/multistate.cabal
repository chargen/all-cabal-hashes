-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:b971491d266d1fc49ee1563285416ab6
    SHA1:ad058549098e083982861922a366d6b437d5a62c
    SHA256:911af35166d2446325bc3eb0343b28a9ddbbe0703618cf29904cbd463c26659d
    SHA512:7da667759d16a203a49eda353b2479e477181ad2bc46030fc1a49a2ecb402c95568adcb50ecb1011769ce374f2b32e64d2046daa741de213409e75de16eb0aba
    Skein512_512:bb150a1c2e1e04993b808349305d05875a5231ae9875523b16f20527bc6e0296a2fa3736c6c59115c2611a1824c91a8f38a3a0aa55e132d4029a302b5bbf6c85

x-package-locations:
    https://hackage.haskell.org/package/multistate-0.6.0.0/multistate-0.6.0.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/multistate-0.6.0.0.tar.gz

x-package-size: 17235
-- END Added by all-cabal-hashes-tool

Name:          multistate
Version:       0.6.0.0
Cabal-Version: >= 1.10
Build-Type:    Simple
license:       BSD3
license-file:  LICENSE
Copyright:     Jan Bracker, Lennart Spitzner
Maintainer:    Lennart Spitzner <lsp@informatik.uni-kiel.de>
Author:        Jan Bracker, Lennart Spitzner
Homepage:      https://github.com/lspitzner/multistate
Bug-reports:   https://github.com/lspitzner/multistate/issues
Stability:     Experimental
category:      Control
tested-with:   GHC == 7.6.3, GHC == 7.8.4, GHC == 7.10.1

Synopsis: like mtl's ReaderT / WriterT / StateT, but more than one
          contained value/type.
Description:
  When using multiple Read\/Write\/State transformers in the same monad stack,
  it becomes necessary to lift the operations in order to affect a specific
  transformer.
  Using heterogeneous lists (and all kinds of GHC extensions magic),
  this package provides transformers that remove that necessity:
  MultiReaderT\/MultiWriterT\/MultiStateT\/MultiRWST can contain a
  heterogeneous list of values.
  .
  See the <https://github.com/lspitzner/multistate README> for
  a longer description.
  .
  The latest published version contains some breaking changes.
  Please complain if this causes problems (for future consideration).

extra-source-files:
    README.md
    changelog.md

source-repository head
  type: git
  location: git@github.com:lspitzner/multistate.git

flag build-example
  description: Build the MultiState-example example program
  default: False

library {
  default-language:
    Haskell2010
  exposed-modules:
    Data.HList.HList
    Data.HList.ContainsType
    Control.Monad.MultiState
    Control.Monad.MultiReader
    Control.Monad.MultiWriter
    Control.Monad.Trans.MultiReader
    Control.Monad.Trans.MultiReader.Class
    Control.Monad.Trans.MultiReader.Lazy
    Control.Monad.Trans.MultiReader.Strict
    Control.Monad.Trans.MultiWriter
    Control.Monad.Trans.MultiWriter.Class
    Control.Monad.Trans.MultiWriter.Lazy
    Control.Monad.Trans.MultiWriter.Strict
    Control.Monad.Trans.MultiState
    Control.Monad.Trans.MultiState.Class
    Control.Monad.Trans.MultiState.Lazy
    Control.Monad.Trans.MultiState.Strict
    Control.Monad.Trans.MultiRWS
    Control.Monad.Trans.MultiRWS.Lazy
    Control.Monad.Trans.MultiRWS.Strict
  other-modules:
  build-depends:
    base         >= 4.6   && <4.9,
    mtl          >= 2.1   && <2.3,
    transformers >= 0.3   && <0.5,
    tagged       >= 0.7   && <0.9
  default-extensions:
    GADTs
    TypeFamilies
    MultiParamTypeClasses
    FunctionalDependencies
    FlexibleInstances
    OverlappingInstances
    UndecidableInstances
    TypeOperators
    DataKinds
  ghc-options: -Wall
  hs-source-dirs: src
}

test-suite multistate-test {
  type:             exitcode-stdio-1.0
  default-language: Haskell2010
  buildable:        True
  build-depends:
    -- no version constraints necessary, because they are already
    -- given by library
    multistate,
    base,
    transformers,
    hspec
  ghc-options:      -Wall
  main-is:          Test.hs
  hs-source-dirs:   test
}

executable multistate-example {
  default-language:
    Haskell2010
  if flag(build-example) {
    buildable: True
    build-depends:
      -- no version constraints necessary, because they are already
      -- given by library
      multistate,
      base,
      mtl,
      transformers
  } else {
    buildable: False
  }
  main-is: Example.hs
  hs-source-dirs: example
}
