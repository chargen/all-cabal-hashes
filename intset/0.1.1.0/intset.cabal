-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:4363aed3ce764b74ef4c25075aa1e68b
    SHA1:8fae8ef6dd4f88444b779ad6ca34274bdeca98f5
    SHA256:60d2c3923889cc99ede3544cd0576cc4927098dec4e49ba8aa86a8273ee29610
    SHA512:3696574225ecfa13ec97284f796bb3d8a8cd7a9eff352bb029e1d4a0b764bd8b358e305df093af985e59e31360f5bd680805ebdf30e13add2e2dbdb9190e65f8
    Skein512_512:96a276921c8e9b75ba786a64e5bddadca8e2b867984bdf58be832ced17600b2389632897a677494256c1e496afdeff6a013531c58ddbe8137902681a65f40729

package-locations:
    https://hackage.haskell.org/package/intset-0.1.1.0/intset-0.1.1.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/intset-0.1.1.0.tar.gz

package-size: 23565
-- END Added by all-cabal-hashes-tool

name:                  intset
version:               0.1.1.0
category:              Data
license:               BSD3
license-file:          LICENSE
author:                Sam Truzjan
maintainer:            Sam Truzjan <pxqr.sta@gmail.com>
copyright:             (c) 2013, Sam Truzjan
homepage:              https://github.com/pxqr/intset
bug-reports:           https://github.com/pxqr/intset/issues
build-type:            Simple
cabal-version:         >= 1.8
synopsis:              Pure, mergeable, succinct Int sets.
description:

   This library provides persistent, time and space efficient integer
   sets implemented as dense big-endian patricia trees with buddy
   suffixes compaction. In randomized settings this structure expected
   to be as fast as Data.IntSet from containers, but if a sets is
   likely to have long continuous intervals it should be much faster.


extra-source-files:    README.md
                       ChangeLog
                       .travis.yml

source-repository head
  type:                git
  location:            git://github.com/pxqr/intset.git

source-repository this
  type:                git
  location:            git://github.com/pxqr/intset.git
  branch:              master
  tag:                 v0.1.1.0


flag testing
  description:         Enable testing stuff and expose internals.
  default:             False


library
  exposed-modules:     Data.IntervalSet
                     , Data.IntervalSet.ByteString
  other-modules:       Data.IntervalSet.Internal
  build-depends:       base == 4.*
                     , bits-extras >= 0.1.2
                     , bytestring
                     , deepseq

  hs-source-dirs:      src
  ghc-options:         -Wall

  if flag(testing)
    cpp-options:       -DTESTING


test-suite properties
  type:                exitcode-stdio-1.0
  main-is:             Main.hs
  hs-source-dirs:      tests
  build-depends:       base == 4.*
                     , test-framework
                     , test-framework-quickcheck2 >= 0.3
                     , QuickCheck
                     , intset
  ghc-options:         -Wall
  if !flag(testing)
      buildable:       False


test-suite fusion
  type:                exitcode-stdio-1.0
  main-is:             Fusion.hs
  hs-source-dirs:      tests
  build-depends:       base == 4.*, intset
  ghc-options:         -Wall -ddump-simpl-stats
  -- to avoid -ddump-simpl-stats output
  if !flag(testing)
      buildable:       False


benchmark benchmarks
  type:                exitcode-stdio-1.0
  main-is:             Main.hs
  hs-source-dirs:      bench
  build-depends:       base == 4.*
                     , bytestring
                     , containers >= 0.5.2
                     , criterion
                     , deepseq
                     , intset
  ghc-options:         -O3 -Wall -fno-warn-orphans
--  -fllvm
  if !flag(testing)
      buildable:       False
