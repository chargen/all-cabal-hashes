-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:da99e0e90b2a1ec3162420ac0f78a263
    SHA1:a91a515369bbee8f0878994030391da4571028b8
    SHA256:5311500253965eb5163a1505b9bb2882299f76f354b4b66425e8982ce69333a3
    SHA512:b550bace4b5124618ff95fcaf391064df607f0d5e487eff4b959047937633509c40a24beb2b490ecf81e02a64ab952fcacb5c1befd07e35269cc928a76cd138b
    Skein512_512:6ef172c2267b86b98f96323aed6555035d0d5f05b14d3415e1a699af1bc2a16df483f15b2375101841454c77544421ecd8328c488288b1ca0b8a4e26da85bf50

x-package-locations:
    https://hackage.haskell.org/package/nerf-0.5.3/nerf-0.5.3.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/nerf-0.5.3.tar.gz

x-package-size: 17747
-- END Added by all-cabal-hashes-tool

name:               nerf
version:            0.5.3
synopsis:           Nerf, the named entity recognition tool based on linear-chain CRFs
description:
    The package provides the named entity recognition (NER) tool divided into a
    back-end library (see the "NLP.Nerf" module) and the front-end tool nerf.
    Using the library you can model and recognize named entities (NEs) which,
    for a particular sentence, take the form of forest with NE category values
    kept in internal nodes and sentence words kept in forest leaves.
    .
    To model NE forests we combine two different techniques. The IOB codec
    is used to translate to and fro between the original, forest representation
    of NEs and the sequence of atomic labels. In other words, it provides two
    isomorphic functions for encoding and decoding between both
    representations. Linear-chain conditional random fields, on the other hand,
    provide the framework for label modelling and tagging. 
license:            BSD3
license-file:       LICENSE
cabal-version:      >= 1.6
copyright:          Copyright (c) 2012 IPI PAN
author:             Jakub Waszczuk
maintainer:         waszczuk.kuba@gmail.com
stability:          experimental
category:           Natural Language Processing
homepage:           https://github.com/kawu/nerf
build-type:         Simple

library
    hs-source-dirs: src

    build-depends:
        base                >= 4        && < 5
      , containers
      , vector
      , text
      , binary
      , bytestring          >= 0.9      && < 0.11
      , text-binary         >= 0.1      && < 0.2
      , tagsoup             >= 0.13     && < 0.14
      , polysoup            >= 0.2      && < 0.3
      , crf-chain1          >= 0.2      && < 0.3
      , data-named          >= 0.5.1    && < 0.6
      , monad-ox            >= 0.2      && < 0.3
      , sgd                 >= 0.2.1    && < 0.3
      , polimorf            >= 0.6.0    && < 0.7
      , dawg                >= 0.8.1    && < 0.9
      , tokenize            == 0.1.3
      , mtl                 >= 2.1      && < 2.3
      , network             >= 2.3      && < 2.7
      , cmdargs             >= 0.10     && < 0.11
      , IntervalMap         >= 0.3      && < 0.4

    exposed-modules:
        NLP.Nerf
      , NLP.Nerf.Types
      , NLP.Nerf.Schema
      , NLP.Nerf.Tokenize
      , NLP.Nerf.Dict
      , NLP.Nerf.Dict.Base
      , NLP.Nerf.Dict.PNEG
      , NLP.Nerf.Dict.PNET
      , NLP.Nerf.Dict.NELexicon
      , NLP.Nerf.Dict.Prolexbase
      , NLP.Nerf.Compare
      , NLP.Nerf.Server
      , NLP.Nerf.XCES

    ghc-options: -Wall -O2

source-repository head
    type: git
    location: https://github.com/kawu/nerf.git

executable nerf
  hs-source-dirs: src, tools
  build-depends:
    filepath            >= 1.3      && < 1.4,
    directory           >= 1.1      && < 1.3,
    temporary           >= 1.1      && < 1.2
  main-is: nerf.hs
  ghc-options: -Wall -O2 -threaded -rtsopts
