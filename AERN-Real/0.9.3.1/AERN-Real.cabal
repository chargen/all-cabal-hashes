-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:1f22752c30cb1faa34bb096cc0539aef
    SHA1:9c352fa9828667f3457f740931273c04fa5e2eaf
    SHA256:24feb54b514f88c09f5f94b0668c8fb9447896c9c5d3e01ee8df7798779be01c
    SHA512:bfcb7a79a661f77e4d37f80967e16f91f138513b4192d3ff32d7993b152b9124371053bbc0fa4d14a3e7065c40661036f3229d0d9fa9041783d8d9138d32c58f
    Skein512_512:e4df3af31ca20c2c1f380e3815aa3126fc6e7c5cc719dd716e9edd67b1e6935b373880c8fba068a5c76f6cdd4fba2fb3639031d1a2d417eff671bbcef276fe94

x-package-locations:
    https://hackage.haskell.org/package/AERN-Real-0.9.3.1/AERN-Real-0.9.3.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/AERN-Real-0.9.3.1.tar.gz

x-package-size: 32571
-- END Added by all-cabal-hashes-tool

Name:           AERN-Real
Version:        0.9.3.1
Cabal-Version:  >= 1.2
Build-Type:     Simple
License:        BSD3
License-File:   LICENCE
Author:         Michal Konecny (Aston University)
Copyright:      (c) 2007-2008 Michal Konecny, Amin Farjudian, Jan Duracz 
Maintainer:     mik@konecny.aow.cz
Stability:      experimental
Category:       Data, Math
Synopsis:       datatypes and abstractions for approximating exact real numbers
Tested-with:    GHC ==6.8.2
Description:
    Datatypes and abstractions for approximating exact real numbers
    and a basic arithmetic over such approximations.  The design is
    inspired to some degree by Mueller's iRRAM and Lambov's RealLib
    (both are C++ libraries for exact real arithmetic).
    .
    Abstractions are provided via 4 type classes:
    .
    * ERRealBase: abstracts floating point numbers
    .
    * ERApprox: abstracts neighbourhoods of real numbers
    .
    * ERIntApprox: abstracts neighbourhoods of real numbers that are known to be intervals
    .
    * ERApproxElementary: abstracts real number approximations that support elementary operations
    .
    For ERRealBase we give several implementations.  The default is 
    an arbitrary precision floating point type that uses Double
    for lower precisions and an Integer-based simulation for higher
    precisions.  Rational numbers can be used as one of the alternatives.
    Augustsson's Data.Number.BigFloat can be easily wrapped as an instance
    of ERRealBase except that it uses a different method to control precision.
    .
    ERIntApprox is implemented via outwards-rounded arbitrary precision interval arithmetic.  
    Any instance of ERRealBase can be used for the endpoints of the intervals.
    .
    ERApproxElementary is implemented generically for any implementation
    of ERIntApprox.  This way some of the most common elementary operations are provided, 
    notably: sqrt, exp, log, sin, cos, atan.  These operations converge 
    to an arbitrary precision and also work well over larger intervals without
    excessive wrapping.
    .
    There is also some support for generic Taylor series, interval Newton method
    and simple numerical integration.

Extra-source-files:
    HISTORY tests/Test1.hs

Flag containers-in-base
    Default: False

Library
  hs-source-dirs:  src
  if flag(containers-in-base)
    Build-Depends:
      base < 3, binary >= 0.4, haskell98
  else
    Build-Depends:
      base >= 3, containers, binary >= 0.4, haskell98
  Exposed-modules:
    Data.Number.ER,
    Data.Number.ER.Real,
    Data.Number.ER.Real.DefaultRepr,
    Data.Number.ER.Real.Base.MachineDouble,
    Data.Number.ER.Real.Base.CombinedMachineAP,
    Data.Number.ER.Real.Base.Rational,
    Data.Number.ER.Real.Base.Float,
    Data.Number.ER.Real.Base,
    Data.Number.ER.Real.Arithmetic.Elementary,
    Data.Number.ER.Real.Arithmetic.Integration,
    Data.Number.ER.Real.Arithmetic.Taylor,
    Data.Number.ER.Real.Arithmetic.Newton,
    Data.Number.ER.Real.Approx.Sequence,
    Data.Number.ER.Real.Approx.Elementary,
    Data.Number.ER.Real.Approx.Interval,
    Data.Number.ER.Real.Approx,
    Data.Number.ER.PlusMinus,
    Data.Number.ER.BasicTypes,
    Data.Number.ER.Misc,
    Data.Number.ER.ExtendedInteger
  Extensions: DeriveDataTypeable, ForeignFunctionInterface, ScopedTypeVariables
  