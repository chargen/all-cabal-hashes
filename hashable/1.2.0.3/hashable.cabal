-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:9e5345bd9d628e0e0f220b80b877152c
    SHA1:3d73c0c23a0e437347e4d6b365164cad9cea7c27
    SHA256:b7bebd970f9676dbfc2bc5c50375d85f9f19f1abfd1a4b77ba0e1b9faba09f60
    SHA512:240f6b28e974c8dbbd2f5378bef5d25557bdc6a8988b780ceaf0cf2df3d9bcac2dd516316a9f0e17d37c70f37d2d8211fb799b3745bd3de14d6fd80ea3777e3b
    Skein512_512:f6db735da171a7b0582418e1e6896caef9ec7535be9d564457bc77aaa4ba0a9b78c9bbccd878739199167f3c5f799ef2382dc02d59248dddd325abb3e5e3c456

x-package-locations:
    https://hackage.haskell.org/package/hashable-1.2.0.3/hashable-1.2.0.3.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/hashable-1.2.0.3.tar.gz

x-package-size: 21985
-- END Added by all-cabal-hashes-tool

x-revision: 3
Name:                hashable
Version:             1.2.0.3
Synopsis:            A class for types that can be converted to a hash value
Description:         This package defines a class, 'Hashable', for types that
                     can be converted to a hash value.  This class
                     exists for the benefit of hashing-based data
                     structures.  The package provides instances for
                     basic types and a way to combine hash values.
Homepage:            http://github.com/tibbe/hashable
License:             BSD3
License-file:        LICENSE
Author:              Milan Straka <fox@ucw.cz>
                     Johan Tibell <johan.tibell@gmail.com>
Maintainer:          johan.tibell@gmail.com
bug-reports:         https://github.com/tibbe/hashable/issues
Stability:           Provisional
Category:            Data
Build-type:          Simple
Cabal-version:       >=1.8
-- tests/Properties.hs shouldn't have to go here, but the source files
-- for the test-suite stanzas don't get picked up by `cabal sdist`.
Extra-source-files:
  CHANGES, README.md, tests/Properties.hs, benchmarks/Benchmarks.hs,
  cbits/siphash.h

Flag integer-gmp
  Description: Are we using integer-gmp to provide fast Integer instances?
  Default: True

Flag fixed-salt
  Description: Do we use a single fixed salt every time the program runs?
  Default: False

Flag sse41
  Description: Do we want to assume that a target supports SSE 4.1?
  Default: False

Library
  Exposed-modules:   Data.Hashable
  Other-modules:     Data.Hashable.Class
                     Data.Hashable.RandomSource
                     Data.Hashable.SipHash
  Build-depends:     base >= 4.0 && < 4.8,
                     bytestring >= 0.9 && < 0.11
  if impl(ghc)
    Build-depends:   ghc-prim,
                     text >= 0.11.0.5
  if impl(ghc) && flag(integer-gmp)
    Build-depends:   integer-gmp >= 0.2 && < 1

  if impl(ghc >= 7.2.1)
    CPP-Options:     -DGENERICS
    Other-modules:   Data.Hashable.Generic

  C-sources:         cbits/getRandomBytes.c
                     cbits/inthash.c
                     cbits/siphash.c
  if arch(i386)
    C-sources:       cbits/siphash-sse2.c
    CC-options:      -msse2

    if flag(sse41)
      CPP-Options:   -DHAVE_SSE41
      CC-options:    -msse41
      C-sources:     cbits/siphash-sse41.c

  Ghc-options:       -Wall
  if impl(ghc >= 6.8)
    Ghc-options: -fwarn-tabs
  if flag(fixed-salt)
    Cpp-options: -DFIXED_SALT
  if os(windows)
    extra-libraries: advapi32

-- DISABLED: older Cabal lib versions have a bug which means they fall
-- over when looking at test-suite sections that contain conditionals
--Test-suite tests
--  Type:              exitcode-stdio-1.0
--  Hs-source-dirs:    tests
--  Main-is:           Properties.hs
--  Build-depends:     base >= 4.0 && < 4.8,
--                     bytestring,
--                     ghc-prim,
--                     hashable,
--                     test-framework >= 0.3.3,
--                     test-framework-quickcheck2 >= 0.2.9,
--                     QuickCheck >= 2.4.0.1,
--                     random == 1.0.*,
--                     text >= 0.11.0.5
--
--  Ghc-options:       -Wall -fno-warn-orphans
--  if impl(ghc >= 7.2.1)
--    CPP-Options:     -DGENERICS
--
--benchmark benchmarks
--  -- We cannot depend on the hashable library directly as that creates
--  -- a dependency cycle.
--  hs-source-dirs: . benchmarks
--
--  main-is: Benchmarks.hs
--  other-modules:
--    Data.Hashable
--    Data.Hashable.Class
--    Data.Hashable.RandomSource
--    Data.Hashable.SipHash
--  type: exitcode-stdio-1.0
--
--  build-depends:
--    base,
--    bytestring,
--    criterion,
--    ghc-prim,
--    siphash,
--    text
--
--  if impl(ghc)
--    Build-depends:   ghc-prim,
--                     text >= 0.11.0.5
--  if impl(ghc) && flag(integer-gmp)
--    Build-depends:   integer-gmp >= 0.2
--
--  c-sources:
--    cbits/getRandomBytes.c
--    cbits/inthash.c
--    cbits/siphash.c
--    benchmarks/cbits/fnv.c
--    benchmarks/cbits/inthash.c
--
--  if arch(i386) || arch(x86_64)
--    cpp-options: -DHAVE_SSE2
--    cc-options: -msse2
--    c-sources:
--      cbits/siphash-sse2.c
--
--    if flag(sse41)
--      cpp-options: -DHAVE_SSE41
--      cc-options: -msse4.1
--      c-sources:
--        cbits/siphash-sse41.c
--
--  Ghc-options:       -Wall -O2
--  if impl(ghc >= 6.8)
--    Ghc-options: -fwarn-tabs
--  if flag(fixed-salt)
--    Cpp-options: -DFIXED_SALT
--  if os(windows)
--    extra-libraries: advapi32

source-repository head
  type:     git
  location: https://github.com/tibbe/hashable.git
