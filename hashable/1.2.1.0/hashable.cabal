-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:74f7cadb836e63f4d4b1a24be401228d
    SHA1:5c8b12e17dd745a08b2e077d6e0f87b99f93f58f
    SHA256:4ec07479fe37174e694b8d54cfc2111648e325fd1d7dce92366ed4ce2e7da126
    SHA512:343f6b9eb40d089f0f2187427af7d7b5dbe15884649ddc8e0b140db129f21fc44f6bf41a262a3b2a0c74d967be6f603799472802d835e48a442f836dd8142607
    Skein512_512:ca5161effd02970e35f1d6a15ef38bcac7b089604529e0ce31a9fb57968ceab229e4c17b986307117b7c5d9597d92e95d07dc86e225fa1db03119c4b15e6fea5

x-package-locations:
    https://hackage.haskell.org/package/hashable-1.2.1.0/hashable-1.2.1.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/hashable-1.2.1.0.tar.gz

x-package-size: 22389
-- END Added by all-cabal-hashes-tool

x-revision: 3
Name:                hashable
Version:             1.2.1.0
Synopsis:            A class for types that can be converted to a hash value
Description:         This package defines a class, 'Hashable', for types that
                     can be converted to a hash value.  This class
                     exists for the benefit of hashing-based data
                     structures.  The package provides instances for
                     basic types and a way to combine hash values.
Homepage:            http://github.com/tibbe/hashable
License:             BSD3
License-file:        LICENSE
Author:              Milan Straka <fox@ucw.cz>
                     Johan Tibell <johan.tibell@gmail.com>
Maintainer:          johan.tibell@gmail.com
bug-reports:         https://github.com/tibbe/hashable/issues
Stability:           Provisional
Category:            Data
Build-type:          Simple
Cabal-version:       >=1.8
-- tests/Properties.hs shouldn't have to go here, but the source files
-- for the test-suite stanzas don't get picked up by `cabal sdist`.
Extra-source-files:
  CHANGES, README.md, tests/Properties.hs, benchmarks/Benchmarks.hs

Flag integer-gmp
  Description: Are we using integer-gmp to provide fast Integer instances?
  Default: True

Flag sse2
  Description: Do we want to assume that a target supports SSE 2?
  Default: True

Flag sse41
  Description: Do we want to assume that a target supports SSE 4.1?
  Default: False

Library
  Exposed-modules:   Data.Hashable
  Other-modules:     Data.Hashable.Class
  Build-depends:     base >= 4.0 && < 4.8,
                     bytestring >= 0.9 && < 0.11
  if impl(ghc)
    Build-depends:   ghc-prim,
                     text >= 0.11.0.5
  if impl(ghc) && flag(integer-gmp)
    Build-depends:   integer-gmp >= 0.2 && < 1

  if impl(ghc >= 7.2.1)
    CPP-Options:     -DGENERICS
    Other-modules:   Data.Hashable.Generic

  C-sources:
                     cbits/fnv.c

  Ghc-options:       -Wall
  if impl(ghc >= 6.8)
    Ghc-options: -fwarn-tabs
  else
    c-sources:         cbits/getRandomBytes.c
    other-modules:     Data.Hashable.RandomSource
    if os(windows)
      extra-libraries: advapi32

Test-suite tests
  Type:              exitcode-stdio-1.0
  Hs-source-dirs:    tests
  Main-is:           Main.hs
  Other-modules:     Properties Regress
  Build-depends:     base >= 4.0 && < 4.8,
                     bytestring,
                     ghc-prim,
                     hashable,
                     test-framework >= 0.3.3,
                     test-framework-hunit,
                     test-framework-quickcheck2 >= 0.2.9,
                     HUnit,
                     QuickCheck >= 2.4.0.1,
                     random == 1.0.*,
                     text >= 0.11.0.5
  if !os(windows)
    Build-depends:   unix
    CPP-options:     -DHAVE_MMAP
    Other-modules:   Regress.Mmap

  Ghc-options:       -Wall -fno-warn-orphans
  if impl(ghc >= 7.2.1)
    CPP-Options:     -DGENERICS

benchmark benchmarks
  -- We cannot depend on the hashable library directly as that creates
  -- a dependency cycle.
  hs-source-dirs: . benchmarks

  main-is: Benchmarks.hs
  other-modules:
    Data.Hashable
    Data.Hashable.Class
    Data.Hashable.RandomSource
    Data.Hashable.SipHash
  type: exitcode-stdio-1.0

  build-depends:
    base,
    bytestring,
    criterion,
    ghc-prim,
    siphash,
    text

  if impl(ghc)
    Build-depends:   ghc-prim,
                     text >= 0.11.0.5
  if impl(ghc) && flag(integer-gmp)
    Build-depends:   integer-gmp >= 0.2 && < 1

  c-sources:
    benchmarks/cbits/inthash.c
    benchmarks/cbits/siphash.c
    benchmarks/cbits/wang.c
    cbits/fnv.c

  if (arch(i386) || arch(x86_64)) && flag(sse2)
    cpp-options: -DHAVE_SSE2
    c-sources:
      benchmarks/cbits/siphash-sse2.c

    if flag(sse41)
      cpp-options: -DHAVE_SSE41
      c-sources:
        benchmarks/cbits/siphash-sse41.c

  Ghc-options:       -Wall -O2
  if impl(ghc >= 6.8)
    Ghc-options: -fwarn-tabs
  else
    c-sources:         cbits/getRandomBytes.c
    other-modules:     Data.Hashable.RandomSource
    if os(windows)
      extra-libraries: advapi32

source-repository head
  type:     git
  location: https://github.com/tibbe/hashable.git
