-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:504a390fc88620ceb56b3fef051bf0c3
    SHA1:d1cf724a497b4835bb8fcd796777fd7dd8cb41e2
    SHA256:40adf747a91fdf24e86afcacca80fb0031e0c8da6963664bfd70a4a80f992749
    SHA512:4f9460f23fa57f6f1781c7d3cb75ca8882f227bcc29a7508c9765f3c8ab2e3e0ad4ea9c57be07682da1bbeef145b44c10e035826fd8dc8463a3f0ae8fac85967
    Skein512_512:511cc5cce4fe054887306b94d7172be1685d72e4a5c226e40b8b68afce40e661ea8ca0e27d160d586d72efcf033a0c97e12681deeda870f1466dc35de5be462a

package-locations:
    https://hackage.haskell.org/package/ParserFunction-0.0.7/ParserFunction-0.0.7.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/ParserFunction-0.0.7.tar.gz

package-size: 3548
-- END Added by all-cabal-hashes-tool

name:          ParserFunction
version:       0.0.7
cabal-version: >= 1.6
license:       BSD3
license-file:  LICENSE
author:        Enzo Haussecker
maintainer:    ehaussecker@gmail.com
category:      Parsing
build-type:    Simple

synopsis:      Utilities for parsing and evaluating mathematical expressions.

description:
    ParserFunction provides utilities for parsing and evaluating mathematical expressions. The central parsing
    function in this package is @stringToExpr@, which parses a string-expression and returns a maybe expression tree.
    This tree is suitable for performing symbolic manipulation. Expressions can then be evaluated using the function
    @evalExpr@. If you wish to evaluate a string-expression without any intermediate operations, simply use the function
    @evalString@. Examples of these functions can be seen by viewing the source code of this module.

Library
  exposed-modules: Text.ParserCombinators.Parsec.ParserFunction
  build-depends:   base < 6, parsec, containers
