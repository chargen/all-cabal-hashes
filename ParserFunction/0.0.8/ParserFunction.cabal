-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:89c8f382340116ea327281bbc4bd5a56
    SHA1:7343ad187f165c2b4c3f2946d1f225de547e2719
    SHA256:fc3f781a98b7846d4eccee010c2d2a19631ac2cb91803c5f6d45d6dd6e10130b
    SHA512:23f5ca886c9546479177f7256b0f6076c23903c6cf67b27fb2b7b5126363b2fd7ea7b9b8bc795b684d11ffe4c516acf4b1e33b0db55901f333eff46d939c1c8a
    Skein512_512:c76eb8ae5603d90082512058b46b83b4334befbcfb51bc53fd31d141251b3fb88f994594b7ee1811a98e1c3873b7cacc77310c188c998cac12d632ec0f281990

package-locations:
    https://hackage.haskell.org/package/ParserFunction-0.0.8/ParserFunction-0.0.8.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/ParserFunction-0.0.8.tar.gz

package-size: 3592
-- END Added by all-cabal-hashes-tool

name:          ParserFunction
version:       0.0.8
cabal-version: >= 1.6
license:       BSD3
license-file:  LICENSE
author:        Enzo Haussecker
maintainer:    ehaussecker@gmail.com
category:      Parsing
build-type:    Simple

synopsis:      Utilities for parsing and evaluating mathematical expressions.

description:
    ParserFunction provides utilities for parsing and evaluating mathematical expressions. The central parsing
    function in this package is @stringToExpr@, which parses a string-expression and returns a maybe expression tree.
    This tree is suitable for performing symbolic manipulation. Expressions can then be evaluated using the function
    @evalExpr@. If you wish to evaluate a string-expression without any intermediate operations, simply use the function
    @evalString@. Examples of these functions can be seen by viewing the source code of this module.

Library
  exposed-modules: Text.ParserCombinators.Parsec.ParserFunction
  build-depends:   base < 6, parsec, containers
