-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:eaeff008e5e20ee6a488e7f64f6964b8
    SHA1:48ec184fcaad76ddf3a1d99eca1287b24d8a0780
    SHA256:6f184cf5240e68b19f3dc3b66e3c4717bc3a98a42ef8d1d2ca1b7456dacd0661
    SHA512:c47581ed53c3d5af7f091c273e40fa5303cef03290b1ce89f46d31112a7e1ec91823300f6c8c2e93d10d015c14d65f7bb9aa4862755da5f92189f0a7ea94b4da
    Skein512_512:82df50859da9a4aaff73dfd8c8fad94da2efbd37cbdfad2766ab14343de5ee106b9d993bd0c903230fe3c30d8d9832b14f6bf4a01fdb17e302daa29bb192cd01

x-package-locations:
    https://hackage.haskell.org/package/GLURaw-1.4.0.0/GLURaw-1.4.0.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/GLURaw-1.4.0.0.tar.gz

x-package-size: 7912
-- END Added by all-cabal-hashes-tool

name: GLURaw
version: 1.4.0.0
license: BSD3
license-file: LICENSE
maintainer: Sven Panne <svenpanne@gmail.com>, Jason Dagit <dagitj@gmail.com>
bug-reports: https://github.com/haskell-opengl/GLURaw/issues
homepage: http://www.haskell.org/haskellwiki/Opengl
category: Graphics
synopsis: A raw binding for the OpenGL graphics system
description:
   GLURaw is a raw Haskell binding for the GLU 1.3 OpenGL utility library. It is
   basically a 1:1 mapping of GLU's C API, intended as a basis for a nicer
   interface.
   .
   OpenGL is the industry's most widely used and supported 2D and 3D graphics
   application programming interface (API), incorporating a broad set of
   rendering, texture mapping, special effects, and other powerful visualization
   functions. For more information about OpenGL and its various extensions,
   please see <http://www.opengl.org/>
   and <http://www.opengl.org/registry/>.
build-type: Simple
cabal-version:  >= 1.6
extra-source-files:
   README.md
   include/HsGLURaw.h

flag UseNativeWindowsLibraries
   description:
      When compiling under Windows, use the native libraries instead of e.g. the
      ones coming with Cygwin.

library
   exposed-modules:
      Graphics.Rendering.GLU.Raw
      Graphics.Rendering.GLU.Raw.Callbacks,
      Graphics.Rendering.GLU.Raw.Functions,
      Graphics.Rendering.GLU.Raw.Tokens,
      Graphics.Rendering.GLU.Raw.Types
   other-modules:
      Graphics.Rendering.GLU.Raw.APIEntry,
      Graphics.Rendering.GLU.Raw.TypesInternal
   c-sources:
      cbits/HsGLURaw.c
   hs-Source-Dirs: src
   include-dirs: include
   build-depends: base >= 3 && < 5, OpenGLRaw >= 1.3.0.0
   ghc-options: -Wall -O2
   if os(windows) && flag(UseNativeWindowsLibraries)
      if arch(i386)
         cpp-options: "-DCALLCONV=stdcall"
      else
         cpp-options: "-DCALLCONV=ccall"
      cc-options: "-DUSE_GETPROCADDRESS"
      extra-libraries: glu32
   else
      cpp-options: "-DCALLCONV=ccall"
      cc-options: "-DUSE_DLSYM"
      if os(darwin)
         frameworks: OpenGL
      else
         if os(ios)
            frameworks: OpenGLES
         else
            extra-libraries: GLU

source-repository head
  type:     git
  location: https://github.com/haskell-opengl/GLURaw
