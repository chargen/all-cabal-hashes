-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:4db7713148808d13d626f3035360e776
    SHA1:1264f3da648c5ae7290a3650416a50445733ee4b
    SHA256:85f22409b4a5413a7180286caada7375deca4d16010f4681fe343175841c5684
    SHA512:8794bb4b5c98a6f2f11d8f7127ddef6ff1effa60944ff033c59f5249cbdbeed6bfdc1e60ba05ae65bbe7b15e9fddf0fbb109f780b570d257cceb63eb19f384b2
    Skein512_512:d42e9a663bc0ebcb07eb4502be4d4f7fd3257e7c57153ab3fe1df3d23b45a92a725d1d348e02b7aec941571521a9a821ef4ac1f3e6af13787a98c1ccddf22943

package-locations:
    https://hackage.haskell.org/package/regular-0.3.4.4/regular-0.3.4.4.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/regular-0.3.4.4.tar.gz

package-size: 14274
-- END Added by all-cabal-hashes-tool

name:                   regular
version:                0.3.4.4
synopsis:               Generic programming library for regular datatypes.
description:

  This package provides generic functionality for regular datatypes.
  Regular datatypes are recursive datatypes such as lists, binary trees,
  etc. This library cannot be used with mutually recursive datatypes or
  with nested datatypes. The multirec library [1] can deal with mutually
  recursive datatypes.
  .
  This library has been described in the paper:
  .
  *  /A Lightweight Approach to Datatype-Generic Rewriting./
     Thomas van Noort, Alexey Rodriguez, Stefan Holdermans, Johan Jeuring, Bastiaan Heeren.
     ACM SIGPLAN Workshop on Generic Programming 2008.
  .
  More information about this library can be found at
  <http://www.cs.uu.nl/wiki/GenericProgramming/Regular>.
  .
  \[1] <http://hackage.haskell.org/package/multirec>

category:               Generics
copyright:              (c) 2011 Universiteit Utrecht, 2012 University of Oxford
license:                BSD3
license-file:           LICENSE
author:                 Jose Pedro Magalhaes
maintainer:             generics@haskell.org
stability:              experimental
build-type:             Custom
cabal-version:          >= 1.6
extra-source-files:     examples/Test.hs
                        ChangeLog
                        CREDITS

source-repository head
  type: git
  location: git://github.com/dreixel/regular.git

library
  hs-source-dirs:       src
  exposed-modules:      Generics.Regular
                        Generics.Regular.Base
                        Generics.Regular.Constructor
                        Generics.Regular.Selector
                        Generics.Regular.TH

                        Generics.Regular.Functions
                        Generics.Regular.Functions.ConNames
                        Generics.Regular.Functions.Crush
                        Generics.Regular.Functions.Eq
                        Generics.Regular.Functions.Fold
                        Generics.Regular.Functions.GMap
                        Generics.Regular.Functions.LR
                        Generics.Regular.Functions.Read
                        Generics.Regular.Functions.Show
                        Generics.Regular.Functions.Zip

  build-depends:        base >= 4.0 && < 5
  if impl(ghc >= 6.12)
    build-depends:      template-haskell >=2.4 && <3
    cpp-options:          -DTH_TYVARBNDR
  else
    build-depends:      template-haskell >= 2.2 && < 2.4
  ghc-options:          -Wall
