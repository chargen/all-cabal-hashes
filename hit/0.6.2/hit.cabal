Name:                hit
Version:             0.6.2
Synopsis:            Git operations in haskell
Description:
    .
    An haskell implementation of git storage operations, allowing users
    to manipulate git repositories (read and write).
    .
    This implementation is fully interoperable with the main C implementation.
    .
    This is stricly only manipulating the git store (what's inside the .git directory),
    and doesn't do anything with the index or your working directory files.
    .
License:             BSD3
License-file:        LICENSE
Copyright:           Vincent Hanquez <vincent@snarc.org>
Author:              Vincent Hanquez <vincent@snarc.org>
Maintainer:          Vincent Hanquez <vincent@snarc.org>
Category:            Development
Stability:           experimental
Build-Type:          Simple
Homepage:            http://github.com/vincenthz/hit
Cabal-Version:       >=1.8
data-files:          README.md
extra-source-files:  Tests/*.hs

Flag executable
  Description:       Build the executable
  Default:           False

Flag debug
  Description:       Add some debugging options
  Default:           False

Library
  Build-Depends:     base >= 4 && < 5
                   , mtl
                   , bytestring >= 0.9
                   , attoparsec >= 0.10.1
                   , parsec     >= 3
                   , containers
                   , system-filepath
                   , system-fileio
                   , cryptohash
                   , vector
                   , random
                   , zlib
                   , zlib-bindings >= 0.1 && < 0.2
                   , hourglass >= 0.2
                   , unix-compat
                   , patience
  Exposed-modules:   Data.Git
                     Data.Git.Types
                     Data.Git.Storage
                     Data.Git.Storage.PackIndex
                     Data.Git.Storage.Pack
                     Data.Git.Storage.Object
                     Data.Git.Storage.Loose
                     Data.Git.Named
                     Data.Git.Delta
                     Data.Git.Ref
                     Data.Git.Revision
                     Data.Git.Repository
                     Data.Git.Diff
  Other-modules:     Data.Git.Internal
                     Data.Git.Config
                     Data.Git.Storage.FileReader
                     Data.Git.Storage.FileWriter
                     Data.Git.Storage.CacheFile
                     Data.Git.Path
  ghc-options:       -Wall -fno-warn-missing-signatures

Executable           Hit
  Main-Is:           Hit.hs
  hs-source-dirs:    Hit
  ghc-options:       -Wall -fno-warn-orphans -fno-warn-missing-signatures
  if flag(debug)
    ghc-options:     -rtsopts -auto-all -caf-all
  if flag(executable)
    Build-depends:   base >= 4 && < 5
                   , mtl
                   , containers
                   , hashable >= 1.2
                   , hashtables
                   , bytestring
                   , attoparsec >= 0.10.1
                   , parsec     >= 3
                   , filepath
                   , directory
                   , hit
                   , hourglass
                   , patience
    Buildable: True
  else
    Buildable: False

Test-Suite test-unit
  type:              exitcode-stdio-1.0
  hs-source-dirs:    Tests
  Main-Is:           Tests.hs
  Build-depends:     base >= 3 && < 7
                   , HUnit
                   , QuickCheck >= 2
                   , bytestring
                   , test-framework >= 0.3
                   , test-framework-quickcheck2 >= 0.2
                   , hourglass
                   , hit

Test-Suite test-repository
  type:              exitcode-stdio-1.0
  hs-source-dirs:    Tests
  Main-Is:           Repo.hs
  Build-depends:     base >= 3 && < 7
                   , HUnit
                   , QuickCheck >= 2
                   , bytestring
                   , test-framework >= 0.3
                   , test-framework-quickcheck2 >= 0.2
                   , hourglass
                   , bytedump >= 1.0
                   , hit

source-repository head
  type: git
  location: git://github.com/vincenthz/hit


package-hashes:
    MD5:14bc799c60b2d61dfaeb4b66513ef1b4
    SHA1:a3ffc6566807e0eeb9f2ba730dc79acbbadd07b4
    SHA256:1a9ea48c708332c55ccb8182fd4662ffdd9914f1b19520fd9c1e6d44ec928e1e
    SHA512:25e395a827057d870d89ebd3158e37840fcc16263f172febe29e651ff06283833480261963f0873127a984a70e86f3789dd402eb0a5a952c6296f218a89d86f1
    Skein512_512:f5bf5544c9a5b2bafeb87c5abaf619db9969cc7b41ba1ace2d01d58f1a04078bf83c81ee32da1992d931e130591189a08edbd456caa6b6d69460143718cac5a0

package-locations:
    https://hackage.haskell.org/package/hit-0.6.2/hit-0.6.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/hit-0.6.2.tar.gz

