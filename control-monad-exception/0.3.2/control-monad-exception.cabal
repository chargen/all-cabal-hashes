name: control-monad-exception
version: 0.3.2
Cabal-Version:  >= 1.2.3
build-type: Simple
license: PublicDomain
author: Pepe Iborra
maintainer: pepeiborra@gmail.com
homepage: http://github.com/pepeiborra/control-monad-exception
description: 
  This package provides explicitly typed, checked exceptions as a library.

  /Example/
  .
  > data Expr = Add Expr Expr | Div Expr Expr | Val Double
  > eval (Val x)     = return x
  > eval (Add a1 a2) = do
  >    v1 <- eval a1
  >    v2 <- eval a2
  >    let sum = v1 + v2
  >    if sum < v1 || sum < v2 then throw SumOverflow else return sum
  > eval (Div a1 a2) = do
  >    v1 <- eval a1
  >    v2 <- eval a2
  >    if v2 == 0 then throw DivideByZero else return (v1 / v2)
  .
  > data DivideByZero = DivideByZero deriving (Show, Typeable)
  > data SumOverflow  = SumOverflow  deriving (Show, Typeable)
  .
  > instance Exception DivideByZero
  > instance Exception SumOverflow
  .
  GHCi infers the following types
  .
  > eval :: (Throws DivideByZero l, Throws SumOverflow l) => Expr -> EM l Double
  > eval `catch` \ (e::DivideByZero) -> return (-1)  :: Throws SumOverflow l => Expr -> EM l Double
  > runEM(eval `catch` \ (e::SomeException) -> return (-1))  :: Expr -> Double

synopsis: Explicitly typed exceptions
category: Control, Monads
stability: experimental
tested-with: GHC ==6.8.2
tested-with: GHC ==6.10.2
tested-with: GHC ==6.10.3

Flag extensibleExceptions
  description: Use extensible-exception package
  default: False

Library
  buildable: True
  if flag(extensibleExceptions)
    build-depends:
      extensible-exceptions >= 0.1 && <0.2,
      base >= 3.0 && <4
  else
    build-depends:
      base >= 4 && < 5

  build-depends:
    transformers >= 0.0.1 && <0.2,
    monads-fd >= 0.0 && <0.1
  extensions:  MultiParamTypeClasses, 
               FunctionalDependencies,
               FlexibleInstances,
               EmptyDataDecls,
               DeriveDataTypeable,
               UndecidableInstances
  exposed-modules:
     Control.Monad.Exception.Class
     Control.Monad.Exception
  ghc-options: -Wall -fno-warn-name-shadowing


package-hashes:
    MD5:4e50240f4cd8bfb4ab722dfcf0512363
    SHA1:d2c23981d0b51940864dc90a1d7cea9c02d31cb4
    SHA256:f8082d23c1e8b4d222b3074d6fecfca02cb12c495792208bd01d71b1673b9a7b
    SHA512:0467dc8cfa78cdf611cb96de37d6a391269c09607ec3decc219d862f526d03c8fa1a89db34187ab3b88543ab9f9f8d76d83ecb24073ce009acf8ae0add527303
    Skein512_512:6c53e6239e46cf7bfeffce033eb702a4e7db5dfda1cc7cf986d7abbd05f064c55690266e06e92f4e057e6c1c701bfea86d93608e5b53e3adc29843898fba140d

package-locations:
    https://hackage.haskell.org/package/control-monad-exception-0.3.2/control-monad-exception-0.3.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/control-monad-exception-0.3.2.tar.gz

