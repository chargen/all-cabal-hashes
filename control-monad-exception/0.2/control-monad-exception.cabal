name: control-monad-exception
version: 0.2
Cabal-Version:  >= 1.2.3
build-type: Simple
license: PublicDomain
author: Pepe Iborra
maintainer: pepeiborra@gmail.com
homepage: http://github.com/pepeiborra/control-monad-exception
description: 
  This package provides explicitly typed exceptions as a library.
  .
  /Example/
  .
  > data Expr = Add Expr Expr | Div Expr Expr | Val Double
  > eval (Val x)     = return x
  > eval (Add a1 a2) = do
  >    v1 <- eval a1
  >    v2 <- eval a2
  >    let sum = v1 + v2
  >    if sum < v1 || sum < v2 then throw SumOverflow else return sum
  > eval (Div a1 a2) = do
  >    v1 <- eval a1
  >    v2 <- eval a2
  >    if v2 == 0 then throw DivideByZero else return (v1 / v2)
  .
  > data DivideByZero = DivideByZero deriving (Show, Typeable)
  > data SumOverflow  = SumOverflow  deriving (Show, Typeable)
  .
  > instance Exception DivideByZero
  > instance Exception SumOverflow
  .
  GHCi infers the following types
  .
  > eval :: (Throws DivideByZero l, Throws SumOverflow l) => Expr -> EM l Double
  > eval `catch` \ (e::DivideByZero) -> return (-1)  :: Throws SumOverflow l => Expr -> EM l Double
  > runEM(eval `catch` \ (e::SomeException) -> return (-1))  :: Expr -> Double
synopsis: Explicitly typed exceptions
category: Control, Monads
stability: experimental
tested-with: GHC ==6.8.2
tested-with: GHC ==6.10.2
tested-with: GHC ==6.10.3

Flag extensibleExceptions
  description: Use extensible-exception package
  default: False

Library
  buildable: True
  if flag(extensibleExceptions)
    build-depends:
      extensible-exceptions >= 0.1 && <0.2,
      base >= 3.0 && <4
  else
    build-depends:
      base >= 4.0

  build-depends:
    transformers >= 0.0.1 && <0.2,
    monads-fd >= 0.0 && <0.1
  extensions:  MultiParamTypeClasses, 
               FunctionalDependencies,
               OverlappingInstances, 
               FlexibleInstances,
               EmptyDataDecls,
               DeriveDataTypeable,
               UndecidableInstances
  exposed-modules:
     Control.Monad.Exception.Class
     Control.Monad.Exception
  ghc-options: -Wall -fno-warn-name-shadowing


package-hashes:
    MD5:67b46e849716319a30ceb6edb1ef13cc
    SHA1:3b3a9fac1ee9c0a322aa72178a54c2e192c645b4
    SHA256:8a4cf003d6c6e84e5ac54dad00672c095e34fff552291d422da0db6a5e0bc65b
    SHA512:ed1091fc1508b558607b58f0ee25f6b5296eac4650f7a93b511ee03763ed42859313c504609ea2659f6ec6cfa0b1d38a828e90eea757a92395398d58ab40703b
    Skein512_512:908661900b2aabad07a09e6981a258546e0827527182db81e58eefc780944e17f08508461c68d68bddc1db86e328036fe7d04ba3a863f6e2ba071fc29528ac66

package-locations:
    https://hackage.haskell.org/package/control-monad-exception-0.2/control-monad-exception-0.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/control-monad-exception-0.2.tar.gz

