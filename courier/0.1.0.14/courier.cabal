-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:ab76c9c73740653e3fb0bf2e41110ff9
    SHA1:f426827b39c1c2e9aa0db9a30000f0dfef995f57
    SHA256:162e658bcb6113d22ad89f5baf98362a7fc7ce835d37eed8ddc6666700db515a
    SHA512:9627bc9cb24d23ff88018f57a9f479f92360019f9065de22e13898ff8c97e808012c99e53a5779343877b4da2fbf6f97973fb0429d103f31c9e32117d1129de6
    Skein512_512:7bb632a07ab5741cf45cde32ff03b6c4f4bfeccdadd9ebce08c046327cb9ddf50e16f3d1485041988bd301fbeac02665477ef6153e86542784f286a17ee756ec

x-package-locations:
    https://hackage.haskell.org/package/courier-0.1.0.14/courier-0.1.0.14.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/courier-0.1.0.14.tar.gz

x-package-size: 25125
-- END Added by all-cabal-hashes-tool

name:                courier
version:             0.1.0.14
synopsis:           A message-passing library for simplifying network applications
description:         Inspired by Erlang's simple message-passing facilities, courier provides roughly similar 
                     capabilities. Applications simply create one or more endpoints, 
                     bind each to a transport using a given name, then can freely 
                     send / receive messages to other endpoints just by referencing the name each endpoint 
                     bound to its transport.
                     .
                     A primary driver of this package's design is separation of concerns: many algorithms
                     (especially for distributed applications) depend upon a message-passing foundation,
                     but the algorithms are sufficiently complex that the details of how those messages
                     are transmitted among nodes are best hidden away and solved separately from
                     the distributed algorithm itself.  With this in mind, this package aims
                     to provide a variety of transports as well as support for common communication
                     idioms (e.g., in order message delivery, selective out of order message delivery,
                     synchronous RPC, etc.). 
                     .
                     Applications may process messages in the order received at an endpoint, or use
                     selective message reception to process the first message arriving at an endpoint
                     that also matches a provided selection function. Through selective message reception,
                     applications may approximate the style of an Erlang application, and enjoy better 
                     composability of message reception with multiple independent dispatch routines or
                      message pumps.
                     
extra-source-files:  changes.md
                     examples/HelloWorld.hs
                     tests/Tests.hs
                     tests/TestMailbox.hs
                     tests/TestMemory.hs
                     tests/TestRPC.hs
                     tests/TestTCP.hs
                     tests/TestTransports.hs
                     tests/TestUDP.hs

homepage:          http://github.com/hargettp/courier
license:             MIT
license-file:        LICENSE
author:              Phil Hargett
maintainer:          phil@haphazardhouse.net
copyright:           Copyright (c) 2013-14 Phil Hargett

category:            Network,Distributed Computing,Message-Oriented
build-type:          Simple
cabal-version:       >=1.8

source-repository head
  type:     git
  location: https://github.com/hargettp/courier.git

library
  hs-source-dirs: src

  exposed-modules:
                  Network.Endpoints
                  Network.Transport
                  Network.Transport.Memory
                  Network.Transport.TCP
                  Network.Transport.UDP
                  Control.Concurrent.Mailbox
                  Network.RPC

  ghc-options: -Wall -fno-state-hack
  other-modules:
                  Network.Transport.Sockets
                  Network.Transport.Internal
  build-depends:       base >=4.6 && <5,
                       async,
                       bytestring,
                       cereal,
                       containers,
                       hslogger,
                       network,
                       stm,
                       text,
                       uuid

Test-Suite test-courier
    type: exitcode-stdio-1.0
    hs-source-dirs: tests
    main-is: Tests.hs
    build-depends: 

        -- base modules
        base, 
        -- testing support
        HUnit, 
        test-framework,
        test-framework-hunit,
        -- Cabal,
        -- 3rd party modules
        async,
        cereal,
        containers,
        directory,
        hslogger,
        stm,
        -- this project's modules
        courier

    ghc-options: -Wall -threaded
