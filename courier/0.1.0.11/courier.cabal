-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:d00a7fa80191d7b993bbf7cf282ac48b
    SHA1:ff8fade8a003588d3e2f80bcca41cc24ee3ad03f
    SHA256:d9be76cc1849851ab2351810f7d50f5b850c89be2e4993479216357ea6653e2a
    SHA512:3817a45c7f7b95e6099a082980751fc2f120738cce6eb3e06dbadbad84e13cfe0d4c1312388fd188c5ab0b22468b23635ff39f5e16ce807ec793439c33dfe096
    Skein512_512:40b833c3d2db7cb4cef31e6faaeca5411aed16d07fecefcdae197d04b9c3eaecde9f5a43c4d607729187edb11f218e4ae86c7766dea594971a69799337d955ae

package-locations:
    https://hackage.haskell.org/package/courier-0.1.0.11/courier-0.1.0.11.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/courier-0.1.0.11.tar.gz

package-size: 21337
-- END Added by all-cabal-hashes-tool

name:                courier
version:             0.1.0.11
synopsis:           A message-passing library for simplifying network applications
description:         Inspired by Erlang's simple message-passing facilities, courier provides roughly similar 
                     capabilities. Applications simply create one or more endpoints, 
                     bind each to a transport using a given name, then can freely 
                     send / receive messages to other endpoints just by referencing the name each endpoint 
                     bound to its transport.
                     .
                     A primary driver of this package's design is separation of concerns: many algorithms
                     (especially for distributed applications) depend upon a message-passing foundation,
                     but the algorithms are sufficiently complex that the details of how those messages
                     are transmitted among nodes are best hidden away and solved separately from
                     the distributed algorithm itself.  With this in mind, this package aims
                     to provide a variety of transports as well as support for common communication
                     idioms (e.g., in order message delivery, selective out of order message delivery,
                     synchronous RPC, etc.). 
                     .
                     Applications may process messages in the order received at an endpoint, or use
                     selective message reception to process the first message arriving at an endpoint
                     that also matches a provided selection function. Through selective message reception,
                     applications may approximate the style of an Erlang application, and enjoy better 
                     composability of message reception with multiple independent dispatch routines or
                      message pumps.
                     
extra-source-files:  changes.md
                     examples/HelloWorld.hs
homepage:          http://github.com/hargettp/courier
license:             MIT
license-file:        LICENSE
author:              Phil Hargett
maintainer:          phil@haphazardhouse.net
copyright:           Copyright (c) 2013-14 Phil Hargett

category:            Network,Distributed Computing,Message-Oriented
build-type:          Simple
cabal-version:       >=1.8

source-repository head
  type:     git
  location: https://github.com/hargettp/courier.git

library
  hs-source-dirs: src

  exposed-modules:
                  Network.Endpoints
                  Network.Transport
                  Network.Transport.Memory
                  Network.Transport.TCP
                  Network.Transport.UDP
                  Control.Concurrent.Mailbox
                  Network.RPC

  ghc-options: -Wall
  other-modules:
                  Network.Transport.Sockets
                  Network.Transport.Internal
  build-depends:       base >=4 && <5,
                       async,
                       bytestring,
                       cereal,
                       containers,
                       hslogger,
                       network,
                       stm,
                       text,
                       uuid

Test-Suite test-courier
    type: exitcode-stdio-1.0
    hs-source-dirs: tests
    main-is: Tests.hs
    build-depends: 

        -- base modules
        base, 
        -- testing support
        HUnit, 
        test-framework,
        test-framework-hunit,
        -- Cabal,
        -- 3rd party modules
        async,
        cereal,
        containers,
        directory,
        hslogger,
        stm,
        -- this project's modules
        courier

    ghc-options: -Wall -threaded
