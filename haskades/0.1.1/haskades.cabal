-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:e3bf6234cb53007d4ecb0f696975ce35
    SHA1:d045ee03b6376016a04d3276ab716c4e57889c28
    SHA256:cbe663d49da57bd4c2c499fb00532a9361f094c330a90b1699225c44068f39e7
    SHA512:2c04c6174f77fa34933f393822dff9e6d537c2c0af5d99b5cf2af427ed395797a9a13f181c0293547fb703cc1f65fcd48e1b28f41b48ea27bf5ac48207aa5945
    Skein512_512:2aff0f34e0cbf8149ecaf4bbc6f78c6d17e9c0d28a0bd062d1feec3e14723e0c11d305dc3fb48c0ab21e26ca42cd2ebea0b63c9f87e9a78915f104e78334d358

x-package-locations:
    https://hackage.haskell.org/package/haskades-0.1.1/haskades-0.1.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/haskades-0.1.1.tar.gz

x-package-size: 9661
-- END Added by all-cabal-hashes-tool

name:            haskades
version:         0.1.1
cabal-version:   >= 1.8
license:         OtherLicense
license-file:    COPYING
category:        Utility
copyright:       Â© 2012 Stephen Paul Weber
author:          Stephen Paul Weber <singpolyma@singpolyma.net>
maintainer:      Stephen Paul Weber <singpolyma@singpolyma.net>
stability:       experimental
tested-with:     GHC == 7.0.3
synopsis:        Utility to generate bindings for BlackBerry Cascades
homepage:        http://github.com/singpolyma/haskades
bug-reports:     http://github.com/singpolyma/haskades/issues
build-type:      Simple
description:
        Autogeneration of bindings for creating BlackBerry Cascades apps
        with Haskell back ends.
        .
        Run as:
        .
        > ./haskades HaskadesBinding.hs haskades_run.cpp < Types.hs
        .
        Where Types.hs is a Haskell file containing a record type declaration
        named 'Slots' and a sum type declaration named 'Signals' which fully
        specifies the communication possible between the UI layer (which you
        write in QML) and the Haskell backend.  QML code can access these
        signals and slots on the 'app' context object.  Haskell code can emit
        signals by using the 'emit' function exported from the generated
        HaskadesBinding.  The 'emit' call is threadsafe.
        .
        Text, Lazy Text, and String all end up as QString so that QML can
        work with them properly, and vice-versa.  UTCTime becomes QDateTime.
        Int, Double, and () are passed through fairly directly.  Other types
        may have support added as there is need.

extra-source-files:
        README

executable haskades
        main-is: haskades.hs

        other-modules:
                Records,
                MustacheTemplates

        build-depends:
                base == 4.*,
                containers,
                bytestring,
                errors,
                haskell-src,
                text,
                text-format

source-repository head
        type:     git
        location: git://github.com/singpolyma/haskades.git
