-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:d23775cc824353292cb4750fdc84a151
    SHA1:a9e1900132045e6d115ced63c1f863db40db3559
    SHA256:6f00f1b98ccb83ff7f471f1e9183bd37cf9a6963ede9d3558254020dece20259
    SHA512:5b1e8539f217952e6f699f6e7ac6c907c4c4e09169c5afa1a6ac3f4186fa6e3c3cae5c18fadef2ecb9decf77c84a2633d07f693f12e73e6aabec8f49efafd08b
    Skein512_512:d0758d8d30506c7b094afdde6391530d68e08e1bee93a562d790525d8ae93d8a62fad4e1e6f4b1c1dd25cb31a64846bc8fa7f63d472791d32a70a29c7d5bd44d

x-package-locations:
    https://hackage.haskell.org/package/haskades-0.1/haskades-0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/haskades-0.1.tar.gz

x-package-size: 9614
-- END Added by all-cabal-hashes-tool

name:            haskades
version:         0.1
cabal-version:   >= 1.8
license:         OtherLicense
license-file:    COPYING
category:        Utility
copyright:       Â© 2012 Stephen Paul Weber
author:          Stephen Paul Weber <singpolyma@singpolyma.net>
maintainer:      Stephen Paul Weber <singpolyma@singpolyma.net>
stability:       experimental
tested-with:     GHC == 7.0.3
synopsis:        Utility to generate bindings for BlackBerry Cascades
homepage:        http://github.com/singpolyma/haskades
bug-reports:     http://github.com/singpolyma/haskades/issues
build-type:      Simple
description:
        Autogeneration of bindings for creating BlackBerry Cascades apps
        with Haskell back ends.
        .
        Run as:
        .
        > ./haskades HaskadesBinding.hs haskades_run.cpp < Types.hs
        .
        Where Types.hs is a Haskell file containing a record type declaration
        named 'Slots' and a sum type declaration named 'Signals' which fully
        specifies the communication possible between the UI layer (which you
        write in QML) and the Haskell backend.  QML code can access these
        signals and slots on the 'app' context object.  Haskell code can emit
        signals by using the 'emit' function exported from the generated
        HaskadesBinding.  The 'emit' call is threadsafe.
        .
        Text, Lazy Text, and String all end up as QString so that QML can
        work with them properly, and vice-versa.  UTCTime becomes QDateTime.
        Int, Double, and () are passed through fairly directly.  Other types
        may have support added as there is need.

extra-source-files:
        README

executable haskades
        main-is: haskades.hs

        other-modules:
                Records,
                MustacheTemplates

        build-depends:
                base == 4.*,
                containers,
                bytestring,
                errors,
                haskell-src,
                text,
                text-format

source-repository head
        type:     git
        location: git://github.com/singpolyma/haskades.git
