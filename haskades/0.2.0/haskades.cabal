-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:88bdee06ff3536ab98a7648acca2eef4
    SHA1:6a4078a67ccaf9afaa4d6fc846a194bd7dd883e3
    SHA256:89b3049d79d9a7efc8675d7b75e0d2e082c469fcec0e0f0c35c92574ca6167f6
    SHA512:4164b0c4a4450d17bbccf25de506e95425a37e57c8aea3bae341fbaf3eed30196fe0ac61b1a3076738a4f8e4114c57c953c1550f92586e8c493ecaaa46b2d798
    Skein512_512:aed63ecd495232963c7635987181723436c595029721496442ae867c6b95703151d8982c031e93adeb5e0886207442b09afc7286d8d3c455d67394a6159822d7

x-package-locations:
    https://hackage.haskell.org/package/haskades-0.2.0/haskades-0.2.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/haskades-0.2.0.tar.gz

x-package-size: 10489
-- END Added by all-cabal-hashes-tool

name:            haskades
version:         0.2.0
cabal-version:   >= 1.8
license:         OtherLicense
license-file:    COPYING
category:        Utility
copyright:       Â© 2012-2013 Stephen Paul Weber
author:          Stephen Paul Weber <singpolyma@singpolyma.net>
maintainer:      Stephen Paul Weber <singpolyma@singpolyma.net>
stability:       experimental
tested-with:     GHC == 7.4.2
synopsis:        Utility to generate bindings for BlackBerry Cascades
homepage:        http://github.com/singpolyma/haskades
bug-reports:     http://github.com/singpolyma/haskades/issues
build-type:      Simple
description:
        Autogeneration of bindings for creating BlackBerry Cascades apps
        with Haskell back ends.
        .
        Run as:
        .
        > ./haskades HaskadesBinding.hs haskades_run.cpp haskades_run.h < Types.hs
        .
        Where Types.hs is a Haskell file containing a a sum type declaration
        named 'SignalToUI' and another named 'SignalFromUI'  which fully
        specify the communication possible between the UI layer (which you
        write in QML) and the Haskell backend.  QML code can access these
        signals on the 'app' context object.  Haskell code can emit
        signals by using the 'emit' function exported from the generated
        HaskadesBinding.  The 'emit' call is threadsafe.
        .
        Text, Lazy Text, and String all end up as QString so that QML can
        work with them properly, and vice-versa.  UTCTime becomes QDateTime.
        Int, Double, and () are passed through fairly directly.  Other types
        may have support added as there is need.
        .
        A simple example lives at <https://github.com/singpolyma/haskades-sample>

extra-source-files:
        README

executable haskades
        main-is: haskades.hs

        other-modules:
                Records,
                MustacheTemplates

        build-depends:
                base == 4.*,
                containers,
                bytestring,
                errors,
                haskell-src,
                text,
                text-format

source-repository head
        type:     git
        location: git://github.com/singpolyma/haskades.git
