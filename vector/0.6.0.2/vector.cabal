Name:           vector
Version:        0.6.0.2
x-revision: 1
License:        BSD3
License-File:   LICENSE
Author:         Roman Leshchinskiy <rl@cse.unsw.edu.au>
Maintainer:     Roman Leshchinskiy <rl@cse.unsw.edu.au>
Copyright:      (c) Roman Leshchinskiy 2008-2010
Homepage:       http://code.haskell.org/vector
Bug-Reports:    http://trac.haskell.org/vector
Category:       Data, Data Structures
Synopsis:       Efficient Arrays
Description:
        .
        An efficient implementation of Int-indexed arrays (both mutable
        and immutable), with a powerful loop fusion optimization framework .
        .
        It is structured as follows:
        .
        [@Data.Vector@] Boxed vectors of arbitrary types.
        .
        [@Data.Vector.Unboxed@] Unboxed vectors with an adaptive
        representation based on data type families.
        .
        [@Data.Vector.Storable@] Unboxed vectors of 'Storable' types.
        .
        [@Data.Vector.Primitive@] Unboxed vectors of primitive types as
        defined by the @primitive@ package. @Data.Vector.Unboxed@ is more
        flexible at no performance cost.
        .
        [@Data.Vector.Generic@] Generic interface to the vector types.
        .
        There is also a (draft) tutorial on common uses of vector.
        .
        * <http://haskell.org/haskellwiki/Numeric_Haskell:_A_Vector_Tutorial>
        .
        Please use the project trac to submit bug reports and feature
        requests.
        .
        * <http://trac.haskell.org/vector>
        .
        Changes since version 0.6.0.1
        .
        * Workaround for GHC bug #4120
        .
        Changes since version 0.6
        .
        * Improved documentation
        .
        Changes since version 0.5
        .
        * More efficient representation of @Storable@ vectors
        .
        * Block copy operations used when possible
        .
        * @Typeable@ and @Data@ instances
        .
        * Monadic combinators (@replicateM@, @mapM@ etc.)
        .
        * Better support for recycling (see @create@ and @modify@)
        .
        * Performance improvements
        .

Cabal-Version:  >= 1.2.3
Build-Type:     Simple

Extra-Source-Files:
      tests/vector-tests.cabal
      tests/LICENSE
      tests/Setup.hs
      tests/Main.hs
      tests/Boilerplater.hs
      tests/Utilities.hs
      tests/Tests/Stream.hs
      tests/Tests/Vector.hs
      benchmarks/vector-benchmarks.cabal
      benchmarks/LICENSE
      benchmarks/Setup.hs
      benchmarks/Main.hs
      benchmarks/Algo/AwShCC.hs
      benchmarks/Algo/HybCC.hs
      benchmarks/Algo/Leaffix.hs
      benchmarks/Algo/ListRank.hs
      benchmarks/Algo/Quickhull.hs
      benchmarks/Algo/Rootfix.hs
      benchmarks/Algo/Spectral.hs
      benchmarks/Algo/Tridiag.hs
      benchmarks/TestData/Graph.hs
      benchmarks/TestData/ParenTree.hs
      benchmarks/TestData/Random.hs
      internal/GenUnboxTuple.hs
      internal/unbox-tuple-instances
      Changelog

Flag BoundsChecks
  Description: Enable bounds checking
  Default: True

Flag UnsafeChecks
  Description: Enable bounds checking in unsafe operations at the cost of a
               significant performance penalty
  Default: False

Flag InternalChecks
  Description: Enable internal consistency checks at the cost of a
               significant performance penalty
  Default: False


Library
  Extensions: CPP, DeriveDataTypeable
  Exposed-Modules:
        Data.Vector.Internal.Check

        Data.Vector.Fusion.Util
        Data.Vector.Fusion.Stream.Size
        Data.Vector.Fusion.Stream.Monadic
        Data.Vector.Fusion.Stream

        Data.Vector.Generic.Mutable
        Data.Vector.Generic.Base
        Data.Vector.Generic.New
        Data.Vector.Generic

        Data.Vector.Primitive.Mutable
        Data.Vector.Primitive

        Data.Vector.Storable.Internal
        Data.Vector.Storable.Mutable
        Data.Vector.Storable

        Data.Vector.Unboxed.Base
        Data.Vector.Unboxed.Mutable
        Data.Vector.Unboxed

        Data.Vector.Mutable
        Data.Vector

  Include-Dirs:
        include, internal

  Install-Includes:
        vector.h

  Build-Depends: base >= 4.5 && < 5, ghc >= 6.9, primitive >= 0.3 && < 0.4

  if impl(ghc<6.13)
    Ghc-Options: -finline-if-enough-args -fno-method-sharing
  
  Ghc-Options: -O2

  if flag(BoundsChecks)
    cpp-options: -DVECTOR_BOUNDS_CHECKS

  if flag(UnsafeChecks)
    cpp-options: -DVECTOR_UNSAFE_CHECKS

  if flag(InternalChecks)
    cpp-options: -DVECTOR_INTERNAL_CHECKS



package-hashes:
    MD5:5268059958930935b7aa4e85ba83206a
    SHA1:6e7843709241416a56010e21395d9a91e7ccd434
    SHA256:9f257260ef18218e35ebc2965a01191173e3c8e0057dae946a8d0c8183f4ba16
    SHA512:a55c0a7683d4f7b7b46f47a25cf4b8e11104c88b49505c098907019d6597084939289608f13caa2274b3bac4cda8a4098c0d376ddaa3f68a166fba8eb7742d3d
    Skein512_512:0bd8f3ce680761c496ea91976d95dcb102a56d6b98960861df425a016335c69e1131d5048f7e78f151df50781612706aedbaf98fa33ea2d74a50433e5df39206

package-locations:
    https://hackage.haskell.org/package/vector-0.6.0.2/vector-0.6.0.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/vector-0.6.0.2.tar.gz

