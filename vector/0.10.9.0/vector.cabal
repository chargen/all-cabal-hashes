-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:bcbcb09ee8365a7599da0bee8061ee8d
    SHA1:e693eafc10a4021f390fef2710f45bc0822f6408
    SHA256:23a8ab9a5257781db2513a0741a01f0d5f60c6d0730cd88136abfe7ae44c330d
    SHA512:1403271706d065c01728157f5e190e7393c1cf43fd152782b58d3b026b8421f323151187a5502a166029b3473dd681f5c542f4bb9ae5e9728f8e016c91282833
    Skein512_512:16cd486782df66f5658f9ffa23a8422c64404b4bc4e51b70e4f48679e5901c39c3608d4b0a358c39931686141e31bdb4d45b63bec1cf87b104fce479add8149f

x-package-locations:
    https://hackage.haskell.org/package/vector-0.10.9.0/vector-0.10.9.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/vector-0.10.9.0.tar.gz

x-package-size: 111067
-- END Added by all-cabal-hashes-tool

Name:           vector
Version:        0.10.9.0
License:        BSD3
License-File:   LICENSE
Author:         Roman Leshchinskiy <rl@cse.unsw.edu.au>
Maintainer:     Roman Leshchinskiy <rl@cse.unsw.edu.au>
Copyright:      (c) Roman Leshchinskiy 2008-2012
Homepage:       https://github.com/haskell/vector
Bug-Reports:    https://github.com/haskell/vector/issues
Category:       Data, Data Structures
Synopsis:       Efficient Arrays
Description:
        .
        An efficient implementation of Int-indexed arrays (both mutable
        and immutable), with a powerful loop optimisation framework .
        .
        It is structured as follows:
        .
        ["Data.Vector"] Boxed vectors of arbitrary types.
        .
        ["Data.Vector.Unboxed"] Unboxed vectors with an adaptive
        representation based on data type families.
        .
        ["Data.Vector.Storable"] Unboxed vectors of 'Storable' types.
        .
        ["Data.Vector.Primitive"] Unboxed vectors of primitive types as
        defined by the @primitive@ package. "Data.Vector.Unboxed" is more
        flexible at no performance cost.
        .
        ["Data.Vector.Generic"] Generic interface to the vector types.
        .
        There is also a (draft) tutorial on common uses of vector.
        .
        * <http://haskell.org/haskellwiki/Numeric_Haskell:_A_Vector_Tutorial>
        .
        Changes in version 0.10.0.1
        .
        * Require @primitive@ to include workaround for a GHC array copying bug
        .
        Changes in version 0.10
        .
	* @NFData@ instances
	.
	* More efficient block fills
	.
	* Safe Haskell support removed
	.

Cabal-Version:  >= 1.6
Build-Type:     Simple

Extra-Source-Files:
      README.md
      tests/vector-tests.cabal
      tests/LICENSE
      tests/Setup.hs
      tests/Main.hs
      tests/Boilerplater.hs
      tests/Utilities.hs
      tests/Tests/Move.hs
      tests/Tests/Bundle.hs
      tests/Tests/Vector.hs
      benchmarks/vector-benchmarks.cabal
      benchmarks/LICENSE
      benchmarks/Setup.hs
      benchmarks/Main.hs
      benchmarks/Algo/AwShCC.hs
      benchmarks/Algo/HybCC.hs
      benchmarks/Algo/Leaffix.hs
      benchmarks/Algo/ListRank.hs
      benchmarks/Algo/Quickhull.hs
      benchmarks/Algo/Rootfix.hs
      benchmarks/Algo/Spectral.hs
      benchmarks/Algo/Tridiag.hs
      benchmarks/TestData/Graph.hs
      benchmarks/TestData/ParenTree.hs
      benchmarks/TestData/Random.hs
      internal/GenUnboxTuple.hs
      internal/unbox-tuple-instances

Flag BoundsChecks
  Description: Enable bounds checking
  Default: True

Flag UnsafeChecks
  Description: Enable bounds checking in unsafe operations at the cost of a
               significant performance penalty
  Default: False

Flag InternalChecks
  Description: Enable internal consistency checks at the cost of a
               significant performance penalty
  Default: False


Library
  Extensions: CPP, DeriveDataTypeable
  Exposed-Modules:
        Data.Vector.Internal.Check

        Data.Vector.Fusion.Util
        Data.Vector.Fusion.Stream.Monadic
        Data.Vector.Fusion.Bundle.Size
        Data.Vector.Fusion.Bundle.Monadic
        Data.Vector.Fusion.Bundle

        Data.Vector.Generic.Mutable.Base
        Data.Vector.Generic.Mutable
        Data.Vector.Generic.Base
        Data.Vector.Generic.New
        Data.Vector.Generic

        Data.Vector.Primitive.Mutable
        Data.Vector.Primitive

        Data.Vector.Storable.Internal
        Data.Vector.Storable.Mutable
        Data.Vector.Storable

        Data.Vector.Unboxed.Base
        Data.Vector.Unboxed.Mutable
        Data.Vector.Unboxed

        Data.Vector.Mutable
        Data.Vector

  Include-Dirs:
        include, internal

  Install-Includes:
        vector.h

  Build-Depends: base >= 4 && < 5
               , primitive >= 0.5.0.1 && < 0.6
               , ghc-prim
               , deepseq >= 1.1 && < 1.4

  if impl(ghc<6.13)
    Ghc-Options: -finline-if-enough-args -fno-method-sharing
  
  Ghc-Options: -O2

  if flag(BoundsChecks)
    cpp-options: -DVECTOR_BOUNDS_CHECKS

  if flag(UnsafeChecks)
    cpp-options: -DVECTOR_UNSAFE_CHECKS

  if flag(InternalChecks)
    cpp-options: -DVECTOR_INTERNAL_CHECKS

source-repository head
  type:     git
  location: https://github.com/haskell/vector
