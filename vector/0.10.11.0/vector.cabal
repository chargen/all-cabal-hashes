-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:494b957cb08662d1bca1f80198447f81
    SHA1:e52677e585a9291c3ca744e70b99117e01b8a6e6
    SHA256:b284d2350bc56233275af00c166a33934175a73a7d3c47fffb070980919eb238
    SHA512:56699fdc9359454719666baade5ab0531ff2c5c95e078522444b1b26a6e067537cab523cdb4bba8a3effc85916f553b1f767ae45d6a12f76d68c3211289e4ac6
    Skein512_512:02b3891bddf59e36ae6ec8de345c0e7160f28b2b2af7cac357196e2bae50b27378f1711fc580e55bbfd2b2be6542287e690fb232b11da4ce92f14dd761af65ee

x-package-locations:
    https://hackage.haskell.org/package/vector-0.10.11.0/vector-0.10.11.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/vector-0.10.11.0.tar.gz

x-package-size: 103758
-- END Added by all-cabal-hashes-tool

Name:           vector
Version:        0.10.11.0
-- don't forget to update the changelog file!
License:        BSD3
License-File:   LICENSE
Author:         Roman Leshchinskiy <rl@cse.unsw.edu.au>
Maintainer:     libraries@haskell.org
Copyright:      (c) Roman Leshchinskiy 2008-2012
Homepage:       https://github.com/haskell/vector
Bug-Reports:    https://github.com/haskell/vector/issues
Category:       Data, Data Structures
Synopsis:       Efficient Arrays
Description:
        .
        An efficient implementation of Int-indexed arrays (both mutable
        and immutable), with a powerful loop optimisation framework .
        .
        It is structured as follows:
        .
        ["Data.Vector"] Boxed vectors of arbitrary types.
        .
        ["Data.Vector.Unboxed"] Unboxed vectors with an adaptive
        representation based on data type families.
        .
        ["Data.Vector.Storable"] Unboxed vectors of 'Storable' types.
        .
        ["Data.Vector.Primitive"] Unboxed vectors of primitive types as
        defined by the @primitive@ package. "Data.Vector.Unboxed" is more
        flexible at no performance cost.
        .
        ["Data.Vector.Generic"] Generic interface to the vector types.
        .
        There is also a (draft) tutorial on common uses of vector.
        .
        * <http://haskell.org/haskellwiki/Numeric_Haskell:_A_Vector_Tutorial>

Cabal-Version:  >= 1.6
Build-Type:     Simple

Extra-Source-Files:
      README.md
      tests/vector-tests.cabal
      tests/LICENSE
      tests/Setup.hs
      tests/Main.hs
      tests/Boilerplater.hs
      tests/Utilities.hs
      tests/Tests/Move.hs
      tests/Tests/Stream.hs
      tests/Tests/Vector.hs
      benchmarks/vector-benchmarks.cabal
      benchmarks/LICENSE
      benchmarks/Setup.hs
      benchmarks/Main.hs
      benchmarks/Algo/AwShCC.hs
      benchmarks/Algo/HybCC.hs
      benchmarks/Algo/Leaffix.hs
      benchmarks/Algo/ListRank.hs
      benchmarks/Algo/Quickhull.hs
      benchmarks/Algo/Rootfix.hs
      benchmarks/Algo/Spectral.hs
      benchmarks/Algo/Tridiag.hs
      benchmarks/TestData/Graph.hs
      benchmarks/TestData/ParenTree.hs
      benchmarks/TestData/Random.hs
      changelog
      internal/GenUnboxTuple.hs
      internal/unbox-tuple-instances

Flag BoundsChecks
  Description: Enable bounds checking
  Default: True
  Manual: True

Flag UnsafeChecks
  Description: Enable bounds checking in unsafe operations at the cost of a
               significant performance penalty
  Default: False
  Manual: True

Flag InternalChecks
  Description: Enable internal consistency checks at the cost of a
               significant performance penalty
  Default: False
  Manual: True


Library
  Extensions: CPP, DeriveDataTypeable
  Exposed-Modules:
        Data.Vector.Internal.Check

        Data.Vector.Fusion.Util
        Data.Vector.Fusion.Stream.Size
        Data.Vector.Fusion.Stream.Monadic
        Data.Vector.Fusion.Stream

        Data.Vector.Generic.Mutable
        Data.Vector.Generic.Base
        Data.Vector.Generic.New
        Data.Vector.Generic

        Data.Vector.Primitive.Mutable
        Data.Vector.Primitive

        Data.Vector.Storable.Internal
        Data.Vector.Storable.Mutable
        Data.Vector.Storable

        Data.Vector.Unboxed.Base
        Data.Vector.Unboxed.Mutable
        Data.Vector.Unboxed

        Data.Vector.Mutable
        Data.Vector

  Include-Dirs:
        include, internal

  Install-Includes:
        vector.h

  Build-Depends: base >= 4 && < 5
               , primitive >= 0.5.0.1 && < 0.6
               , ghc-prim
               , deepseq >= 1.1 && < 1.4

  if impl(ghc<6.13)
    Ghc-Options: -finline-if-enough-args -fno-method-sharing
  
  Ghc-Options: -O2

  if flag(BoundsChecks)
    cpp-options: -DVECTOR_BOUNDS_CHECKS

  if flag(UnsafeChecks)
    cpp-options: -DVECTOR_UNSAFE_CHECKS

  if flag(InternalChecks)
    cpp-options: -DVECTOR_INTERNAL_CHECKS

source-repository head
  type:     git
  location: https://github.com/haskell/vector.git
