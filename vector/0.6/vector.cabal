-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:e9839765bcb06d49e5c879c2627d05c1
    SHA1:fdd45a9919656dc5908f1769c18057e19c76a3f7
    SHA256:4f75ea9e512242035670bb632604294bb6343425d51ee9783860308f9d918d45
    SHA512:bae148943428fb0a8bd13b98ecea7832200ea3745fd4834c7532e7d357627c063142fba7495f3e0b1be25812e782ec899f84b59db89ea25aca7001677f1145a6
    Skein512_512:35df53b109bb0531bca1388379a12a95ee1b1d4249ede2895af9e4f50fb784debe76496b30f1e8d4219685acdf2d0f2fa6975eedb388aa128010e2cc62d15cf9

x-package-locations:
    https://hackage.haskell.org/package/vector-0.6/vector-0.6.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/vector-0.6.tar.gz

x-package-size: 68147
-- END Added by all-cabal-hashes-tool

Name:           vector
Version:        0.6
x-revision: 1
License:        BSD3
License-File:   LICENSE
Author:         Roman Leshchinskiy <rl@cse.unsw.edu.au>
Maintainer:     Roman Leshchinskiy <rl@cse.unsw.edu.au>
Copyright:      (c) Roman Leshchinskiy 2008-2010
Homepage:       http://code.haskell.org/vector
Bug-Reports:    http://trac.haskell.org/vector
Category:       Data, Data Structures
Synopsis:       Efficient Arrays
Description:
        .
        An efficient implementation of Int-indexed arrays (both mutable
        and immutable), with a powerful loop fusion optimization framework .
        .
        It is structured as follows:
        .
        [@Data.Vector@] Boxed vectors of arbitrary types.
        .
        [@Data.Vector.Unboxed@] Unboxed vectors with an adaptive
        representation based on data type families.
        .
        [@Data.Vector.Storable@] Unboxed vectors of 'Storable' types.
        .
        [@Data.Vector.Primitive@] Unboxed vectors of primitive types as
        defined by the @primitive@ package. @Data.Vector.Unboxed@ is more
        flexible at no performance cost.
        .
        [@Data.Vector.Generic@] Generic interface to the vector types.
        .
        There is also a (draft) tutorial on common uses of vector.
        .
        * <http://haskell.org/haskellwiki/Numeric_Haskell:_A_Vector_Tutorial>
        .
        Please use the project trac to submit bug reports and feature
        requests.
        .
        * <http://trac.haskell.org/vector>
        .
        Changes since version 0.5
        .
        * More efficient representation of @Storable@ vectors
        .
        * Block copy operations used when possible
        .
        * @Typeable@ and @Data@ instances
        .
        * Monadic combinators (@replicateM@, @mapM@ etc.)
        .
        * Better support for recycling (see @create@ and @modify@)
        .
        * Performance improvements
        .

Cabal-Version:  >= 1.2.3
Build-Type:     Simple

Extra-Source-Files:
      tests/vector-tests.cabal
      tests/LICENSE
      tests/Setup.hs
      tests/Main.hs
      tests/Boilerplater.hs
      tests/Utilities.hs
      tests/Tests/Stream.hs
      tests/Tests/Vector.hs
      benchmarks/vector-benchmarks.cabal
      benchmarks/LICENSE
      benchmarks/Setup.hs
      benchmarks/Main.hs
      benchmarks/Algo/AwShCC.hs
      benchmarks/Algo/HybCC.hs
      benchmarks/Algo/Leaffix.hs
      benchmarks/Algo/ListRank.hs
      benchmarks/Algo/Quickhull.hs
      benchmarks/Algo/Rootfix.hs
      benchmarks/Algo/Spectral.hs
      benchmarks/Algo/Tridiag.hs
      benchmarks/TestData/Graph.hs
      benchmarks/TestData/ParenTree.hs
      benchmarks/TestData/Random.hs
      internal/GenUnboxTuple.hs
      internal/unbox-tuple-instances

Flag BoundsChecks
  Description: Enable bounds checking
  Default: True

Flag UnsafeChecks
  Description: Enable bounds checking in unsafe operations at the cost of a
               significant performance penalty
  Default: False

Flag InternalChecks
  Description: Enable internal consistency checks at the cost of a
               significant performance penalty
  Default: False


Library
  Extensions: CPP, DeriveDataTypeable
  Exposed-Modules:
        Data.Vector.Internal.Check

        Data.Vector.Fusion.Util
        Data.Vector.Fusion.Stream.Size
        Data.Vector.Fusion.Stream.Monadic
        Data.Vector.Fusion.Stream

        Data.Vector.Generic.Mutable
        Data.Vector.Generic.Base
        Data.Vector.Generic.New
        Data.Vector.Generic

        Data.Vector.Primitive.Mutable
        Data.Vector.Primitive

        Data.Vector.Storable.Internal
        Data.Vector.Storable.Mutable
        Data.Vector.Storable

        Data.Vector.Unboxed.Base
        Data.Vector.Unboxed.Mutable
        Data.Vector.Unboxed

        Data.Vector.Mutable
        Data.Vector

  Include-Dirs:
        include, internal

  Install-Includes:
        vector.h

  Build-Depends: base >= 4.5 && < 5, ghc >= 6.9, primitive >= 0.3 && < 0.4

  if impl(ghc<6.13)
    Ghc-Options: -finline-if-enough-args -fno-method-sharing
  
  Ghc-Options: -O2

  if flag(BoundsChecks)
    cpp-options: -DVECTOR_BOUNDS_CHECKS

  if flag(UnsafeChecks)
    cpp-options: -DVECTOR_UNSAFE_CHECKS

  if flag(InternalChecks)
    cpp-options: -DVECTOR_INTERNAL_CHECKS

