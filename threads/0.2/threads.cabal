-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:f7cdef83434130d6e1ed252e186bc03d
    SHA1:a9344a0b8befa85ef651285b80023b020fdac143
    SHA256:8a98e0e09b5132b5a3e8cc85ad48e65e5a6d853d10dcdea818d08cb959b8a79b
    SHA512:074015ff5d168afaf2542e66cdaeb6a6a57d329cb8174ac8c86dde34c0c5fdf11862f63ff7d0c4110a4388d38a77d8fe6d7e538974495c606aa20de47ba956a0
    Skein512_512:c1647f558c4b5b6111dc94effeb86d673d6b478797722a3320db5c25f4663ee54de9311452705d8e82cd338f1a88e8f9869369f90710d431e0e7dfd8e0a65f57

package-locations:
    https://hackage.haskell.org/package/threads-0.2/threads-0.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/threads-0.2.tar.gz

package-size: 8197
-- END Added by all-cabal-hashes-tool

name:          threads
version:       0.2
cabal-version: >= 1.6
build-type:    Custom
stability:     experimental
author:        Bas van Dijk <v.dijk.bas@gmail.com>
               Roel van Dijk <vandijk.roel@gmail.com>
maintainer:    Bas van Dijk <v.dijk.bas@gmail.com>
               Roel van Dijk <vandijk.roel@gmail.com>
copyright:     (c) 2010 Bas van Dijk & Roel van Dijk
license:       BSD3
license-file:  LICENSE
category:      Concurrency
synopsis:      Fork threads and wait for their result
description:   This package provides functions to fork threads and
               wait for their termination. The result of a thread can
               also be retrieved, whether it's an exception or a
               normal value.
               .
               Besides waiting for the termination of a single thread
               this packages also provides functions to wait for a
               group of threads to terminate.
               .
               This package is similar to the @threadmanager@
               and @async@ packages. The advantages of this package are:
               .
               * Simpler API.
               .
               * More efficient in both space and time.
               .
               * No space-leak when forking a large number of threads.
               .
               * Correct handling of asynchronous exceptions.
               .
               * GHC specific functionality like @forkOnIO@.

source-repository head
  Type: darcs
  Location: http://code.haskell.org/~basvandijk/code/threads

-------------------------------------------------------------------------------

flag test
  description: Build the testing suite
  default:     False

flag hpc
  description: Enable program coverage on test executable
  default:     False

-------------------------------------------------------------------------------

library
  build-depends: base                 >= 3     && < 4.3
               , base-unicode-symbols >= 0.1.1 && < 0.3
               , stm                  >= 2.1   && < 2.2
  exposed-modules: Control.Concurrent.Thread
                 , Control.Concurrent.Thread.Group
  other-modules:   Control.Concurrent.Thread.Result
               ,   Utils
  ghc-options: -Wall

-------------------------------------------------------------------------------

executable test-threads
  main-is: test.hs

  ghc-options: -Wall -threaded

  if flag(test)
    build-depends: base                       >= 3     && < 4.3
                 , base-unicode-symbols       >= 0.1.1 && < 0.3
                 , stm                        >= 2.1   && < 2.2
                 , concurrent-extra           >= 0.5.1 && < 0.6
                 , HUnit                      >= 1.2.2 && < 1.3
                 , test-framework             >= 0.2.4 && < 0.4
                 , test-framework-hunit       >= 0.2.4 && < 0.3
    buildable: True
  else
    buildable: False

  if flag(hpc)
    ghc-options: -fhpc

-------------------------------------------------------------------------------
