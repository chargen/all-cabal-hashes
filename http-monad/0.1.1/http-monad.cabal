-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:36d0566b6e816c67d37e91923d1aeaff
    SHA1:12b9c5648d82b2833d5096b5e44d502f2a230c7a
    SHA256:e75643a34100c171050f4f9011b2120c87269ebf49f372a7005aa63a49f1ee88
    SHA512:0dd686fb84a33e1cb02ed36d5f397b97916bdbb570add22dd9cbbb70684841f591330cec00d814b7bcc24eed7a84b00ba42a0a8618877a9f622874b1fb618454
    Skein512_512:8683c852f6b8176bd1756606699472d296745823a6ab4a4d366d99577fd6b4415c6054d7e75a2d4a275c1bbc96a125c7982decea8398706c1c7144b5863a605e

x-package-locations:
    https://hackage.haskell.org/package/http-monad-0.1.1/http-monad-0.1.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/http-monad-0.1.1.tar.gz

x-package-size: 13187
-- END Added by all-cabal-hashes-tool

Name:               http-monad
Version:            0.1.1
Cabal-Version:      >= 1.6
Build-type:         Simple
License:            BSD3
License-file:       LICENSE
Category:           Network
Author:             Henning Thielemann <http@henning-thielemann.de>
Maintainer:         Henning Thielemann <http@henning-thielemann.de>
-- Homepage:           http://www.haskell.org/http/
Synopsis:           Monad abstraction for HTTP allowing lazy transfer and non-I/O simulation
Description:
  This library implements a monad class with various interesting instances:
  .
  * Lazy I/O allows for fetching documents via HTTP on demand
  .
  * Non-I/O allows for testing HTTP communication without any IO action
  .
  By using this monad you can implement HTTP communication in a very general way.
  You may add further functionality by adding custom sub-classes.
  .
  We inherit all content data types from the HTTP-4000 package,
  such as String as well as strict and lazy ByteString.

Source-Repository head
  type:     darcs
  location: http://code.haskell.org/~thielema/http-monad/

Source-Repository this
  type:     darcs
  location: http://code.haskell.org/~thielema/http-monad/
  tag:      0.1.1

Flag splitBase
  description: Old, monolithic base
  default: False

Flag buildTestServer
  description: build a small server for testing lazy download
  default: False

Library
  Exposed-modules:
    Network.Monad.Transfer
    Network.Monad.Transfer.IO
    Network.Monad.Transfer.Offline
    Network.Monad.Transfer.ChunkyLazyIO
    Network.Monad.Body
    Network.Monad.Reader
    Network.Monad.HTTP
    Network.Monad.HTTP.Header
  Other-modules:
    Network.Monad.Exception
    Network.Monad.Utility
  Hs-Source-Dirs: src
  GHC-options: -Wall
--  Extensions: DeriveDataTypeable, GeneralizedNewtypeDeriving
  Build-depends: HTTP >=4000 && <4001
  Build-depends: network >=2.1 && <2.4, parsec >=2.1 && <3.2
  Build-depends: bytestring >=0.9 && <0.11
  Build-depends: transformers >=0.2 && <0.4
  Build-depends: explicit-exception >=0.1.4 && <0.2
  Build-depends: utility-ht >=0.0.4 && <0.1
  Build-depends: lazyio >=0.1 && <0.2

  If flag(splitBase)
    Build-depends: base < 3
  Else
    Build-depends:
      containers >= 0.1 && <0.6,
      base >= 3 && < 5


Executable infinite-httpd
  If flag(buildTestServer)
    Build-depends: httpd-shed >=0.3 && <0.4
  Else
    Buildable: False
  Main-is: Infinity.hs
  Hs-Source-Dirs: src, test
