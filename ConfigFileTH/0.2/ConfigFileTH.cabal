Name:                ConfigFileTH
Version:             0.2
Synopsis:            Template haskell for reading ConfigFiles.
Category:            Parsing, Template Haskell
Description:
     This module provides syntax for concise definitions of config files from
     Data.ConfigFile through template haskell.

     For example, the following splice,
     $(genConf "Example" [$conf|
                       elbow/center -> ec :: Double
                       elbow/min    -> emi :: Double
                       elbow/max    -> ema :: Double
                     |])
     resolves into declaration of the following datatype

     data Example = Example {ec  :: Double
                            ,emi :: Double
                            ,ema :: Double}
     and a function

     loadExample :: (MonadIO m) => FilePath -> m (Either CPError Example) , 

     which uses Data.ConfigFile to read a values for the above struct from
     a file. 

License:             LGPL
License-file:        LICENSE
Author:              Ville Tirronen
Maintainer:          Ville Tirronen <ville.e.t.tirronen@jyu.fi>
Build-Type:          Simple
Cabal-Version:       >= 1.2

Library
    Exposed-Modules:     Data.ConfigFile.TH
    Build-Depends:       base >= 4.3 && < 5
                         ,ConfigFile >= 1.0.6 && < 2
                         ,template-haskell
                         ,parsec >= 3.1.0 && <4


package-hashes:
    MD5:69ce7d479d288f363dc2722bc871ef0d
    SHA1:f6db19b565b01f1effe9f69f7929457553d35bbe
    SHA256:30c94c801d42ee4dd08e4b535b7f041f4a25cf7198aab69963e00b6af3dc898c
    SHA512:1e378a593acdb9aa52e7ba2011a17dc8e0866ebc0dcf63289713a7be989b38b11c567555892a644e7d55efc9e883d15e02d59cdb95530d1165c1f9acbb93949a
    Skein512_512:aad5bab55e24d665fda89146b5e3817f6e3727506690e92e07d2d28d76c661c4263b39aed3ddf3d5c590218450a9cb3e37f0fbf37d4e3a71186a9a1e0ca7fac2

package-locations:
    https://hackage.haskell.org/package/ConfigFileTH-0.2/ConfigFileTH-0.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/ConfigFileTH-0.2.tar.gz

