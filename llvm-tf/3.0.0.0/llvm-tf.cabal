-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:1dd620920d9472b7b237f5b7accf0b42
    SHA1:0ff23739b6acd1f5774bc608f675a1e5a963bc55
    SHA256:87e66ab9477a636068c73a9e27d0e04a0e83d88a67c743827bafa98b246b59cb
    SHA512:23d88c18a933f62fa83cb8df740990d2445d82050776a73a14d0203d07b679a7ee61518c78b450fd14981c76940ce606585c40a7280e58f3fd40ede7ec55462e
    Skein512_512:9c6c68e68ecfc7180092bf462f9d48c7ae02716f2e671721f1e843747d01d5ae8d0015579350c85c66faa960f015ea1694975899523a64524cbdfa6df5ca1dd0

x-package-locations:
    https://hackage.haskell.org/package/llvm-tf-3.0.0.0/llvm-tf-3.0.0.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/llvm-tf-3.0.0.0.tar.gz

x-package-size: 52355
-- END Added by all-cabal-hashes-tool

name:          llvm-tf
version:       3.0.0.0
license:       BSD3
license-file:  LICENSE
synopsis:      Bindings to the LLVM compiler toolkit using type families.
description:
  High-level bindings to the LLVM compiler toolkit
  using type families instead of functional dependencies.
  .
  * New in 3.0.0.0:
    The low-level bindings have been split into the llvm-base package.
  .
  We use the same module names as the @llvm@ package,
  which makes it harder to work with both packages from GHCi.
  You may use the @-hide-package@ option.
  We may change the module names later.
  .
  A note on versioning:
  The first two version numbers match the version of LLVM.
  In order to be able to improve the Haskell API for the same version of LLVM,
  I use the first three numbers of the Cabal package version
  as the major version in the sense of the Package Versioning Policy PVP.
  That is, a bump from 3.0.0 to 3.0.1 may contain substantial API changes,
  a bump from 3.0.0.0 to 3.0.0.1 may contain API extensions,
  and a bump from 3.0.0.0.0 to 3.0.0.0.1 may contain API-preserving bugfixes.
author:        Henning Thieleman, Bryan O'Sullivan, Lennart Augustsson
maintainer:    Henning Thieleman <llvm@henning-thielemann.de>
stability:     experimental
category:      Compilers/Interpreters, Code Generation
tested-with:   GHC == 7.4.2
cabal-version: >= 1.10
build-type:    Simple

extra-source-files:
    *.md
    examples/*.c
    examples/*.hs
    tests/*.hs
    tests/Makefile

flag developer
  description: operate in developer mode
  default: False

library
  default-language: Haskell98
  build-depends:
    base >= 3 && < 5,
    bytestring >= 0.9,
    directory,
    llvm-base == 3.0.*,
    mtl,
    process,
    tfp >= 0.7 && < 0.8,
    containers

  ghc-options: -Wall

  if flag(developer)
    ghc-options: -Werror

  if os(darwin)
    ld-options: -w 
    frameworks: vecLib
    cpp-options: -D__MACOS__

  exposed-modules:
      LLVM.Core
      LLVM.ExecutionEngine
      LLVM.Util.Arithmetic
      LLVM.Util.File
      LLVM.Util.Foreign
      LLVM.Util.Loop
      LLVM.Util.Memory
      LLVM.Util.Optimize

  other-modules:
      LLVM.Core.CodeGen
      LLVM.Core.CodeGenMonad
      LLVM.Core.Data
      LLVM.Core.Instructions
      LLVM.Core.Type
      LLVM.Core.Util
      LLVM.Core.Vector
      LLVM.ExecutionEngine.Engine
      LLVM.ExecutionEngine.Target

source-repository head
  type:     darcs
  location: http://code.haskell.org/~thielema/llvm-tf/

source-repository this
  tag:      3.0.0.0
  type:     darcs
  location: http://code.haskell.org/~thielema/llvm-tf/
