Name:          curry-frontend
Version:       0.2.2
Cabal-Version: >= 1.6
Synopsis:      Compile the functional logic language Curry to several intermediate formats
Description:   The Curry Frontend consists of the executable program "cymake".
               It is used by various backends to compile Curry programs to 
               an internal representation. 
               The code is a stripped-down version of an early version of
	       the Muenster Curry Compiler 
               (<http://danae.uni-muenster.de/~lux/curry/>)
Category:      Language
License:       OtherLicense
License-File:  LICENSE
Author:        Wolfgang Lux, Martin Engelke, Bernd Brassel, Holger Siegel
Maintainer:    Holger Siegel
Bug-Reports:   mailto:hsi@informatik.uni-kiel.de
Homepage:      http://curry-language.org
Build-Type:    Simple
Stability:     experimental

Extra-Source-Files: LIESMICH
Data-Files:    src/currydoc.css
		    

Executable cymake
  hs-source-dirs:   src
  Main-is:          cymake.hs
  Build-Depends:    base >= 3 && < 4, mtl, old-time, directory, filepath, containers
  ghc-options:      -fwarn-unused-binds -fwarn-unused-imports
-- -fwarn-incomplete-patterns
  Other-Modules:    Curry.Base.Position, Curry.Base.Ident, Curry.Base.MessageMonad
                    Curry.Syntax.Lexer, Curry.Syntax.LexComb
                    Curry.Syntax.Parser, Curry.Syntax.LLParseComb
                    Curry.Syntax.ShowModule, Curry.Syntax.Pretty
                    Curry.Syntax, Curry.Syntax.Type
                    Curry.Syntax.Unlit, Curry.Syntax.Utils
                    Curry.AbstractCurry, Curry.ExtendedFlat
                    CurryBuilder, IL.Type 
                    CurryCompilerOpts, Modules, Subst, Arity
                    CurryDeps, Eval, IL.Pretty, NestEnv, SyntaxCheck, Base
                    Exports, IL.Scope, SyntaxColoring, CurryEnv
                    IL.CurryToIL, OldScopeEnv, CurryHtml
                    IL.XML, PatchPrelude, TopEnv, CaseCompletion
                    Imports, PathUtils, Filenames,
                    TypeCheck,
                    InterfaceCheck, 
                    Types, Frontend, PrecCheck
                    TypeSubst, GenAbstractCurry
                    PrettyCombinators, Typing
                    GenFlatCurry, KindCheck, Qual
                    SCC, Utils, GetOpt
                    Lift, ScopeEnv, WarnCheck
                    Desugar, Curry.Base.Ident, 
                    Simplify

-- Executable pretty-ecy
--   hs-source-dirs:   src
--   Main-is:          pretty-ecy.hs
--   Build-Depends:    base >= 3 && < 4



package-hashes:
    MD5:bc5a7e68817da1654edf709194eb825a
    SHA1:eed3cc0bda924b00444ec26b2d6f9bea48fa8a8e
    SHA256:bcabe59a11818f42d18aa8a74e774801f8084cd1d0405da5bde831c7513d738a
    SHA512:fabcaac31ca1efe1e5ef7e65ae0e64d82cd360562506b53b7188532d8beab584de31b9a60e5bcec9516c0315c5afed7f407287fd6d39b46acc79ebd532d94642
    Skein512_512:7f593dd9caf5eadf3877930c1b56543d2fcb4733a6586b14fe3bddd12ffca9cc7ecfa5b0006ee19b36237820a52eddc610cbc36b595ef008d79e917425711dc4

package-locations:
    https://hackage.haskell.org/package/curry-frontend-0.2.2/curry-frontend-0.2.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/curry-frontend-0.2.2.tar.gz

