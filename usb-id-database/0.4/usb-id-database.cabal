-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:ab378ea70e4eec4625dfc5ab37f64725
    SHA1:cbf0cf9bfa9c943997e057bdfcbcb631872389a6
    SHA256:bbf30f5e38e7dffdd55fb1b4da0a39a1ec13fd9662367f0a17b4f1b6107276f1
    SHA512:a4fc340cf04ce8780da8d6329b6be0f889665010c9c23d1df6cefa127a4e5866f14feb3acbe4149ad3a1cbf7b94e6a4536b0c760f2f08301aac886dd960f90d1
    Skein512_512:184f3dd62dbc7e368b07501bfe0fa0b2abb39129fc26c2d228722bebe4226a7c93e3caeed8272893763ab0941dedc5ed0038d34e823564e9f884cb18c5ff1cc6

package-locations:
    https://hackage.haskell.org/package/usb-id-database-0.4/usb-id-database-0.4.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/usb-id-database-0.4.tar.gz

package-size: 140773
-- END Added by all-cabal-hashes-tool

name:          usb-id-database
version:       0.4
cabal-version: >=1.6
build-type:    Simple
stability:     provisional
author:        Roel van Dijk
maintainer:    vandijk.roel@gmail.com
copyright:     (c) 2009 Roel van Dijk
license:       BSD3
license-file:  LICENSE
category:      System
synopsis:      A database of USB identifiers
description:
  Functions to find the names associated with various identifiers from the USB
  specification. This is useful if you want to display full human-readable names
  instead of cryptic numeric codes.

extra-source-files: example.hs
data-files: usb_dot_org_db.txt
          , usb_id_repo_db.txt

flag example
  description: Build an example program
  default:     False

flag profile-example
  description: Enable profiling for the example program
  default:     False

library
  build-depends: base        >= 3 && < 4.2
               , bytestring  == 0.9.*
               , containers  == 0.2.*
               , parsimony   >= 1 && < 1.1
  ghc-options: -Wall
  cpp-options: -DBUILD_WITH_CABAL
  exposed-modules: System.USB.IDDB
                 , System.USB.IDDB.UsbDotOrg
                 , System.USB.IDDB.LinuxUsbIdRepo
  other-modules: Paths_usb_id_database
               , System.USB.IDDB.Base
               , System.USB.IDDB.Misc

executable example
  extensions: CPP
  cpp-options: -DBUILD_WITH_CABAL
  main-is: example.hs

  if flag(example)
    buildable: True
  else
    buildable: False

  if flag(profile-example)
    ghc-options: -Wall -prof -auto-all -caf-all -fforce-recomp
  else
    ghc-options: -Wall
