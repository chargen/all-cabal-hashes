-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:37057aebd5f1c78517eb0581d80d7ca2
    SHA1:75876d3ad16050179bce0298cf16e8c19d6f8a28
    SHA256:4c67fde9f38367d18ab52696b0458cd532fb1db92d88ea3efcf1cd3904a774b9
    SHA512:6b7a5d59b8e9c9b0b3d28a1ba926873fd8705baaeeec06cbfa197933b7667adfac4c834d9aabd9740931551d51c207dff0358dcdecf310dab19cd2092539b735
    Skein512_512:596ed260be08de3f4e90edf66b117f9c218ae45c1443efa8bcd36bbb4b77725c38d373475f53b5075ce1551d1ec9c8cd5b5b25dc6c3cb9b84139656c8b7df555

package-locations:
    https://hackage.haskell.org/package/narc-0.1.2/narc-0.1.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/narc-0.1.2.tar.gz

package-size: 25197
-- END Added by all-cabal-hashes-tool

-- narc.cabal auto-generated by cabal init. For additional options,
-- see
-- http://www.haskell.org/cabal/release/cabal-latest/doc/users-guide/authors.html#pkg-descr.
-- The name of the package.
Name:                narc

-- The package version. See the Haskell package versioning policy
-- (http://www.haskell.org/haskellwiki/Package_versioning_policy) for
-- standards guiding when and how versions should be incremented.
Version:             0.1.2

-- A short (one-line) description of the package.
Synopsis:            Query SQL databases using Nested Relational Calculus embedded in Haskell.

-- A longer description of the package.
Description:         Narc is an embedded language for querying SQL databases, 
		     which permits using the "nested relational" model, a more
		     flexible model than the traditional relational model of SQL
		     databases. In spite of this richer data model, queries are
		     transformed into SQL to run against standard databases.
		     .
		     To use the language, express a query using the combinators
		     like @foreach@, @table@, @having@, @singleton@ and so on.
		     Wrap this in a call to @narcToSQLString@ to get a string
		     that can be sent to a SQL database.
		     .
		     To send a query directly to an HDBC connection, import
		     the module @Database.Narc.HDBC@ and use its @run@ function,
		     passing it an HDBC connection and a Narc query. The result
		     is an IO action that returns a 2-D list of result values
		     in HDBC's usual format.

-- URL for the project homepage or repository.
Homepage:            http://ezrakilty.net/projects/narc

-- The license under which the package is released.
License:             BSD3

-- The file containing the license text.
License-file:        LICENSE

-- The package author(s).
Author:              Ezra e. k. Cooper

-- An email address to which users can send suggestions, bug reports,
-- and patches.
Maintainer:          ezra@ezrakilty.net

-- A copyright notice.
-- Copyright:           

Category:            Database

Build-type:          Simple

-- Extra files to be distributed with the package, such as examples or
-- a README.
-- Extra-source-files:  

-- Constraint on the version of Cabal needed to build this package.
Cabal-version:       >=1.2


Library
  -- Modules exported by the library.
  Exposed-modules:     Database.Narc, Database.Narc.SQL, Database.Narc.Test, Database.Narc.Type, Database.Narc.HDBC
  
  -- Packages needed in order to build this package.
  Build-depends: base >=4 && < 5, HUnit, QuickCheck, mtl, random, HDBC
  
  -- Modules not exported by this package.
  Other-modules:       Gensym, QCUtils, Database.Narc.TermGen, Database.Narc.Var, Database.Narc.Contract, Database.Narc.Debug, Database.Narc.TypeInfer, Database.Narc.Util, Database.Narc.AST.Pretty, Database.Narc.Failure.QuickCheck, Database.Narc.Rewrite, Database.Narc.AST, Database.Narc.Common, Database.Narc.Compile, Database.Narc.Eval, Database.Narc.Failure, Database.Narc.Pretty, Database.Narc.SQL.Pretty
  
  -- Extra tools (e.g. alex, hsc2hs, ...) needed to build the source.
  -- Build-tools:         
  
