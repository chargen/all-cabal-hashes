-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:044b40daeba11214380a6a6ed6cf21d9
    SHA1:4c4fdb311f2ee99bf8fc05ad987179098ed402ce
    SHA256:34a4dc80c75c67ce47496d34df0adcf04ea4d0dabdec6e2cb56e741c10c18792
    SHA512:d391f323c62f5928f41b55a49aab873c40f832ed58bf42e416392b564fb826d7a44693c7d628ec1def1258475921af6edc4dd93dda14f60efb2d4c7473511b08
    Skein512_512:5f6de771678163efe89c885752acb863992e9c172fb46f6301e0e14f89cbf5f61989af6a045d63d4aa90e5562b151824bfddfa6797eac950b46de0cd21297d40

package-locations:
    https://hackage.haskell.org/package/fclabels-1.0.2/fclabels-1.0.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/fclabels-1.0.2.tar.gz

package-size: 8647
-- END Added by all-cabal-hashes-tool

Name:          fclabels
Version:       1.0.2
Author:        Sebastiaan Visser, Erik Hesselink, Chris Eidhof, Sjoerd Visscher.
Synopsis:      First class accessor labels.
Description:   This package provides first class labels that can act as
               bidirectional record fields. The labels can be derived
               automatically using Template Haskell which means you don't have
               to write any boilerplate yourself. The labels are implemented as
               lenses and are fully composable. Labels can be used to /get/,
               /set/ and /modify/ parts of a datatype in a consistent way.
               .
               See "Data.Label" for an introductory explanation.
               .
               Internally lenses are not tied to Haskell functions directly,
               but are implemented as arrows. Arrows allow the lenses to be run
               in custom computational contexts. This approach allows us to
               make partial lenses that point to fields of multi-constructor
               datatypes in an elegant way.
               .
               See the "Data.Label.Maybe" module for the use of partial labels.
               .
               > 1.0.1 -> 1.0.2
               >   - Allow generating monomorphic labels.
               >   - Prettify type variables in TH-derived code.
Maintainer:    Sebastiaan Visser <code@fvisser.nl>
License:       BSD3
License-File:  LICENCE
Category:      Data
Cabal-Version: >= 1.6
Build-Type:    Simple

Library
  HS-Source-Dirs: src

  Other-Modules:
    Data.Label.Derive
  Exposed-Modules:
    Data.Label
    Data.Label.Abstract
    Data.Label.Maybe
    Data.Label.MaybeM
    Data.Label.Pure
    Data.Label.PureM

  GHC-Options: -Wall
  Build-Depends:
      base                       < 5
    , template-haskell >= 2.2 && < 2.7
    , mtl              >= 1.0 && < 2.2
    , transformers     >= 0.2 && < 0.3

Source-Repository head
  Type:     git
  Location: git://github.com/sebastiaanvisser/fclabels.git

