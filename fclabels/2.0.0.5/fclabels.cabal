-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:766a9e96555d7b24718af6f1ac8a45a5
    SHA1:419abd38d3456ecc3d68d534e40f5e849c47f137
    SHA256:ab6149f16dd52efa91a273201c58b4343aca3c2ce3ca210bd801a56ae65ee0f5
    SHA512:cbe311d7b835fe53e4abc517e3904b23f7d492d9352e4cb0d2e7b55e202a6188b125f11f422c7d1425044785e340ad820540333bd18a3f22f1c805370fa019e0
    Skein512_512:e1d437fda9546563059475b0f0fb7130731f19cbef245fff1b3878cca1fa0343f35ca1f93dac5e6a6d187faffd56b5a82d1e0c7a3abd7c216fa3d253ec26503b

x-package-locations:
    https://hackage.haskell.org/package/fclabels-2.0.0.5/fclabels-2.0.0.5.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/fclabels-2.0.0.5.tar.gz

x-package-size: 17802
-- END Added by all-cabal-hashes-tool

Name:          fclabels
Version:       2.0.0.5
Author:        Sebastiaan Visser, Erik Hesselink, Chris Eidhof, Sjoerd Visscher
               with lots of help and feedback from others.
Synopsis:      First class accessor labels implemented as lenses.
Description:   This package provides first class labels that can act as
               bidirectional record fields. The labels can be derived
               automatically using Template Haskell which means you don't have
               to write any boilerplate yourself. The labels are implemented as
               /lenses/ and are fully composable. Lenses can be used to /get/,
               /set/ and /modify/ parts of a data type in a consistent way.
               .
               See "Data.Label" for an introductory explanation or see the
               introductory blog post at
               <http://fvisser.nl/post/2013/okt/1/fclabels-2.0.html>
               .
               * /Total and partial lenses/
               .
               Internally lenses do not used Haskell functions directly, but
               are implemented as categories. Categories allow the lenses to be
               run in custom computational contexts. This approach allows us to
               make partial lenses that point to fields of multi-constructor
               datatypes in an elegant way.
               .
               See "Data.Label.Partial" for the use of partial labels.
               .
               * /Monomorphic and polymorphic lenses/
               .
               We have both polymorphic and monomorphic lenses. Polymorphic
               lenses allow updates that change the type. The types of
               polymorphic lenses are slightly more verbose than their
               monomorphic counterparts, but their usage is similar. Because
               monomorphic lenses are built by restricting the types of
               polymorphic lenses they are essentially the same and can be
               freely composed with eachother.
               .
               See "Data.Label.Mono" and "Data.Label.Poly" for the difference
               between polymorphic and monomorphic lenses.
               .
               * /Using fclabels/
               .
               To simplify working with labels we supply both a set of labels
               for Haskell's base types, like lists, tuples, Maybe and Either,
               and we supply a set of combinators for working with labels for
               values in the Reader and State monad.
               .
               See "Data.Label.Base" and "Data.Label.Monadic" for more
               information.
               .
               * /Changelog from 2.0.0.4 to 2.0.0.5/
               .
               >   - Add Bug-Reports url again.

Maintainer:         Sebastiaan Visser <code@fvisser.nl>
Homepage:           https://github.com/sebastiaanvisser/fclabels
Bug-Reports:        https://github.com/sebastiaanvisser/fclabels/issues
License:            BSD3
License-File:       LICENSE
Category:           Data, Lenses
Cabal-Version:      >= 1.6
Build-Type:         Simple
Extra-Source-Files: CHANGELOG

Library
  HS-Source-Dirs: src

  Exposed-Modules:
    Data.Label
    Data.Label.Base
    Data.Label.Derive
    Data.Label.Failing
    Data.Label.Monadic
    Data.Label.Mono
    Data.Label.Partial
    Data.Label.Point
    Data.Label.Poly
    Data.Label.Total

  GHC-Options: -Wall
  Build-Depends:
      base                       < 5
    , template-haskell >= 2.2 && < 2.9
    , mtl              >= 1.0 && < 2.2
    , transformers     >= 0.2 && < 0.4

Source-Repository head
  Type:     git
  Location: git://github.com/sebastiaanvisser/fclabels.git

