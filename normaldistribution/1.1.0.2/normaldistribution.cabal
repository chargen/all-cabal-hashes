Name:                normaldistribution
Version:             1.1.0.2
License:             BSD3
License-File:        LICENSE
Copyright:           Bjorn Buckwalter 2011
Author:              Bjorn Buckwalter 
Maintainer:          bjorn.buckwalter@gmail.com
Stability:           Stable
Homepage:            https://github.com/bjornbm/normaldistribution
Synopsis:

    Minimum fuss normally distributed random values.

Description:

    This purpose of this library is to have a simple API and no
    dependencies beyond Haskell 98 in order to let you produce
    normally distributed random values with a minimum of fuss. This
    library does /not/ attempt to be blazingly fast nor to pass
    stringent tests of randomness. It attempts to be very easy to
    install and use while being \"good enough\" for many applications
    (simulations, games, etc.). The API builds upon and is largely
    analogous to that of the Haskell 98 @Random@ module (more
    recently @System.Random@).
    .
    Pure:
    .
    > (sample,g) = normal  myRandomGen  -- using a Random.RandomGen
    > samples    = normals myRandomGen  -- infinite list
    > samples2   = mkNormals 10831452   -- infinite list using a seed
    .
    In the IO monad:
    .
    > sample    <- normalIO
    > samples   <- normalsIO  -- infinite list
    .
    With custom mean and standard deviation:
    .
    > (sample,g) = normal'    (mean,sigma) myRandomGen
    > samples    = normals'   (mean,sigma) myRandomGen
    > samples2   = mkNormals' (mean,sigma) 10831452
    .
    > sample    <- normalIO'  (mean,sigma)
    > samples   <- normalsIO' (mean,sigma)
    .
    Internally the library uses the Box-Muller method to generate
    normally distributed values from uniformly distributed random values.
    If more than one sample is needed taking samples off an infinite
    list (created by e.g. 'normals') will be roughly twice as efficient
    as repeatedly generating individual samples with e.g. 'normal'.

Category:            Math, Statistics
Build-Type:          Simple
Build-Depends:       base < 5, haskell98 < 3
Exposed-Modules:     Data.Random.Normal
Extra-source-files:  README, LICENSE


package-hashes:
    MD5:ffcacc260041cd12a02d0a77592f6833
    SHA1:bfe9bc86e3f8a2033a84499959a5e37bc3bfc41b
    SHA256:5094d504cf1d6b491470de52a8fdfe9c634900adae3486edcbeaecce92a91cb2
    SHA512:7f75133a7762911dc6d4947225e75b5f525c775c3822fac320e73b4590b534450685fce8e6c8d3cfe33125339f1e0597fbec1bd60d98b0c3c1f84d580b513f45
    Skein512_512:a52b6d604afec1165081181fa8700e5ca3737d26098a52d2a1dcb3a3625509a513620454d993117a0eb3a1146c77d299d90f70dcbd2daae0a0ab466386acef88

package-locations:
    https://hackage.haskell.org/package/normaldistribution-1.1.0.2/normaldistribution-1.1.0.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/normaldistribution-1.1.0.2.tar.gz

