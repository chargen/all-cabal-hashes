-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:33d7f6d9f0544c22b40d0454e88f14a7
    SHA1:4f43765419cb81f170e0baf86a8d1c255f21f664
    SHA256:6ad5e97c42698e92051b701cde5cd09005877c9b3e04ea19dc0762e595185d47
    SHA512:7aeccd0c5a843a87a5e9ea5b25dbf1b13bbea02782ed211df9c17e835b2f2a1abf3eec90ce5dbb26a7dda4350f387fe185bd62a04b0e16fe0af2bbf740ef963e
    Skein512_512:5a6369799d566ba58cc36aa8b08e0ec4ebcf0d05c02f1b874adb848ffce81efb3f47a5af39502228c3d001e7b7dc8f0ad0aa4a3de109c79da26b2cdb336d96f8

package-locations:
    https://hackage.haskell.org/package/rwlock-0.0.0.3/rwlock-0.0.0.3.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/rwlock-0.0.0.3.tar.gz

package-size: 1628
-- END Added by all-cabal-hashes-tool

name:                   rwlock
version:                0.0.0.3
stability:              provisional

cabal-version:          >= 1.6
build-type:             Simple

author:                 James Cook <mokus@deepbondi.net>
maintainer:             James Cook <mokus@deepbondi.net>
license:                PublicDomain
homepage:               https://github.com/mokus0/rwlock

category:               Concurrency
synopsis:               Multiple-read / single-write locks
description:            A simple implementation of a multiple-reader / single-writer
                        lock, using STM.

source-repository head
  type:                 git
  location:             https://github.com/mokus0/rwlock.git

flag base4

Library
  hs-source-dirs:       src
  exposed-modules:      Control.Concurrent.RWLock
  build-depends:        monad-loops-stm, stm
  if flag(base4)
    build-depends:      base >= 4 && <5, syb
  else
    build-depends:      base >= 3 && <4
