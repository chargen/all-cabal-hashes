-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:685a3bca057d37a900674075a73e55da
    SHA1:04b5a9120d39e2856a517db5cbdef3acc7893b82
    SHA256:c4f447efd8192c240cbd356922ab047e58c1d8b81b9e3de9f4085e7ef6944250
    SHA512:49405a2a2fb410a1e5ad8f7730378d3bad3ffbd935929d0dd9bb7560e7532c94f3d05c7f82526f18d3cbe26b8bc957478df80e4107bf5fcb6160d7013d1acb56
    Skein512_512:3a67d3a46b4734998a3c9e426d9be36a677502319d912eacb11e3d96568ef2aefd620fc1b7528ea23427e43154bfcd77dfdff440b4a6f6f83a67165e6e930d23

x-package-locations:
    https://hackage.haskell.org/package/rwlock-0.0.0.2/rwlock-0.0.0.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/rwlock-0.0.0.2.tar.gz

x-package-size: 1602
-- END Added by all-cabal-hashes-tool

name:                   rwlock
version:                0.0.0.2
stability:              provisional

cabal-version:          >= 1.2
build-type:             Simple

author:                 James Cook <james.cook@usma.edu>
maintainer:             James Cook <james.cook@usma.edu>
license:                PublicDomain
homepage:               http://code.haskell.org/~mokus/rwlock

category:               Concurrency
synopsis:               Multiple-read / single-write locks
description:            A simple implementation of a multiple-reader / single-writer
                        lock, using STM.

flag base4

Library
  hs-source-dirs:       src
  exposed-modules:      Control.Concurrent.RWLock
  build-depends:        monad-loops, stm
  if flag(base4)
    build-depends:      base >= 4 && <5, syb
  else
    build-depends:      base >= 3 && <4
