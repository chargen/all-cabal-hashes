name:                open-typerep
version:             0.2
synopsis:            Open type representations and dynamic types
description:         This package uses Data Types Ã  la Carte to provide open type representations
                     and dynamic types/coercions for open type universes.
                     .
                     Example 1 (dynamic types):
                     .
                     > type MyUniverse = IntType :+: BoolType
                     >
                     > hlist :: [Dynamic MyUniverse]
                     > hlist = [toDyn True, toDyn (1 :: Int)]
                     .
                     > *Main> hlist
                     > [True,1]
                     .
                     Note that if we were using "Data.Dynamic", it would just print
                     .
                     > [<<Bool>>,<<Int>>]
                     .
                     Example 2 (dynamically typed addition):
                     .
                     > addDyn :: (TypeEq ts ts, PWitness Num ts ts) => Dynamic ts -> Dynamic ts -> Maybe (Dynamic ts)
                     > addDyn (Dyn ta a) (Dyn tb b) = do
                     >     Dict <- typeEq ta tb
                     >     Dict <- pwit pNum ta
                     >     return (Dyn ta (a+b))
                     .
                     "Data.Dynamic" could only do this monomorphically, for one 'Num' type at a
                     time.
author:              Emil Axelsson
maintainer:          emax@chalmers.se
copyright:           Copyright (c) 2014, Emil Axelsson
license:             BSD3
license-file:        LICENSE
homepage:            https://github.com/emilaxelsson/open-typerep
bug-reports:         https://github.com/emilaxelsson/open-typerep/issues
category:            Dependent Types
stability:           experimental
build-type:          Simple
cabal-version:       >=1.10
tested-with:         GHC==7.6.2, GHC==7.8.2

extra-source-files:
  examples/*.hs

source-repository head
  type:     git
  location: https://github.com/emilaxelsson/open-typerep

library
  hs-source-dirs: src

  exposed-modules:
    Data.TypeRep
    Data.TypeRep.Internal

  other-modules:
    Data.TypeRep.Sub

  build-depends:
    base        >=4 && <5,
    constraints >=0.3,
    syntactic   >=2.0,
    tagged      >=0.4

  default-language: Haskell2010

  default-extensions:
    FlexibleContexts
    FlexibleInstances
    GADTs
    MultiParamTypeClasses
    ScopedTypeVariables
    TypeFamilies
    TypeOperators

  other-extensions:
    UndecidableInstances,
    OverlappingInstances

test-suite examples
  type: exitcode-stdio-1.0

  hs-source-dirs: examples

  main-is: Simple.hs

  default-language: Haskell2010

  build-depends:
    open-typerep,
    base

  default-language: Haskell2010

  default-extensions:
    FlexibleContexts
    GADTs
    TypeOperators

benchmark dynamic-bench
  type: exitcode-stdio-1.0

  hs-source-dirs: benchmarks

  main-is: Dynamic.hs

  build-depends:
    base,
    criterion,
    open-typerep

  default-language: Haskell2010

  default-extensions:
    FlexibleInstances
    GADTs
    MultiParamTypeClasses
    TypeOperators

  other-extensions:
    TemplateHaskell


package-hashes:
    MD5:ccbbee4df2eb4fe4dbb90ed08246e1e6
    SHA1:448c371d726110b9433d785ccbf1dd1894e1f0f6
    SHA256:970e53784a3273b4cfa235e9e217dd29de6429f6c80eccf7ff626babe0b92b7c
    SHA512:e6b4ca2ed97f30ddac09e2f0159a45a4215a2035194a612be35ec8f83693794f6e45e08e3ebefce49e7ebf4165be693dd4775eb2ce4af9dd9048aee60eb9bc65
    Skein512_512:62013e00497a4cfe7473139d7d433fd2431a4e548d2f61387fc5740dcabe619b749e3df25a0825ba1ac912d15ae7d19db2baf535c34a9f40f248e500132bd8cb

package-locations:
    https://hackage.haskell.org/package/open-typerep-0.2/open-typerep-0.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/open-typerep-0.2.tar.gz

package-size: 6780
