-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:897a869666e2589f531f40faba209e67
    SHA1:c536ba58befa774cfbb707f6d2cfc078b8aa525a
    SHA256:455f78317d71915905f53003cf2b0fcbe564036b29be3b8021e758c542adceda
    SHA512:587da4128f53474f257f1ed34430d5b219882843535ddd5bf863cb6eb7d6f277d075a098dfe8ceae2eb3ed83b905bd10b3b7a2778aecf0916cc50d145f1c4376
    Skein512_512:c118c96bdff2ebae827d1b49aa5a560464e6a6bd039e5050d85dfdb787b4222d8d70372eed6ffc400fd9ca04583f23632eded153f1c4ff2d67f6151315503f31

x-package-locations:
    https://hackage.haskell.org/package/lrucache-1.0/lrucache-1.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/lrucache-1.0.tar.gz

x-package-size: 8003
-- END Added by all-cabal-hashes-tool

Name:                lrucache
Version:             1.0
Synopsis:            a simple, pure LRU cache
License:             BSD3
License-file:        LICENSE
Author:              Carl Howells
Maintainer:          chowells79@gmail.com
Copyright:           Carl Howells, 2010
Homepage:            http://github.com/chowells79/lrucache
Stability:           Experimental
Category:            Data
Build-type:          Simple
Description:
        This package contains a simple, pure LRU cache, implemented in
        terms of "Data.Map".
        .
        It also contains a mutable IO wrapper providing atomic updates to
        an LRU cache.
        .
        Version History:
        .
        1.0 - Breaking API changes:
               1) The newLRU smart constructor now makes the maximum
                  size optional.
               2) The delete function now returns the value removed, if
                  one was.
              Additionally, a function was added to remove the least-recently
              used element in the LRU.
        .
        0.3 - Added a Show instance for LRU. (Requested by Ben Lee)
        .
        0.2.0.1 - Increase strictness slightly.
                  Remove cabal target for test executable.
                  (Just include test sources instead.)
        .
        0.2 - Added an Eq instance for LRU.
              Added strictness to eliminate space leaks in common use patterns.
        .
        0.1.1 - Add the Data.Cache.LRU.IO.Internal module.
                Clean up build warnings on GHC 6.12.1.
        .
        0.1.0.1 - Minor refactoring
        .
        0.1 - First release

Extra-source-files:
        LICENSE
        README
        MemTest.hs
        OpTest.hs
        Setup.hs

Cabal-version:       >=1.6

Library
  Exposed-modules:
        Data.Cache.LRU
        Data.Cache.LRU.Internal
        Data.Cache.LRU.IO
        Data.Cache.LRU.IO.Internal

  Build-depends:
        base >= 4 && < 5,
        containers >= 0.2 && < 0.4

  GHC-options:  -Wall -O2
