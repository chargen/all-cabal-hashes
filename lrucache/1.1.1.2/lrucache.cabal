-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:646bc839fc2c0f419f4d38ef539bc21c
    SHA1:a2fe24376645b76e5e7f7eddf3df45b76f8e7170
    SHA256:6704c602d55b67fba51a7192b1486fda16e3a2efac239bddea59375b9dcc9ee8
    SHA512:91309cdc6c777ede2b57a95c200465019dbef7c5c1febed6e47f4fa4556f202aea7b59c1aced22d27d698a25fab0811c1d8f4669912af4c5169a1c3cfb6edc81
    Skein512_512:f671a15fe22ce0864ce1f5eeb2a574f27e32e32618419dfa445bbc341b1eb141ea9148f32bfb40ff73ce513c3df7072dbbd25c250a0481ed2830462abb82b477

package-locations:
    https://hackage.haskell.org/package/lrucache-1.1.1.2/lrucache-1.1.1.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/lrucache-1.1.1.2.tar.gz

package-size: 8483
-- END Added by all-cabal-hashes-tool

Name:                lrucache
Version:             1.1.1.2
Synopsis:            a simple, pure LRU cache
License:             BSD3
License-file:        LICENSE
Author:              Carl Howells
Maintainer:          chowells79@gmail.com
Copyright:           Carl Howells, 2010
Homepage:            http://github.com/chowells79/lrucache
Stability:           Experimental
Category:            Data
Build-type:          Simple
Description:
        This package contains a simple, pure LRU cache, implemented in
        terms of "Data.Map".
        .
        It also contains a mutable IO wrapper providing atomic updates to
        an LRU cache.
        .
        Version History:
        .
        1.1.1.2 - Make actually compatible with containers 0.5 - fix strictness issue
        .
        1.1.1.1 - Fix containers upper bound for GHC 7.6.
        .
        1.1.1 - Add an additional modification function for AtomicLRUCache.
        .
        1.1.0.1 - Update containers constraint to allow containers from ghc-7
        .
        1.1 - Add a Functor instance for LRUCache.
              Add a generic modification function for AtomicLRUCache.
        .
        1.0 - Breaking API changes:
               1) The newLRU smart constructor now makes the maximum
                  size optional.
               2) The delete function now returns the value removed, if
                  one was.
              Additionally, a function was added to remove the least-recently
              used element in the LRU.
        .
        0.3 - Added a Show instance for LRU. (Requested by Ben Lee)
        .
        0.2.0.1 - Increase strictness slightly.
                  Remove cabal target for test executable.
                  (Just include test sources instead.)
        .
        0.2 - Added an Eq instance for LRU.
              Added strictness to eliminate space leaks in common use patterns.
        .
        0.1.1 - Add the Data.Cache.LRU.IO.Internal module.
                Clean up build warnings on GHC 6.12.1.
        .
        0.1.0.1 - Minor refactoring
        .
        0.1 - First release

Extra-source-files:
        LICENSE
        README
        MemTest.hs
        OpTest.hs
        Setup.hs

Cabal-version:       >=1.6

Source-repository this
  type:              git
  location:          https://github.com/chowells79/lrucache.git
  tag:               1.1.1.2

Library
  Exposed-modules:
        Data.Cache.LRU
        Data.Cache.LRU.Internal
        Data.Cache.LRU.IO
        Data.Cache.LRU.IO.Internal

  Build-depends:
        base >= 4 && < 5,
        containers >= 0.2 && < 0.6

  GHC-options:  -Wall -O2
