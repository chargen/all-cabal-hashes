Name:                lrucache
Version:             1.1.0.1
Synopsis:            a simple, pure LRU cache
License:             BSD3
License-file:        LICENSE
Author:              Carl Howells
Maintainer:          chowells79@gmail.com
Copyright:           Carl Howells, 2010
Homepage:            http://github.com/chowells79/lrucache
Stability:           Experimental
Category:            Data
Build-type:          Simple
Description:
        This package contains a simple, pure LRU cache, implemented in
        terms of "Data.Map".
        .
        It also contains a mutable IO wrapper providing atomic updates to
        an LRU cache.
        .
        Version History:
        .
        1.1.0.1 - Update containers constraint to allow containers from ghc-7
        .
        1.1 - Add a Functor instance for LRUCache.
              Add a generic modification modification function
               for AtomicLRUCache.
        .
        1.0 - Breaking API changes:
               1) The newLRU smart constructor now makes the maximum
                  size optional.
               2) The delete function now returns the value removed, if
                  one was.
              Additionally, a function was added to remove the least-recently
              used element in the LRU.
        .
        0.3 - Added a Show instance for LRU. (Requested by Ben Lee)
        .
        0.2.0.1 - Increase strictness slightly.
                  Remove cabal target for test executable.
                  (Just include test sources instead.)
        .
        0.2 - Added an Eq instance for LRU.
              Added strictness to eliminate space leaks in common use patterns.
        .
        0.1.1 - Add the Data.Cache.LRU.IO.Internal module.
                Clean up build warnings on GHC 6.12.1.
        .
        0.1.0.1 - Minor refactoring
        .
        0.1 - First release

Extra-source-files:
        LICENSE
        README
        MemTest.hs
        OpTest.hs
        Setup.hs

Cabal-version:       >=1.6

Library
  Exposed-modules:
        Data.Cache.LRU
        Data.Cache.LRU.Internal
        Data.Cache.LRU.IO
        Data.Cache.LRU.IO.Internal

  Build-depends:
        base >= 4 && < 5,
        containers >= 0.2 && < 0.5

  GHC-options:  -Wall -O2


package-hashes:
    MD5:70c482226320cf14ca8f76af156d3fef
    SHA1:caf28f57d80ffba9ab166b8b61071accd2251eba
    SHA256:8c98b6dd3beea19fb057cb733d0e38b7fdb4eb2df7472208bcd060cbd414fb4b
    SHA512:831aa9eb212d4a3ac85c6aad18b004bd7b78b2ef4d9abf7e9ddab890ff51c5ca55a26ad50be257a7d6dc379c73ae8de6abc0baeebd95adc904179bd5dcfeb759
    Skein512_512:8532ec0150e0a4f24bc3fd58ee148ac7c0d8961a4c04973394c153e45a4c4664c818eb442534ef8f62e1a30ddf8afdf2e26b9d0431ba204992b1b549dd3fa047

package-locations:
    https://hackage.haskell.org/package/lrucache-1.1.0.1/lrucache-1.1.0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/lrucache-1.1.0.1.tar.gz

package-size: 8218
