-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:5ae847bc4811aa6c74f096ea203d8d14
    SHA1:47fdee9bfbd8193215fc2d297fd9e6b3faa920e7
    SHA256:24023f2252f1d39419077270c33ae95cac4704d6da05089a40d058ba033cf4d7
    SHA512:b2ca2b221c49462153f977ec0ae1661d8f1fbd5bf3eecce8b32ec64b38187f715fb89b012dbc458b69689119431f7742831f469b91878393233edaebaba7f26a
    Skein512_512:b4aed30a2c8c82551d9ec199ac1e1f75f1c59e8609fc7a27bfe40069e61561d1da38d58b99486124aedd5b4bb88e6db9b4aa315fb1aa501d8c0cbb7cad837568

x-package-locations:
    https://hackage.haskell.org/package/speculation-0.8.1.0/speculation-0.8.1.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/speculation-0.8.1.0.tar.gz

x-package-size: 12628
-- END Added by all-cabal-hashes-tool

name:           speculation
version:        0.8.1.0
license:        BSD3
license-file:   LICENSE
author:         Edward A. Kmett
maintainer:     Edward A. Kmett <ekmett@gmail.com>
stability:      experimental
homepage:       http://github.com/ekmett/speculation
category:       Concurrency
copyright:      (c) 2010 Edward A. Kmett
build-type:     Custom
cabal-version:  >=1.6
tested-with:    GHC==6.12.1
synopsis:       A framework for safe, programmable, speculative parallelism
description:
 A framework for safe, programmable, speculative parallelism, loosely based on:
 .
 *  Prakash Prabhu, G. Ramalingam, and Kapil Vaswani, \"/Safe Programmable Speculative Parallelism/\",
    In the proceedings of Programming Language Design and Implementation (PLDI) Vol 45, Issue 6 (June 2010) pp 50-61.
    <http://research.microsoft.com/pubs/118795/pldi026-vaswani.pdf>
 .
 This package provides speculative function application and speculative folds. Speculative STM transactions take the place
 of the transactional rollback machinery from the paper.
 .
 For example:
 . 
 @'spec' g f a@ evaluates @f g@ while forcing @a@, if @g == a@ then @f g@ is returned, otherwise @f a@ is evaluated and returned. Furthermore, if the argument has already been evaluated, we skip the @f g@ computation entirely. If a good guess at the value of @a@ is available, this is one way to induce parallelism in an otherwise sequential task. However, if the guess isn\'t available more cheaply than the actual answer, then this saves no work and if the guess is wrong, you risk evaluating the function twice. 
 .
 The best-case timeline looks like:
 .
 > [---- f g ----]
 >    [----- a -----]
 > [-- spec g f a --]
 .
 The worst-case timeline looks like:
 .
 > [---- f g ----]
 >    [----- a -----]
 >                  [---- f a ----]
 > [------- spec g f a -----------]
 .
 Compare these to the timeline of @f $! a@:
 .
 > [---- a -----]
 >              [---- f a ----]
 .
 'specSTM' provides a similar time table for STM actions, but also rolls back side-effects.

extra-source-files: 
    README.markdown
    CHANGELOG.markdown
    ISSUES.markdown

source-repository head
  type:     git
  location: http://github.com/ekmett/speculation.git
  branch:   master

flag lib
  description: Build the library. Useful for speeding up the modify-build-test cycle.
  default:     True
  manual:      True

flag tests
  description: Build the tests
  default:     False

flag benchmarks
  description: Build the benchmarks
  default:     False

flag optimize
  description: Enable optimizations for the library and benchmarks
  default:     True

flag hpc
  description: Use HPC for tests
  default:     True

library
  if !flag(lib)
    buildable: False
  else 
    ghc-options: -Wall
    if flag(optimize)
      ghc-options: -funbox-strict-fields -O2 -fspec-constr -fdicts-cheap

    build-depends:
      base >= 4 && < 6,
      ghc-prim >= 0.2 && < 0.3,
      parallel >= 2.2 && < 2.3,
      stm >= 2.1 && < 2.2

    exposed-modules:
      Control.Concurrent.Speculation
      Data.Foldable.Speculation
      Data.Traversable.Speculation
      Data.List.Speculation
    other-modules:
      Control.Concurrent.Speculation.Internal

executable test-speculation
  main-is: Test.hs
  if !flag(tests)
    buildable: False
  else
    if flag(hpc)
      ghc-options: -fhpc
      x-hpc: true
    ghc-options: -Wall
    build-depends:
      base >= 4 && < 6, 
      ghc-prim >= 0.2 && < 0.3,
      parallel >= 2.2 && < 2.3,
      stm >= 2.1 && < 2.2,
      containers >= 0.3.0 && < 0.4,
      test-framework >= 0.2.4 && < 0.3,
      test-framework-quickcheck >= 0.2.4 && < 0.3,
      test-framework-hunit >= 0.2.4 && < 0.3, 
      QuickCheck >= 1.2.0.0 && < 1.3,
      HUnit >= 1.2.2.1 && < 1.3
    other-modules:
      Control.Concurrent.Speculation.Internal
      Control.Concurrent.Speculation
      Data.Foldable.Speculation
      Data.Traversable.Speculation
      Data.List.Speculation

executable benchmark-speculation
  main-is: Benchmark.hs
  if !flag(benchmarks)
    buildable: False
  else
    ghc-options: -Wall -threaded
    if flag(optimize)
      ghc-options: -O2 -fspec-constr -funbox-strict-fields -fdicts-cheap
    build-depends:
      base >= 4 && < 6, 
      ghc-prim >= 0.2 && < 0.3,
      parallel >= 2.2 && < 2.3,
      stm >= 2.1 && < 2.2,
      containers >= 0.3.0 && < 0.4,
      criterion >= 0.5 && < 0.6
    other-modules:
      Control.Concurrent.Speculation.Internal
      Control.Concurrent.Speculation
      Data.Foldable.Speculation
      Data.Traversable.Speculation
      Data.List.Speculation
