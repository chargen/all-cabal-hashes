-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:9e4aaa95faacd1ece75fc06b600679ab
    SHA1:f5d33cdc4e8b1b9d074f3c75255dab1525e3220d
    SHA256:9045e3c6aad9b0d3e2efd27ffcc7b3e45af2d08db83a439632ae9bd5dad08b3c
    SHA512:eff09a14047986a19a058c16c573a21039f5ceedb0682258c545512d26337c73fa05033580dd11711b866327cd161be57cb23d8177e4a67514846f9efd0ce1e0
    Skein512_512:23394bcb649816801c7f8dbba8ba9bac51cd3fc41bcc23fa80902f5189fb7d49cea008235b7ebecca918048eda739d1c0bd61354ccb00b4032140932be908782

package-locations:
    https://hackage.haskell.org/package/haskell-cnc-0.1.1/haskell-cnc-0.1.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/haskell-cnc-0.1.1.tar.gz

package-size: 54320
-- END Added by all-cabal-hashes-tool

Name:           haskell-cnc
Version:        0.1.1
License: LGPL
License-file:   LICENSE
Stability: Beta
Author:			Ryan Newton <rrnewton@gmail.com>
Maintainer:		Ryan Newton <rrnewton@gmail.com>
homepage: http://software.intel.com/en-us/articles/intel-concurrent-collections-for-cc/
Copyright: Copyright (c) 2009-2010 Intel Corporation
Synopsis: Library for parallel programming in the Intel Concurrent Collections paradigm.
Description: Intel (Concurrent Collections) CnC is a data-flow like
 deterministic parallel programming model, similar to
 stream-processing but in which nodes in the computation graph share data in tables.

Category: system, concurrent
Cabal-Version: >=1.2.3

build-type: Simple

library
  build-depends:  base, mtl, containers, time, random, array, ghc-prim, extensible-exceptions, HUnit, QuickCheck
  -- Needed for the scaling.hs plotting script:
  --   HSH, gnuplot
  -- , judy>=0.2.2

  exposed-modules:  Intel.Cnc Intel.CncPure Intel.CncUtil
	            -- Various alternative schedulers:
                    Intel.Cnc3 Intel.Cnc5 Intel.Cnc6 Intel.Cnc8
  extensions: CPP, 
       -- These extensions are needed for Cnc.hs
       FlexibleInstances, BangPatterns, MagicHash, ScopedTypeVariables, DeriveDataTypeable, MultiParamTypeClasses,
       -- And the following are needed for CncPure.hs:
       ExistentialQuantification, ScopedTypeVariables, BangPatterns, NamedFieldPuns, RecordWildCards

  GHC-Options: -O2 
--  cpp-options: -DUSE_GMAP 
-- -Wall 
  -- Unfortunately these go in the include/ subdirectory once cabal installs the package.
  install-includes: ntimes ntimes_minmedmax README.txt haskell_cnc.h Makefile install_environment_vars.sh 
                    default_opt_settings.sh runcnc run_all_examples.sh scaling.hs 
                    examples/hello_world.hs examples/mandel.hs examples/primes.hs examples/primes2.hs 
                    examples/sched_tree.hs examples/threadring_onestep.hs examples/threadring.hs 
                    examples/embarrassingly_par.hs examples/fib.hs examples/nbody.hs
                    Intel/Cnc.Header.hs Intel/shared_5_6.hs 
		    --Intel/CncUtil.hs
                    --Intel/Cnc.hs Intel/CncPure.hs Intel/Cnc3.hs Intel/Cnc5.hs Intel/Cnc6.hs Intel/Cnc8.hs

  -- This seems to be completly ignored by cabal currently:
  -- Test testit
  --   type: library-1
  --   test-is: Intel.Cnc

Executable haskell-cnc-runTests
  Main-is:           runAllTests.hs
  Build-Depends:     base >= 3 && < 5, directory, process
  other-modules:  Intel.Cnc Intel.CncPure
  extensions: CPP
  GHC-Options: -O2 -threaded 
--  cpp-options: -DUSE_GMAP
-- Intel.CncUtil
