Name:           haskell-cnc

Version:        0.1.3.200
-- [2011.08.12] 0.1.3.200     Bumped after removing translator / spec compiler.

License: BSD3
License-file:   LICENSE
Stability: Beta
Author:			Ryan Newton <rrnewton@gmail.com>
Maintainer:		Ryan Newton <rrnewton@gmail.com>
homepage: http://software.intel.com/en-us/articles/intel-concurrent-collections-for-cc/
Copyright: Copyright (c) 2009-2010 Intel Corporation
Synopsis: Library for parallel programming in the Intel Concurrent Collections paradigm.
Description: Intel (Concurrent Collections) CnC is a data-flow like
 deterministic parallel programming model, similar to
 stream-processing but in which nodes in the computation graph share data in tables.

Category: Control, Parallelism
Cabal-Version: >=1.6

build-type: Simple

source-repository head
  type:     git
  location: git://github.com/rrnewton/Haskell-CnC.git

--Data-Files: ntimes ntimes_minmedmax README.txt haskell_cnc.h Makefile install_environment_vars.sh 


library
  build-depends:  base, mtl, containers, time, random, array, ghc-prim, 
                  extensible-exceptions, HUnit, MissingH, HSH, unix,
                  bytestring
  -- QuickCheck -- I haven't got quickcheck working under 6.13.xx right now.
  -- Needed for the scaling.hs plotting script:
  --   HSH, gnuplot
  -- , judy>=0.2.2

  exposed-modules:  Intel.Cnc Intel.CncPure 
	            -- Various alternative schedulers:
                    Intel.Cnc3 Intel.Cnc5 Intel.Cnc6 Intel.Cnc8
  other-modules: Intel.CncUtil
  extensions: CPP, 
       -- These extensions are needed for Cnc.hs
       FlexibleInstances, BangPatterns, MagicHash, ScopedTypeVariables, DeriveDataTypeable, MultiParamTypeClasses,
       -- And the following are needed for CncPure.hs:
       ExistentialQuantification, ScopedTypeVariables, BangPatterns, NamedFieldPuns, RecordWildCards

  GHC-Options: -O2 
--  cpp-options: -DUSE_GMAP 
-- -Wall 
  -- Unfortunately these go in the include/ subdirectory once cabal installs the package.
  install-includes: ntimes ntimes_minmedmax README.txt haskell_cnc.h Makefile install_environment_vars.sh 
                    default_opt_settings.sh runcnc run_all_examples.sh scaling.hs timeout.hs
                    examples/hello_world.hs examples/mandel.hs examples/mandel_opt.hs examples/primes.hs examples/primes2.hs 
                    examples/sched_tree.hs examples/threadring_onestep.hs examples/threadring.hs 
                    examples/embarrassingly_par.hs examples/fib.hs examples/nbody.hs
                    Intel/Cnc.Header.hs Intel/shared_5_6.hs 
                    Intel/CncUtil.hs
                    Intel/Cnc.hs Intel/CncPure.hs Intel/Cnc3.hs Intel/Cnc4.hs Intel/Cnc5.hs Intel/Cnc6.hs Intel/Cnc7.hs
                    Intel/Cnc8.hs Intel/Cnc10.hs
		    
  -- This seems to be completly ignored by cabal currently:
  -- Test testit
  --   type: library-1
  --   test-is: Intel.Cnc

Executable haskell-cnc-runTests
  Main-is:           runAllTests.hs
  Build-Depends:     base >= 3 && < 5, directory, process
  other-modules:  Intel.Cnc Intel.CncPure
  extensions: CPP
  GHC-Options: -O2 -threaded 
--  cpp-options: -DUSE_GMAP



package-hashes:
    MD5:3393d8cbe546b3b3d611069ffe09039d
    SHA1:97cf3290d740bf0b2ceb21138b713c198680482a
    SHA256:0d3627cb100946002de9af73310630f4f7782b6186bbc40bfa067bb57a933374
    SHA512:4feb9bdf5678b59df8a76a4a2f33ae55938a1da2bb56fbe102d3e7856d666492c058b7ea30e23ca606cc81d3047532f27bbf9535545160e26e0cd543b1a1a971
    Skein512_512:c266ae973c00b1ae96a6e1d1993e6ad2e9fee1c9d9e2bc9c070a8fd22f85a88f9770126de7d0895f55cea4892160a9f9330fb1663d8f4cd32c146207380c9e0b

package-locations:
    https://hackage.haskell.org/package/haskell-cnc-0.1.3.200/haskell-cnc-0.1.3.200.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/haskell-cnc-0.1.3.200.tar.gz

