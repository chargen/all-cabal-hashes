Name:           haskell-cnc
Version:        0.1.3.1
License: LGPL
License-file:   LICENSE
Stability: Beta
Author:			Ryan Newton <rrnewton@gmail.com>
Maintainer:		Ryan Newton <rrnewton@gmail.com>
homepage: http://software.intel.com/en-us/articles/intel-concurrent-collections-for-cc/
Copyright: Copyright (c) 2009-2010 Intel Corporation
Synopsis: Library for parallel programming in the Intel Concurrent Collections paradigm.
Description: Intel (Concurrent Collections) CnC is a data-flow like
 deterministic parallel programming model, similar to
 stream-processing but in which nodes in the computation graph share data in tables.

Category: system, concurrent
Cabal-Version: >=1.6

build-type: Simple

source-repository head
  type:     darcs
  location: http://code.haskell.org/haskell-cnc/

--Data-Files: ntimes ntimes_minmedmax README.txt haskell_cnc.h Makefile install_environment_vars.sh 

library
  build-depends:  base, mtl, containers, time, random, array, ghc-prim, extensible-exceptions, HUnit, MissingH, HSH
  -- QuickCheck -- I haven't got quickcheck working under 6.13.xx right now.
  -- Needed for the scaling.hs plotting script:
  --   HSH, gnuplot
  -- , judy>=0.2.2

  exposed-modules:  Intel.Cnc Intel.CncPure 
	            -- Various alternative schedulers:
                    Intel.Cnc3 Intel.Cnc5 Intel.Cnc6 Intel.Cnc8
  other-modules: Intel.CncUtil
  extensions: CPP, 
       -- These extensions are needed for Cnc.hs
       FlexibleInstances, BangPatterns, MagicHash, ScopedTypeVariables, DeriveDataTypeable, MultiParamTypeClasses,
       -- And the following are needed for CncPure.hs:
       ExistentialQuantification, ScopedTypeVariables, BangPatterns, NamedFieldPuns, RecordWildCards

  GHC-Options: -O2 
--  cpp-options: -DUSE_GMAP 
-- -Wall 
  -- Unfortunately these go in the include/ subdirectory once cabal installs the package.
  install-includes: ntimes ntimes_minmedmax README.txt haskell_cnc.h Makefile install_environment_vars.sh 
                    default_opt_settings.sh runcnc run_all_examples.sh scaling.hs timeout.hs
                    examples/hello_world.hs examples/mandel.hs examples/mandel_opt.hs examples/primes.hs examples/primes2.hs 
                    examples/sched_tree.hs examples/threadring_onestep.hs examples/threadring.hs 
                    examples/embarrassingly_par.hs examples/fib.hs examples/nbody.hs
                    Intel/Cnc.Header.hs Intel/shared_5_6.hs 
                    Intel/CncUtil.hs
                    Intel/Cnc.hs Intel/CncPure.hs Intel/Cnc3.hs Intel/Cnc5.hs Intel/Cnc6.hs Intel/Cnc8.hs

  -- This seems to be completly ignored by cabal currently:
  -- Test testit
  --   type: library-1
  --   test-is: Intel.Cnc

Executable haskell-cnc-runTests
  Main-is:           runAllTests.hs
  Build-Depends:     base >= 3 && < 5, directory, process
  other-modules:  Intel.Cnc Intel.CncPure
  extensions: CPP
  GHC-Options: -O2 -threaded 
--  cpp-options: -DUSE_GMAP


package-hashes:
    MD5:2b06044ab9a1a827a0354837131e10b7
    SHA1:514383e19ee33c50d6a7b4bf4836427a1a14a0c7
    SHA256:c8ec90adb651e6c098d7c1c4ff4d45ed375aeac708f04257a31be98b12d117d1
    SHA512:7bccc9cfaa5ce2ee782b9c2cdd287cd1f8f3812762335707411c151c4a60eccb985ac4811163aff59404434587e32c69e63e1e63991040e509588f02f2d42e6a
    Skein512_512:45d5469bb3587e3ffe518b1fbd6d57fc0cd4aacf7909e9a139f15fe22bd9af009529431fb2dc45d705bf2f66c034774a12e2e68d00083c1e73b2af3f0d157ba0

package-locations:
    https://hackage.haskell.org/package/haskell-cnc-0.1.3.1/haskell-cnc-0.1.3.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/haskell-cnc-0.1.3.1.tar.gz

package-size: 58577
