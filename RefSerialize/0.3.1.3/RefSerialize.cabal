-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:8812ab97bf796022b756b365cdf8ecd8
    SHA1:ab7f43689c756eca120509abbfe958533443b8ce
    SHA256:354b0722db9ad9e94351873ccc2bc34f1c99254da177128f97fb561d25502c63
    SHA512:f4ff2caf96fb35bc5adcf5173cbba204aff7f6a7761bf3451dc12c65230b4165bc7ceca2c379ff2cda3bdb5842225b033c4a0c60966555ca49b2ea019116cc76
    Skein512_512:f3340ce1c89ac5cce7e6e89d94eb39195f93355f3217d64406d582319d9b9513ecda560071ef76bcbe102b59f0ddf99e0b875e85878a82854569b1b49a9291ae

x-package-locations:
    https://hackage.haskell.org/package/RefSerialize-0.3.1.3/RefSerialize-0.3.1.3.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/RefSerialize-0.3.1.3.tar.gz

x-package-size: 12116
-- END Added by all-cabal-hashes-tool

name:                RefSerialize
version:             0.3.1.3
synopsis:            Write to and read from ByteStrings maintaining internal memory references
description:
                     Read, Show and Binary instances do not check for internal data references to the same address.
                     As a result, the data is duplicated when serialized. This is a waste of space in the filesystem
                     and  also a waste of serialization time. but the worst consequence is that, when the serialized data is read,
                     it allocates multiple copies for the same object when referenced multiple times. Because multiple referenced
                     data is very typical in a pure language such is Haskell, this means that the resulting data loose the beatiful
                     economy of space and processing time that referential transparency permits.
                     .
                     In this release:
                     .
                     Compatibility with older versions of bytestring that have no 'toStrict' call
                     .
                     deserialization is much, much faster by using the stringsearch package
                     .

                     See "Data.RefSerialize" for details



category:            Parsing, Data, Database
license:                BSD3
license-file:            LICENSE
author:                Alberto GÃ³mez Corona
maintainer:           agocorona@gmail.com
Tested-With:        GHC == 6.8.2
Build-Type:          Simple
build-Depends:      binary,bytestring, base >=4 && <5,containers, hashtables,stringsearch


exposed-modules:     Data.RefSerialize, Data.RefSerialize.Parser, Data.RefSerialize.Serialize
ghc-options:

