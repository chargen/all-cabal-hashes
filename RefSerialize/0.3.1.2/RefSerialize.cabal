-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:5784d1c5d938ad1068a3995a2ffc6263
    SHA1:14be85184858300d1caacc6188d6bedadf9b13e5
    SHA256:4360ee9694ee9ae0c05b58a7585f3f718ce60306108f8a2340b9d40a50bafe9a
    SHA512:26105e736484db51878507dae454812c07cca0914c34f069191eb74876894f8543e7efea445d26f540eb6e18f157a9b10cc448949f706ec2ffefd7281a06bfc8
    Skein512_512:d40115ef37261e75f0307c7c1030eb998b8a36c16ace6e8c8b2d8a04d0776395259462cc5c87feb64a646b7c92202546edab5560445a2b1563d3bebd14cb0ac1

package-locations:
    https://hackage.haskell.org/package/RefSerialize-0.3.1.2/RefSerialize-0.3.1.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/RefSerialize-0.3.1.2.tar.gz

package-size: 11752
-- END Added by all-cabal-hashes-tool

name:                RefSerialize
version:             0.3.1.2
synopsis:            Write to and read from ByteStrings maintaining internal memory references
description:
                     Read, Show and Binary instances do not check for internal data references to the same address.
                     As a result, the data is duplicated when serialized. This is a waste of space in the filesystem
                     and  also a waste of serialization time. but the worst consequence is that, when the serialized data is read,
                     it allocates multiple copies for the same object when referenced multiple times. Because multiple referenced
                     data is very typical in a pure language such is Haskell, this means that the resulting data loose the beatiful
                     economy of space and processing time that referential transparency permits.
                     .
                     In this release deserialization is much, much faster by using the stringsearch package
                     .
                     See "Data.RefSerialize" for details



category:            Parsing, Data, Database
license:                BSD3
license-file:            LICENSE
author:                Alberto GÃ³mez Corona
maintainer:           agocorona@gmail.com
Tested-With:        GHC == 6.8.2
Build-Type:          Simple
build-Depends:      binary,bytestring, base >=4 && <5,containers, hashtables,stringsearch


exposed-modules:     Data.RefSerialize, Data.RefSerialize.Parser, Data.RefSerialize.Serialize
ghc-options:

