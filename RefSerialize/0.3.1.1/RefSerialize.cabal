-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:1c20c98a83f0f43d802f8ca24a1bbd9c
    SHA1:351f3321b1cbac0f5b9b620544674e2aa9fc61bc
    SHA256:761776321f95a482699bb3814987c68c2f3418528443f053496ac48f363603eb
    SHA512:d464168f2ba287fad2c82c0adb35ae3ae000d3d8994124bd77bb345ccdc8fb7e19a9f8c271efa5c5d8a6f27af5ab5f0f048157f7711bea0f1471e1b7fefbf3e1
    Skein512_512:6fc466f6545fd4c569466fffa8468e195e0d9d7806638cd705cfef78ff28b20c5227f50b5d704a43dc6a69086d8cf7df7f1b2af3e8c9ba15b5b9be6077816fb0

package-locations:
    https://hackage.haskell.org/package/RefSerialize-0.3.1.1/RefSerialize-0.3.1.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/RefSerialize-0.3.1.1.tar.gz

package-size: 11735
-- END Added by all-cabal-hashes-tool

name:                RefSerialize
version:             0.3.1.1
synopsis:            Write to and read from ByteStrings maintaining internal memory references
description:
                     Read, Show and Binary instances do not check for internal data references to the same address.
                     As a result, the data is duplicated when serialized. This is a waste of space in the filesystem
                     and  also a waste of serialization time. but the worst consequence is that, when the serialized data is read,
                     it allocates multiple copies for the same object when referenced multiple times. Because multiple referenced
                     data is very typical in a pure language such is Haskell, this means that the resulting data loose the beatiful
                     economy of space and processing time that referential transparency permits.
                     .
                     In this release the default "(Read a, Show a) => Refserialize a" has been removed.
                     .
                     See "Data.RefSerialize" for details



category:            Parsing, Data, Database
license:                BSD3
license-file:            LICENSE
author:                Alberto GÃ³mez Corona
maintainer:           agocorona@gmail.com
Tested-With:        GHC == 6.8.2
Build-Type:          Simple
build-Depends:      binary,bytestring, base >=4 && <5,containers, hashtables


exposed-modules:     Data.RefSerialize, Data.RefSerialize.Parser, Data.RefSerialize.Serialize
ghc-options:

