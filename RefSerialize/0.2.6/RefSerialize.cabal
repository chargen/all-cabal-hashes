name:                RefSerialize
version:             0.2.6
synopsis:            Write to and read from Strings maintaining internal memory references
description:
                     Read, Show and Data.Binary do not check for internal data references to the same address.
                     As a result, the data is duplicated when serialized. This is a waste of space in the filesystem
                     and  also a waste of serialization time. but the worst consequence is that, when the serialized data is read,
                     it allocates multiple copies for the same object when referenced multiple times. Because multiple referenced
                     data is very typical in a pure language such is Haskell, this means that the resulting data loose the beatiful
                     economy of space and processing time that referential transparency permits.
                     .
                     Every instance of Show/Read can be an instance of Data.RefSerialize.
                     .
                     This package allows the serialization and deserialization of large data structures without duplication of data, with
                     the result of optimized performance and memory usage. Since the serialized data is also human readable, It is also
                     useful for debugging purposes.
                     .
                     The deserializer contains a subset of Parsec.Token for defining deserializing parsers.
                     .
                     the serialized string has the form:
                     .
                     @expr( var1, ...varn) where  var1=value1,..valn=valueN @
                     .
                     so that the string can agree with the haskell syntax.
                     .
                     See demo.hs and tutorial.
                     .
                     in this release:
                            .
                            *  bug corrected: empty lists were written with two indirections (insertVar . insertVar). That caused an error in readp
                            .
                            *  removed the problematic instance (Show a, Read a) => Serialize a
                            .
                            *  Added   instances for standard datatypes,
                            .
                            *  instance of Serialize [a] changed
                     .
                     To do:
                     .
                                 -derived instances for Data.Binary
                     .
                                 -serialization to/from ByteStings
                     

category:           Parsing, Data, Database
license:             BSD3
license-file:        LICENSE
author:              Alberto GÃ³mez Corona
maintainer:          agocorona@gmail.com
Tested-With:         GHC == 6.8.2
Build-Type:          Simple
build-Depends:       base >=3 && <4,containers
Cabal-Version:       >= 1.2

exposed-modules:     Data.RefSerialize, Data.Parser, Data.Serialize
ghc-options:    -O2


package-hashes:
    MD5:6cff1f1daab0916a29057bd8f6bc923f
    SHA1:fcbebbce24863ba4e6744c73245d06b627d593c4
    SHA256:7e7838b3560ac1d8ce16d2535a14083e979d3573fdf7dfe7b2c5a292b9d396ce
    SHA512:f6cfb2bd772e644eca27118b9f78d5c4fb2d2e86531e9fca104ad5a5ec0b2be6d4ad3c5f94fff314a2dc8ad62542179106af56cd33407da991d18ef8405c01ac
    Skein512_512:38e9a2c5dc3ac1e0121d1cfdf766d15b0ed70c48569f49413774eba4bbaeae43db2bd465129098c115617648a1693fadd22ce85193742009fa22e6f8f3d6f92a

package-locations:
    https://hackage.haskell.org/package/RefSerialize-0.2.6/RefSerialize-0.2.6.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/RefSerialize-0.2.6.tar.gz

package-size: 9513
