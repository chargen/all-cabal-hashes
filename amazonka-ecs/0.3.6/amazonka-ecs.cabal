-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:6f4efacf83cfa6f149ca55e132faa60d
    SHA1:27e5ae778ba49f3d5d25dd2e90a6bca0c450eb86
    SHA256:d9bd1974ff69af39d4ed54d4af1bc02f31f3d0698f56ca1dcdb7e488db4da5d5
    SHA512:97a77e17cf05f78e5c913eac2a7877ba8f7123ae7085370c955ad51eb982313a2a228c8e37373e1e949f34cb1b4b002460c3e4686072467d7dbe614c37195307
    Skein512_512:c27212b8f2108bc616a667b4cd54310707d6f5b2a7d2edf9e7aa9a5ac75d27298acadadff5a23f7ef92a4fda447b63ff14abd923fc9fef0cf0a2a51fb317df19

x-package-locations:
    https://hackage.haskell.org/package/amazonka-ecs-0.3.6/amazonka-ecs-0.3.6.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/amazonka-ecs-0.3.6.tar.gz

x-package-size: 37297
-- END Added by all-cabal-hashes-tool

name:                  amazonka-ecs
version:               0.3.6
synopsis:              Amazon EC2 Container Service SDK.
homepage:              https://github.com/brendanhay/amazonka
license:               OtherLicense
license-file:          LICENSE
author:                Brendan Hay
maintainer:            Brendan Hay <brendan.g.hay@gmail.com>
copyright:             Copyright (c) 2013-2014 Brendan Hay
category:              Network, AWS, Cloud, Distributed Computing
build-type:            Simple
extra-source-files:    README.md
cabal-version:         >= 1.10

description:
    Amazon EC2 Container Service is a highly scalable, high performance container
    management service that supports Docker containers and allows you to easily
    run distributed applications on a managed cluster of Amazon EC2 instances.
    Amazon EC2 Container Service lets you launch and stop container-enabled
    applications with simple API calls, allows you to query the state of your
    cluster from a centralized service, and gives you access to many familiar
    Amazon EC2 features like security groups, EBS volumes and IAM roles. You can
    use EC2 Container Service to schedule the placement of containers across your
    cluster based on your resource needs, isolation policies, and availability
    requirements. Amazon EC2 Container Service eliminates the need for you to
    operate your own cluster management and configuration management systems or
    worry about scaling your management infrastructure.

    .
    /See:/ <http://docs.aws.amazon.com/AmazonECS/latest/APIReference/Welcome.html AWS API Reference>
    .
    /Warning:/ This is an experimental preview release which is still under
    heavy development and not intended for public consumption, caveat emptor!

source-repository head
    type:     git
    location: git://github.com/brendanhay/amazonka.git

library
    default-language:  Haskell2010
    hs-source-dirs:    src gen

    ghc-options:       -Wall

    exposed-modules:
          Network.AWS.ECS
        , Network.AWS.ECS.CreateCluster
        , Network.AWS.ECS.CreateService
        , Network.AWS.ECS.DeleteCluster
        , Network.AWS.ECS.DeleteService
        , Network.AWS.ECS.DeregisterContainerInstance
        , Network.AWS.ECS.DeregisterTaskDefinition
        , Network.AWS.ECS.DescribeClusters
        , Network.AWS.ECS.DescribeContainerInstances
        , Network.AWS.ECS.DescribeServices
        , Network.AWS.ECS.DescribeTaskDefinition
        , Network.AWS.ECS.DescribeTasks
        , Network.AWS.ECS.DiscoverPollEndpoint
        , Network.AWS.ECS.ListClusters
        , Network.AWS.ECS.ListContainerInstances
        , Network.AWS.ECS.ListServices
        , Network.AWS.ECS.ListTaskDefinitionFamilies
        , Network.AWS.ECS.ListTaskDefinitions
        , Network.AWS.ECS.ListTasks
        , Network.AWS.ECS.RegisterContainerInstance
        , Network.AWS.ECS.RegisterTaskDefinition
        , Network.AWS.ECS.RunTask
        , Network.AWS.ECS.StartTask
        , Network.AWS.ECS.StopTask
        , Network.AWS.ECS.SubmitContainerStateChange
        , Network.AWS.ECS.SubmitTaskStateChange
        , Network.AWS.ECS.Types
        , Network.AWS.ECS.UpdateService

    other-modules:

    build-depends:
          amazonka-core == 0.3.6.*
        , base          >= 4.7     && < 5
