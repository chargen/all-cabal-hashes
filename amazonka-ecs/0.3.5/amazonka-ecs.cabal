-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:afe632e644d56479f2738060abec9bab
    SHA1:87b2ae32e56889c3be1c52ec0bcfb4a0a51e315d
    SHA256:8d9fd4d92a3a997c38580d84b98109d0001949c54d660ac21ada017e6224621b
    SHA512:2edf3ec2b9971f6d465622cbaa8061b12b189e330f809478650eac6f8e4322033bf86d3cc5ad103c0ac497d2a07dba0ad0d1852ee0f2f2618a475685776942d1
    Skein512_512:ac1c39956cf41318c9191aa8425dcaccf8181e6752e06b1f081be7ed9b07ed1e0f3201bd0c003848690c63b482bc420fa6e406450f64a7785f4b7f3b965a0fa5

x-package-locations:
    https://hackage.haskell.org/package/amazonka-ecs-0.3.5/amazonka-ecs-0.3.5.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/amazonka-ecs-0.3.5.tar.gz

x-package-size: 37295
-- END Added by all-cabal-hashes-tool

name:                  amazonka-ecs
version:               0.3.5
synopsis:              Amazon EC2 Container Service SDK.
homepage:              https://github.com/brendanhay/amazonka
license:               OtherLicense
license-file:          LICENSE
author:                Brendan Hay
maintainer:            Brendan Hay <brendan.g.hay@gmail.com>
copyright:             Copyright (c) 2013-2014 Brendan Hay
category:              Network, AWS, Cloud, Distributed Computing
build-type:            Simple
extra-source-files:    README.md
cabal-version:         >= 1.10

description:
    Amazon EC2 Container Service is a highly scalable, high performance container
    management service that supports Docker containers and allows you to easily
    run distributed applications on a managed cluster of Amazon EC2 instances.
    Amazon EC2 Container Service lets you launch and stop container-enabled
    applications with simple API calls, allows you to query the state of your
    cluster from a centralized service, and gives you access to many familiar
    Amazon EC2 features like security groups, EBS volumes and IAM roles. You can
    use EC2 Container Service to schedule the placement of containers across your
    cluster based on your resource needs, isolation policies, and availability
    requirements. Amazon EC2 Container Service eliminates the need for you to
    operate your own cluster management and configuration management systems or
    worry about scaling your management infrastructure.

    .
    /See:/ <http://docs.aws.amazon.com/AmazonECS/latest/APIReference/Welcome.html AWS API Reference>
    .
    /Warning:/ This is an experimental preview release which is still under
    heavy development and not intended for public consumption, caveat emptor!

source-repository head
    type:     git
    location: git://github.com/brendanhay/amazonka.git

library
    default-language:  Haskell2010
    hs-source-dirs:    src gen

    ghc-options:       -Wall

    exposed-modules:
          Network.AWS.ECS
        , Network.AWS.ECS.CreateCluster
        , Network.AWS.ECS.CreateService
        , Network.AWS.ECS.DeleteCluster
        , Network.AWS.ECS.DeleteService
        , Network.AWS.ECS.DeregisterContainerInstance
        , Network.AWS.ECS.DeregisterTaskDefinition
        , Network.AWS.ECS.DescribeClusters
        , Network.AWS.ECS.DescribeContainerInstances
        , Network.AWS.ECS.DescribeServices
        , Network.AWS.ECS.DescribeTaskDefinition
        , Network.AWS.ECS.DescribeTasks
        , Network.AWS.ECS.DiscoverPollEndpoint
        , Network.AWS.ECS.ListClusters
        , Network.AWS.ECS.ListContainerInstances
        , Network.AWS.ECS.ListServices
        , Network.AWS.ECS.ListTaskDefinitionFamilies
        , Network.AWS.ECS.ListTaskDefinitions
        , Network.AWS.ECS.ListTasks
        , Network.AWS.ECS.RegisterContainerInstance
        , Network.AWS.ECS.RegisterTaskDefinition
        , Network.AWS.ECS.RunTask
        , Network.AWS.ECS.StartTask
        , Network.AWS.ECS.StopTask
        , Network.AWS.ECS.SubmitContainerStateChange
        , Network.AWS.ECS.SubmitTaskStateChange
        , Network.AWS.ECS.Types
        , Network.AWS.ECS.UpdateService

    other-modules:

    build-depends:
          amazonka-core == 0.3.5.*
        , base          >= 4.7     && < 5
