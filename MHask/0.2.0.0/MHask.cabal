-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:4612b7fcba615c596335ddce4e255739
    SHA1:a09b8d760e6c18ffa72359e7b0d957054ab389c4
    SHA256:d0e5d787bdaf7c25508341995e8e01cf8154b6f9d8b9bfe3bac81ab7d491b7fb
    SHA512:f813a846625d806ca5d33382138f85144c17775b53d81e6beeb3d1efe91e16771faf467a8288c2325cd340306bed63e384575a1c54f48ceba863666fc5ed916a
    Skein512_512:39df472068d2a341fc718f3c975c94f28f0883e023dc90ae8ed1af1408917ee705d2c31dea3ec7fcbe775e7760fddea7def4062a7a262be7e6eeebbdc187773c

x-package-locations:
    https://hackage.haskell.org/package/MHask-0.2.0.0/MHask-0.2.0.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/MHask-0.2.0.0.tar.gz

x-package-size: 4332
-- END Added by all-cabal-hashes-tool

name:                MHask
version:             0.2.0.0
synopsis:            The category of monads
description:         
  MHask is the category where
  .
  * The objects are Haskell types of kind @(* → *)@ that have an instance of `Prelude.Monad'
  .
  * An arrow from object m to object n is a Haskell function of the form @(forall x. m x → n x)@
  .
  * Arrow composition is merely a specialization of Haskell function composition
  .
  * The identity arrow for the object m is the `Prelude.id' function in Haskell,
  specialized to @(forall x. m x → m x)@
  .
  It is assumed that any instances of the classes provided here also have an instance
  for Monad of the form @instance (Monad m) ⇒ Monad (t m)@, thus guaranteeing that @(t m)@
  (or @(t i j m)@ for the indexed types) is always a Monad. If it were valid Haskell, I'd write:
  .
  > class (forall m. Monad m ⇒ Monad (t m)) ⇒ Functor t
  .
  'MHask.Functor.Functor' should actually be called Endofunctor, because if m is an object in MHask,
  then an instance t of `Functor' can map object m to object (t m), and arrows from 
  m to n get mapped to arrows from (t m) to (t n).


homepage:            https://github.com/DanBurton/MHask#readme
license:             BSD3
license-file:        LICENSE
author:              Dan Burton
maintainer:          danburton.email@gmail.com
category:            Control
build-type:          Simple
cabal-version:       >=1.8

source-repository head
  type:     git
  location: git://github.com/DanBurton/MHask.git

source-repository this
  type:     git
  location: git://github.com/DanBurton/MHask.git
  tag:      MHask-0.2.0.0

library
  exposed-modules:     MHask, MHask.Comonad, MHask.Monad, MHask.Copointed, MHask.Pointed, MHask.Util, MHask.Functor, MHask.Indexed.Comonad, MHask.Indexed.Monad, MHask.Indexed.Copointed, MHask.Indexed.Pointed, MHask.Indexed.Functor

  build-depends:       base >= 2 && < 4.7, transformers >= 0.3
