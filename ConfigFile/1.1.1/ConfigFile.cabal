-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:9a43500bd71600de14ce8b2291a65fe7
    SHA1:d03ce3f35e7d43193e8207c8272df7a7a1fa69cf
    SHA256:55067e4b6d5f532d6e28c739869742a011490905e24894da9015368aed825e70
    SHA512:2c8cb8fe633521999416946379c03b8e169d46cfe430701d5c723faa65917df47fd9753098e575157b036d208ca91b3eec8f4eeaeaaf4152dbebb9356ba8eb95
    Skein512_512:f7f40419e360883a783efd487a671484ac94ff4f843f96459351233eb214296df959e3ef5e8accfccf82f331f5b9df9838565f3f8c1085450534c1dc9bcc0c0f

x-package-locations:
    https://hackage.haskell.org/package/ConfigFile-1.1.1/ConfigFile-1.1.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/ConfigFile-1.1.1.tar.gz

x-package-size: 28269
-- END Added by all-cabal-hashes-tool

Name: ConfigFile
Version: 1.1.1
License: LGPL
Maintainer: John Goerzen <jgoerzen@complete.org>
Author: John Goerzen
Copyright: Copyright (c) 2004-2010 John Goerzen
license-file: COPYRIGHT
extra-source-files: COPYING,
                    README,
                    Makefile,
                    testsrc/ConfigParser/test.cfg
Category: Parsing
homepage: http://software.complete.org/configfile
synopsis: Configuration file reading & writing
Description: Parser and writer for handling sectioned config files in
 Haskell.
 .
  The ConfigFile module works with configuration files in a standard
 format that is easy for the user to edit, easy for the programmer
 to work with, yet remains powerful and flexible.  It is inspired by,
 and compatible with, Python's ConfigParser module.  It uses files
 that resemble Windows .INI-style files, but with numerous
 improvements.
 .
 ConfigFile provides simple calls to both read and write config files.
 It's possible to make a config file parsable by this module,
 the Unix shell, and make.
Stability: Stable
Build-Type: Simple
Cabal-Version: >=1.2.3

Flag buildtests
  description: Build the executable to run unit tests
  default: False

Library
  Hs-Source-Dirs: src
  Exposed-Modules: Data.ConfigFile,
    Data.ConfigFile.Types,
    Data.ConfigFile.Parser,
    Data.ConfigFile.Monadic
  Other-Modules: Data.ConfigFile.Lexer
  Extensions: ExistentialQuantification, OverlappingInstances,
   UndecidableInstances, TypeSynonymInstances, FlexibleContexts,
   FlexibleInstances
  Build-Depends: parsec, base < 5,
                mtl, MissingH>=1.0.0, containers
  GHC-Options: -O2 -Wall

Executable runtests
  if flag(buildtests)
    Buildable: True
    Build-depends: HUnit, testpack
  else
    Buildable: False
  Main-Is: runtests.hs
  HS-Source-Dirs: testsrc, src, .
  Other-Modules: Tests, ConfigParser.Maintest, ConfigParser.Parsertest
  Extensions: ExistentialQuantification, OverlappingInstances,
    UndecidableInstances, CPP, TypeSynonymInstances, FlexibleContexts,
    FlexibleInstances
