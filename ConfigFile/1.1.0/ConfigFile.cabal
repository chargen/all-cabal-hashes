-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:255602a9a8b0b4e9e41488ccee16c55c
    SHA1:99a8f045076acaf715df241d41bbd5393c1f046d
    SHA256:0cee975bf964d2b35683e5c6baf02b5982a50d39e8f04e93893884e3a229b754
    SHA512:cbe88442cafaee6fce895012784a970fdce54968a9a66e82e46a28a12ad695f7ca76e18c7b01f6df92e0f1fca45bb13da7fa4fa9bb3a7f31329cc61c43aac876
    Skein512_512:548680242ee20df44a6df54e95b8d6c6d88500773b9ee3284225d4016439440a8ddd37f4ded2c91833c943e3eaffe1b8f731f6587d00d2adaf08d20eb1f7147f

package-locations:
    https://hackage.haskell.org/package/ConfigFile-1.1.0/ConfigFile-1.1.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/ConfigFile-1.1.0.tar.gz

package-size: 28033
-- END Added by all-cabal-hashes-tool

Name: ConfigFile
Version: 1.1.0
License: LGPL
Maintainer: John Goerzen <jgoerzen@complete.org>
Author: John Goerzen
Copyright: Copyright (c) 2004-2010 John Goerzen
license-file: COPYRIGHT
extra-source-files: COPYING,
                    README,
                    Makefile,
                    testsrc/ConfigParser/test.cfg
Category: Parsing
homepage: http://software.complete.org/configfile
synopsis: Configuration file reading & writing
Description: Parser and writer for handling sectioned config files in
 Haskell.
 .
  The ConfigFile module works with configuration files in a standard
 format that is easy for the user to edit, easy for the programmer
 to work with, yet remains powerful and flexible.  It is inspired by,
 and compatible with, Python's ConfigParser module.  It uses files
 that resemble Windows .INI-style files, but with numerous
 improvements.
 .
 ConfigFile provides simple calls to both read and write config files.
 It's possible to make a config file parsable by this module,
 the Unix shell, and make.
Stability: Stable
Build-Type: Simple
Cabal-Version: >=1.2.3

Flag buildtests
  description: Build the executable to run unit tests
  default: False

Library
  Hs-Source-Dirs: src
  Exposed-Modules: Data.ConfigFile,
    Data.ConfigFile.Types,
    Data.ConfigFile.Parser,
    Data.ConfigFile.Monadic
  Other-Modules: Data.ConfigFile.Lexer
  Extensions: ExistentialQuantification, OverlappingInstances,
   UndecidableInstances, TypeSynonymInstances, FlexibleContexts,
   FlexibleInstances
  Build-Depends: parsec, base < 5,
                mtl, MissingH>=1.0.0, containers
  GHC-Options: -O2 -Wall

Executable runtests
  if flag(buildtests)
    Buildable: True
    Build-depends: HUnit, testpack
  else
    Buildable: False
  Main-Is: runtests.hs
  HS-Source-Dirs: testsrc, src, .
  Other-Modules: Tests, ConfigParser.Maintest, ConfigParser.Parsertest
  Extensions: ExistentialQuantification, OverlappingInstances,
    UndecidableInstances, CPP, TypeSynonymInstances, FlexibleContexts,
    FlexibleInstances
