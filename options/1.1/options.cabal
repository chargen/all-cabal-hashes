name: options
version: 1.1
x-revision: 1
license: MIT
license-file: license.txt
author: John Millikin <john@john-millikin.com>
maintainer: John Millikin <john@john-millikin.com>
build-type: Simple
cabal-version: >= 1.8
category: Console
stability: stable
homepage: https://john-millikin.com/software/haskell-options/

synopsis: A powerful and easy-to-use command-line option parser.
description:
  The @options@ package lets library and application developers easily work
  with command-line options.
  .
  The following example is a full program that can accept two options,
  @--message@ and @--quiet@:
  .
  @
  import Control.Applicative
  import Options
  .
  data MainOptions = MainOptions
  &#x20;   &#x7b; optMessage :: String
  &#x20;   , optQuiet :: Bool
  &#x20;   &#x7d;
  .
  instance 'Options' MainOptions where
  &#x20;   defineOptions = pure MainOptions
  &#x20;       \<*\> simpleOption \"message\" \"Hello world!\"
  &#x20;           \"A message to show the user.\"
  &#x20;       \<*\> simpleOption \"quiet\" False
  &#x20;           \"Whether to be quiet.\"
  .
  main :: IO ()
  main = runCommand $ \\opts args -> do
  &#x20;   if optQuiet opts
  &#x20;       then return ()
  &#x20;       else putStrLn (optMessage opts)
  @
  .
  >$ ./hello
  >Hello world!
  >$ ./hello --message='ciao mondo'
  >ciao mondo
  >$ ./hello --quiet
  >$
  .
  In addition, this library will automatically create documentation options
  such as @--help@ and @--help-all@:
  .
  >$ ./hello --help
  >Help Options:
  >  -h, --help
  >    Show option summary.
  >  --help-all
  >    Show all help options.
  >
  >Application Options:
  >  --message :: text
  >    A message to show the user.
  >    default: "Hello world!"
  >  --quiet :: bool
  >    Whether to be quiet.
  >    default: false


extra-source-files:
  cbits/hoehrmann_utf8.c
  cbits/utf8.c

source-repository head
  type: git
  location: https://john-millikin.com/code/haskell-options/

source-repository this
  type: git
  location: https://john-millikin.com/code/haskell-options/
  tag: haskell-options_1.1

library
  ghc-options: -Wall -O2
  cc-options: -Wall
  hs-source-dirs: lib

  if !os(windows) && impl(ghc < 7.2)
      cpp-options: -DOPTIONS_ENCODING_UTF8
      c-sources: cbits/utf8.c
      build-depends:
          bytestring >= 0.9

  if impl(ghc > 7.4)
    ghc-options: -fwarn-unsafe

  build-depends:
      base >= 4.1 && < 4.8
    , containers >= 0.1
    , monads-tf >= 0.1
    , transformers >= 0.2

  exposed-modules:
    Options

  other-modules:
    Options.Help
    Options.Tokenize
    Options.Types
    Options.Util

test-suite options_tests
  type: exitcode-stdio-1.0
  main-is: OptionsTests.hs

  ghc-options: -Wall -O2
  cc-options: -Wall
  hs-source-dirs: lib,tests

  if !os(windows) && impl(ghc < 7.2)
      cpp-options: -DOPTIONS_ENCODING_UTF8
      c-sources: cbits/utf8.c
      build-depends:
          bytestring >= 0.9

  build-depends:
      base >= 4.0 && < 5.0
    , chell >= 0.3.1 && < 0.4
    , chell-quickcheck >= 0.2 && < 0.3
    , containers >= 0.1
    , monads-tf >= 0.1
    , transformers >= 0.2

  other-modules:
    OptionsTests.Api
    OptionsTests.Help
    OptionsTests.OptionTypes
    OptionsTests.StringParsing
    OptionsTests.Tokenize
    OptionsTests.Util


package-hashes:
    MD5:5c3f8533e044f35a84eac5810e6bc4ec
    SHA1:8903dfc185c739a90b026ade3f01822b4c455f08
    SHA256:d1d253b03470d3560b25c024a88879e20ada7c9f2cded741b24759c27f778071
    SHA512:973955f36edc5d61de607923f60439ef0458fbe2996aad1113455d58a6a9aabd308477497ade4648e7cff45da2d8ec464632b68e170ff8b7b5c65baee87bdbc3
    Skein512_512:eb50b8d1475f87a4ae5a821194e1acdbd08c789f7614ae59af395293b89b96fefc50a21c93a9960099ad38e96f7754c0fe6f01939083d1cf2bdcdfcb84777e61

package-locations:
    https://hackage.haskell.org/package/options-1.1/options-1.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/options-1.1.tar.gz

package-size: 25116
