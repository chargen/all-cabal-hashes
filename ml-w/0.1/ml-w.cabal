-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:bf38fce9695b8f54efe6dd7a4223f842
    SHA1:a3ea78cc12f2d251624b48d8daa8910ff669904f
    SHA256:f4eeb550772d6921d86b36e7aecd10419215a6155ede839151787b394bf98bae
    SHA512:10ea526d1bac2b55db71dc0e94786db2fc8e4c1ae0c8bf16f3bb6c05ba16d255c42836816456dec564ab4e75e60c6b7f47a5d7e479ab5ea7fdf355b78063d8ed
    Skein512_512:6f4442ce88f4601daf10eb96551c39f05e4f8d9b569e5ba8866f1f5d5b10025f639a1e50897fc7d7c3cbe178b7af81b9cfb5e12d14ecb16403902e5f7ee223ce

package-locations:
    https://hackage.haskell.org/package/ml-w-0.1/ml-w-0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/ml-w-0.1.tar.gz

package-size: 7037
-- END Added by all-cabal-hashes-tool

name:                ml-w
version:             0.1
synopsis:            Minimal ML language to to demonstrate the W type
                     infererence algorithm.
author:              Francesco Mazzoli <f@mazzo.li>
maintainer:          Francesco Mazzoli <f@mazzo.li>
category:            Language, Type Inference
license:             PublicDomain
build-type:          Simple
cabal-version:       >= 1.6
tested-with:         GHC==6.12.3, GHC==7.0.4, GHC==7.2.2, GHC==7.4.1, Hugs
extra-source-files:  Makefile
description:
    .
    This package implements a minimal ML-like language to demonstrate how the W
    algorithm works.
    .
    The 'ML' module contains the definition of the language in the form of an
    Haskell data type, plus functions to parse files and pretty print the
    datatype.
    .
    The 'TypeInfer' module contains the W algorithm itself.
    .
    The 'Main' module contains a program that parses and typechecks programs
    reading from standard input.
    .
    The program in 'Main' can be compiled with @make@, and the documentation
    with @make docs@. It should work fine with @GHC@ version 6 or 7 (and
    maybe more). It can also be loaded and ran with Hugs turning the
    extensions on (using the @-98@ flag) (or simply using the make target
    @loadhugs@).

source-repository head
    type:            git
    location:        git://github.com/bitonic/ml-w.git

executable ML
    main-is:         Main.hs
    build-depends:   base >= 3 && < 5, mtl, parsec, pretty
    GHC-options:     -Wall

library
    build-depends:   base >= 3 && < 5, mtl, parsec, pretty
    GHC-Options:     -Wall
    exposed-modules: Language.ML,
                     Language.ML.Syntax,
                     Language.ML.TypeCheck
    other-modules:   Applicative
