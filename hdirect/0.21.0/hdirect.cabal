-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:a52e2f13b4206452e3dbe5bc703c27b4
    SHA1:b10f20eae6732b8a9314d363cb1db444486a39bb
    SHA256:c2db117dcc9e9a293dc409ecc7813aaab52d891e0e26328f2866c50966eafeec
    SHA512:73b0389b621cbb415f0328fdab52fa8cfe7e1feb43540a379717a71ddff8b1097e4b772139d85e0b6e9fb11bd192d6fea3cd2634351f9d6f60982e30e650797f
    Skein512_512:af7b3eb995d2e5558b01ce09cd4fc0549298284a71d1979bf28cbdec82f58b889d9233ead1a5899751c266e1819348dd65b01d21b2e10f0bdce33bd4316a52f9

x-package-locations:
    https://hackage.haskell.org/package/hdirect-0.21.0/hdirect-0.21.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/hdirect-0.21.0.tar.gz

x-package-size: 459741
-- END Added by all-cabal-hashes-tool

Name:               hdirect
Version:            0.21.0
Synopsis:           An IDL compiler for Haskell
Description:
    HaskellDirect is an IDL compiler for Haskell, which offers a helping
    hand to the Haskell programmer that wants to better interact with
    and reuse external code.
 . 
    Interfacing Haskell code to external code involves the conversion of
    values between the Haskell world and the outside, as data
    representations and details of how memory is managed, are worlds
    apart at times. Manually writing the boilerplate code that takes
    care of this conversion is about as exciting as watching grass grow
    and, as a result, error prone.
 .
    Using an Interface Definition Language (IDL) as basis, HaskellDirect
    automates the generation of such impedance matching code, generating
    all the necessary marshaling code for you.
 . 
    With IDL, the functionality provided by a programming interface is
    specified in a programming language neutral framework. The
    HaskellDirect IDL compiler converts this specification into a set of
    method stubs. Depending on how the compiler is invoked, these stubs
    can be used to:
 .
 * Call upon external functions from within Haskell, HaskellDirect creates bindings to external (C-callable) libraries.
 . 
 * Let external code call upon Haskell functions, HaskellDirect creates foreign/external language interfaces to Haskell libraries.
 .
 * Call COM (Microsoft's Component Object Model) methods from Haskell, HaskellDirect helps you use Microsoft COM components from within Haskell.  The generated stubs can be used with Hugs98 or GHC.
 .
 * Create COM method wrappers, HaskellDirect packages up Haskell code as COM components.
 .
    The HaskellDirect IDL compiler currently groks both the OSF DCE
    dialect of IDL (including the various extensions introduced by the
    Microsoft IDL compiler) and the OMG IIOP/CORBA dialect. (Only the
    former can be used for describing COM interfaces.) 
 .
homepage:           http://www.haskell.org/hdirect/
License:            BSD3
License-File:       LICENSE
Author:             Sigbjorn Finne
Maintainer:         Don Stewart <dons@galois.com>
Copyright:          1998-2003 University of Glasgow and Sigbjorn Finne. 2010 Don Stewart
Stability:          Stable
Category:           Development
Build-type:         Simple
cabal-version:      >= 1.6

source-repository head
    type:     darcs
    location: http://code.haskell.org/~dons/code/hdirect

Executable hdirect
    hs-source-dirs:  src
    Main-Is:            Main.lhs
    ghc-options:        -Wall
    build-tools:        happy
    build-depends:      haskell98,
                        base >= 2 && < 5,
                        pretty,
                        array

library
    hs-source-dirs:  src
    build-tools:        happy
    build-depends:      haskell98,
                        base >= 2 && < 5,
                        pretty,
                        array

    exposed-modules:
        AbsHUtils
        AbstractH
        Attribute
        Bag
        BasicTypes
        CStubGen
        CgMonad
        CodeGen
        CoreIDL
        CoreUtils
        CustomAttributes
        DefGen
        Desugar
        Digraph
        DsMonad
        Env
        FiniteMap
        GetOpt
        HugsCodeGen
        IDLSyn
        IDLToken
        IDLUtils
        ImportLib
        JavaProxy
        Lex
        LexM
        LibUtils
        Literal
        Main
        MarshallAbstract
        MarshallAuto
        MarshallCore
        MarshallDep
        MarshallEnum
        MarshallFun
        MarshallJNI
        MarshallJServ
        MarshallMethod
        MarshallMonad
        MarshallServ
        MarshallStruct
        MarshallType
        MarshallUnion
        MarshallUtils
        MkImport
        NameSupply
        NativeInfo
        NormaliseType
        OmgParser
        Opts
        PP
        Parser
        PpAbstractH
        PpCore
        PpIDLSyn
        PreProc
        Rename
        RnMonad
        Skeleton
        SrcLoc
        SymbolTable
        TLBWriter
        TypeInfo
        Utils
        Validate
        Version
