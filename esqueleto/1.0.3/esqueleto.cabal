name:                esqueleto
version:             1.0.3
synopsis:            Bare bones, type-safe EDSL for SQL queries on persistent backends.
homepage:            https://github.com/meteficha/esqueleto
license:             BSD3
license-file:        LICENSE
author:              Felipe Lessa
maintainer:          felipe.lessa@gmail.com
copyright:           (c) 2012 Felipe Almeida Lessa
category:            Database
build-type:          Simple
cabal-version:       >=1.8
description:
  @persistent@ is a library for type-safe data serialization.  It
  has many kinds of backends, such as SQL backends
  (@persistent-mysql@, @persistent-postgresql@,
  @persistent-sqlite@) and NoSQL backends (@persistent-mongoDB@).
  .
  While @persistent@ is a nice library for storing and retrieving
  records, currently it has a poor interface for SQL backends
  compared to SQL itself.  For example, it's extremely hard to do
  a type-safe @JOIN@ on a many-to-one relation, and simply
  impossible to do any other kinds of @JOIN@s (including for the
  very common many-to-many relations).  Users have the option of
  writing raw SQL, but that's error prone and not type-checked.
  .
  @esqueleto@ is a bare bones, type-safe EDSL for SQL queries
  that works with unmodified @persistent@ SQL backends.  Its
  language closely resembles SQL, so (a) you don't have to learn
  new concepts, just new syntax, and (b) it's fairly easy to
  predict the generated SQL and optimize it for your backend.
  Most kinds of errors committed when writing SQL are caught as
  compile-time errors---although it is possible to write
  type-checked @esqueleto@ queries that fail at runtime.
  .
  Currently only @SELECT@s are supported.  Not all SQL features
  are available, but most of them can be easily added (especially
  functions), so please open an issue or send a pull request if
  you need anything that is not covered by @esqueleto@ on
  <https://github.com/meteficha/esqueleto/>.
  .
  The name of this library means \"skeleton\" in Portuguese and
  contains all three SQL letters in the correct order =).  It was
  inspired by Scala's Squeryl but created from scratch.

source-repository head
  type:     git
  location: git://github.com/meteficha/esqueleto.git

library
  exposed-modules:
    Database.Esqueleto
    Database.Esqueleto.Internal.Language
    Database.Esqueleto.Internal.Sql
  build-depends:
      base                 >= 4.5    && < 4.7
    , text                 == 0.11.*
    , persistent           == 1.1.*
    , transformers         >= 0.2
    , unordered-containers >= 0.2

    , monad-logger
    , conduit
    , resourcet
  hs-source-dirs: src/
  ghc-options: -Wall

test-suite test
  type: exitcode-stdio-1.0
  ghc-options:    -Wall
  hs-source-dirs: test
  main-is:        Test.hs
  build-depends:
      -- Library dependencies used on the tests.  No need to
      -- specify versions since they'll use the same as above.
      base, persistent, transformers, conduit, text

      -- Test-only dependencies
    , HUnit
    , QuickCheck
    , hspec               == 1.3.*
    , persistent-sqlite   == 1.1.*
    , persistent-template == 1.1.*
    , monad-control
    , monad-logger
    , fast-logger         >= 0.2 && < 0.4
    , transformers-base
    , template-haskell

      -- This library
    , esqueleto


package-hashes:
    MD5:ba062e3a85b97bebe6960b4203f0a66a
    SHA1:699fc897cb80ba47e7f4fb6e269500a26b4bcc7e
    SHA256:a386c9969daf57edcf7f01eb75b3619fa3962a503056df97dd23adf2f9d35843
    SHA512:db8f6608d97c949f87984cd9fecfa2486bf9c90e31bb45da524028578ca3b2bfe58211e7dbe3563a162b64fbf7f03886a1d99226e87fff2d32ec42393d0f6eb1
    Skein512_512:a653bb582566ffa893820bee3db537ba6d350a2b6754a25cfb43140aca680cc90f914320603d55131888669b6b0bf014b0cbf11e4c94eb8252f7833ccd5dbb1b

package-locations:
    https://hackage.haskell.org/package/esqueleto-1.0.3/esqueleto-1.0.3.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/esqueleto-1.0.3.tar.gz

