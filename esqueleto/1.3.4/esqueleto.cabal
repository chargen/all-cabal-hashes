name:                esqueleto
version:             1.3.4
synopsis:            Bare bones, type-safe EDSL for SQL queries on persistent backends.
homepage:            https://github.com/meteficha/esqueleto
license:             BSD3
license-file:        LICENSE
author:              Felipe Lessa
maintainer:          felipe.lessa@gmail.com
copyright:           (c) 2012 Felipe Almeida Lessa
category:            Database
build-type:          Simple
cabal-version:       >=1.8
description:
  @persistent@ is a library for type-safe data serialization.  It
  has many kinds of backends, such as SQL backends
  (@persistent-mysql@, @persistent-postgresql@,
  @persistent-sqlite@) and NoSQL backends (@persistent-mongoDB@).
  .
  While @persistent@ is a nice library for storing and retrieving
  records, currently it has a poor interface for SQL backends
  compared to SQL itself.  For example, it's extremely hard to do
  a type-safe @JOIN@ on a many-to-one relation, and simply
  impossible to do any other kinds of @JOIN@s (including for the
  very common many-to-many relations).  Users have the option of
  writing raw SQL, but that's error prone and not type-checked.
  .
  @esqueleto@ is a bare bones, type-safe EDSL for SQL queries
  that works with unmodified @persistent@ SQL backends.  Its
  language closely resembles SQL, so (a) you don't have to learn
  new concepts, just new syntax, and (b) it's fairly easy to
  predict the generated SQL and optimize it for your backend.
  Most kinds of errors committed when writing SQL are caught as
  compile-time errors---although it is possible to write
  type-checked @esqueleto@ queries that fail at runtime.
  .
  Currently, @SELECT@s, @UPDATE@s, @INSERT@s and @DELETE@s are supported.
  Not all SQL features are available, but most of them can be easily added
  (especially functions), so please open an issue or send a pull request if
  you need anything that is not covered by @esqueleto@ on
  <https://github.com/meteficha/esqueleto/>.
  .
  The name of this library means \"skeleton\" in Portuguese and
  contains all three SQL letters in the correct order =).  It was
  inspired by Scala's Squeryl but created from scratch.

source-repository head
  type:     git
  location: git://github.com/meteficha/esqueleto.git

library
  exposed-modules:
    Database.Esqueleto
    Database.Esqueleto.Internal.Language
    Database.Esqueleto.Internal.Sql
  other-modules:
    Database.Esqueleto.Internal.PersistentImport
  build-depends:
      base                 >= 4.5    && < 4.7
    , text                 == 0.11.*
    , persistent           == 1.2.*
    , transformers         >= 0.2
    , unordered-containers >= 0.2
    , tagged               >= 0.2

    , monad-logger
    , conduit
    , resourcet
  hs-source-dirs: src/
  ghc-options: -Wall

test-suite test
  type: exitcode-stdio-1.0
  ghc-options:    -Wall
  hs-source-dirs: test
  main-is:        Test.hs
  build-depends:
      -- Library dependencies used on the tests.  No need to
      -- specify versions since they'll use the same as above.
      base, persistent, transformers, conduit, text

      -- Test-only dependencies
    , containers
    , HUnit
    , QuickCheck
    , hspec               >= 1.3 && < 1.8
    , persistent-sqlite   == 1.2.*
    , persistent-template == 1.2.*
    , monad-control
    , monad-logger        >= 0.3

      -- This library
    , esqueleto


package-hashes:
    MD5:efd05fe63d058be468ccccfc935ccdca
    SHA1:c7625e2a9d63e778a879f19339e7d5c402556ec2
    SHA256:d6b13c12df3c00dc1a8bade3986fddd919c7f5f9372d5f6ad35a501355c1295c
    SHA512:7cfa8516da38fc10b9f1ed5d3b24ef0c2b7ec064e8ff91cb0114dfac4d92271675b6142ded9efc3c27183ac48b079a3fc2ac867c00a5b33a14c672bc24511ee7
    Skein512_512:b82a69752dda02bd73ccafb221bee97ee484cc205b8da35c1cbd3f7ca37749ed20eed3bf78dbaf513257ff03ef3d9f140e129dd53c19e6d652294dbe3ceef00a

package-locations:
    https://hackage.haskell.org/package/esqueleto-1.3.4/esqueleto-1.3.4.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/esqueleto-1.3.4.tar.gz

