-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:21f51c14bfe915cbd0a5ec2dc09aec41
    SHA1:c03dd47f01f596465237ee26750c192751789a2d
    SHA256:09a083f9579599679eb3dfeb40017b405b2e39d4ad055b50ae162e852c0e1e5a
    SHA512:8a269346d3b45e33385b8d2ff40fa17ed9fda2f59bc0c6b3c884413abac38bf99fa2ad35a209ec2fa5e4ea70fbe8ca87acc4e03a016207dd1ed3938dc53b6528
    Skein512_512:5407ceda2c114af7b7a8590336164ca93fbf3922ef0d9600fd9867886501394cf4ab72d858c52ef7e144372c685f98919d2690f11fbb024e4d68a7bae7415a14

package-locations:
    https://hackage.haskell.org/package/amazonka-cloudformation-0.3.4/amazonka-cloudformation-0.3.4.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/amazonka-cloudformation-0.3.4.tar.gz

package-size: 28980
-- END Added by all-cabal-hashes-tool

name:                  amazonka-cloudformation
version:               0.3.4
synopsis:              Amazon CloudFormation SDK.
homepage:              https://github.com/brendanhay/amazonka
license:               OtherLicense
license-file:          LICENSE
author:                Brendan Hay
maintainer:            Brendan Hay <brendan.g.hay@gmail.com>
copyright:             Copyright (c) 2013-2014 Brendan Hay
category:              Network, AWS, Cloud, Distributed Computing
build-type:            Simple
extra-source-files:    README.md
cabal-version:         >= 1.10

description:
    AWS CloudFormation gives developers and systems administrators an easy way to
    create and manage a collection of related AWS resources, provisioning and
    updating them in an orderly and predictable fashion. You can use AWS
    CloudFormation’s sample templates or create your own templates to describe
    the AWS resources, and any associated dependencies or runtime parameters,
    required to run your application. You don’t need to figure out the order for
    provisioning AWS services or the subtleties of making those dependencies
    work. CloudFormation takes care of this for you. After the AWS resources are
    deployed, you can modify and update them in a controlled and predictable way,
    in effect applying version control to your AWS infrastructure the same way
    you do with your software.

    .
    /See:/ <http://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/Welcome.html AWS API Reference>
    .
    /Warning:/ This is an experimental preview release which is still under
    heavy development and not intended for public consumption, caveat emptor!

source-repository head
    type:     git
    location: git://github.com/brendanhay/amazonka.git

library
    default-language:  Haskell2010
    hs-source-dirs:    src gen

    ghc-options:       -Wall

    exposed-modules:
          Network.AWS.CloudFormation
        , Network.AWS.CloudFormation.CancelUpdateStack
        , Network.AWS.CloudFormation.CreateStack
        , Network.AWS.CloudFormation.DeleteStack
        , Network.AWS.CloudFormation.DescribeStackEvents
        , Network.AWS.CloudFormation.DescribeStackResource
        , Network.AWS.CloudFormation.DescribeStackResources
        , Network.AWS.CloudFormation.DescribeStacks
        , Network.AWS.CloudFormation.EstimateTemplateCost
        , Network.AWS.CloudFormation.GetStackPolicy
        , Network.AWS.CloudFormation.GetTemplate
        , Network.AWS.CloudFormation.GetTemplateSummary
        , Network.AWS.CloudFormation.ListStackResources
        , Network.AWS.CloudFormation.ListStacks
        , Network.AWS.CloudFormation.SetStackPolicy
        , Network.AWS.CloudFormation.SignalResource
        , Network.AWS.CloudFormation.Types
        , Network.AWS.CloudFormation.UpdateStack
        , Network.AWS.CloudFormation.ValidateTemplate

    other-modules:

    build-depends:
          amazonka-core == 0.3.4.*
        , base          >= 4.7     && < 5
