-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:e20d6439449b92c158bdd3e5558fba43
    SHA1:96451e95d82ebdbdae6ebbccb5ee36b8a29742b1
    SHA256:47ff968b6105d0de65a65e85b69ff72d1f2cb4296a7e996462d4acbce7a6039e
    SHA512:87b1afcf81d87470829b7ce8c3d2d61d11f6d65ba53fbdafcd12e08adb22588b6836d65b68edfd3f3d85fd310f3b2de2b864123cb8893e9cd3b78342788f11f7
    Skein512_512:f66baa17df52dd3d588b1c9183d06099c51050d5723d7dd01189d29ac558f487f54f578a6572026a8986ff8a6c26d3598da2044cae8deacb8bc07f0af4a4953f

package-locations:
    https://hackage.haskell.org/package/amazonka-cloudformation-0.2.2/amazonka-cloudformation-0.2.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/amazonka-cloudformation-0.2.2.tar.gz

package-size: 29240
-- END Added by all-cabal-hashes-tool

name:                  amazonka-cloudformation
version:               0.2.2
synopsis:              Amazon CloudFormation SDK.
homepage:              https://github.com/brendanhay/amazonka
license:               OtherLicense
license-file:          LICENSE
author:                Brendan Hay
maintainer:            Brendan Hay <brendan.g.hay@gmail.com>
copyright:             Copyright (c) 2013-2014 Brendan Hay
category:              Network, AWS, Cloud, Distributed Computing
build-type:            Simple
extra-source-files:    README.md
cabal-version:         >= 1.10

description:
    AWS CloudFormation gives developers and systems administrators an easy way to
    create and manage a collection of related AWS resources, provisioning and
    updating them in an orderly and predictable fashion. You can use AWS
    CloudFormation’s sample templates or create your own templates to describe
    the AWS resources, and any associated dependencies or runtime parameters,
    required to run your application. You don’t need to figure out the order for
    provisioning AWS services or the subtleties of making those dependencies
    work. CloudFormation takes care of this for you. After the AWS resources are
    deployed, you can modify and update them in a controlled and predictable way,
    in effect applying version control to your AWS infrastructure the same way
    you do with your software.

    .
    /See:/ <http://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/Welcome.html AWS API Reference>
    .
    /Warning:/ This is an experimental preview release which is still under
    heavy development and not intended for public consumption, caveat emptor!

source-repository head
    type:     git
    location: git://github.com/brendanhay/amazonka.git

library
    default-language:  Haskell2010
    hs-source-dirs:    src gen

    ghc-options:       -Wall

    exposed-modules:
          Network.AWS.CloudFormation
        , Network.AWS.CloudFormation.CancelUpdateStack
        , Network.AWS.CloudFormation.CreateStack
        , Network.AWS.CloudFormation.DeleteStack
        , Network.AWS.CloudFormation.DescribeStackEvents
        , Network.AWS.CloudFormation.DescribeStackResource
        , Network.AWS.CloudFormation.DescribeStackResources
        , Network.AWS.CloudFormation.DescribeStacks
        , Network.AWS.CloudFormation.EstimateTemplateCost
        , Network.AWS.CloudFormation.GetStackPolicy
        , Network.AWS.CloudFormation.GetTemplate
        , Network.AWS.CloudFormation.GetTemplateSummary
        , Network.AWS.CloudFormation.ListStackResources
        , Network.AWS.CloudFormation.ListStacks
        , Network.AWS.CloudFormation.SetStackPolicy
        , Network.AWS.CloudFormation.SignalResource
        , Network.AWS.CloudFormation.Types
        , Network.AWS.CloudFormation.UpdateStack
        , Network.AWS.CloudFormation.ValidateTemplate

    other-modules:

    build-depends:
          amazonka-core == 0.2.2.*
        , base          >= 4.7     && < 5
