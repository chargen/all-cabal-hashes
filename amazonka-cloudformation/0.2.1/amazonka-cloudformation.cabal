-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:ed4a38106a7c1b5bbef8621ddab173c2
    SHA1:8046420c3cae54e9cf179caf92fd9f2d4be96901
    SHA256:8311324637b6cb2443040b315330cc9d1995e0a5ca0d4b2268fc3474b8ee9646
    SHA512:68925ec4ac6c2ffd9494c418bdb21efc604d2050522a52e74d039c33689e217dd86df1ecd5a9b8b3e4a571a924b998ee4263db50adae5ca66cee9a9c330d220f
    Skein512_512:0f82060c6576e416d6f0030473b1f05e2eeafb82f256bd241c3046bb2239437a13de29e3855fb41680fb71fc7ace55d6b5ce29cb2572d10c967eaa964a4c4e6f

package-locations:
    https://hackage.haskell.org/package/amazonka-cloudformation-0.2.1/amazonka-cloudformation-0.2.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/amazonka-cloudformation-0.2.1.tar.gz

package-size: 29234
-- END Added by all-cabal-hashes-tool

name:                  amazonka-cloudformation
version:               0.2.1
synopsis:              Amazon CloudFormation SDK.
homepage:              https://github.com/brendanhay/amazonka
license:               OtherLicense
license-file:          LICENSE
author:                Brendan Hay
maintainer:            Brendan Hay <brendan.g.hay@gmail.com>
copyright:             Copyright (c) 2013-2014 Brendan Hay
category:              Network, AWS, Cloud, Distributed Computing
build-type:            Simple
extra-source-files:    README.md
cabal-version:         >= 1.10

description:
    AWS CloudFormation gives developers and systems administrators an easy way to
    create and manage a collection of related AWS resources, provisioning and
    updating them in an orderly and predictable fashion. You can use AWS
    CloudFormation’s sample templates or create your own templates to describe
    the AWS resources, and any associated dependencies or runtime parameters,
    required to run your application. You don’t need to figure out the order for
    provisioning AWS services or the subtleties of making those dependencies
    work. CloudFormation takes care of this for you. After the AWS resources are
    deployed, you can modify and update them in a controlled and predictable way,
    in effect applying version control to your AWS infrastructure the same way
    you do with your software.

    .
    /See:/ <http://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/Welcome.html AWS API Reference>
    .
    /Warning:/ This is an experimental preview release which is still under
    heavy development and not intended for public consumption, caveat emptor!

source-repository head
    type:     git
    location: git://github.com/brendanhay/amazonka.git

library
    default-language:  Haskell2010
    hs-source-dirs:    src gen

    ghc-options:       -Wall

    exposed-modules:
          Network.AWS.CloudFormation
        , Network.AWS.CloudFormation.CancelUpdateStack
        , Network.AWS.CloudFormation.CreateStack
        , Network.AWS.CloudFormation.DeleteStack
        , Network.AWS.CloudFormation.DescribeStackEvents
        , Network.AWS.CloudFormation.DescribeStackResource
        , Network.AWS.CloudFormation.DescribeStackResources
        , Network.AWS.CloudFormation.DescribeStacks
        , Network.AWS.CloudFormation.EstimateTemplateCost
        , Network.AWS.CloudFormation.GetStackPolicy
        , Network.AWS.CloudFormation.GetTemplate
        , Network.AWS.CloudFormation.GetTemplateSummary
        , Network.AWS.CloudFormation.ListStackResources
        , Network.AWS.CloudFormation.ListStacks
        , Network.AWS.CloudFormation.SetStackPolicy
        , Network.AWS.CloudFormation.SignalResource
        , Network.AWS.CloudFormation.Types
        , Network.AWS.CloudFormation.UpdateStack
        , Network.AWS.CloudFormation.ValidateTemplate

    other-modules:

    build-depends:
          amazonka-core == 0.2.1.*
        , base          >= 4.7     && < 5
