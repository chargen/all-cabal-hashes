-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:63265b73184743c70a51d7d0966279ca
    SHA1:c9ac04da166c4dab92a7736b9d01be7dcc28a297
    SHA256:74cd8cbb906d2bec3fec598d910e7b3a8da87960a4d84dfededd38ce00ae187c
    SHA512:15a89a5cd7eca10bb5cf217649daa90cf33973915ce67cf21fd058b0559a79a88cadd55c5859dbdfe13a9e78c438e29ed669ada20c41f5454c58f7bfa3efd603
    Skein512_512:e13b1a754e5ba0d24384282d37cb65cbffe7519e0b3705d243c959f469d750af09b5625c6d12b435860f524308849a1cbce0f8b77c448e0899e5af7f4f4a108c

package-locations:
    https://hackage.haskell.org/package/amazonka-cloudformation-0.1.1/amazonka-cloudformation-0.1.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/amazonka-cloudformation-0.1.1.tar.gz

package-size: 29198
-- END Added by all-cabal-hashes-tool

name:                  amazonka-cloudformation
version:               0.1.1
synopsis:              Amazon CloudFormation SDK.
homepage:              https://github.com/brendanhay/amazonka
license:               OtherLicense
license-file:          LICENSE
author:                Brendan Hay
maintainer:            Brendan Hay <brendan.g.hay@gmail.com>
copyright:             Copyright (c) 2013-2014 Brendan Hay
category:              Network, AWS, Cloud, Distributed Computing
build-type:            Simple
extra-source-files:    README.md
cabal-version:         >= 1.10

description:
    AWS CloudFormation gives developers and systems administrators an easy way to
    create and manage a collection of related AWS resources, provisioning and
    updating them in an orderly and predictable fashion. You can use AWS
    CloudFormation’s sample templates or create your own templates to describe
    the AWS resources, and any associated dependencies or runtime parameters,
    required to run your application. You don’t need to figure out the order for
    provisioning AWS services or the subtleties of making those dependencies
    work. CloudFormation takes care of this for you. After the AWS resources are
    deployed, you can modify and update them in a controlled and predictable way,
    in effect applying version control to your AWS infrastructure the same way
    you do with your software.

    .
    /See:/ <http://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/Welcome.html AWS API Reference>
    .
    /Warning:/ This is an experimental preview release which is still under
    heavy development and not intended for public consumption, caveat emptor!

source-repository head
    type:     git
    location: git://github.com/brendanhay/amazonka.git

library
    default-language:  Haskell2010
    hs-source-dirs:    src gen

    ghc-options:       -Wall

    exposed-modules:
          Network.AWS.CloudFormation
        , Network.AWS.CloudFormation.CancelUpdateStack
        , Network.AWS.CloudFormation.CreateStack
        , Network.AWS.CloudFormation.DeleteStack
        , Network.AWS.CloudFormation.DescribeStackEvents
        , Network.AWS.CloudFormation.DescribeStackResource
        , Network.AWS.CloudFormation.DescribeStackResources
        , Network.AWS.CloudFormation.DescribeStacks
        , Network.AWS.CloudFormation.EstimateTemplateCost
        , Network.AWS.CloudFormation.GetStackPolicy
        , Network.AWS.CloudFormation.GetTemplate
        , Network.AWS.CloudFormation.GetTemplateSummary
        , Network.AWS.CloudFormation.ListStackResources
        , Network.AWS.CloudFormation.ListStacks
        , Network.AWS.CloudFormation.SetStackPolicy
        , Network.AWS.CloudFormation.SignalResource
        , Network.AWS.CloudFormation.Types
        , Network.AWS.CloudFormation.UpdateStack
        , Network.AWS.CloudFormation.ValidateTemplate

    other-modules:

    build-depends:
          amazonka-core == 0.1.1.*
        , base          >= 4.7     && < 5
