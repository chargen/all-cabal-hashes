-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:b681d2ec542d3eb0885e7ceea49ae467
    SHA1:b05dd0f8a16626b0ab7d25ab46fb363b47ab1374
    SHA256:862bcbd70459df0aa933dd71736b746fb81e2fffb85db1af4f841136e6cd8873
    SHA512:239034c41f88d2671144b478a1e91f0cf810e210187a2efa2860e44aec955a8b6b33ab7d95b6db8ebb6409fe638a863b68fb3d6c0b71c8e63b63af7188c7e6cc
    Skein512_512:c87b4c87dac1b358b2cdd524aeaaecd2246f17514a421a6f7052d40732bba9ab8d8bb107ffb64f73162810316f9ec6297c55646d538ee896dfb8627ad8aff186

package-locations:
    https://hackage.haskell.org/package/amazonka-cloudformation-0.0.3/amazonka-cloudformation-0.0.3.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/amazonka-cloudformation-0.0.3.tar.gz

package-size: 28789
-- END Added by all-cabal-hashes-tool

name:                  amazonka-cloudformation
version:               0.0.3
synopsis:              Amazon CloudFormation SDK.
homepage:              https://github.com/brendanhay/amazonka
license:               OtherLicense
license-file:          LICENSE
author:                Brendan Hay
maintainer:            Brendan Hay <brendan.g.hay@gmail.com>
copyright:             Copyright (c) 2013-2014 Brendan Hay
category:              Network, AWS, Cloud
build-type:            Simple
extra-source-files:    README.md
cabal-version:         >= 1.10

description:
    AWS CloudFormation gives developers and systems administrators an easy way to
    create and manage a collection of related AWS resources, provisioning and
    updating them in an orderly and predictable fashion. You can use AWS
    CloudFormation’s sample templates or create your own templates to describe
    the AWS resources, and any associated dependencies or runtime parameters,
    required to run your application. You don’t need to figure out the order for
    provisioning AWS services or the subtleties of making those dependencies
    work. CloudFormation takes care of this for you. After the AWS resources are
    deployed, you can modify and update them in a controlled and predictable way,
    in effect applying version control to your AWS infrastructure the same way
    you do with your software.

    .
    /See:/ <http://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/Welcome.html AWS API Reference>
    .
    /Warning:/ This is an experimental preview release which is still under
    heavy development and not intended for public consumption, caveat emptor!

source-repository head
    type:     git
    location: git://github.com/brendanhay/amazonka.git

library
    default-language:  Haskell2010
    hs-source-dirs:    src gen

    ghc-options:       -Wall

    exposed-modules:
          Network.AWS.CloudFormation
        , Network.AWS.CloudFormation.CancelUpdateStack
        , Network.AWS.CloudFormation.CreateStack
        , Network.AWS.CloudFormation.DeleteStack
        , Network.AWS.CloudFormation.DescribeStackEvents
        , Network.AWS.CloudFormation.DescribeStackResource
        , Network.AWS.CloudFormation.DescribeStackResources
        , Network.AWS.CloudFormation.DescribeStacks
        , Network.AWS.CloudFormation.EstimateTemplateCost
        , Network.AWS.CloudFormation.GetStackPolicy
        , Network.AWS.CloudFormation.GetTemplate
        , Network.AWS.CloudFormation.GetTemplateSummary
        , Network.AWS.CloudFormation.ListStackResources
        , Network.AWS.CloudFormation.ListStacks
        , Network.AWS.CloudFormation.SetStackPolicy
        , Network.AWS.CloudFormation.SignalResource
        , Network.AWS.CloudFormation.Types
        , Network.AWS.CloudFormation.UpdateStack
        , Network.AWS.CloudFormation.ValidateTemplate

    other-modules:

    build-depends:
          amazonka-core == 0.0.3.*
        , base          >= 4.7     && < 5
