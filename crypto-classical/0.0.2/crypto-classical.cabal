-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:6be626118830df5c010a03a09565a50b
    SHA1:50dd61ff825e0d32db70a6bd7084ee409e9f9a20
    SHA256:b3a9cce0a45405aefaabf970e1efa767844fdfdfebc7afdd16cf191a44cbe130
    SHA512:01dc8abedbc15fbe1994d2bd2bc7dbab3b80a2961f674a6f324f31eb4c5090ff8e17d8814d69a1ba07005f71e370dac588bccec9e021767503f0cbd0b8048b1b
    Skein512_512:fb5d3d0143c519d06d9f561e693108a049d89954591e418fd63df0593c98f06fff3c009de455c160e40c3c1c19f3b8cc134a6eeadf6207b2db6f16b04c525ed2

x-package-locations:
    https://hackage.haskell.org/package/crypto-classical-0.0.2/crypto-classical-0.0.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/crypto-classical-0.0.2.tar.gz

x-package-size: 9841
-- END Added by all-cabal-hashes-tool

name:                crypto-classical

version:             0.0.2

synopsis:            An educational tool for studying classical cryptography schemes.

description:         An educational tool for studying classical cryptography
                     schemes. Do not encrypt anything of worth with this
                     library.
                     .
                     /Included Ciphers:/
                     .
                     * Caesar
                     .
                     * Affine (Linear)
                     .
                     * Substitution
                     .
                     * Stream
                     .
                     * Vigenere
                     .
                     * Enigma (Wehrmacht Enigma I)
                     .
                     Thanks to polymorphism, we can generate keys and encrypt
                     ByteStrings without worrying much about types:
                     .
                     > > import Crypto.Classical
                     > > import Control.Lens
                     > > :set -XOverloadedStrings
                     > > (key <$> prng) >>= \k -> return (encrypt k "What a great day for an attack!" ^. enigma)
                     > "PXQS D KXSGB CFC AYK XJ DEGMON!"
                     > > (key <$> prng) >>= \k -> return (encrypt k "What a great day for an attack!" ^. caesar)
                     > "RCVO V BMZVO YVT AJM VI VOOVXF!"

homepage:            https://github.com/fosskers/crypto-classical

license:             BSD3

license-file:        LICENSE

author:              Colin Woodbury

maintainer:          colingw@gmail.com

category:            Cryptography

build-type:          Simple

cabal-version:       >=1.10

source-repository head
  type:     git
  location: git://github.com/fosskers/crypto-classical.git
                     
library
  exposed-modules:     Crypto.Classical
                     , Crypto.Classical.Cipher
                     , Crypto.Classical.Letter
                     , Crypto.Classical.Shuffle
                     , Crypto.Classical.Types
                     , Crypto.Classical.Test
                     , Crypto.Classical.Util
                     , Crypto.Classical.Cipher.Caesar
                     , Crypto.Classical.Cipher.Affine
                     , Crypto.Classical.Cipher.Stream
                     , Crypto.Classical.Cipher.Substitution
                     , Crypto.Classical.Cipher.Vigenere
                     , Crypto.Classical.Cipher.Enigma
  
  -- Modules included in this library but not exported.
  -- other-modules:       
  
  -- LANGUAGE extensions used by modules in this package.
  -- other-extensions:    
  
  -- Other library packages from which modules are imported.
  build-depends:       QuickCheck >= 2.8.1
                     , base >=4.7 && <4.9
                     , bytestring
                     , containers >= 0.5.5.1
                     , crypto-numbers >= 0.2.7
                     , crypto-random
                     , lens >= 4.7
                     , modular-arithmetic >= 1.2.0.0
                     , random
                     , random-shuffle >= 0.0.4
                     , text >= 1.2.0.4
                     , transformers >= 0.4.2.0
  
  -- Directories containing source files.
  -- hs-source-dirs:      
  
  -- Base language which the package is written in.
  default-language:    Haskell2010
