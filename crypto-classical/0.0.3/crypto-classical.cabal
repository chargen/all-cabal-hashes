-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:6ce1cbb9367f958f183140b72e252e09
    SHA1:12b80f07640503d934e6a6661db927a3e1d3f441
    SHA256:9a660b28896bc2d89fc287398d15b0cf89829e989b1e13ac72ccd9dd0c4725cc
    SHA512:f890c9c37441c80d1f0f57c7b862467616272d940d5f7f61d7bdbeab4d7e6a23ff45d09e2db489f3d0d0e3739516f7901af64806c8bd8a2b08bf3629c983c3d0
    Skein512_512:fce7df9201e121359f02c76bd4504d4d6ac40795e5450ec439d09a79983b991fc15781de2b34c306c92bfa8331fdd1b020ce470d7323f0ff4e87df0fd6f5880b

package-locations:
    https://hackage.haskell.org/package/crypto-classical-0.0.3/crypto-classical-0.0.3.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/crypto-classical-0.0.3.tar.gz

package-size: 9861
-- END Added by all-cabal-hashes-tool

name:                crypto-classical

version:             0.0.3

synopsis:            An educational tool for studying classical cryptography schemes.

description:         An educational tool for studying classical cryptography
                     schemes. Do not encrypt anything of worth with this
                     library.
                     .
                     /Included Ciphers:/
                     .
                     * Caesar
                     .
                     * Affine (Linear)
                     .
                     * Substitution
                     .
                     * Stream
                     .
                     * Vigenere
                     .
                     * Enigma (Wehrmacht Enigma I)
                     .
                     Thanks to polymorphism, we can generate keys and encrypt
                     ByteStrings without worrying much about types:
                     .
                     > > import Crypto.Classical
                     > > import Control.Lens
                     > > :set -XOverloadedStrings
                     > > (key <$> prng) >>= \k -> return (encrypt k "What a great day for an attack!" ^. enigma)
                     > "PXQS D KXSGB CFC AYK XJ DEGMON!"
                     > > (key <$> prng) >>= \k -> return (encrypt k "What a great day for an attack!" ^. caesar)
                     > "RCVO V BMZVO YVT AJM VI VOOVXF!"

homepage:            https://github.com/fosskers/crypto-classical

license:             BSD3

license-file:        LICENSE

author:              Colin Woodbury

maintainer:          colingw@gmail.com

category:            Cryptography

build-type:          Simple

cabal-version:       >=1.10

source-repository head
  type:     git
  location: git://github.com/fosskers/crypto-classical.git
                     
library
  exposed-modules:     Crypto.Classical
                     , Crypto.Classical.Cipher
                     , Crypto.Classical.Letter
                     , Crypto.Classical.Shuffle
                     , Crypto.Classical.Types
                     , Crypto.Classical.Test
                     , Crypto.Classical.Util
                     , Crypto.Classical.Cipher.Caesar
                     , Crypto.Classical.Cipher.Affine
                     , Crypto.Classical.Cipher.Stream
                     , Crypto.Classical.Cipher.Substitution
                     , Crypto.Classical.Cipher.Vigenere
                     , Crypto.Classical.Cipher.Enigma
  
  -- Modules included in this library but not exported.
  -- other-modules:       
  
  -- LANGUAGE extensions used by modules in this package.
  -- other-extensions:    
  
  -- Other library packages from which modules are imported.
  build-depends:       QuickCheck >= 2.8.1
                     , base >=4.7 && <4.9
                     , bytestring
                     , containers >= 0.5.5.1
                     , crypto-numbers >= 0.2.7
                     , crypto-random
                     , lens >= 4.7
                     , modular-arithmetic >= 1.2.0.0
                     , random
                     , random-shuffle >= 0.0.4
                     , text >= 1.2.0.4
                     , transformers >= 0.4.2.0
  
  -- Directories containing source files.
  -- hs-source-dirs:      
  
  -- Base language which the package is written in.
  default-language:    Haskell2010
