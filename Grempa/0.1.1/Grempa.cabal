-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:8109f714fad9462bafcfd0de045c2972
    SHA1:bf8fa6606a2a7c8ea386e7dac3d04dd6899a27b7
    SHA256:dc63ceb83c28f635b7a8b4fa3c9f60c900812cb86d5abb0f64b793bbd359d97b
    SHA512:a5ef35cc68fbfefd34af7c7c266af0caeff040f0f181e00fcd1ff43010ed947789d91d0f255dddf2927d35d0ff19cda8842331054d2fe5d97ca38eb9546fbad7
    Skein512_512:42ed394ef480635d9ba89d025bec542c9956052b4bbdeb9c5c88f9466a4344e43ef6d12ad9b64eb15dc1d4471f2bb32d0db9224f50142edafd3674123c807e9f

package-locations:
    https://hackage.haskell.org/package/Grempa-0.1.1/Grempa-0.1.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/Grempa-0.1.1.tar.gz

package-size: 25066
-- END Added by all-cabal-hashes-tool

Name:                Grempa
Version:             0.1.1
Synopsis:            Embedded grammar DSL and LALR parser generator
Description:
    A library for expressing programming language grammars in a form similar
    to BNF, which is extended with the semantic actions to take when
    a production has been parsed. The grammars are typed and are to be be used
    with the LALR(1) parser generator, also part of the library, which can
    generate a parser for the language either at compile time using Template
    Haskell, producing fast parsers with no initial runtime overhead, or
    dynamically, which has the initial overhead of generating the parser, but
    can be used for example when the grammar depends on an input.
License:             BSD3
License-file:        LICENSE
Author:              Olle Fredriksson
Maintainer:          fredriksson.olle@gmail.com
Copyright:           (c) 2010 Olle Fredriksson
Stability:           Experimental
Category:            Parsing
Build-type:          Simple
Extra-source-files:  README
                   , examples/Ex1SimpleExpr.hs
                   , examples/Ex1SimpleExprParser.hs
                   , examples/Ex2Calculator.hs
                   , examples/Ex2CalculatorParser.hs
                   , examples/Ex3Fun.hs
                   , examples/Ex3FunLex.hs
                   , examples/Ex3FunParser.hs
                   , examples/Ex4StateA.hs
                   , examples/Ex4StateB.hs
                   , examples/Ex4StateLex.hs
                   , examples/Ex4StateParser.hs
                   , examples/Ex5Test.hs
Cabal-version:       >= 1.6
Flag test
    Description:
      Build the module for generating random inputs and the expected output for
      your grammars.
      Default: False
Library
    Build-depends:   array            == 0.3.*
                   , base             == 4.2.*
                   , containers       == 0.3.*
                   , monads-fd        == 0.2.*
                   , template-haskell == 2.4.*
                   , th-lift          == 0.5.*
    Exposed-modules: Data.Parser.Grempa.Grammar
                   , Data.Parser.Grempa.Static
                   , Data.Parser.Grempa.Dynamic
    Other-modules:   Data.Parser.Grempa.Aux.Aux
                   , Data.Parser.Grempa.Aux.MultiMap
                   , Data.Parser.Grempa.Grammar.Levels
                   , Data.Parser.Grempa.Grammar.Token
                   , Data.Parser.Grempa.Grammar.Typed
                   , Data.Parser.Grempa.Grammar.Untyped
                   , Data.Parser.Grempa.Parser.Conflict
                   , Data.Parser.Grempa.Parser.Driver
                   , Data.Parser.Grempa.Parser.Dynamic
                   , Data.Parser.Grempa.Parser.Item
                   , Data.Parser.Grempa.Parser.LALR
                   , Data.Parser.Grempa.Parser.Result
                   , Data.Parser.Grempa.Parser.SLR
                   , Data.Parser.Grempa.Parser.Static
                   , Data.Parser.Grempa.Parser.Table
    GHC-Options:   -Wall
    if flag(test)
      Build-Depends:   QuickCheck == 2.4.*
      Exposed-modules: Data.Parser.Grempa.Test
