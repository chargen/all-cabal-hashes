-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:14c7cfb3c23317803e20e7327c85315e
    SHA1:f300306e1aa719018385bcafecfb9c7ae76f4f6a
    SHA256:2eec38e7f2da31c08dbbd830fabb5ef5fbb8bbbd7de77b172ba57088e6ba0a70
    SHA512:0afb893d433aabff7799831d39ec3b0f5cc7c0a990a8e352e925ea8f2df3260061a0c8b44546f792e9d1413fad655a0cf40de170026844d22e72ab969d6dfb87
    Skein512_512:e6175e3a498ba3dca286ff9f0764993b052419c91cd2e469f79b99e2a2f1f2ed47721e17871921324d0062b19653f93fb53e3ba4bae359cbb39f33492518c328

x-package-locations:
    https://hackage.haskell.org/package/Grempa-0.2.2/Grempa-0.2.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/Grempa-0.2.2.tar.gz

x-package-size: 25433
-- END Added by all-cabal-hashes-tool

Name:                Grempa
Version:             0.2.2
Synopsis:            Embedded grammar DSL and LALR parser generator
Description:
    A library for expressing programming language grammars in a form similar
    to BNF, which is extended with the semantic actions to take when
    a production has been parsed. The grammars are typed and are to be be used
    with the LALR(1) parser generator, also part of the library, which can
    generate a parser for the language either at compile time using Template
    Haskell, producing fast parsers with no initial runtime overhead, or
    dynamically, which has the initial overhead of generating the parser, but
    can be used for example when the grammar depends on an input.
License:             BSD3
License-file:        LICENSE
Author:              Olle Fredriksson
Maintainer:          fredriksson.olle@gmail.com
Copyright:           (c) 2011 Olle Fredriksson
Stability:           Experimental
Category:            Parsing
Build-type:          Simple
Extra-source-files:  README
                   , examples/Ex1SimpleExpr.hs
                   , examples/Ex1SimpleExprParser.hs
                   , examples/Ex2Calculator.hs
                   , examples/Ex2CalculatorParser.hs
                   , examples/Ex3Fun.hs
                   , examples/Ex3FunLex.hs
                   , examples/Ex3FunParser.hs
                   , examples/Ex4StateA.hs
                   , examples/Ex4StateB.hs
                   , examples/Ex4StateLex.hs
                   , examples/Ex4StateParser.hs
                   , examples/Ex5Test.hs
Cabal-version:       >= 1.6
Flag test
    Description:
      Build the module for generating random inputs and the expected output for
      your grammars.
      Default: False
Library
    Build-depends:   array            >= 0.3
                   , base             >= 4.2 && < 5
                   , containers       >= 0.3
                   , mtl              >= 2
                   , template-haskell >= 2.4
                   , th-lift          >= 0.5
    Exposed-modules: Data.Parser.Grempa.Grammar
                   , Data.Parser.Grempa.Static
                   , Data.Parser.Grempa.Dynamic
    Other-modules:   Data.Parser.Grempa.Aux.Aux
                   , Data.Parser.Grempa.Aux.MultiMap
                   , Data.Parser.Grempa.Grammar.Levels
                   , Data.Parser.Grempa.Grammar.Token
                   , Data.Parser.Grempa.Grammar.Typed
                   , Data.Parser.Grempa.Grammar.Untyped
                   , Data.Parser.Grempa.Parser.Conflict
                   , Data.Parser.Grempa.Parser.Driver
                   , Data.Parser.Grempa.Parser.Dynamic
                   , Data.Parser.Grempa.Parser.Item
                   , Data.Parser.Grempa.Parser.LALR
                   , Data.Parser.Grempa.Parser.Result
                   , Data.Parser.Grempa.Parser.SLR
                   , Data.Parser.Grempa.Parser.Static
                   , Data.Parser.Grempa.Parser.Table
    GHC-Options:   -Wall
    if flag(test)
      Build-Depends:   QuickCheck >= 2.4
      Exposed-modules: Data.Parser.Grempa.Test
