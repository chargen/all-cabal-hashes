-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:44c37c10d379e8d8fff7f40ed93b1cae
    SHA1:e3791a3307d8da86e01f5a046fa73e40be34608b
    SHA256:523552188b3cc76ffedf1f4363fcc836e29f0f9fbcc8dab54f25660828b19d82
    SHA512:2a154d70dcb701e92f0f76f3656d940d4b27058f1ee1516894a7ad91dd57734d281239995571a0a6a7c619702a334add118987e68c00000646daa56f0c6691c4
    Skein512_512:08900196d1e070e84a9047e41ad4c4066216706826a5e6fd919c4cc97719c3d281b9fd3505925991f81144a974d2a7a1c41670fed95c297e48ff2fa9c241b507

x-package-locations:
    https://hackage.haskell.org/package/acme-memorandom-0.0.2/acme-memorandom-0.0.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/acme-memorandom-0.0.2.tar.gz

x-package-size: 2734
-- END Added by all-cabal-hashes-tool

name: acme-memorandom
category: ACME
version: 0.0.2
license: MIT
license-file: LICENSE
author: Johan Kiviniemi <devel@johan.kiviniemi.name>
maintainer: Johan Kiviniemi <devel@johan.kiviniemi.name>
stability: provisional
homepage: https://github.com/ion1/acme-memorandom
bug-reports: https://github.com/ion1/acme-memorandom/issues
copyright: Copyright Â© 2015 Johan Kiviniemi
synopsis: Memoized random number generation
description:
  A library for generating random numbers in a memoized manner. Implemented as
  a lazy table indexed by serialized 'StdGen'. Monomorphism is used to
  facilitate memoization, users should adapt their design to work with random
  'Int' values only.
tested-with: GHC == 7.10.1

build-type: Simple
cabal-version: >=1.10
extra-source-files:
  .gitignore
  ChangeLog.md
  README.md

source-repository head
  type: git
  location: https://github.com/ion1/acme-memorandom.git

library
  exposed-modules: System.Random.MemoRandom
  hs-source-dirs: src
  other-extensions: CPP, TypeFamilies, TypeOperators
  build-depends: base == 4.*
               , MemoTrie == 0.6.*
               , random == 1.*
  default-language: Haskell2010
