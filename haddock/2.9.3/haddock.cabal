-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:30f0d11fc2466c685ba1fb5e58956930
    SHA1:304acd2e1fdbc642de90868cdb91f7b53e0bd7b8
    SHA256:d247931450d5d9aea8226a8ef2fcd3fee234245f3da3ef38af306d7c74b97e64
    SHA512:b6e7d0c7f2021122fb244c03ff0f08be458d5649ea6e3a63c4c30c63608bfc9d40d0b78db85cda750b9835cb73019d685087eab8442e0f5f2ef803fb6e0c55e2
    Skein512_512:2a2610d5471d1ca6abcda7f86b7d2f19731093e32eb657d5545d5e2413f162d72e83d7eb2a35606bdb233d19d78ce9453d91d418ec6b489996dfcb7d0359b27a

package-locations:
    https://hackage.haskell.org/package/haddock-2.9.3/haddock-2.9.3.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/haddock-2.9.3.tar.gz

package-size: 157364
-- END Added by all-cabal-hashes-tool

name:                 haddock
version:              2.9.3
cabal-version:        >= 1.10
license:              BSD3
build-type:           Simple
license-file:         LICENSE
copyright:            (c) Simon Marlow, David Waern
author:               Simon Marlow, David Waern
maintainer:           David Waern <david.waern@gmail.com>
stability:            experimental
homepage:             http://www.haskell.org/haddock/
synopsis:             A documentation-generation tool for Haskell libraries
description:          Haddock is a documentation-generation tool for Haskell
                      libraries
category:             Development

extra-source-files:
  CHANGES
  README
  doc/Makefile
  doc/README
  doc/aclocal.m4
  doc/config.mk.in
  doc/configure.ac
  doc/docbook-xml.mk
  doc/fptools.css
  doc/haddock.xml
  examples/A.hs
  examples/B.hs
  examples/Bug1.hs
  examples/Bug2.hs
  examples/Bug3.hs
  examples/Bug4.hs
  examples/Bug6.hs
  examples/Bug7.hs
  examples/Bug8.hs
  examples/Bug9.hs
  examples/Hash.hs
  examples/Hidden.hs
  examples/Makefile
  examples/NoLayout.hs
  examples/Test.hs
  examples/Visible.hs
  examples/hide-bug/A.hs
  examples/hide-bug/B.hs
  examples/hide-bug/C.hs
  examples/hide-bug/D.hs
  haddock.spec
  haskell.vim
  src/haddock.sh
-- The test files shouldn't have to go here, but the source files for
-- the test-suite stanzas don't get picked up by `cabal sdist`.
  tests/html-tests/runtests.hs

data-files:
  html/frames.html
  html/haddock-util.js
  html/Classic.theme/haskell_icon.gif
  html/Classic.theme/minus.gif
  html/Classic.theme/plus.gif
  html/Classic.theme/xhaddock.css
  html/Ocean.std-theme/hslogo-16.png
  html/Ocean.std-theme/minus.gif
  html/Ocean.std-theme/ocean.css
  html/Ocean.std-theme/plus.gif
  html/Ocean.std-theme/synopsis.png
  latex/haddock.sty

flag in-ghc-tree
  description: Are we in a GHC tree?
  default: False
  manual: True

flag test
  default: False
  manual: True

executable haddock
  default-language:     Haskell2010
  build-depends:
    base >= 4.3 && < 4.5,
    filepath,
    directory,
    pretty,
    containers,
    array,
    xhtml >= 3000.2 && < 3000.3,
    Cabal >= 1.10,
    ghc >= 7.0 && < 7.4

  if flag(in-ghc-tree)
    cpp-options: -DIN_GHC_TREE
  else
    build-depends: ghc-paths

  if flag(test)
    cpp-options: -DTEST
    build-depends: QuickCheck >= 2.1 && < 3

  main-is:              Main.hs
  hs-source-dirs:       src
  default-extensions:   CPP, DeriveDataTypeable,
                        ScopedTypeVariables, MagicHash
  ghc-options:          -funbox-strict-fields -O2 -Wall -fwarn-tabs

  other-modules:
    Haddock.Interface
    Haddock.Interface.Rename
    Haddock.Interface.Create
    Haddock.Interface.ExtractFnArgDocs
    Haddock.Interface.AttachInstances
    Haddock.Interface.Rn
    Haddock.Interface.LexParseRn
    Haddock.Interface.ParseModuleHeader
    Haddock.Lex
    Haddock.Parse
    Haddock.Utils
    Haddock.Backends.Xhtml
    Haddock.Backends.Xhtml.Decl
    Haddock.Backends.Xhtml.DocMarkup
    Haddock.Backends.Xhtml.Layout
    Haddock.Backends.Xhtml.Names
    Haddock.Backends.Xhtml.Themes
    Haddock.Backends.Xhtml.Types
    Haddock.Backends.Xhtml.Utils
    Haddock.Backends.LaTeX
    Haddock.Backends.HaddockDB
    Haddock.Backends.Hoogle
    Haddock.ModuleTree
    Haddock.Types
    Haddock.Doc
    Haddock.Version
    Haddock.InterfaceFile        
    Haddock.Options
    Haddock.GhcUtils
    Haddock.Convert
   
library
  default-language:     Haskell2010
  build-depends:
    base >= 4.3 && < 4.5,
    filepath,
    directory,
    pretty,
    containers,
    array,
    xhtml >= 3000.2 && < 3000.3,
    Cabal >= 1.10,
    ghc >= 7.0 && < 7.4

  if flag(in-ghc-tree)
    cpp-options: -DIN_GHC_TREE
  else
    build-depends: ghc-paths

  if flag(test)
    cpp-options: -DTEST
    build-depends: QuickCheck >= 2.1 && < 3

  hs-source-dirs:       src
  default-extensions:   CPP, DeriveDataTypeable,
                        ScopedTypeVariables, MagicHash
  ghc-options:          -funbox-strict-fields -O2 -Wall -fwarn-tabs

  exposed-modules:
    Documentation.Haddock

  other-modules:
    Main
    Haddock.Interface
    Haddock.Interface.Rename
    Haddock.Interface.Create
    Haddock.Interface.ExtractFnArgDocs
    Haddock.Interface.AttachInstances
    Haddock.Interface.Rn
    Haddock.Interface.LexParseRn
    Haddock.Interface.ParseModuleHeader
    Haddock.Lex
    Haddock.Parse
    Haddock.Utils
    Haddock.Backends.Xhtml
    Haddock.Backends.Xhtml.Decl
    Haddock.Backends.Xhtml.DocMarkup
    Haddock.Backends.Xhtml.Layout
    Haddock.Backends.Xhtml.Names
    Haddock.Backends.Xhtml.Themes
    Haddock.Backends.Xhtml.Types
    Haddock.Backends.Xhtml.Utils
    Haddock.Backends.LaTeX
    Haddock.Backends.HaddockDB
    Haddock.Backends.Hoogle
    Haddock.ModuleTree
    Haddock.Types
    Haddock.Doc
    Haddock.Version
    Haddock.InterfaceFile
    Haddock.Options
    Haddock.GhcUtils
    Haddock.Convert
    Paths_haddock
  
  if flag(in-ghc-tree)
    buildable: False

test-suite html-tests
  type:             exitcode-stdio-1.0
  default-language: Haskell2010
  main-is:          runtests.hs
  hs-source-dirs:   tests/html-tests
  build-depends:    base, directory, process, filepath, Cabal, regex-compat

