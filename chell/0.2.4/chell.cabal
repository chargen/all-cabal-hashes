-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:0677fd98df1d8973c135f34da560c7e6
    SHA1:f52e2b95e514659020dfedd0bc8d5e56287df38c
    SHA256:0e2f19616f2f02ab3ea7f5092289033052bfab0515db0b62b76b88c3f6b87c1e
    SHA512:6e97e9f14bce5ca57d571bc32dc9c1354fa78d97223c442406754df7bd3ca86d36c611c7943b3465038cded96ccbbf1ba3ee2cc1c7acc6a0b98541c8b2588f55
    Skein512_512:9f97379b208582e4ee604eca7b135f1ce838b83feb6ab9b32d8f92ca22e39098531645d88f412cbded9e427cf49887c7e9b99384eedc2a3f3a6edb8f6c43feb0

package-locations:
    https://hackage.haskell.org/package/chell-0.2.4/chell-0.2.4.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/chell-0.2.4.tar.gz

package-size: 11145
-- END Added by all-cabal-hashes-tool

name: chell
version: 0.2.4
x-revision: 2
license: MIT
license-file: license.txt
author: John Millikin <jmillikin@gmail.com>
maintainer: John Millikin <jmillikin@gmail.com>
build-type: Simple
cabal-version: >= 1.6
category: Testing
bug-reports: mailto:jmillikin@gmail.com
homepage: https://john-millikin.com/software/chell/

synopsis: A simple and intuitive library for automated testing.
description:
  Chell is a simple and intuitive library for automated testing. It natively
  supports assertion-based testing, and can use companion libraries
  such as @chell-quickcheck@ to support more complex testing strategies.
  .
  An example test suite, which verifies the behavior of artithmetic operators.
  .
  @
  &#x7b;-\# LANGUAGE OverloadedStrings \#-&#x7d;
  &#x7b;-\# LANGUAGE TemplateHaskell \#-&#x7d;
  .
  import Test.Chell
  .
  test_Math :: Suite
  test_Math = suite \"math\" [test_Addition, test_Subtraction]
  .
  test_Addition :: Suite
  test_Addition = assertions \"addition\" $ do
  &#x20;   $expect (equal (2 + 1) 3)
  &#x20;   $expect (equal (1 + 2) 3)
  .
  test_Subtraction :: Suite
  test_Subtraction = assertions \"subtraction\" $ do
  &#x20;   $expect (equal (2 - 1) 1)
  &#x20;   $expect (equal (1 - 2) (-1))
  .
  main :: IO ()
  main = defaultMain [test_Math]
  @
  .
  @
  $ ghc --make chell-example.hs
  $ ./chell-example
  PASS: 2 tests run, 2 tests passed
  @

source-repository head
  type: bazaar
  location: https://john-millikin.com/branches/chell/0.2/

source-repository this
  type: bazaar
  location: https://john-millikin.com/branches/chell/0.2/
  tag: chell_0.2.4

flag color-output
  description: Enable colored output in test results
  default: True

library
  hs-source-dirs: lib
  ghc-options: -Wall -O2

  -- compile-error due to ambigous occurrence of `fail` with base-4.5
  build-depends: base < 4.5 || >= 4.6
  
  build-depends:
      base >= 4.1 && < 4.8
    , bytestring >= 0.9
    , options >= 0.1 && < 0.2
    , patience >= 0.1 && < 0.2
    , random >= 1.0
    , system-filepath >= 0.4 && < 0.5
    , template-haskell >= 2.3
    , text >= 0.7
    , transformers >= 0.2

  if flag(color-output)
    build-depends:
        ansi-terminal >= 0.5 && < 0.6

  exposed-modules:
    Test.Chell

  other-modules:
    Test.Chell.Main
    Test.Chell.Output
    Test.Chell.Types
