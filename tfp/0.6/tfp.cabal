name:           tfp
version:        0.6
cabal-version:  >= 1.6
build-type:     Simple
license:        BSD3
license-file:   LICENSE
copyright:      Copyright (c) 2008 Peter Gavin
author:         Peter Gavin
maintainer:     pgavin@gmail.com
homepage:       http://github.com/pgavin/tfp
stability:      alpha
package-url:    http://github.com/pgavin/tfp
synopsis:       Type-level programming library using type families
description:	TFP (short for Type Family Programming) provides implementations of type-level integers and booleans,
		and (eventually) simple type-level data structures. It uses type families as functions to produce new types,
		which provides an intuitive way to parameterize data types and functions on numerical values at compile time.
category:       Data
tested-with:    GHC == 6.9.0

source-repository head {
  type:         git
  location:     git@github.com:pgavin/tfp.git
}

flag build-test
  description: Build the tfp-test test program
  default: False

library {
  extensions:     TypeFamilies, UndecidableInstances, TypeOperators,
                  EmptyDataDecls, DeriveDataTypeable, ScopedTypeVariables,
                  FlexibleInstances, TemplateHaskell, TypeSynonymInstances,
                  MultiParamTypeClasses, GeneralizedNewtypeDeriving,
                  Rank2Types, FlexibleContexts
  build-depends:  base >= 3.0 && < 5, template-haskell >= 2.0
  exposed-modules:
    Data.SizedInt,
    Data.SizedWord,
    Types,
    Types.Base,
    Types.Data.Bool,
    Types.Data.Num
    Types.Data.Num.Ops
    Types.Data.Num.Decimal,
    Types.Data.Num.Decimal.Literals
    Types.Data.Num.Decimal.Literals.TH
    Types.Data.Num.Decimal.Digits
    Types.Data.List,
    Types.Data.Ord
  other-modules:
    Types.Data.Num.Decimal.Ops
}


executable tfp-test {
  if flag(build-test) {
    buildable: True
    build-depends:  base >= 3.0 && < 5, template-haskell >= 2.0, QuickCheck >= 1.2.0.0
  } else {
    buildable: False
  }
  extensions:     TypeFamilies, UndecidableInstances, TypeOperators,
                  EmptyDataDecls, DeriveDataTypeable, ScopedTypeVariables,
                  FlexibleInstances, TemplateHaskell, TypeSynonymInstances,
                  MultiParamTypeClasses, GeneralizedNewtypeDeriving,
                  FunctionalDependencies, Rank2Types, FlexibleContexts
  main-is: Test.hs
}


package-hashes:
    MD5:2d5de771caa9e827b9f1fe1fd780fa06
    SHA1:1317263bcf860ce9aa445fb52929cf1a24f3024f
    SHA256:d63eceb7321b960118ec66a7a520d98d3df8de0439688d05a3b562776238f0ff
    SHA512:e9a569665f92ca9d63a3a50b39535bbe22f99110016af7318c8be7d2cd0d41bfe8df9a77197381640b4a05cb3ca1029ffae88acd9089e3a60e744351dc6fd8ad
    Skein512_512:17f55c9beab346cdd547c49fcf8a0e91b68c6568e2fd2a3dbcf589d7e7b22203839d7fd8dd1cfaaee81e58735d63f1a647a0c5cf2dbb7db1011d6908b99e9c70

package-locations:
    https://hackage.haskell.org/package/tfp-0.6/tfp-0.6.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/tfp-0.6.tar.gz

package-size: 13405
