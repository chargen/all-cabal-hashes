-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:80a0c62dc1fd3c7a5e4544c29b4074bf
    SHA1:8eaa07e94945ad5ac37f0ed99928dd9fdd95babf
    SHA256:06fede4594e053d006a4d782913050d5c0f2e129898018e1e4c223f86674dd74
    SHA512:d7adb450c934fc4c9af8228b99e1f2128a9f007b32ee0e8e010b7221ad659a485ac922b9de149c1370a18ac6a25587b14dd4f8e0a9ef7f2218f9b6fd4c5b2c4d
    Skein512_512:5aa19e9fe7dcef7ae623d89425b6e47af0be5b99dbe834ad15208202184723637664f4229fe31382158c81b9c0bea14642c3afba15ddaa4f60e11829aaaf29e3

package-locations:
    https://hackage.haskell.org/package/tfp-0.4/tfp-0.4.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/tfp-0.4.tar.gz

package-size: 13151
-- END Added by all-cabal-hashes-tool

name:           tfp
version:        0.4
cabal-version:  >= 1.6
build-type:     Simple
license:        BSD3
license-file:   LICENSE
copyright:      Copyright (c) 2008 Peter Gavin
author:         Peter Gavin
maintainer:     pgavin@gmail.com
homepage:       http://github.com/pgavin/tfp
stability:      alpha
package-url:    http://github.com/pgavin/tfp
synopsis:       Type-level programming library using type families
description:	TFP (short for Type Family Programming) provides implementations of type-level integers and booleans,
		and (eventually) simple type-level data structures. It uses type families as functions to produce new types,
		which provides an intuitive way to parameterize data types and functions on numerical values at compile time.
category:       Data
tested-with:    GHC == 6.9.0

source-repository head {
  type:         git
  location:     git@github.com:pgavin/tfp.git
}

flag build-test
  description: Build the tfp-test test program
  default: False

library {
  extensions:     TypeFamilies, UndecidableInstances, TypeOperators,
                  EmptyDataDecls, DeriveDataTypeable, ScopedTypeVariables,
                  FlexibleInstances, TemplateHaskell, TypeSynonymInstances,
                  MultiParamTypeClasses, GeneralizedNewtypeDeriving,
                  Rank2Types, FlexibleContexts
  build-depends:  base >= 3.0 && < 5, template-haskell >= 2.0
  exposed-modules:
    Data.SizedInt,
    Data.SizedWord,
    Types,
    Types.Base,
    Types.Data.Bool,
    Types.Data.Num
    Types.Data.Num.Ops
    Types.Data.Num.Decimal,
    Types.Data.Num.Decimal.Literals
    Types.Data.Num.Decimal.Literals.TH
    Types.Data.Num.Decimal.Digits
    Types.Data.List,
    Types.Data.Ord
  other-modules:
    Types.Data.Num.Decimal.Ops
}


executable tfp-test {
  if flag(build-test) {
    buildable: True
  } else {
    buildable: False
  }
  extensions:     TypeFamilies, UndecidableInstances, TypeOperators,
                  EmptyDataDecls, DeriveDataTypeable, ScopedTypeVariables,
                  FlexibleInstances, TemplateHaskell, TypeSynonymInstances,
                  MultiParamTypeClasses, GeneralizedNewtypeDeriving,
                  FunctionalDependencies, Rank2Types, FlexibleContexts
  main-is: Test.hs
  build-depends:  base >= 3.0 && < 5, template-haskell >= 2.0, QuickCheck >= 1.2.0.0
}
