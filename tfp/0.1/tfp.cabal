-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:0fa3eaa7073bb572f50d85708871ce7a
    SHA1:83ea26dd3aeaf71cd0f42ad95d2cc53f89bba341
    SHA256:a9379751ec68cf2f89213c5697949919a68c355443321c1a342569c459b0c051
    SHA512:09a2976b3224146d77cb6aa2c41a11e291926fd50af3a647990e9dffc48cea67678d79c42f9a6a7f341d0c88a802c2f49bc96c04e1fad1bfc380c44c56dd6371
    Skein512_512:22809a97a540c464c92bcb273644c81f3ddbbacd0f92b46f9bd40262bb8f4e5141ba05013f927309ee1bad25e19c1189062d433412938c3ae3f709d7efa98455

x-package-locations:
    https://hackage.haskell.org/package/tfp-0.1/tfp-0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/tfp-0.1.tar.gz

x-package-size: 11993
-- END Added by all-cabal-hashes-tool

name:           tfp
version:        0.1
cabal-version:  >= 1.2
build-type:     Simple
license:        BSD3
license-file:   LICENSE
copyright:      Copyright (c) 2008 Peter Gavin
author:         Peter Gavin
maintainer:     pgavin@gmail.com
homepage:       http://code.haskell.org/~pgavin/tfp
stability:      alpha
package-url:    http://code.haskell.org/~pgavin/tfp
synopsis:       Type-level programming library using type families
description:	TFP (short for Type Family Programming) provides implementations of type-level integers and booleans,
		and (eventually) simple type-level data structures. It uses type families as functions to produce new types,
		which provides an intuitive way to parameterize data types and functions on numerical values at compile time.
category:       Data
tested-with:    GHC == 6.9.0

flag build-test
  description: Build the tfp-test test program
  default: False

library {
  extensions:     TypeFamilies, UndecidableInstances, TypeOperators,
                  EmptyDataDecls, DeriveDataTypeable, ScopedTypeVariables,
                  FlexibleInstances, TemplateHaskell, TypeSynonymInstances,
                  MultiParamTypeClasses, GeneralizedNewtypeDeriving
  build-depends:  base >= 3.0, template-haskell >= 2.0
  exposed-modules:
    Data.SizedInt,
    Data.SizedWord,
    Types,
    Types.Base,
    Types.Data.Bool,
    Types.Data.Num
    Types.Data.Num.Ops
    Types.Data.Num.Decimal,
    Types.Data.Num.Decimal.Literals
    Types.Data.Num.Decimal.Literals.TH
    Types.Data.Num.Decimal.Digits
    Types.Data.List,
    Types.Data.Ord
  other-modules:
    Types.Data.Num.Decimal.Ops
}


executable tfp-test {
  if flag(build-test) {
    buildable: True
  } else {
    buildable: False
  }
  extensions:     TypeFamilies, UndecidableInstances, TypeOperators,
                  EmptyDataDecls, DeriveDataTypeable, ScopedTypeVariables,
                  FlexibleInstances, TemplateHaskell, TypeSynonymInstances,
                  MultiParamTypeClasses, GeneralizedNewtypeDeriving
  main-is: Test.hs
  build-depends:  base >= 3.0, template-haskell >= 2.0
}
