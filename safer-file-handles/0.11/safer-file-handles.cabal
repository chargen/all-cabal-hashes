-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:6a72116cebdf96075381231e0f0fcd35
    SHA1:e2a17c2b45047ca217cff396dca239f9d4b10f47
    SHA256:69986b30dc3d4ff3d4f44dbfaa2ff2b705c948c32e3945b77c66c89fdb081ccb
    SHA512:6c752b0c3c71df1264f20451315beef096df6da8c59837454352b271a1b92173b368499bd09b385c40ff7b9a435a2c3d95f0744be05226becf825488b4c002b5
    Skein512_512:7e983aef82fdbc679a315b53ab548ec20eef85fb8614ab8c1b49c8001a6eb22331773a8d352aed0c38a254f9f87002a99705487d41b73ab3d0dffb75991e0adb

package-locations:
    https://hackage.haskell.org/package/safer-file-handles-0.11/safer-file-handles-0.11.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/safer-file-handles-0.11.tar.gz

package-size: 15466
-- END Added by all-cabal-hashes-tool

name:          safer-file-handles
version:       0.11
cabal-version: >=1.6
build-type:    Custom
license:       BSD3
license-file:  LICENSE
copyright:     2010-2011 Bas van Dijk
author:        Bas van Dijk
maintainer:    Bas van Dijk <v.dijk.bas@gmail.com>
homepage:      https://github.com/basvandijk/safer-file-handles/
bug-reports:   https://github.com/basvandijk/safer-file-handles/issues
stability:     experimental
category:      System, Monadic Regions
synopsis:      Type-safe file handling
description:   This package adds three safety features on top of the regular
               @System.IO@ file handles and operations:
               .
               * Regional file handles. Files must be opened in a /region/. When
                 the region terminates all opened files are automatically
                 closed. The main advantage of regions is that the handles to
                 the opened files can not be returned from the region which
                 ensures no I/O with closed files is possible.
               .
               * Explicit IOModes. The regional file handles are parameterized
                 by the IOMode in which they were opened. All operations on
                 handles explicitly specify the needed IOMode. This way it is
                 impossible to read from a write-only handle or write to a
                 read-only handle for example.
               .
	       * Type-safe filepath creation and manipulation
 	         using the @pathtype@ package.
	       .
               The primary technique used in this package is called \"Lightweight
               monadic regions\" which was invented by Oleg Kiselyov and
               Chung-chieh Shan. See:
               .
               <http://okmij.org/ftp/Haskell/regions.html#light-weight>
               .
               This technique is implemented in the @regions@ package which is
               re-exported from @safer-file-handles@.
               .
               See the @safer-file-handles-examples@ package for examples how
	       to use this package:
               .
               @git clone <https://github.com/basvandijk/safer-file-handles-examples>@
	       .
	       See the @safer-file-handles-bytestring/text@ package for
	       @ByteString/Text@ operations on regional file handles.

extra-source-files: README.markdown, NEWS

source-repository head
  Type:     git
  Location: git://github.com/basvandijk/safer-file-handles.git

Library
  GHC-Options: -Wall
  build-depends: base                      >= 4     && < 4.5
               , base-unicode-symbols      >= 0.1.1 && < 0.3
               , regions                   >= 0.11  && < 0.12
               , transformers              >= 0.2   && < 0.3
               , explicit-iomodes          >= 0.5   && < 0.7
               , pathtype                  >= 0.0.1 && < 0.6
               , regional-pointers         >= 0.7   && < 0.8
  exposed-modules: System.IO.SaferFileHandles
                   System.IO.SaferFileHandles.Unsafe
  other-modules:   System.IO.SaferFileHandles.Internal
