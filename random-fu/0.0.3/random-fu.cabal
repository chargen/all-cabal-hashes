-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:1b1a3e0bb7cda41db857ae1edcc34e95
    SHA1:e737672abd97c8bdea2b6db918ee55f3466664ac
    SHA256:6a803c2ecce8e5f6000a88ecf98cbe6dc38c46fbe37865db59e092065ab47ef6
    SHA512:5529e8d57c95dc148df5d3e3b019bb91ebe7cac6f62d1d1a28fca7e8b86b9e27dd56288823e74dfda57c32b0e55199c9c74a870673da6149ce6949b2a5cb4826
    Skein512_512:5bfa611a75f2bbdc00e5f37a1b1e4c10933ccb7830cd705b67a02d42b2e062a49a1e39a2ebf83036538517b47ece3b1c30ea750cd7c2db87ef90eb3907648fdc

package-locations:
    https://hackage.haskell.org/package/random-fu-0.0.3/random-fu-0.0.3.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/random-fu-0.0.3.tar.gz

package-size: 20096
-- END Added by all-cabal-hashes-tool

name:                   random-fu
version:                0.0.3
stability:              experimental

cabal-version:          >= 1.2
build-type:             Simple

author:                 James Cook <james.cook@usma.edu>
maintainer:             James Cook <james.cook@usma.edu>
license:                PublicDomain
homepage:               http://code.haskell.org/~mokus/random-fu

category:               Math
synopsis:               Random number generation
description:            Random number generation based on orthogonal typeclasses
                        for entropy sources and random variable distributions, all
                        served up on a monadic platter.  Aspires to be useful
                        in an idiomatic way in both \"pure\" and \"impure\" styles,
                        as well as reasonably fast.

Flag base4

Library
  hs-source-dirs:       src
  exposed-modules:      Data.Random
                        Data.Random.Distribution
                        Data.Random.Distribution.Bernoulli
                        Data.Random.Distribution.Beta
                        Data.Random.Distribution.Binomial
                        Data.Random.Distribution.Discrete
                        Data.Random.Distribution.Exponential
                        Data.Random.Distribution.Gamma
                        Data.Random.Distribution.Normal
                        Data.Random.Distribution.Poisson
                        Data.Random.Distribution.Rayleigh
                        Data.Random.Distribution.Triangular
                        Data.Random.Distribution.Uniform
                        Data.Random.Distribution.Ziggurat
                        Data.Random.Internal.Find
                        Data.Random.Internal.Fixed
                        Data.Random.Internal.TH
                        Data.Random.Internal.Words
                        Data.Random.Lift
                        Data.Random.List
                        Data.Random.RVar
                        Data.Random.Sample
                        Data.Random.Source
                        Data.Random.Source.DevRandom
                        Data.Random.Source.PureMT
                        Data.Random.Source.Std
                        Data.Random.Source.StdGen
  if flag(base4)
    build-depends:      base >= 4 && <5,
                        syb
  else
    build-depends:      base >= 3 && < 4
    
  build-depends:        array,
                        containers,
                        erf,
                        mersenne-random-pure64,
                        monad-loops >= 0.3.0.1,
                        mtl,
                        random,
                        random-shuffle,
                        stateref >= 0.3 && < 0.4,
                        storablevector,
                        template-haskell
