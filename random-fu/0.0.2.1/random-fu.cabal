-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:8ab9b7eec290568c130cb9e7a437e73b
    SHA1:8e6bf9d5c9dd30d1956023e6a2e887fec095fa5b
    SHA256:72abca4b2d846021b457222fe5c9eaa708088f7fa719cfa2c769b43ac9e67ecc
    SHA512:3a5734144e919dddf881d91725a90a85ea6f0d8ade2dc2853fa20f692a50f07adb0c2cae91360bf7ea5af8b10f6ab6d38842d7a3518fe7768f6fd91c09cc09d9
    Skein512_512:b1deee5a9b2f113795b4c2e645a21aa65825de93a9ce4153d87bd68236c273e7949248034cdbfbb6c3e341d9faca0bf6f1f159039d58cf52dada79e60cac85e4

x-package-locations:
    https://hackage.haskell.org/package/random-fu-0.0.2.1/random-fu-0.0.2.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/random-fu-0.0.2.1.tar.gz

x-package-size: 19350
-- END Added by all-cabal-hashes-tool

name:                   random-fu
version:                0.0.2.1
stability:              experimental

cabal-version:          >= 1.2
build-type:             Simple

author:                 James Cook <james.cook@usma.edu>
maintainer:             James Cook <james.cook@usma.edu>
license:                PublicDomain
homepage:               http://code.haskell.org/~mokus/random-fu

category:               Math
synopsis:               Random number generation
description:            Random number generation based on orthogonal typeclasses
                        for entropy sources and random variable distributions, all
                        served up on a monadic platter.  Aspires to be useful
                        in an idiomatic way in both \"pure\" and \"impure\" styles,
                        as well as reasonably fast.

Flag base4

Library
  hs-source-dirs:       src
  exposed-modules:      Data.Random
                        Data.Random.Distribution
                        Data.Random.Distribution.Bernoulli
                        Data.Random.Distribution.Beta
                        Data.Random.Distribution.Binomial
                        Data.Random.Distribution.Exponential
                        Data.Random.Distribution.Discrete
                        Data.Random.Distribution.Gamma
                        Data.Random.Distribution.Normal
                        Data.Random.Distribution.Ziggurat
                        Data.Random.Distribution.Poisson
                        Data.Random.Distribution.Rayleigh
                        Data.Random.Distribution.Triangular
                        Data.Random.Distribution.Uniform
                        Data.Random.Internal.Find
                        Data.Random.Internal.TH
                        Data.Random.Internal.Words
                        Data.Random.List
                        Data.Random.Lift
                        Data.Random.RVar
                        Data.Random.Sample
                        Data.Random.Source
                        Data.Random.Source.DevRandom
                        Data.Random.Source.StdGen
                        Data.Random.Source.PureMT
                        Data.Random.Source.Std
  if flag(base4)
    build-depends:      base >= 4 && <5,
                        syb
  else
    build-depends:      base >= 3 && < 4
    
  build-depends:        array,
                        containers,
                        erf,
                        mersenne-random-pure64,
                        monad-loops >= 0.3.0.1,
                        mtl,
                        random,
                        random-shuffle,
                        stateref,
                        storablevector,
                        template-haskell
