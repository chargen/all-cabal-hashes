-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:d448900cf8186701973176d734d698ee
    SHA1:3da989702f26fcbd0f7eb296873e80593e4796d5
    SHA256:30741a1266b38073b397db71fb56db1dbb6013ac1a94be16df0eda182f458606
    SHA512:43c8ddf28488931486739c84fcf2cb79de94ee9c777913bf5b95e46e8737379f153d905c94770ef3a6d0a2c772579b1e0c59b3530022867d2a37d51c6c1168cc
    Skein512_512:1282e88d89eaeed62d7813b3f16fc347635abc7bd91416975ce4558ff288dd48b323cd0d198cc366ac6dcb82e0c82ad98d769f71944cde82205cc23314aa2b11

x-package-locations:
    https://hackage.haskell.org/package/cabal2nix-1.35/cabal2nix-1.35.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/cabal2nix-1.35.tar.gz

x-package-size: 16343
-- END Added by all-cabal-hashes-tool

Name:                   cabal2nix
Version:                1.35
Copyright:              Peter Simons, Andres Loeh
License:                BSD3
License-File:           LICENSE
Author:                 Peter Simons, Andres Loeh
Maintainer:             Peter Simons <simons@cryp.to>
Homepage:               http://github.com/peti/cabal2nix
Category:               Distribution
Synopsis:               Convert Cabal files into Nix build instructions
Cabal-Version:          >= 1.8
Build-Type:             Custom
Tested-With:            GHC == 6.12.3, GHC == 7.0.4, GHC == 7.4.1
Data-files:             README.md
Description:
  The @cabal2nix@ utility converts Cabal files into Nix build instructions. The
  commandline syntax is:
  .
  > Usage: cabal2nix [options] url-to-cabal-file
  >   -h             --help                   show this help text
  >                  --sha256=HASH            sha256 hash of source tarball
  >   -m MAINTAINER  --maintainer=MAINTAINER  maintainer of this package (may be specified multiple times)
  >   -p PLATFORM    --platform=PLATFORM      supported build platforms (may be specified multiple times)
  >
  > Recognized URI schemes:
  >
  >   cabal://pkgname-pkgversion       download the specified package from Hackage
  >   http://host/path                 fetch the Cabal file via HTTP
  >   file:///local/path               load the Cabal file from the local disk
  >   /local/path                      abbreviated version of file URI
  .
  The only required argument is the path to the cabal file. For example:
  .
  > cabal2nix http://hackage.haskell.org/packages/archive/cabal2nix/1.35/cabal2nix.cabal
  > cabal2nix cabal://cabal2nix-1.35
  .
  If the @--sha256@ option has not been specified, cabal2nix calls
  @nix-prefetch-url@ to determine the hash automatically. This causes
  network traffic, obviously.

Source-Repository head
  Type:                 git
  Location:             git://github.com/peti/cabal2nix.git

Executable cabal2nix
  main-is:              Cabal2Nix.hs
  hs-source-dirs:       src
  Build-Depends:        base >= 3 && < 5, regex-posix, pretty, Cabal >= 1.8,
                        filepath, directory, process, HTTP
  Extensions:           PatternGuards, RecordWildCards, CPP
  Ghc-Options:          -Wall
  other-modules:        Cabal2Nix.CorePackages
                        Cabal2Nix.Flags
                        Cabal2Nix.Generate
                        Cabal2Nix.Hackage
                        Cabal2Nix.License
                        Cabal2Nix.Name
                        Cabal2Nix.Normalize
                        Cabal2Nix.PostProcess
                        Distribution.NixOS.Derivation.Cabal
                        Distribution.NixOS.Derivation.License
                        Distribution.NixOS.Derivation.Meta
                        Distribution.NixOS.PrettyPrinting

Executable hackage4nix
  main-is:              Hackage4Nix.hs
  hs-source-dirs:       src
  Build-Depends:        base >= 3 && < 5, regex-posix, pretty, Cabal >= 1.8,
                        mtl, containers, directory, filepath, hackage-db
  Extensions:           PatternGuards, RecordWildCards, CPP
  Ghc-Options:          -Wall
  other-modules:        Cabal2Nix.CorePackages
                        Cabal2Nix.Flags
                        Cabal2Nix.Generate
                        Cabal2Nix.License
                        Cabal2Nix.Name
                        Cabal2Nix.Normalize
                        Cabal2Nix.PostProcess
                        Distribution.NixOS.Derivation.Cabal
                        Distribution.NixOS.Derivation.License
                        Distribution.NixOS.Derivation.Meta
                        Distribution.NixOS.PrettyPrinting
