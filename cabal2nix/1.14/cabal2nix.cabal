-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:b21d25101117cafedf445401b7274e24
    SHA1:0576031830517211e9b44f31090bf13ef66fc3e0
    SHA256:6e9105984f16602bebd7f2ccc0ec6c06565a3c3a7f6af31dbd5cf48e7da8b169
    SHA512:255f3269e1669dae67ebe44726a6f727f6ffa58e5ea0a26617f91cfc66b21cdc3fa7f1deb880f3b1e34ed4dc198b919308d2330f7ab1a84c2f1be1e3af514e05
    Skein512_512:bca117694d988c6f5e0bb3075f3c1cc18e32c26272d7f8d906c583b9af58ca14d9e60131d7b2f7d44ced630298f55ea4a44e66283772705a30ce6633ce0b8d80

package-locations:
    https://hackage.haskell.org/package/cabal2nix-1.14/cabal2nix-1.14.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/cabal2nix-1.14.tar.gz

package-size: 12087
-- END Added by all-cabal-hashes-tool

Name:                   cabal2nix
Version:                1.14
Copyright:              Peter Simons, Andres Loeh
License:                BSD3
License-File:           LICENSE
Author:                 Peter Simons <simons@cryp.to>, Andres Loeh <mail@andres-loeh.de>
Maintainer:             Nix Developers <nix-dev@cs.uu.nl>
Homepage:               http://github.com/haskell4nix/cabal2nix
Category:               Distribution
Synopsis:               Convert Cabal files into Nix build instructions
Cabal-Version:          >= 1.8
Build-Type:             Simple
Tested-With:            GHC == 6.12.3, GHC == 7.0.4, GHC == 7.2.1
Data-files:             README.md
Description:
  The @cabal2nix@ utility converts Cabal files into Nix build instructions. The
  commandline syntax is:
  .
  > Usage: cabal2nix [options] url-to-cabal-file
  >   -h             --help                   show this help text
  >                  --sha256=HASH            sha256 hash of source tarball
  >   -m MAINTAINER  --maintainer=MAINTAINER  maintainer of this package (may be specified multiple times)
  >   -p PLATFORM    --platform=PLATFORM      supported build platforms (may be specified multiple times)
  >
  > Recognized URI schemes:
  >
  >   cabal://pkgname-pkgversion       download the specified package from Hackage
  >   http://host/path                 fetch the Cabel file via HTTP
  >   file:///local/path               load the Cabal file from the local disk
  >   /local/path                      abbreviated version of file URI
  .
  The only required argument is the path to the cabal file. For example:
  .
  > cabal2nix http://hackage.haskell.org/packages/archive/cabal2nix/1.13/cabal2nix.cabal
  > cabal2nix cabal://cabal2nix-1.13
  .
  If the @--sha256@ option has not been specified, cabal2nix calls
  @nix-prefetch-url@ to determine the hash automatically. This causes
  network traffic, obviously.

Source-Repository head
  Type:                 git
  Location:             git://github.com/haskell4nix/cabal2nix.git

Executable cabal2nix
  main-is:              Cabal2Nix.hs
  hs-source-dirs:       src
  Build-Depends:        base >= 3 && < 5, regex-posix, pretty, Cabal >= 1.8,
                        filepath, directory, process, HTTP, nixos-types
  Extensions:           PatternGuards, RecordWildCards, CPP
  Ghc-Options:          -Wall
  other-modules:        Cabal2Nix.CorePackages
                        Cabal2Nix.Flags
                        Cabal2Nix.Generate
                        Cabal2Nix.Hackage
                        Cabal2Nix.License
                        Cabal2Nix.Name
                        Cabal2Nix.Normalize
                        Cabal2Nix.PostProcess

Executable hackage4nix
  main-is:              Hackage4Nix.hs
  hs-source-dirs:       src
  Build-Depends:        base >= 3 && < 5, regex-posix, pretty, Cabal >= 1.8,
                        mtl, containers, directory, filepath, nixos-types >= 1.1,
                        hackage-db
  Extensions:           PatternGuards, RecordWildCards, CPP
  Ghc-Options:          -Wall
  other-modules:        Cabal2Nix.CorePackages
                        Cabal2Nix.Flags
                        Cabal2Nix.Generate
                        Cabal2Nix.License
                        Cabal2Nix.Name
                        Cabal2Nix.Normalize
                        Cabal2Nix.PostProcess
