-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:558f18526b16ec8f7ae1d7e0d0e36978
    SHA1:6654f427b72803b47cb030d127814a85737f662b
    SHA256:23817e058285f027b0e020cf51ff3fd23e8c0940c623619c8f064c648fff2299
    SHA512:23bfeb679e2f78bec3ca803ebccaf10c7ba9d3285494de46194d6798141c443b5b17546c30f059301ebdf71d240f52f212f1fa21280019584e7461bef72df86b
    Skein512_512:8c856bc6e0eefd389aa02c4ab7dc5b29acda556811e254560405a795b46c3608691d41f8124f61168d783a0efa8ca1dba3715dff22f626ad0bb4b2bc06fc65c1

x-package-locations:
    https://hackage.haskell.org/package/tup-functor-0.2.0.1/tup-functor-0.2.0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/tup-functor-0.2.0.1.tar.gz

x-package-size: 8831
-- END Added by all-cabal-hashes-tool


Name:                tup-functor
Version:             0.2.0.1
Synopsis:            Homogeneous tuples
Description:         Homogeneous tuples (also known as vectors), with various instances, most notably 'Functor' and 'Applicative'.
                     The primary goal of the library is to help functor-oriented programming  
                     (for low-dimensional linear algebra, there are more specific packages, eg. @vect@). 
                     A small preprocessor for a tuple syntax is also included. We also provide a different implementation 
                     using type-level programming.
Author:              Balazs Komuves
license:             BSD3
license-file:        LICENSE
Copyright:           (c) 2012 Balazs Komuves
Maintainer:          bkomuves (plus) hackage (at) gmail (dot) hu
Homepage:            http://code.haskell.org/~bkomuves/
Stability:           Experimental
Category:            Data
Tested-With:         GHC == 7.0.3
Cabal-Version:       >= 1.6
Build-Type:          Simple

extra-source-files:  Data/Tup/Tup/Tup.inc

source-repository head
  type:     darcs
  location: http://code.haskell.org/~bkomuves/projects/tup-functor/
  
Library
  Build-Depends:       base >= 3 && < 5, cpphs >= 1.3

  Exposed-Modules:     Data.Tup
                       Data.Tup.Vec
                       Data.Tup.Tup
                       Data.Tup.Tup.Class
                       Data.Tup.Tup.Strict
                       Data.Tup.Tup.Lazy
                       Data.Tup.Tup.Concat

  Extensions:          CPP
  Hs-Source-Dirs:      .

  -- force-recomp is necessary since all the source code is included via the C preprocessor, 
  -- and thus the recompilation checker is broken
  ghc-options:         -fforce-recomp -Wall -fno-warn-unused-matches -fno-warn-unused-imports -fno-warn-unused-binds
 
Executable tuplepp
  Build-Depends:       base >= 3 && < 5, parsec2, haskell-src-exts  
  Main-is:             preprocessor/tpp.hs
  Hs-Source-Dirs:      .
  ghc-options:         -Wall -fno-warn-unused-matches -fno-warn-unused-imports -fno-warn-unused-binds -fno-warn-unused-do-bind
    