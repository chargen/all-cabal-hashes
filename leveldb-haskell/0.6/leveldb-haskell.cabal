-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:70dde306ec55af471006ede57a6fa23f
    SHA1:27075b9ff189cdbaf0a07deb2ed04da1156dd1bb
    SHA256:e58f7bb747cc5c94ad6cbe49b2a2170edba08b1e9295187873d2328dec6ee6e4
    SHA512:0e59d36d79b3bb73ceaef0a9c1e5a5c9e4b69efded500b0e66e3defebc42e7d3bacfac6cd32333e309c6fc67e158dd5c47ed57e4187cf9953ec11725d411687d
    Skein512_512:bd35d298000a8dde51ba8f1475d4e127caf9546fa55631cc9fad77d42dee78e32301ef1dc1ce00ac9add15b2f5eb2d5bbcc6615463b0ffdb6349578dea951635

package-locations:
    https://hackage.haskell.org/package/leveldb-haskell-0.6/leveldb-haskell-0.6.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/leveldb-haskell-0.6.tar.gz

package-size: 29002
-- END Added by all-cabal-hashes-tool

name:                leveldb-haskell
version:             0.6
synopsis:            Haskell bindings to LevelDB
homepage:            http://github.com/kim/leveldb-haskell
bug-reports:         http://github.com/kim/leveldb-haskell/issues
license:             BSD3
license-file:        LICENSE
author:              Kim Altintop et.al. (see AUTHORS file)
maintainer:          kim.altintop@gmail.com
copyright:           Copyright (c) 2012-2014 The leveldb-haskell Authors
category:            Database, FFI
stability:           Experimental
build-type:          Simple
cabal-version:       >=1.10
tested-with:         GHC == 7.4.2, GHC == 7.6.4, GHC == 7.8.3
description:
    From <http://leveldb.googlecode.com>:
    .
    LevelDB is a fast key-value storage library written at Google that provides
    an ordered mapping from string keys to string values.
    .
    .
    This library provides a Haskell language binding to LeveldDB. It is in very
    early stage and has seen very limited testing.
    .
    Note: as of v1.3, LevelDB can be built as a shared library. Thus, as of
    v0.1.0 of this library, LevelDB is no longer bundled and must be installed
    on the target system (version 1.7 or greater is required).

extra-source-files:  Readme.md, AUTHORS, CHANGELOG examples/*.hs

source-repository head
  type:     git
  location: git://github.com/kim/leveldb-haskell.git

Flag Examples
  description:      Build examples
  default:          False
  manual:           True

library
  exposed-modules:  Database.LevelDB
                  , Database.LevelDB.Base
                  , Database.LevelDB.C
                  , Database.LevelDB.Internal
                  , Database.LevelDB.Iterator
                  , Database.LevelDB.MonadResource
                  , Database.LevelDB.Streaming
                  , Database.LevelDB.Types
                  , Data.Stream.Monadic

  default-language: Haskell2010

  build-depends:    base >= 3 && < 5
                  , bytestring
                  , data-default
                  , exceptions == 0.6.*
                  , filepath
                  , resourcet > 0.3.2
                  , transformers

  ghc-options:      -Wall -rtsopts -funbox-strict-fields
  ghc-prof-options: -prof -auto-all

  hs-source-dirs:   src

  extra-libraries:  leveldb, snappy, stdc++

executable leveldb-example-comparator
  main-is:          comparator.hs

  default-language: Haskell2010

  build-depends:    base >= 3 && < 5
                  , transformers
                  , data-default
                  , leveldb-haskell

  ghc-options:      -Wall -O -rtsopts
  ghc-prof-options: -prof -auto-all

  hs-source-dirs:   examples

  if flag(Examples)
    buildable:      True
  else
    buildable:      False

executable leveldb-example-features
  main-is:          features.hs

  default-language: Haskell2010

  build-depends:    base >= 3 && < 5
                  , bytestring
                  , transformers
                  , resourcet > 0.3.2
                  , data-default
                  , leveldb-haskell

  ghc-options:      -Wall -O -rtsopts
  ghc-prof-options: -prof -auto-all

  hs-source-dirs:   examples

  if flag(Examples)
    buildable:      True
  else
    buildable:      False

executable leveldb-example-filterpolicy
  main-is:          filterpolicy.hs

  default-language: Haskell2010

  build-depends:    base >= 3 && < 5
                  , transformers
                  , data-default
                  , leveldb-haskell

  ghc-options:      -Wall -O -rtsopts
  ghc-prof-options: -prof -auto-all

  hs-source-dirs:   examples

  if flag(Examples)
    buildable:      True
  else
    buildable:      False

executable leveldb-example-iterforkio
  main-is:          iterforkio.hs

  default-language: Haskell2010

  build-depends:    base >= 3 && < 5
                  , async
                  , bytestring
                  , data-default
                  , leveldb-haskell

  ghc-options:      -Wall -O -rtsopts
  ghc-prof-options: -prof -auto-all

  hs-source-dirs:   examples

  if flag(Examples)
    buildable:      True
  else
    buildable:      False

test-suite leveldb-properties
  type:             exitcode-stdio-1.0
  main-is:          Main.hs
  hs-source-dirs:   test

  other-modules:    Test.Streaming

  default-language: Haskell2010

  build-depends:    base
                  , bytestring
                  , data-default
                  , directory
                  , exceptions       == 0.6.*
                  , mtl
                  , leveldb-haskell
                  , QuickCheck       == 2.7.*
                  , tasty            == 0.10.*
                  , tasty-quickcheck == 0.8.*
                  , temporary
                  , transformers

  ghc-options:      -Wall -O -rtsopts -threaded -with-rtsopts=-N
