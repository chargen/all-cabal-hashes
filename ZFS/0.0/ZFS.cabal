-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:63979b7c0c95ce7d6b87efa6cffb32bd
    SHA1:69a72f783f2a72d44842cbce42017d790464227e
    SHA256:92a42ba8c77ad6f5efcbba06e9c6fa0fcc1ad11229a99d4f76ed42af5b4fcda6
    SHA512:103714439e04c0881cd2376f5d8a4f0a55b9ec06740b3dec5085fa3df7000ca87d20895c23b0bc13928b80ccef1c1754258b4a02b1c236a3c2943c131c033651
    Skein512_512:44fca1929ec926629b8dc85494f8df27a1ae9bf41eca33fdfddc72ef0825c0632c60d1e1a0b7d45d107c06f23e8f6612248bf8692714a006713987fc7b3ef493

x-package-locations:
    https://hackage.haskell.org/package/ZFS-0.0/ZFS-0.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/ZFS-0.0.tar.gz

x-package-size: 95858
-- END Added by all-cabal-hashes-tool

name:                ZFS
version:             0.0
synopsis:            Oleg's Zipper FS
description:         A implementation of a zipper filesystem using delimited continuations.

                     Zipper-based File/Operating system
                     with threading and exceptions all realized via delimited continuations.
                     There are no unsafe operations, no GHC (let alone) Unix threads,
                     no concurrency problems. Our threads can't even do IO and can't
                     mutate any global state -- and the type system sees to it.

category:            Monads
license:             PublicDomain

author:              Amr Sabry, R. Kent Dybvig, Simon L. Peyton Jones, Oleg Kiselyov
maintainer:          Gwern Branwen <gwern0@gmail.com
extra-source-files:  zfs.pdf, README
Cabal-Version:       >= 1.2
Tested-With:         GHC==6.8.2
build-type:          Simple

Library
        build-depends:       base, haskell98, mtl, unix, network, containers, CC-delcont <= 0.2

        hs-source-dirs:      src
        exposed-modules:     ZFS, ZipperM

        ghc-options:         -O2 -Wall -optl-Wl,-s
        ghc-prof-options:    -prof -auto-all
