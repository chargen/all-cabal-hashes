-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:6ff18144b0c6cc6e4c594af3b60bb344
    SHA1:1dd42e422bf1267da77aa5785a35f53e3863dbda
    SHA256:b11c46fb3852d94997fb1f5fa3197c18ff974e5ae85dabfd4d246833bbfab3e1
    SHA512:483aff53ff19a7843ea857ce3917dc15d04b3a2b323d0d1b74c79c0aad8f8f9b5e19e783fad59b9d44d39581f774a48e472a1c7eec0cad732aa441ca90c590e7
    Skein512_512:125fdfbb21f0b48941f256757ef0806b469a2d0e4605dff1ba9fc4fdb881fdd57bc45c36ab6114f594f86bc50f1433f0649b49d391cbc56577c9534edfe4e86f

x-package-locations:
    https://hackage.haskell.org/package/ZFS-0.0.1/ZFS-0.0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/ZFS-0.0.1.tar.gz

x-package-size: 95822
-- END Added by all-cabal-hashes-tool

name:                ZFS
version:             0.0.1

license:             PublicDomain
author:              Amr Sabry, R. Kent Dybvig, Simon L. Peyton Jones, Oleg Kiselyov

stability:           Experimental
category:            Monads
synopsis:            Oleg's Zipper FS
description:         A implementation of a zipper filesystem using delimited continuations.
                     .
                     Zipper-based File/Operating system
                     with threading and exceptions all realized via delimited continuations.
                     There are no unsafe operations, no GHC (let alone) Unix threads,
                     no concurrency problems. Our threads can't even do IO and can't
                     mutate any global state - and the type system sees to it.

data-files:          zfs.pdf, README
Cabal-Version:       >= 1.2
Tested-With:         GHC==6.8.2
build-type:          Simple

Library
        build-depends:       base>3, mtl, unix, network, containers, CC-delcont <= 0.2

        hs-source-dirs:      src
        exposed-modules:     ZFS, ZipperM

        ghc-options:         -Wall
        ghc-prof-options:    -prof -auto-all
