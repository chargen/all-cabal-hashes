-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:dfa8d96529da43c7004ed489f9b7a302
    SHA1:b0b63ea29f0ad6df7127c0982336161a6f827860
    SHA256:2492ab983e8f2d9cd41265ad99ef75953bb92a48b5370e82ff17d7f0c86bf3ac
    SHA512:4020ac49c1092dba4f40c64aeebf0ddef897b0c7c70f07d6beeb123f7568a7807464dc7b3f9aae0361292e142f44cb8774205d5a6d3a31c5ab765e99487492c2
    Skein512_512:3aaff8347189abe9d8bed095cda2999c76027dc64ebb6b645294d4e6b5b90619fa23abe4941c133c28f015374811e19172258f3f48ceaa6df8ea256e5467c905

x-package-locations:
    https://hackage.haskell.org/package/compdata-param-0.9/compdata-param-0.9.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/compdata-param-0.9.tar.gz

x-package-size: 43801
-- END Added by all-cabal-hashes-tool

Name:			compdata-param
Version:		0.9
Synopsis:            	Parametric Compositional Data Types
Description:

  Based on Wouter Swierstra's Functional Pearl /Data types a la carte/
  (Journal of Functional Programming, 18(4):423-436, 2008,
  <http://dx.doi.org/10.1017/S0956796808006758>), this package
  provides a framework for defining recursive data types in a
  compositional manner with support for binders. 
  .
  This package implemements /parametric compositional data types/
  (Workshop on Mathematically Structured Functional Programming, 3-24,
  2012, <http://dx.doi.org/10.4204/EPTCS.76.3>), generalising
  compositional data types (as implemented in the /compdata/ package)
  with support for parametric higher-order abstract syntax
  (PHOAS).
  .
  Examples of using parametric compositional data types are bundled
  with the package in the folder @examples@.

Category:            	Generics
License:		BSD3
License-file:		LICENSE
Author:			Patrick Bahr, Tom Hvitved
Maintainer:		paba@di.ku.dk
Build-Type:		Simple
Cabal-Version:          >=1.9.2
bug-reports:            https://github.com/pa-ba/compdata-param/issues

extra-source-files:
  -- test files
  testsuite/tests/Tests.hs
  testsuite/tests/Data/Comp/Examples_Test.hs
  testsuite/tests/Data/Comp/Examples/*.hs
  -- example files
  examples/Examples/*.hs
  examples/Examples/Multi/*.hs


library
  Exposed-Modules:      Data.Comp.Param
                        Data.Comp.Param.Term
                        Data.Comp.Param.FreshM
                        Data.Comp.Param.Sum
                        Data.Comp.Param.Difunctor
                        Data.Comp.Param.Ditraversable
                        Data.Comp.Param.Algebra
                        Data.Comp.Param.Annotation
                        Data.Comp.Param.Ops
                        Data.Comp.Param.Equality
                        Data.Comp.Param.Ordering
                        Data.Comp.Param.Show
                        Data.Comp.Param.Derive,
                        Data.Comp.Param.Desugar
                        Data.Comp.Param.Thunk

                        Data.Comp.Param.Multi
                        Data.Comp.Param.Multi.Term
                        Data.Comp.Param.Multi.FreshM
                        Data.Comp.Param.Multi.Sum
                        Data.Comp.Param.Multi.HDifunctor
                        Data.Comp.Param.Multi.HDitraversable
                        Data.Comp.Param.Multi.Algebra
                        Data.Comp.Param.Multi.Annotation
                        Data.Comp.Param.Multi.Ops
                        Data.Comp.Param.Multi.Equality
                        Data.Comp.Param.Multi.Ordering
                        Data.Comp.Param.Multi.Show
                        Data.Comp.Param.Multi.Derive,
                        Data.Comp.Param.Multi.Desugar

  Other-Modules:        Data.Comp.Param.Derive.Difunctor
                        Data.Comp.Param.Derive.Ditraversable
                        Data.Comp.Param.Derive.Equality
                        Data.Comp.Param.Derive.Ordering
                        Data.Comp.Param.Derive.Show
                        Data.Comp.Param.Derive.SmartConstructors
                        Data.Comp.Param.Derive.SmartAConstructors
                        Data.Comp.Param.Derive.Injections
                        Data.Comp.Param.Derive.Projections

                        Data.Comp.Param.Multi.Derive.HDifunctor
                        Data.Comp.Param.Multi.Derive.Equality
                        Data.Comp.Param.Multi.Derive.Ordering
                        Data.Comp.Param.Multi.Derive.Show
                        Data.Comp.Param.Multi.Derive.SmartConstructors
                        Data.Comp.Param.Multi.Derive.SmartAConstructors
                        Data.Comp.Param.Multi.Derive.Injections
                        Data.Comp.Param.Multi.Derive.Projections

  Build-Depends:	base >= 4.7, base < 5, template-haskell, mtl, transformers, compdata >= 0.10 && < 0.11
  hs-source-dirs:	src
  ghc-options:          -W


Test-Suite test
  Type:                 exitcode-stdio-1.0
  Main-is:		Tests.hs
  hs-source-dirs:	testsuite/tests examples
  Build-Depends:        base >= 4.7, base < 5, template-haskell, mtl, transformers, compdata >= 0.10 && < 0.11, HUnit,
                        test-framework, test-framework-hunit, containers, compdata-param

source-repository head
  type:     git
  location: https://github.com/pa-ba/compdata-param
