-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:bc96b6f2861c2916780942d7ead60e25
    SHA1:8a3545b6e90bf0e907e7e6b9db8d2a4cf5163815
    SHA256:c8ba385e3d8362862961b0883d08f2c1aa0e009149b56e62b18f3d6ba00253ef
    SHA512:0047836730f6b45b5dd7d44495de487101b1892c0f80593fba4963896c0617a4e96e33ee70e0f676c97d25bda33bacaa5be30769338cf7e9973c3b6479c0c665
    Skein512_512:4ce10716ce091e6f768676a8d483975ccd8ced5723988d6677401465fa51b821f66b0380d4f8a88f70e97f5ec4f7ec4a2508c7a4f1b8f0994d069beab3ee57c8

package-locations:
    https://hackage.haskell.org/package/shady-gen-0.5.1/shady-gen-0.5.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/shady-gen-0.5.1.tar.gz

package-size: 56557
-- END Added by all-cabal-hashes-tool

Name:                shady-gen
Version:             0.5.1
Cabal-Version:       >= 1.2
Synopsis:            Functional GPU programming - DSEL & compiler
Category:            Language, GPU
Description:
  Compile functional specifications for GPU execution.
  See also shady-render, shady-tv, and shady-examples
  .
  Copyright 2009-2011 by Conal Elliott; GNU AGPLv3 license (see COPYING).
  This license is a place-holder.  Let me know if you'd like other terms.
Author:              Conal Elliott
Maintainer:          conal@conal.net
Homepage:            http://haskell.org/haskellwiki/shady
Package-Url:         http://conal.net/repos/shady-gen
Copyright:           (c) by Conal Elliott 2009,2010
License:             OtherLicense
License-File:        COPYING
Stability:           experimental
build-type:          Simple

Library
  hs-Source-Dirs:      src

  Build-Depends:       base >=4 && < 5, containers, mtl, wl-pprint
                     , applicative-numbers>=0.0.4, vector-space>=0.5.6
                     , TypeCompose >= 0.7
                     , MemoTrie, ty, data-treify, Boolean

  Exposed-Modules:
                       Text.PrettyPrint.Leijen.PrettyPrec
                       Text.PrettyPrint.Leijen.DocExpr
                       Data.NameM
                       Shady.Misc
                       Shady.Vec
                       Shady.Complex
                       Shady.Language.Type
                       Shady.Language.Glom
                       Shady.Language.Operator
                       Shady.Language.Exp
                       Shady.Language.Graph
                       Shady.Language.Reify
                       Shady.Language.Cse
                       Shady.Language.Share
                       Shady.Language.GLSL

                       Shady.CompileE
                       Shady.CompileEs

                       Data.StableMemo
                       Shady.Play.CseTest
                       Shady.Play.VectorTest
                       -- experimental:
                       Data.PolyStableMemo
                       -- Data.NatTrie
                       -- Data.TypeTrie

-- For examples, see examples/shady-examples.cabal
