Name:            MagicHaskeller
Version:         0.8.6
Cabal-Version:   >= 1.2
License:         BSD3
Author:	         Susumu Katayama
Maintainer:      Susumu Katayama <skata@cs.miyazaki-u.ac.jp>
Stability:       experimental
Homepage:        http://nautilus.cs.miyazaki-u.ac.jp/~skata/MagicHaskeller.html
Synopsis:        Automatic inductive functional programmer by systematic search
Build-Type:      Simple
Category:        Language
data-files:      ExperimIOP.hs
Tested-with:     GHC == 6.10.4

Flag GHCAPI
  Description: Enable execution using the GHC API rather than the combinatory interpreter
  Default:     True

-- Flag ForcibleTO
-- Flag Debug
-- Flag Benchmark

Library
  Build-depends:   template-haskell, base >= 4 && < 5, syb, containers, array, random, directory, bytestring, mtl
  Exposed-modules: MagicHaskeller, Control.Monad.Search.Combinatorial, MagicHaskeller.ProgGen, MagicHaskeller.ProgGenSF, MagicHaskeller.ProgGenXF,
                   MagicHaskeller.Expression, MagicHaskeller.LibTH, MagicHaskeller.Analytical, MagicHaskeller.Options
  Other-modules:   MagicHaskeller.MemoToFiles, MagicHaskeller.ShortString, MagicHaskeller.GetTime,
                   MagicHaskeller.Types, MagicHaskeller.PriorSubsts, Data.Memo, MagicHaskeller.ClassifyTr, MagicHaskeller.Classification, 
                   MagicHaskeller.CoreLang, MagicHaskeller.DebMT, MagicHaskeller.TyConLib,
                   MagicHaskeller.FakeDynamic, MagicHaskeller.PolyDynamic, MagicHaskeller.ReadTypeRep,
                   MagicHaskeller.ReadTHType, MagicHaskeller.TimeOut, MagicHaskeller.Execute, MagicHaskeller.T10,
                   MagicHaskeller.Instantiate, MagicHaskeller.Classify, MagicHaskeller.MHTH, MagicHaskeller.MyCheck,
                   MagicHaskeller.ExprStaged, MagicHaskeller.Combinators, MagicHaskeller.ReadDynamic,
                   MagicHaskeller.MyDynamic, MagicHaskeller.ClassifyDM, MagicHaskeller.ProgramGenerator, MagicHaskeller.Analytical.FMExpr,
                   MagicHaskeller.Analytical.Parser, MagicHaskeller.Analytical.Syntax, MagicHaskeller.Analytical.UniT, MagicHaskeller.Analytical.Synthesize
  Extensions:    CPP, TemplateHaskell
  GHC-options:   -O2 -fvia-C
  cpp-options:   -DCHTO

  if flag(GHCAPI)
    Build-depends:   ghc >= 6.10, old-time, ghc-paths
    Exposed-modules: MagicHaskeller.RunAnalytical, MagicHaskeller.ExecuteAPI610


package-hashes:
    MD5:cf479dbcc02c64f3d10eac43d71e5acb
    SHA1:51541d3c07c3fd702e1dfdfda6becea973695caa
    SHA256:5aaf1fdb14739260045a14a4534071b73d2556cbbaffbe75f4990e720a039282
    SHA512:dbfc8c1689c9b8585b75d09f6d01cecce1f47e5f5892b938ea37cb8568fe07ed02649a662b7552a932f071bd07d268efc252291c83ee4bacaf07873bfb5abbf1
    Skein512_512:470efd7a851515a3502cd702d7138abac497b3fba9d01982dd077fa85324b6eb456749aca15beb55c82bd267a6f3319322a856201fed7d8857a1623014aee0d4

package-locations:
    https://hackage.haskell.org/package/MagicHaskeller-0.8.6/MagicHaskeller-0.8.6.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/MagicHaskeller-0.8.6.tar.gz

