-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:af909948bac8c623da573958ddd76200
    SHA1:b9458f151bd644947fe14a749225263f5ccaf22e
    SHA256:fc827aefbc113ed17ede8bc5db777a11ddb8e7629e4522a6fc6c0513b64d8232
    SHA512:49e7c6c97cb4a42a8a4db6f5a0973296354eff5973888bfa0bc88e6572c1382387810cf5e41fb403fdaed1546f302e7526d9fd6b5eace881149302a91a581448
    Skein512_512:8c3d81eedd0ac82b6c1a139a524c2592695adf1cd0175ed22c9898fa2c926cd6a5d517088f89b80c6e66976dd58ac29f7919cd05e5b58bb7a3420cced94460c1

package-locations:
    https://hackage.haskell.org/package/hierarchical-clustering-0.4.1/hierarchical-clustering-0.4.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/hierarchical-clustering-0.4.1.tar.gz

package-size: 10612
-- END Added by all-cabal-hashes-tool

Name:                hierarchical-clustering
Version:             0.4.1
Synopsis:            Fast algorithms for single, average/UPGMA and complete linkage clustering.
License:             BSD3
License-file:        LICENSE
Author:              Felipe Almeida Lessa
Maintainer:          felipe.lessa@gmail.com
Category:            Clustering
Build-type:          Simple
Cabal-version:       >= 1.8
Description:
  This package provides a function to create a dendrogram from a
  list of items and a distance function between them.  Initially
  a singleton cluster is created for each item, and then new,
  bigger clusters are created by merging the two clusters with
  least distance between them.  The distance between two clusters
  is calculated according to the linkage type.  The dendrogram
  represents not only the clusters but also the order on which
  they were created.
  .
  This package has many implementations with different
  performance characteristics.  There are SLINK and CLINK
  algorithm implementations that are optimal in both space and
  time.  There are also naive implementations using a distance
  matrix.  Using the @dendrogram@ function from
  @Data.Clustering.Hierarchical@ automatically chooses the best
  implementation we have.
  .
  Changes in version 0.4:
  .
  * Specialize the distance type to Double for efficiency reasons.
    It's uncommon to use distances other than Double.
  .
  * Implement SLINK and CLINK.  These are optimal algorithms in
    both space and time for single and complete linkage,
    respectively, running in /O(n^2)/ time and /O(n)/ space.
  .
  * Reorganized internal implementation.
  .
  * Some performance improvements for the naive implementation.
  .
  * Better test coverage.  Also, performance improvements for the
    test suite, now running in 3 seconds (instead of one minute).
  .
  Changes in version 0.3.1.2 (version 0.3.1.1 was skipped):
  .
  * Added tests for many things.  Use @cabal test@ =).
  .
  Changes in version 0.3.1:
  .
  * Works with containers 0.4 (thanks, Doug Beardsley).
  .
  * Removed some internal unnecessary overheads and added some strictness.
  .
  Changes in version 0.3.0.1:
  .
  * Listed changes of unreleased version 0.2.
  .
  Changes in version 0.3:
  .
  * Added function @cutAt@.
  .
  * Fixed complexity in Haddock comments.
  .
  Changes in version 0.2:
  .
  * Added function @elements@.
  .
  * Added separate functions for each linkage type.  This may be
    useful if you want to create a dendrogram and your distance
    data type isn't an instance of @Floating@.

Extra-source-files:
  tests/runtests.hs

Source-repository head
  type: darcs
  location: http://patch-tag.com/r/felipe/hierarchical-clustering


Library
  Hs-source-dirs: src
  Exposed-modules:
    Data.Clustering.Hierarchical,
    Data.Clustering.Hierarchical.Internal.DistanceMatrix,
    Data.Clustering.Hierarchical.Internal.Optimal,
    Data.Clustering.Hierarchical.Internal.Types
  Build-depends:
      base       == 4.*
    , array      >= 0.3 && < 0.5
    , containers >= 0.3 && < 0.5
  GHC-options: -Wall

Test-suite runtests
  Type: exitcode-stdio-1.0
  Hs-source-dirs: tests
  Main-is: runtests.hs
  Build-depends:
      base       == 4.*

    , hspec      == 0.9.*
    , HUnit      == 1.2.*
    , QuickCheck == 2.4.*

    , hierarchical-clustering
  GHC-options: -Wall
