-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:d9e65251ab4705b17abef3c4b4ee4068
    SHA1:f1f915789618bce7441e6011a0c87df019bb1eda
    SHA256:c790c238629419b20718a5efefb06bf4ac17f85c9069bffa71bde093eea75598
    SHA512:8c00414268e1b3e8222fdc4b2002b55b99b767932b662064a117fc1eb74ade4b4e673041556416c2c52398b26431f4901158f5ed4231cdbfa3cc606b2c10ca13
    Skein512_512:8e5f4808fff8d0db665e724631015d0ed58f781bb915796b3b7b7c10e4314ea88c00436d6812c7b5f854562b909f1b010bd46f0fc1060fa8286a57b51156c226

package-locations:
    https://hackage.haskell.org/package/direct-sqlite-2.3.1/direct-sqlite-2.3.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/direct-sqlite-2.3.1.tar.gz

package-size: 1384215
-- END Added by all-cabal-hashes-tool

name: direct-sqlite
version: 2.3.1
build-type: Simple
license: BSD3
license-file: LICENSE
copyright: Copyright (c) 2012 Irene Knapp
author: Irene Knapp <ireney.knapp@gmail.com>
maintainer: ireney.knapp@gmail.com
homepage: http://ireneknapp.com/software/
bug-reports: https://github.com/IreneKnapp/direct-sqlite/issues/new
category: Database
synopsis: Low-level binding to SQLite3.  Includes UTF8 and BLOB support.
Cabal-version: >= 1.10
Build-type: Simple
description:
  This package is not very different from the other SQLite3 bindings out
  there, but it fixes a few deficiencies I was finding.  It is not as
  complete as bindings-sqlite3, but is slightly higher-level, in that it
  supports marshalling of data values to and from the database.  In
  particular, it supports strings encoded as UTF8, and BLOBs represented
  as ByteStrings.
  .
  Release history:
  .
  [Version 2.3.1] Upgrade the bundled SQLite3 to 3.7.15.  Add bindings for
  sqlite3_interrupt.  Export Int rather than CInt.
  .
  [Version 2.3] Mark some FFI calls "unsafe", for a substantial performance
  benefit.
  .
  [Version 2.2.1] Bump down text library version to match with the
  latest Haskell Platform.
  .
  [Version 2.2] actually does what version 2.1 claimed to, since the author
  made a mistake with git.
  .
  [Version 2.1] improves handling of invalid UTF-8 and changes error handling
  to be more complete.  It also adds a build flag to build against the system
  sqlite instead of the bundled one, optionally (disabled by default).
  .
  [Version 2.0] uses Text for strings instead of String.
  .
  [Version 1.1.0.1] switches to the Faction packaging system and makes no other
  changes.
  .
  [Version 1.1] adds the SQLite amalgamation file (version 3.7.5) to the
  project, so that there are no external dependencies.

extra-source-files:
  cbits/sqlite3.c
  cbits/sqlite3.h

Source-Repository head
  type: git
  location: git://github.com/IreneKnapp/direct-sqlite.git

flag systemlib
  description: Use the system-wide sqlite library
  default: False

Library
  exposed-modules:
    Database.SQLite3
    Database.SQLite3.Direct
    Database.SQLite3.Bindings
    Database.SQLite3.Bindings.Types

  if flag(systemlib) {
    cpp-options: -Ddirect_sqlite_systemlib
    extra-libraries: sqlite3
  } else {
    c-sources: cbits/sqlite3.c
  }

  include-dirs: .
  build-depends: base >= 4.1 && < 5,
                 bytestring >= 0.9.2.1 && < 1,
                 text >= 0.11 && < 1
  ghc-options: -Wall -fwarn-tabs
  default-language: Haskell2010


test-suite test
  type:           exitcode-stdio-1.0

  hs-source-dirs: test
  main-is:        Main.hs
  other-modules:
    StrictEq

  ghc-options: -Wall -threaded -fno-warn-name-shadowing -fno-warn-unused-do-bind

  default-language: Haskell2010

  default-extensions: NamedFieldPuns
                    , OverloadedStrings
                    , Rank2Types
                    , RecordWildCards

  build-depends: base
               , base16-bytestring
               , bytestring
               , directory
               , HUnit
               , direct-sqlite
               , text
