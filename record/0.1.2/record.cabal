-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:9833d493c57e3a179d9b8d2b7f7e0274
    SHA1:930bb0fda08005cf79c24c83bf7c96698417e886
    SHA256:2de06376c2224848bb066cecb2ef5693df1edad556faff9f66f1c39b3aec0b17
    SHA512:7654c8c5b84038f24b08b6ab8dada2b7740449423015cb4d37d43f1aec618f7853e42270f911f1893c0c33e5bc4db48deefa5770c6c8b706f0a2e8e63454f100
    Skein512_512:fed4cd2eef621de7802c9fee4e92c09d7e4e3ad63918eb62f0c0f5a7add59b15f41283f06d1eb114cc652453115f334f3f6776121a2be964464972bee7be0188

package-locations:
    https://hackage.haskell.org/package/record-0.1.2/record-0.1.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/record-0.1.2.tar.gz

package-size: 9547
-- END Added by all-cabal-hashes-tool

name:
  record
version:
  0.1.2
synopsis:
  First class records implemented with quasi-quotation
description:
  An API of just two quasi-quoters, 
  providing a full-scale solution to the notorious records problem of Haskell.
  .
  Links:
  .
  * <http://nikita-volkov.github.io/record A comprehensive introduction to the library>.
  .
  * <https://github.com/nikita-volkov/record/blob/master/demo/Main.hs Demo>.
  .
category:
  Control, Data Structures
homepage:
  https://github.com/nikita-volkov/record 
bug-reports:
  https://github.com/nikita-volkov/record/issues 
author:
  Nikita Volkov <nikita.y.volkov@mail.ru>
maintainer:
  Nikita Volkov <nikita.y.volkov@mail.ru>
copyright:
  (c) 2015, Nikita Volkov
license:
  MIT
license-file:
  LICENSE
build-type:
  Custom
cabal-version:
  >=1.10
extra-source-files:
  CHANGELOG.md


source-repository head
  type:
    git
  location:
    git://github.com/nikita-volkov/record.git


library
  hs-source-dirs:
    library
  ghc-options:
    -funbox-strict-fields
  default-extensions:
    Arrows, BangPatterns, ConstraintKinds, DataKinds, DefaultSignatures, DeriveDataTypeable, DeriveFunctor, DeriveGeneric, EmptyDataDecls, FlexibleContexts, FlexibleInstances, FunctionalDependencies, GADTs, GeneralizedNewtypeDeriving, ImpredicativeTypes, LambdaCase, LiberalTypeSynonyms, MagicHash, MultiParamTypeClasses, MultiWayIf, NoImplicitPrelude, NoMonomorphismRestriction, OverloadedStrings, PatternGuards, ParallelListComp, QuasiQuotes, RankNTypes, RecordWildCards, ScopedTypeVariables, StandaloneDeriving, TemplateHaskell, TupleSections, TypeFamilies, TypeOperators, UnboxedTuples
  default-language:
    Haskell2010
  other-modules:
    Record.Parser
  exposed-modules:
    Record.Types
    Record.Lens
    Record
  build-depends:
    -- 
    attoparsec >= 0.10 && < 0.13,
    -- 
    text,
    --
    template-haskell,
    -- 
    transformers >= 0.2 && < 0.5,
    base-prelude >= 0.1 && < 0.2,
    base >= 4.6 && < 4.9


test-suite doctest
  type:
    exitcode-stdio-1.0
  hs-source-dirs:
    doctest
  main-is:
    Main.hs
  ghc-options:
    -threaded
    "-with-rtsopts=-N"
    -funbox-strict-fields
  build-depends:
    doctest == 0.9.*,
    directory == 1.2.*,
    filepath == 1.3.*,
    base-prelude,
    base
  default-extensions:
    Arrows, BangPatterns, ConstraintKinds, DataKinds, DefaultSignatures, DeriveDataTypeable, DeriveFunctor, DeriveGeneric, EmptyDataDecls, FlexibleContexts, FlexibleInstances, FunctionalDependencies, GADTs, GeneralizedNewtypeDeriving, ImpredicativeTypes, LambdaCase, LiberalTypeSynonyms, MultiParamTypeClasses, MultiWayIf, NoImplicitPrelude, NoMonomorphismRestriction, OverloadedStrings, PatternGuards, ParallelListComp, QuasiQuotes, RankNTypes, RecordWildCards, ScopedTypeVariables, StandaloneDeriving, TemplateHaskell, TupleSections, TypeFamilies, TypeOperators
  default-language:
    Haskell2010


-- Well, it's not a benchmark actually, 
-- but in Cabal there's no better way to specify an executable, 
-- which is not intended for distribution.
benchmark demo
  type: 
    exitcode-stdio-1.0
  hs-source-dirs:
    demo
  main-is:
    Main.hs
  ghc-options:
    -O2
    -threaded
    "-with-rtsopts=-N"
    -funbox-strict-fields
    -ddump-splices
  default-language:
    Haskell2010
  build-depends:
    record,
    base-prelude
