-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:16b5c07d1d8422e85b7e7371c4d77d18
    SHA1:03aae7f89472ac026096835ac471c1f399970c93
    SHA256:c6acc8cf35c3d72828323ee5e74dded49a7a4aa934b94d3875e7f79513104b35
    SHA512:d6a7edcb48e19b659b0926604b270b1ed8cfaa2469e8496e724cf114e5d0eeb89a01845c4afb2f75405d7ea2a4ffb1857267fccc2f1f6822617e6ced9d044ae1
    Skein512_512:3d57138d4d183228deebf06d0d181668268132811fed9805dc966f880f7c713046d83a1a9c1cdb8cb5ee72fb3281e15215ee75f0a42589078ab6ff7c0f866a3c

x-package-locations:
    https://hackage.haskell.org/package/usb-0.7/usb-0.7.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/usb-0.7.tar.gz

x-package-size: 21380
-- END Added by all-cabal-hashes-tool

name:          usb
version:       0.7
cabal-version: >=1.6
build-type:    Custom
license:       BSD3
license-file:  LICENSE
copyright:     2009â€“2010 Bas van Dijk <v.dijk.bas@gmail.com>
author:        Bas van Dijk <v.dijk.bas@gmail.com>
maintainer:    Bas van Dijk <v.dijk.bas@gmail.com>
stability:     experimental
category:      System
synopsis:      Communicate with USB devices
description:   This library allows you to communicate with USB devices from
               userspace. It is implemented as a high-level wrapper around
               @bindings-libusb@ which is a low-level binding to the C library:
               @libusb-1.*@.
	       .
	       This documentation assumes knowledge of how to operate USB
	       devices from a software standpoint (descriptors, configurations,
	       interfaces, endpoints, control\/bulk\/interrupt\/isochronous
	       transfers, etc). Full information can be found in the USB 2.0
	       Specification.
	       .
	       For an example how to use this library see the @ls-usb@ package
	       at:
	       .
	       <http://hackage.haskell.org/package/ls-usb>
	       .
	       Also see the @usb-safe@ package which wraps this package and
	       provides some strong safety guarantees for working with USB
	       devices:
	       .
	       <http://hackage.haskell.org/package/usb-safe>
	       .
               Finally have a look at the @usb-enumerator@ package which
               provides iteratee enumerators for enumerating bulk and interrupt
               endpoints:
               .
               <http://hackage.haskell.org/package/usb-enumerator>
               .
	       Besides this API documentation the following sources might be
	       interesting:
	       .
	       * The libusb 1.0 documentation at:
	         <http://libusb.sourceforge.net/api-1.0/>
	       .
	       * The USB 2.0 specification at:
	         <http://www.usb.org/developers/docs/>
	       .
	       * The @bindings-libusb@ documentation at:
	         <http://hackage.haskell.org/package/bindings-libusb>
	       .
	       * \"USB in a NutShell\" at:
	         <http://www.beyondlogic.org/usbnutshell/usb1.htm>

source-repository head
  Type:     darcs
  Location: http://code.haskell.org/~basvandijk/code/usb

Library
  GHC-Options: -Wall

  build-depends: base                 >= 4     && < 4.4
               , base-unicode-symbols >= 0.1.1 && < 0.3
               , bindings-libusb      >= 1.3   && < 1.5
               , bytestring           >= 0.9   && < 0.10
               , text                 >= 0.5   && < 0.12
  exposed-modules: System.USB
                     System.USB.Initialization
                     System.USB.Enumeration
                     System.USB.DeviceHandling
                     System.USB.Descriptors
                     System.USB.IO.Synchronous
                     System.USB.IO.StandardDeviceRequests
                     System.USB.Exceptions
                     System.USB.Unsafe
  other-modules: System.USB.Internal
                 Utils
