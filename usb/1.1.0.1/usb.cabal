name:          usb
version:       1.1.0.1
cabal-version: >=1.6
build-type:    Custom
license:       BSD3
license-file:  LICENSE
copyright:     2009â€“2012 Bas van Dijk <v.dijk.bas@gmail.com>
author:        Bas van Dijk <v.dijk.bas@gmail.com>
maintainer:    Bas van Dijk <v.dijk.bas@gmail.com>
homepage:      http://basvandijk.github.com/usb
bug-reports:   https://github.com/basvandijk/usb/issues
category:      System, Hardware
synopsis:      Communicate with USB devices
description:   This library enables you to communicate with USB devices from
               userspace. It is implemented as a high-level wrapper around
               @bindings-libusb@ which is a low-level binding to the C library:
               @libusb-1.*@.
               .
               The USB transfer functions in this library have a simple synchronous
               interface (they block) but are implemented using the @libusb@
               asynchronous interface. They integrate with the GHC event manager
               making them efficient (no busy-loops) and interruptible (throwing an
               exception to the thread executing a transfer immediately cancels the
               transfer).
               .
               If the GHC event manager is not available (because you're either not
               using GHC or because you're on Windows) the library degrades
               gracefully to the @libusb@ synchronous implementation.
               .
               This documentation assumes knowledge of how to operate USB
               devices from a software standpoint (descriptors, configurations,
               interfaces, endpoints, control\/bulk\/interrupt\/isochronous
               transfers, etc). Full information can be found in the USB 2.0
               Specification.
               .
               For an example how to use this library see the @usb-example@
               package at:
               .
               <https://github.com/basvandijk/usb-example>
               .
               or the @ls-usb@ package at:
               .
               <http://hackage.haskell.org/package/ls-usb>
               .
               Also see the @usb-safe@ package which wraps this package and
               provides some strong safety guarantees for working with USB
               devices:
               .
               <http://hackage.haskell.org/package/usb-safe>
               .
               Finally have a look at the @usb-iteratee@ package which
               provides @iteratee@ enumerators for enumerating bulk, interrupt
               and isochronous endpoints:
               .
               <http://hackage.haskell.org/package/usb-iteratee>
               .
               Besides this API documentation the following sources might be
               interesting:
               .
               * The libusb 1.0 documentation at:
                 <http://libusb.sourceforge.net/api-1.0/>
               .
               * The USB 2.0 specification at:
                 <http://www.usb.org/developers/docs/>
               .
               * The @bindings-libusb@ documentation at:
                 <http://hackage.haskell.org/package/bindings-libusb>
               .
               * \"USB in a NutShell\" at:
                 <http://www.beyondlogic.org/usbnutshell/usb1.htm>

extra-source-files: README.markdown, NEWS

source-repository head
  Type:     git
  Location: git://github.com/basvandijk/usb.git

Library
  GHC-Options: -Wall

  build-depends: base                 >= 4     && < 4.6
               , base-unicode-symbols >= 0.1.1 && < 0.3
               , bindings-libusb      >= 1.4.4 && < 1.5
               , bytestring           >= 0.9   && < 0.10
               , text                 >= 0.5   && < 0.12

  exposed-modules: System.USB
                   System.USB.Initialization
                   System.USB.Enumeration
                   System.USB.DeviceHandling
                   System.USB.Descriptors
                   System.USB.IO
                   System.USB.IO.StandardDeviceRequests
                   System.USB.Exceptions
                   System.USB.Internal
  other-modules: System.USB.Base, Utils

  if impl(ghc>7) && !os(windows)
    cpp-options: -DHAS_EVENT_MANAGER
    other-modules: Poll, Event, SystemEventManager, Timeval
    build-depends: containers >= 0.1 && < 0.5


package-hashes:
    MD5:f960a5177a40bc7b664614645daca83c
    SHA1:e3851d643fcfe500699df064f394f30900285a96
    SHA256:e8317edd8645f92c4be0a4e989901679115544fb8aa7285314d04d028978c5d0
    SHA512:3e55cc990025aeb366c2a5f8f24243dc2bb591b4e3c2b355686544984c7f65d43e62bb8fe8f9c56a4a44d3a1ebd3fd4b66509b05b9846a4b555c8633eccd4c02
    Skein512_512:e0d462ffa7e6d4dd5d5a909db4a1fbb170b13e72d142f62c6e49310495d92dca2675dd26085b0665b1d618a757f768eee7e814d935f1f7d004ff248c14bc8e07

package-locations:
    https://hackage.haskell.org/package/usb-1.1.0.1/usb-1.1.0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/usb-1.1.0.1.tar.gz

package-size: 32211
