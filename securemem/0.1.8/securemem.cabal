-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:325fabff109ff719463e48fd543c6c02
    SHA1:a478d5a46a9c53f414fd79700c2cc7120e1f7500
    SHA256:627558fdc87be7f530416d229a511b4fab14fd23b4154ca62049cf4d0cb90593
    SHA512:40795f76ae19660ea91acd0faafdb9f2c70db779656b4ffad4d1160310b8e0fc46d39f57f2998176b7f4d752d4cf57777502a27917b63e05abd7fa92889265af
    Skein512_512:2c1a9232724f834671a2a5c2392c19ed5316935ebe7b64bc52f7fedd15506563ee053b3b8a35c7939db08576507cc805aa669e6054aadac48d81f6ddd03322f0

x-package-locations:
    https://hackage.haskell.org/package/securemem-0.1.8/securemem-0.1.8.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/securemem-0.1.8.tar.gz

x-package-size: 4175
-- END Added by all-cabal-hashes-tool

Name:                securemem
Version:             0.1.8
Synopsis:            abstraction to an auto scrubbing and const time eq, memory chunk.
Description:
    SecureMem is similar to ByteString, except that it provides a memory chunk that
    will be auto-scrubbed after it run out of scope.
License:             BSD3
License-file:        LICENSE
Copyright:           Vincent Hanquez <vincent@snarc.org>
Author:              Vincent Hanquez <vincent@snarc.org>
Maintainer:          vincent@snarc.org
Category:            Data
Stability:           experimental
Build-Type:          Simple
Homepage:            http://github.com/vincenthz/hs-securemem
Cabal-Version:       >=1.8
extra-doc-files:     README.md

Library
  Exposed-modules:   Data.SecureMem
  Build-depends:     base >= 4 && < 5
                   , bytestring
                   , byteable >= 0.1.1
                   , memory
                   , ghc-prim
  C-sources:         cbits/utils.c
  ghc-options:       -Wall -fwarn-tabs

source-repository head
  type: git
  location: https://github.com/vincenthz/hs-securemem
