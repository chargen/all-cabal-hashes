-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:19ef2fe79970bf3887e936fd8cbba0d9
    SHA1:fbfaa92e77b071e7dd1b18d8c14fdb5bced68ab1
    SHA256:f9144945bf7bf448f617822cd053ea79bd1ed13bcf68e3ea97c3f5e4858eb592
    SHA512:bfcee93b0057fbe346c5d63a497fa6b3543dc49a6a189a0b0c3ae296c11127c84aaf471f526c02ca4b842e6f4d5b1c6dd33723724a2f6524ceff4e31dd489bd8
    Skein512_512:f04ca2a0a5bd9ca58abed11d36841413c34bdac84845813970b249f7cbbe6936f988b8cec3553f82af2be6bd42a259bfcd9e3459b76dff07e46e586bb91bb3dd

package-locations:
    https://hackage.haskell.org/package/securemem-0.1.7/securemem-0.1.7.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/securemem-0.1.7.tar.gz

package-size: 5011
-- END Added by all-cabal-hashes-tool

Name:                securemem
Version:             0.1.7
Synopsis:            abstraction to an auto scrubbing and const time eq, memory chunk.
Description:
    SecureMem is similar to ByteString, except that it provides a memory chunk that
    will be auto-scrubbed after it run out of scope.
License:             BSD3
License-file:        LICENSE
Copyright:           Vincent Hanquez <vincent@snarc.org>
Author:              Vincent Hanquez <vincent@snarc.org>
Maintainer:          vincent@snarc.org
Category:            Data
Stability:           experimental
Build-Type:          Simple
Homepage:            http://github.com/vincenthz/hs-securemem
Cabal-Version:       >=1.8
extra-doc-files:     README.md

Library
  Exposed-modules:   Data.SecureMem
  Build-depends:     base >= 4 && < 5
                   , bytestring
                   , byteable >= 0.1.1
                   , ghc-prim
  C-sources:         cbits/utils.c
  ghc-options:       -Wall -fwarn-tabs

source-repository head
  type: git
  location: https://github.com/vincenthz/hs-securemem
