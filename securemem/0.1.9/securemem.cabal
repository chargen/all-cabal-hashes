-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:5f299006dd758487d3c716b510566a9d
    SHA1:a3f713759abd46b8946068f10492965efa1866dd
    SHA256:feb60dc542ea3ce9cdb449093b85dc69e43df310aab4fd161e4cdaa3ba847036
    SHA512:64623b5a695e0e946b5762fe47baea247e497c2f2add0887dc54300948d87088e8604eec58715f8b31642121100c63ead1c8db96ee7d6c60e1ce27b3da6d56e9
    Skein512_512:7cbce1d6c8998cef0bb8bb2701f31cd0ca02d882e52459ad0d6837cd7728bb092c99903949a806de7c15a3a034e350fd09b01d23fdf912857309336f2fccc8c6

x-package-locations:
    https://hackage.haskell.org/package/securemem-0.1.9/securemem-0.1.9.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/securemem-0.1.9.tar.gz

x-package-size: 4180
-- END Added by all-cabal-hashes-tool

Name:                securemem
Version:             0.1.9
Synopsis:            abstraction to an auto scrubbing and const time eq, memory chunk.
Description:
    SecureMem is similar to ByteString, except that it provides a memory chunk that
    will be auto-scrubbed after it run out of scope.
License:             BSD3
License-file:        LICENSE
Copyright:           Vincent Hanquez <vincent@snarc.org>
Author:              Vincent Hanquez <vincent@snarc.org>
Maintainer:          vincent@snarc.org
Category:            Data
Stability:           experimental
Build-Type:          Simple
Homepage:            http://github.com/vincenthz/hs-securemem
Cabal-Version:       >=1.8
extra-doc-files:     README.md

Library
  Exposed-modules:   Data.SecureMem
  Build-depends:     base >= 4 && < 5
                   , bytestring
                   , byteable >= 0.1.1
                   , memory >= 0.7
                   , ghc-prim
  C-sources:         cbits/utils.c
  ghc-options:       -Wall -fwarn-tabs

source-repository head
  type: git
  location: https://github.com/vincenthz/hs-securemem
