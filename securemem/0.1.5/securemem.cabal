-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:a7a25d5f286bcc08578d052d54ed74d0
    SHA1:bc7f6336887a6493d1a8f597a8d3b5746a58d1a1
    SHA256:4e21b3ef178f2697e7fd629cc636d5c644155d182c04a8336d381d14d6327ebc
    SHA512:e42b1931349096f1bcfab1f3e121bd7993f5236fe84b9db29ae02ccb91593a997c7f427260cc9a906072a3c8ba45aab628f4a2d589bc2e1f260a4528146d6be9
    Skein512_512:2f24961eb01159ede774def0c2d2906d8e2a485014741ae816691fa7ed08140c87b2354a315213c51dc2a744aee3aee92207161d3751e0402f73f5d1a201e09c

x-package-locations:
    https://hackage.haskell.org/package/securemem-0.1.5/securemem-0.1.5.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/securemem-0.1.5.tar.gz

x-package-size: 4950
-- END Added by all-cabal-hashes-tool

Name:                securemem
Version:             0.1.5
Synopsis:            abstraction to an auto scrubbing and const time eq, memory chunk.
Description:
    SecureMem is similar to ByteString, except that it provides a memory chunk that
    will be auto-scrubbed after it run out of scope.
License:             BSD3
License-file:        LICENSE
Copyright:           Vincent Hanquez <vincent@snarc.org>
Author:              Vincent Hanquez <vincent@snarc.org>
Maintainer:          vincent@snarc.org
Category:            Data
Stability:           experimental
Build-Type:          Simple
Homepage:            http://github.com/vincenthz/hs-securemem
Cabal-Version:       >=1.8
extra-doc-files:     README.md

Library
  Exposed-modules:   Data.SecureMem
  Build-depends:     base >= 4 && < 5
                   , bytestring
                   , byteable >= 0.1.1
                   , ghc-prim
  C-sources:         cbits/utils.c
  ghc-options:       -Wall -fwarn-tabs

source-repository head
  type: git
  location: https://github.com/vincenthz/hs-securemem
