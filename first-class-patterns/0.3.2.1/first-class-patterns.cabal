Name:                first-class-patterns
Version:             0.3.2.1
Author:              Reiner Pope, Brent Yorgey
Maintainer:          Brent Yorgey <byorgey@cis.upenn.edu>
License:             BSD3
License-file:        LICENSE
Synopsis:            First class patterns and pattern matching, using type families
Description:

	This package implements a library of first class patterns. The
	initial basis for this library was Morten Rhiger's \"Type-safe
	pattern combinators\"; the patterns can be used in an almost
	identical way to those of Morten Rhiger. In a series of blog
	posts at
	<http://reinerp.wordpress.com/category/pattern-combinators/>
	the types of patterns were made more revealing using type
	families, and a simpler implementation was used which avoids
	some book-keeping.
	.
	The library reimplements most of Haskell's built-in
	pattern matching facilities, plus some more. The pattern
	matches of this library are lightweight: when GHC's
	optimisation is turned on, all overhead should be optimised
	away, leaving a standard Haskell pattern match.
        .
	If you're just reading the documentation for this library for
	the first time, start with "Data.Pattern".

Cabal-Version:       >= 1.10
Category:            Data
Build-Type:          Simple
Stability:           experimental
homepage:            https://github.com/reinerp/first-class-patterns
bug-reports:         https://github.com/reinerp/first-class-patterns/issues

source-repository head
  type:                 git
  location:             git://github.com/reinerp/first-class-patterns.git

library
  Build-Depends:
    base >= 4.5 && < 5,
    transformers >= 0.1.0 && < 0.5
  Exposed-modules:     Data.Pattern
                       Data.Pattern.Base
                       Data.Pattern.Base.TypeList
                       Data.Pattern.Base.Tuple
                       Data.Pattern.Common
  Other-modules:       Data.Pattern.Base.Difference
  Default-extensions:  TypeFamilies,
                       GADTs,
                       ScopedTypeVariables,
                       TypeOperators,
                       EmptyDataDecls,
                       Rank2Types,
                       GeneralizedNewtypeDeriving,
                       FlexibleInstances
  Default-language:    Haskell2010

  -- necessary to get all the patterns properly inlined. Note that putting
  -- {-# INLINE #-} pragmas every doesn't seem to work, due to some subtlety
  -- of the inliner.
  ghc-options:
                     -funfolding-use-threshold=1000
                     -funfolding-creation-threshold=1000


package-hashes:
    MD5:3c8e51aa7111e264124555905a3ac96f
    SHA1:bab997d5256be5fe78730f93bd53105087b701fd
    SHA256:12c9ecd81e0f3b02f89fa59abe2e2e3fa2ad4055fbd67224f421d23e6541531d
    SHA512:9e79f96fe1936089b9bb63c374db3de1993cd26c63ce9625c43515381e300546e781a5975ed14f46a0a459f671817ba079edc6985c03816006f537a82e635054
    Skein512_512:6af54247e82acd7145b916ef0900b33afbdb0d225960de38da100a6ea26b0e10ab08de8753d587648f7ed6d5bf7d93ad7891a4e5fd894b7b7587f7b8acb80e40

package-locations:
    https://hackage.haskell.org/package/first-class-patterns-0.3.2.1/first-class-patterns-0.3.2.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/first-class-patterns-0.3.2.1.tar.gz

