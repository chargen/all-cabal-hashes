-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:0ed936ea022bde5648fa4a36ff3ee57a
    SHA1:3ba7d88661da62b25783e8cc28df58b4dc734fb0
    SHA256:6458ca53593a31ebce1d94ef8dd4f6a06d050dd7ed32335f6cc6b6e5d3456894
    SHA512:c9afa97eb5dc1bddcbf0e088352141d56b603562f80fcbde6811610a4e71e1496dd5f07e4338644930bf06b403bc08d35799f7063ae845ecdb71e619b2342a18
    Skein512_512:50d76938e16a51d037acec57e585758bf36383bd98166d7aab14afb722798224f21c1223b45ce70751cd118a5c001c2ea9a59782ddcbd30e6451a5f2444bda80

x-package-locations:
    https://hackage.haskell.org/package/mtl-compat-0.2.1.3/mtl-compat-0.2.1.3.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/mtl-compat-0.2.1.3.tar.gz

x-package-size: 4584
-- END Added by all-cabal-hashes-tool

name:                mtl-compat
version:             0.2.1.3
x-revision: 1
synopsis:            Backported Control.Monad.Except module from mtl
description:         This package backports the "Control.Monad.Except" module from
                     @mtl@ (if using @mtl-2.2.0.1@ or earlier), which reexports the
                     @ExceptT@ monad transformer and the @MonadError@ class.
                     .
                     This package should only be used if there is a need to use the
                     @Control.Monad.Except@ module specifically. If you just want
                     the @mtl@ class instances for @ExceptT@, use
                     @transformers-compat@ instead, since @mtl-compat@ does nothing
                     but reexport the instances from that package.
                     .
                     Note that unlike how @mtl-2.2@ or later works, the
                     "Control.Monad.Except" module defined in this package exports
                     all of @ExceptT@'s monad class instances. Therefore, you may 
                     have to declare @import Control.Monad.Except ()@ at the top of
                     your file to get all of the @ExceptT@ instances in scope.
homepage:            https://github.com/haskell-compat/mtl-compat
bug-reports:         https://github.com/haskell-compat/mtl-compat/issues
stability:           Provisional
license:             BSD3
license-file:        LICENSE
author:              Ryan Scott
maintainer:          Ryan Scott <ryan.gl.scott@ku.edu>
copyright:           (C) 2015 Ryan Scott
category:            Compatibility
build-type:          Simple
extra-source-files:  CHANGELOG.md, README.md
cabal-version:       >=1.8

source-repository head
  type:                git
  location:            git://github.com/haskell-compat/mtl-compat.git

flag two-point-one
  default:             False
  manual:              True
  description:         Use mtl-2.1.3.1 or earlier with transformers-compat. This
                       will cause this package to export the Control.Monad.Except module.

flag two-point-two
  default:             False
  manual:              True
  description:         Use mtl-2.2.0.1 with transformers. This will cause this
                       package to export the Control.Monad.Except module.

library
  build-depends:       base                >= 4.3     && < 5

  if flag(two-point-one) || flag(two-point-two)
    exposed-modules:   Control.Monad.Except
    hs-source-dirs:    src
  
  if flag(two-point-one)
    build-depends:     mtl                 >= 2.0.1   && < 2.2
                     , transformers-compat >= 0.4     && < 0.5
  else
    if flag(two-point-two)
      build-depends:   mtl                 >= 2.2.0.1 && < 2.2.1
                     , transformers        >= 0.4.1   && < 0.5
    else
      build-depends:   mtl                 >= 2.2.1   && < 2.3

  ghc-options:         -Wall
