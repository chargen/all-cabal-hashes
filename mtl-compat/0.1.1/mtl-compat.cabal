-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:06a56d37871ca73967043f845b40e0a5
    SHA1:0f1024fe442d12a8554d267dd3ab543435eb9855
    SHA256:b9f561eb523286eec59ae8de30339a7ea49357e0e840ce1caa3cfef60ac25279
    SHA512:23ea02962f8028cd2e9f0d610e72d3396d468796ead3cb9b5ada60eb946f3973f10b0e911c661476f36cd07e338d757a2ac5b7449fa982dc862ed647ef47949f
    Skein512_512:3e9f06617635fd7e9eec3f2e6e1ef05aa0c7135f868736351854f9d7574be3b9c29e571b97be40d977edcbdac12493492dea699fd417114e57d1b23c6bf120af

x-package-locations:
    https://hackage.haskell.org/package/mtl-compat-0.1.1/mtl-compat-0.1.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/mtl-compat-0.1.1.tar.gz

x-package-size: 4358
-- END Added by all-cabal-hashes-tool

name:                mtl-compat
version:             0.1.1
x-revision: 1
synopsis:            Orphan mtl instances for ExceptT from transformers-compat
description:         This package backports the "Control.Monad.Except" module (if
                     using @mtl-2.2.0.1@ or earlier) and monad class instances for
                     @ExceptT@ from @transformers-compat@ (if using @mtl-2.1.3.1@
                     or earlier).
                     .
                     Note that unlike how @mtl-2.2@ or later works, the
                     "Control.Monad.Except" module defined in this package exports
                     all of @ExceptT@'s monad class instances. Therefore, you may 
                     have to declare @import Control.Monad.Except ()@ at the top of
                     your file to get all of the @ExceptT@ instances in scope.
homepage:            https://github.com/haskell-compat/mtl-compat
bug-reports:         https://github.com/haskell-compat/mtl-compat/issues
stability:           Provisional
license:             BSD3
license-file:        LICENSE
author:              Ryan Scott
maintainer:          Ryan Scott <ryan.gl.scott@ku.edu>
copyright:           (C) 2015 Ryan Scott
category:            Compatibility
build-type:          Simple
extra-source-files:  CHANGELOG.md, README.md
cabal-version:       >=1.8

source-repository head
  type:                git
  location:            git://github.com/haskell-compat/mtl-compat.git

flag two-point-one
  default:             False
  manual:              False
  description:         Use mtl-2.1.3.1 or earlier with transformers-compat.
                       This should toggle on/off automatically.

flag two-point-two
  default:             False
  manual:              True
  description:         Use mtl-2.2.0.1. This is probably not what you want, so
                       this must be selected manually.

library
  build-depends:       base                >= 4.3     && < 5

  if flag(two-point-one) || flag(two-point-two)
    exposed-modules:   Control.Monad.Except
    hs-source-dirs:    src
  
  if flag(two-point-one)
    build-depends:     mtl                 >= 2.0.1   && < 2.2
                     , transformers-compat >= 0.3     && < 0.4
  else
    if flag(two-point-two)
      build-depends:   mtl                 >= 2.2.0.1 && < 2.2.1
                     , transformers        >= 0.4.1   && < 0.5
    else
      build-depends:   mtl                 >= 2.2.1   && < 2.3

  ghc-options:         -Wall
