-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:86e586c06e94d2f36a1a352cfa6b009a
    SHA1:81bdca5f28ac8480af4e47110a7e13d1cfda205d
    SHA256:8c01a301e0a9e1e75eeddf6ed5a681e670c2b619a3dea59fcd75414389532489
    SHA512:ecfe8a93c240d336ec0004e137ed4a311888781edbd01832739771b35a33c729064223a3603a0298bd29c07b7a2b5bd2fc60c02fcaca9dda858e2e5e8e0c48e2
    Skein512_512:4dab7e1264f13353ad55c0bf6459b634e3792a0ce6eadd4bda05e6efb71c7fde4a15c116f712370b915b82d8cb05335cda6d4c930ea4020e8e7897b2f5444e9a

x-package-locations:
    https://hackage.haskell.org/package/gf-3.1.6.1/gf-3.1.6.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/gf-3.1.6.1.tar.gz

x-package-size: 11730379
-- END Added by all-cabal-hashes-tool

name: gf
version: 3.1.6.1
cabal-version: >= 1.2
build-type: Custom
license: GPL
license-file: LICENSE
synopsis: Grammatical Framework
homepage: http://www.grammaticalframework.org

flag interrupt
  Description: Enable Ctrl+Break in the shell
  Default:     True

library
  build-depends: base >= 4.2 && <5,
                 array,
                 containers,
                 bytestring,
                 random
  ghc-options: -O2
  hs-source-dirs: src/compiler src/runtime/haskell
  extensions: 
  exposed-modules: 
    PGF
  other-modules:
    PGF.CId
    PGF.Data
    PGF.Macros
    PGF.Generate
    PGF.Linearize
    PGF.Parse
    PGF.Expr
    PGF.Type
    PGF.Tree
    PGF.Paraphrase
    PGF.TypeCheck
    PGF.Binary
    PGF.Morphology
    PGF.VisualizeTree
    PGF.Printer
    PGF.Probabilistic
    GF.Data.TrieMap
    GF.Data.Utilities
    GF.Data.SortedList
    GF.Data.ErrM
    GF.Data.Relation
    GF.Data.Operations
-- not really part of GF but I have changed the original binary library
-- and we have to keep the copy for now.
    Data.Binary
    Data.Binary.Put
    Data.Binary.Get
    Data.Binary.Builder

executable gf
  build-depends: base >= 4.2,
                 array,
                 containers,
                 bytestring,
                 filepath,
                 directory,
                 random,
                 old-time,
                 process,
                 pretty,
                 mtl,
                 haskeline
  build-tools: happy, alex
  if os(windows)
    build-depends: Win32
  else
    build-depends: unix
  ghc-options: -O2
  hs-source-dirs: src/compiler src/runtime/haskell
  extensions:
  main-is: GF.hs
  other-modules:
    GF.Data.BacktrackM
    GF.JavaScript.AbsJS
    GF.JavaScript.PrintJS
    GF.Infra.CompactPrint
    GF.Data.TrieMap
    GF.Data.Utilities
    GF.Data.SortedList
    GF.Data.ErrM
    GF.Data.Operations
    GF.Infra.Ident
    GF.Grammar.Predef
    GF.Data.Str
    GF.Data.Zipper
    GF.Infra.GetOpt
    GF.Infra.Option
    GF.Infra.UseIO
    GF.Command.Commands
    GF.Command.Interpreter
    GF.Command.Abstract
    GF.Command.Parse
    GF.Command.Importing
    GF.Infra.Modules
    GF.Grammar
    GF.Grammar.Lexer
    GF.Grammar.Parser
    GF.Grammar.Grammar
    GF.Grammar.Values
    GF.Grammar.Macros
    GF.Grammar.Lockfield
    GF.Grammar.MMacros
    GF.Grammar.Lookup
    GF.Grammar.Unify
    GF.Grammar.PatternMatch
    GF.Grammar.Printer
    GF.Grammar.ShowTerm
    GF.Grammar.Binary
    GF.Infra.CheckM
    GF.Compile.Update
    GF.Compile.CheckGrammar
    GF.Compile.Refresh
    GF.Compile.Rename
    GF.Compile.ReadFiles
    GF.Compile.GrammarToPGF
    GF.Compile.Concrete.TypeCheck
    GF.Compile.Concrete.Compute
    GF.Compile.Concrete.AppPredefined
    GF.Compile.Abstract.TC
    GF.Compile.Abstract.TypeCheck
    GF.Compile.Abstract.Compute
    GF.Compile.Optimize
    GF.Compile.SubExOpt
    GF.Compile.ModDeps
    GF.Compile.GetGrammar
    GF.Compile.PGFtoHaskell
    GF.Compile.PGFtoProlog
    GF.Compile.PGFtoJS
    GF.Compile
    GF.Quiz
    PGF
    PGF.CId
    PGF.Data
    PGF.Expr
    PGF.Type
    PGF.Tree
    PGF.Macros
    PGF.Generate
    PGF.Linearize
    PGF.Binary
    PGF.Paraphrase
    PGF.TypeCheck
    PGF.Binary
    PGF.Printer
    GFC
    GFI

  if flag(interrupt)
    cpp-options: -DUSE_INTERRUPT
    other-modules: GF.System.UseSignal
  else
    other-modules: GF.System.NoSignal
