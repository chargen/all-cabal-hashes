-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:1fb65c6207bb564e80aec0733ddf7b62
    SHA1:5764866bad86a31f6cedea558bffe43be96ba21a
    SHA256:f884e863db313fa610e3e92f331afd489a2ce62270d8bc9890b79111fc24a5b5
    SHA512:52c9dcfbd13ca2d61fb70618699909e40cf1a6e09a61a39bc894f0015366ef518b815a234f4450e97c41fc1c1d52ab0415d6891ef8a50df312b97a66fc1388b8
    Skein512_512:c562a895f9923bd7dc41255debcd47b8bca436c96458b4c44a205253f05cb292ac5d816e9f74cebe1f2d022492d692c0104713994b86550509c60656ad25f650

package-locations:
    https://hackage.haskell.org/package/pwstore-purehaskell-1.0/pwstore-purehaskell-1.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/pwstore-purehaskell-1.0.tar.gz

package-size: 6168
-- END Added by all-cabal-hashes-tool

Name:                pwstore-purehaskell
Version:             1.0
Synopsis:            Secure password storage, in pure Haskell.
Description:         To store passwords securely, they should be salted,
                     then hashed with a slow hash function. This library
                     uses PBKDF1-SHA256, and handles all the details.
                     It is implemented in pure Haskell, with no C
                     dependencies. For a faster implementation, the
                     pwstore-fast package has the exact same API but is
                     about 25 times faster due to its use of the cryptohash
                     package, which is partly implemented in C. This pure
                     Haskell version is visibly slower, but still quite usable.

Homepage:            https://github.com/PeterScott/pwstore
License:             BSD3
License-file:        LICENSE
Author:              Peter Scott
Maintainer:          pjscott@iastate.edu
Category:            Cryptography
Build-type:          Simple
Extra-source-files:  README.md
Cabal-version:       >=1.2


Library
  Exposed-modules: Crypto.PasswordStore
  Build-depends:   base >= 4, base < 5, bytestring >= 0.9,
                   base64-bytestring >= 0.1,
                   SHA >= 1.4.1, random >= 1
  ghc-options:     -Wall
  
