-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:d02566bfba9c6249fd4a7fd6e3396c68
    SHA1:35b1d8ed3d963fb13a203435762057a9d9571f62
    SHA256:08c5e2d45f6a0275fff3d161b66f1aa502e5f007659cb068bff505478f84a2ba
    SHA512:8aaf998a4bfd374e08366a6cfa26416422862d25f7b67fe9c11bb894406d29f9c847d3ca7b79a3cd83307a7aae7d305d22d9dfd772773e11594eaddc36cad630
    Skein512_512:1aacb64c80865d512c3cf98ddf721866d661d03db0c17b09c80da4fb5372ac7af964cbdcc0fd002e03ea53f3606e81c202bf1868d747178eeb14d9d4d20d8870

x-package-locations:
    https://hackage.haskell.org/package/copilot-1.0/copilot-1.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/copilot-1.0.tar.gz

x-package-size: 46438
-- END Added by all-cabal-hashes-tool

name:                copilot
version:             1.0
cabal-version:       >= 1.2
license:             BSD3
license-file:        LICENSE
author:              Lee Pike, Robin Morisset, Alwyn Goodloe, Sebastian Niller
synopsis:            A stream DSL for writing embedded C monitors.
build-type:          Simple
maintainer:          Lee Pike <leepike@galois.com>
category:            Language, Embedded
homepage:            http://leepike.github.com/Copilot/
description:         Can you write a list in Haskell? Then you can write embedded C code using
                     Copilot. Here's a Copilot program that computes the Fibonacci sequence (over
                     Word 64s) and tests for even numbers:
                     .
                     > fib :: Streams
                     > fib = do
                     >  let f = varW64 "fib"
                     >  let t = varB "t"
                     >  f .= [0,1] ++ f + (drop 1 f)
                     >  t .= even f
                     >    where even :: Spec Word64 -> Spec Bool
                     >          even w' = w' `mod` 2 == 0
                     .
                     Copilot contains an interpreter, a compiler, and uses a model-checker to check
                     the correctness of your program. The compiler generates constant time and
                     constant space C code via Tom Hawkin's Atom (thanks Tom!). Copilot was
                     originally developed to write embedded monitors for more complex embedded
                     systems, but it can be used to develop a variety of functional-style embedded
                     code.

extra-source-files:  README

library
    ghc-options:     -Wall 
    -- These build depends represent my current system.  This will probably
    -- build on packages outside these constaints.
    build-depends:     
                       base >= 4.2 && < 6
                     , atom >= 1.0.8
                     , containers >= 0.2.0.1
                     , process >= 1.0.0.0
                     , random >= 1.0.0.0
                     , directory >= 1.0.0.0
                     , mtl >= 1.0.0.0
                     , filepath >= 1.0.0.0

    extensions:
    exposed-modules: Language.Copilot
                     Language.Copilot.AdHocC
                     Language.Copilot.Core
                     Language.Copilot.Language
                     Language.Copilot.Language.Sampling
                     Language.Copilot.Language.FunctionCalls
                     Language.Copilot.Language.RandomOps
                     Language.Copilot.Language.Casting
                     Language.Copilot.AtomToC
                     Language.Copilot.Compiler
                     Language.Copilot.Interpreter
                     Language.Copilot.Help
                     Language.Copilot.Analyser
                     Language.Copilot.PrettyPrinter
                     Language.Copilot.Tests.Random
                     Language.Copilot.Dispatch
                     Language.Copilot.Interface
                     Language.Copilot.Libs.ErrorChks
                     Language.Copilot.Libs.PTLTL
                     Language.Copilot.Libs.LTL
                     Language.Copilot.Libs.Indexes
                     Language.Copilot.Libs.Statistics
                     Language.Copilot.Examples.Examples
                     Language.Copilot.Examples.LTLExamples
                     Language.Copilot.Examples.PTLTLExamples
                     Language.Copilot.Examples.StatExamples
