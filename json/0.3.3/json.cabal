-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:7b5497f84e3aca5663689ddf28cd96bf
    SHA1:009616c214d7d8bfb54b7220eb444030316ecc6a
    SHA256:7378f04dff5a05e5128d795584d08281eb6b207d912b5189bbc7756c4d965f3a
    SHA512:3b4ea95e39360d8a25a1ed7c3a25a4f00b48cad5fdd62c771c07781d008bf3942b6ec0465b866422ed8742b7dcc65401f37d6bba97744f028f354e30daf50313
    Skein512_512:92ccbc0e11440cca3d3940eb3ee204c6b974a460d09dae29e07d04fe314598d09fd74e225a847f1e380a9a36da4379883821c28a2efffcda5ed4a3a423faa75d

package-locations:
    https://hackage.haskell.org/package/json-0.3.3/json-0.3.3.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/json-0.3.3.tar.gz

package-size: 17269
-- END Added by all-cabal-hashes-tool

name:               json
version:            0.3.3
synopsis:           Support for serialising Haskell to and from JSON
description:
    JSON (JavaScript Object Notation) is a lightweight data-interchange
    format. It is easy for humans to read and write. It is easy for
    machines to parse and generate.  It is based on a subset of the
    JavaScript Programming Language, Standard ECMA-262 3rd Edition -
    December 1999.
    .
    This library provides a parser and pretty printer for converting
    between Haskell values and JSON.
category:           Web
license:            BSD3
license-file:       LICENSE
author:             Galois Inc.
maintainer:         dons@galois.com
Copyright:          (c) 2007-2008 Galois Inc.
cabal-version:      >= 1.2.0
build-type: Simple
extra-source-files:
    tests/HUnit.hs
    tests/Makefile
    tests/Parallel.hs
    tests/QC.hs
    tests/QuickCheckUtils.hs
    tests/Unit.hs
    tests/unit/fail1.json
    tests/unit/fail10.json
    tests/unit/fail11.json
    tests/unit/fail12.json
    tests/unit/fail13.json
    tests/unit/fail14.json
    tests/unit/fail15.json
    tests/unit/fail16.json
    tests/unit/fail17.json
    tests/unit/fail18.json
    tests/unit/fail19.json
    tests/unit/fail2.json
    tests/unit/fail20.json
    tests/unit/fail21.json
    tests/unit/fail22.json
    tests/unit/fail23.json
    tests/unit/fail24.json
    tests/unit/fail25.json
    tests/unit/fail26.json
    tests/unit/fail27.json
    tests/unit/fail28.json
    tests/unit/fail29.json
    tests/unit/fail3.json
    tests/unit/fail30.json
    tests/unit/fail31.json
    tests/unit/fail32.json
    tests/unit/fail33.json
    tests/unit/fail4.json
    tests/unit/fail5.json
    tests/unit/fail6.json
    tests/unit/fail7.json
    tests/unit/fail8.json
    tests/unit/fail9.json
    tests/unit/pass1.json
    tests/unit/pass2.json
    tests/unit/pass3.json

flag split-base
  default: True
  description: Use the new split base package.
flag parsec
  default: True
  description: Add support for parsing with Parsec.
flag pretty
  default: True
  description: Add support for using pretty printing combinators.

library
  exposed-modules: Text.JSON,
                   Text.JSON.Types,
                   Text.JSON.String,
                   Text.JSON.ReadP
  ghc-options:     -Wall -O2

  if flag(split-base)
    build-depends:   base >= 3, array, containers, bytestring
    if flag(parsec)
      build-depends:    parsec
      exposed-modules:  Text.JSON.Parsec
    if flag(pretty)
      build-depends:    pretty
      exposed-modules:  Text.JSON.Pretty
  else
    build-depends:    base < 3
