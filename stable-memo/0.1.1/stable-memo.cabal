name:                stable-memo
version:             0.1.1
synopsis:            Memoization based on argument identity
license:             MIT
license-file:        LICENSE
author:              Jake McArthur <Jake.McArthur@gmail.com>
maintainer:          Jake McArthur <Jake.McArthur@gmail.com>
category:            Data
build-type:          Simple
cabal-version:       >=1.10
description:

  Whereas most memo combinators memoize based on equality, stable-memo
  does it based on whether the exact same argument has been passed to
  the function before (that is, is the same argument in memory).

  .

  * This can be more suitable for recursive functions over graphs with
    cycles.

  .

  * stable-memo doesn't retain the keys it has seen so far, which
    allows them to be garbage collected if they will no longer be
    used. Finalizers are put in place to remove the corresponding
    entries from the memo table if this happens.

  .

  * "Data.StableMemo.Weak" provides an alternative set of combinators
    that also avoid retaining the results of the function, only
    reusing results if they have not yet been garbage collected.

  .

  * There is no type class constraint on the function's argument.

  .

  stable-memo will not work for arguments which happen to have the
  same value but are not the same heap object. This rules out many
  candidates for memoization, such as the most common example, the
  naive Fibonacci implementation whose domain is strict Ints; it can
  still be made to work for some domains, though, such as the lazy
  naturals.

  .

  > data Nat = Succ Nat | Zero
  >
  > fib :: Nat -> Integer
  > fib = memo fib'
  >   where fib' Zero                = 0
  >         fib' (Succ Zero)         = 1
  >         fib' (Succ n1@(Succ n2)) = fib n1 + fib n2

  .

  This implementation is largely based on the one found in
  \"Stretching the storage manager: weak pointers and stable names in
  Haskell\", from Simon Peyton Jones, Simon Marlow, and Conal Elliott
  (<http://community.haskell.org/~simonmar/papers/weak.pdf>).

library
  build-depends:       base >=4.6 && <5, hashtables ==1.0.*, tagged ==0.4.*
  default-language:    Haskell2010
  exposed-modules:     Data.StableMemo, Data.StableMemo.Weak
  other-extensions:    BangPatterns
  other-modules:       Data.StableMemo.Internal

source-repository head
  type:     darcs
  location: http://patch-tag.com/r/jmcarthur/stable-memo

source-repository this
  type:     darcs
  location: http://patch-tag.com/r/jmcarthur/stable-memo
  tag:      v0.1.1


package-hashes:
    MD5:6e2d58ee2dd1db8f8600708e0ac0b244
    SHA1:f92b68e1159f7ae6b80ac130acd935a9b80a8114
    SHA256:032aa565400f487e4ab70d59080fb0cfdcf4742281ed115660394edebf7d2c23
    SHA512:2e5edbdfa3d46d761648981c479f0e321a00d682136573a093cd70ae0d83888c40d8f2ead41c1016de91e1841f3f50aafe1ea1e811fb8051171b4686149892c2
    Skein512_512:92895d98be811c909cd53646f95034363b0e5734b7970d7acb519fb9c1563ebeff55fb6b2981488e9fef875d91e012980740b2311fc9dbe2357fe9b02ef41933

package-locations:
    https://hackage.haskell.org/package/stable-memo-0.1.1/stable-memo-0.1.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/stable-memo-0.1.1.tar.gz

package-size: 3308
