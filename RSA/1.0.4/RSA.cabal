-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:aa4f4f21a7bc02cd7d5b34be2164d17d
    SHA1:c295f792ce6d8e1a65dffd7f50b64b50aeb5dbbe
    SHA256:4730da787a7a8e6924d2421f0c4cb55204a47acb2eb4166fa1b0c1ffecbbdfab
    SHA512:666596a47afbd228aa86d8ddc8186489ddc39a0c848f878daf29c45c5f3c9bd5d483b84cb93d360a8213cdb61161b634f302796d15a147ed2f23cf5fadaca9a8
    Skein512_512:09f73f09cc8713f7b76873001af2481eddc794dcfb35c1ebba64374674f359166818ba677eca348ce4811c8b7706960f19263623c06ae9b25922681ef7161a2b

x-package-locations:
    https://hackage.haskell.org/package/RSA-1.0.4/RSA-1.0.4.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/RSA-1.0.4.tar.gz

x-package-size: 11901
-- END Added by all-cabal-hashes-tool

name:       RSA
category:   Cryptography, Codec
version:    1.0.4
license:    BSD3
license-file: LICENSE
author:     Adam Wick <awick@galois.com>
maintainer: Adam Wick <awick@galois.com>
stability:  stable
build-type: Simple
cabal-version: >= 1.2
tested-with: GHC ==6.8.0
synopsis: Implementation of RSA, using the padding schemes of PKCS#1 v2.1.
description: This library implements the RSA encryption and signature 
             algorithms for arbitrarily-sized ByteStrings. While the 
             implementations work, they are not necessarily the fastest ones
             on the planet. Particularly key generation. The algorithms
             included are based of RFC 3447, or the Public-Key Cryptography
             Standard for RSA, version 2.1 (a.k.a, PKCS#1 v2.1).   

Flag SkipTests
  Default:     True
  Description: Skip building the test program

Flag IncludeMD5
  Description: Include support for using MD5 in the various crypto routines.

Flag UseBinary
  Description: Use the binary package for serializing keys.

Flag QuickCheck1
  Description: Whether this is QuickCheck 1 or not

Library
 build-depends: base >= 3 && < 5, bytestring, SHA, random
 GHC-Options: -O2 -Wall -fno-ignore-asserts -fno-warn-orphans 
 if flag(UseBinary)
   build-depends: binary
   CPP-Options: -DUSE_BINARY
 if flag(IncludeMD5) && flag(UseBinary)
   build-depends: pureMD5
   CPP-Options: -DINCLUDE_MD5
 exposed-modules: Codec.Crypto.RSA
 extensions: CPP, BangPatterns, ScopedTypeVariables

Executable test_rsa
  if flag(SkipTests)
    Buildable: False
  else
    build-depends: base >= 3 && < 5, bytestring, SHA >= 1.0.1
  if flag(QuickCheck1)
    build-depends: QuickCheck < 2
    CPP-Options:   -DQUICKCHECK1
  else
    build-depends: QuickCheck >= 2 && < 3
  GHC-Options: -O2 -Wall -fno-ignore-asserts -fno-warn-orphans 
  CPP-Options: -DRSA_TEST
  Main-Is: Test.hs
  Other-Modules: Codec.Crypto.RSA
  extensions: CPP, BangPatterns, ScopedTypeVariables
