-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:ff941f47b38e81174ef115e5db624c35
    SHA1:2771d9ae74475f68961216fcb8ba13fc53e6be22
    SHA256:f500fe350650476374902db8168807c1be0afabae0690875675eff8856fd4d07
    SHA512:b095c17feed42d499d325ac01e9fc5d5bda1e3b5941c51b954828402218845c985047e0aaccf96a112fcbd1bc4e6cbf7967f4742694657e7f4fc037e5551f32d
    Skein512_512:06fe1cfe224476f128c2533c84cdd10708bcfc654983a5afc235d596eb8c2a8be1cb7ee32ad224302b47e83d825cd1c0ceba0f4cb95e2eab69e103c5c48be595

x-package-locations:
    https://hackage.haskell.org/package/distributed-process-monad-control-0.5.1/distributed-process-monad-control-0.5.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/distributed-process-monad-control-0.5.1.tar.gz

x-package-size: 2680
-- END Added by all-cabal-hashes-tool

-- Initial distributed-process-monad-control.cabal generated by cabal init.
--   For further documentation, see http://haskell.org/cabal/users-guide/

name:                distributed-process-monad-control
version:             0.5.1
synopsis:            Orphan instances for MonadBase and MonadBaseControl.
homepage:            http://haskell-distributed.github.io
license:             BSD3
license-file:        LICENSE
author:              Jeremy Huffman
maintainer:          jeremy@jeremyhuffman.com
-- copyright:           
category:            Control
build-type:          Simple
extra-source-files:  README.md
cabal-version:       >=1.10
description:          
  This module only exports instances for @'MonadBase' @'IO' and
  @'MonadBaseControl' @'IO' for the @'Process' monad. This is for use
  in conjunction with a library requiring these instances, such as the
  @<http://hackage.haskell.org/package/lifted-base lifted-base> package.
  .
  A tutorial segment regarding use of this in distributed-process applications may
  be found <http://haskell-distributed.github.io/tutorials/3ch.html#monad-transformer-stacks here>.
  .
  example usage:
  . 
  >import Control.Distributed.Process.MonadBaseControl()
  >import Control.Concurrent.MVar.Lifted (withMVar)
  >   
  >processWithMVar :: MVar a -> (a -> Process b) -> Process b
  >processWithMvar = withMVar

library
  exposed-modules:    Control.Distributed.Process.MonadBaseControl
  -- other-modules:       
  build-depends:      base >= 4.4 && <= 5
                    , distributed-process >= 0.4.2 && < 0.6.0
                    , monad-control >= 0.3 && < 1.1
                    , transformers
                    , transformers-base >= 0.4.1 && <= 0.5.0 
  hs-source-dirs:     src
  default-language:   Haskell2010
  ghc-options:      -Wall
