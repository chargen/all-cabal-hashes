-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:143c06b7fd4b2f44c974903fe757ca67
    SHA1:23e92f99d15b475d549dc1857e78a77ddbe635d3
    SHA256:c1f4097ae7f64d36f274789f561a5d8d35ec1deef5272c1e7bee9546afd6d449
    SHA512:0c431188746254528c7f5c5b848feb06b66ea806966cd63ad8f74a65e0247666c99d8c55f36c5222b1db262d799ea3c0ba06d22724acab4cda9c30afd8992396
    Skein512_512:aa321148b6ad840d3ca56f3bd6b2b09fb664e14d20644cc6ab40c2d11a9ef9da9960272564a68c6a3766e9c6c898f90e6a3b7490146bdeca8c5b4836d84bfb49

package-locations:
    https://hackage.haskell.org/package/pcg-random-0.1.1.0/pcg-random-0.1.1.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/pcg-random-0.1.1.0.tar.gz

package-size: 23003
-- END Added by all-cabal-hashes-tool

name:                pcg-random
version:             0.1.1.0
synopsis:            Haskell bindings to the PCG random number generator.
description:
  PCG is a family of simple fast space-efficient statistically good
  algorithms for random number generation with better-than-typical
  cryptographic security. See http://http://www.pcg-random.org for more
  information.
  .
  This library implements bindings to the standard C implementation.
  This includes the standard, unique, fast and single variants in the
  pcg family. There is a pure implementation that can be used as a
  generator with the random package as well as a faster primitive api
  that includes functions for generating common types.
  .
  The generators in this module are suitable for use in parallel but
  make sure threads don't share the same generator or things will go
  horribly wrong.

license:             BSD3
license-file:        LICENSE
extra-source-files:  README.md CHANGELOG.md c/LICENSE.txt
author:              Christopher Chalmers
maintainer:          c.chalmers@me.com
Homepage:            http://github.com/cchalmers/pcg-random
Bug-reports:         http://github.com/cchalmers/pcg-random/issues
copyright:           (c) 2014-2015. Christopher Chalmers <c.chalmers@me.com>
category:            System
build-type:          Simple
cabal-version:       >=1.10

source-repository head
  type:     git
  location: git://github.com/cchalmers/pcg-random.git

library
  exposed-modules:
    System.Random.PCG
    System.Random.PCG.Class
    System.Random.PCG.Fast
    System.Random.PCG.Unique
    System.Random.PCG.Single
  hs-source-dirs:      src
  other-extensions:    BangPatterns, CPP, ForeignFunctionInterface
  build-depends:
    base      >=4.3 && < 5,
    primitive >=0.4 && < 0.6,
    random    >=1.0 && < 2.0,
    time
  default-language:    Haskell2010
  cc-options:
    -DMEXP=19937
    -DNDEBUG
    -finline-functions -fomit-frame-pointer
    -fno-strict-aliasing
    -std=c99 -fPIC

  c-sources:
    c/pcg-advance-128.c
    c/pcg-advance-64.c
    c/pcg-global-64.c
    c/pcg-output-64.c
    c/pcg-rngs-64.c
  include-dirs:     c
  includes:         pcg_variants.h
  install-includes: pcg_variants.h

test-suite doctests
  default-language: Haskell2010
  type:             exitcode-stdio-1.0
  main-is:          doctest.hs
  hs-source-dirs:   test
  build-depends:
    base,
    doctest
