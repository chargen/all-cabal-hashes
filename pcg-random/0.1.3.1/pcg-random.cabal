-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:d78a295ab7ad3a2c1749f03c01f7ae01
    SHA1:19c99aa76c55d0d3b4b496b0ff04997c69e88b83
    SHA256:917be65fa6f917ba3e8b1ae98774356559ff6239f0b806ac0943cf160a455d0b
    SHA512:6aa6a975dec07bca687268158ef16fde76805810e0960ed80a23eda828a153f95c930a4514884918a8c95cdb7553f7add16380b8fbb463ea1f68a4c916e472fd
    Skein512_512:0f11a50ca31e2111ca5210b1267ab82ad9e64c5831f22c951e7395e8bab6b9b0d57f1bddece9b18f2ab2aa9d9c3d57d8a6037199fef13340975eb950e9ef0d7a

x-package-locations:
    https://hackage.haskell.org/package/pcg-random-0.1.3.1/pcg-random-0.1.3.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/pcg-random-0.1.3.1.tar.gz

x-package-size: 22777
-- END Added by all-cabal-hashes-tool

name:                pcg-random
version:             0.1.3.1
synopsis:            Haskell bindings to the PCG random number generator.
description:
  PCG is a family of simple fast space-efficient statistically good
  algorithms for random number generation with better-than-typical
  cryptographic security. See http://http://www.pcg-random.org for more
  information.
  .
  This library implements bindings to the standard C implementation.
  This includes the standard, unique, fast and single variants in the
  pcg family. There is a pure implementation that can be used as a
  generator with the random package as well as a faster primitive api
  that includes functions for generating common types.
  .
  The generators in this module are suitable for use in parallel but
  make sure threads don't share the same generator or things will go
  horribly wrong.

license:             BSD3
license-file:        LICENSE
extra-source-files:  README.md CHANGELOG.md c/LICENSE.txt
author:              Christopher Chalmers
maintainer:          c.chalmers@me.com
Homepage:            http://github.com/cchalmers/pcg-random
Bug-reports:         http://github.com/cchalmers/pcg-random/issues
copyright:           (c) 2014-2015. Christopher Chalmers <c.chalmers@me.com>
category:            System
build-type:          Simple
cabal-version:       >=1.10

source-repository head
  type:     git
  location: git://github.com/cchalmers/pcg-random.git

library
  exposed-modules:
    System.Random.PCG
    System.Random.PCG.Class
    System.Random.PCG.Fast
    System.Random.PCG.Unique
    System.Random.PCG.Single
  hs-source-dirs:      src
  ghc-options:         -Wall
  other-extensions:    BangPatterns, CPP, ForeignFunctionInterface
  build-depends:
    base        >=4.3 && < 5,
    primitive   >=0.4 && < 0.7,
    random      >=1.0 && < 2.0,
    bytestring,
    entropy,
    time
  default-language:    Haskell2010
  cc-options:
    -DMEXP=19937
    -DNDEBUG
    -finline-functions -fomit-frame-pointer
    -fno-strict-aliasing
    -std=c99 -fPIC

  c-sources:
    c/pcg-advance-128.c
    c/pcg-advance-64.c
    c/pcg-global-64.c
    c/pcg-output-64.c
    c/pcg-rngs-64.c
  include-dirs:     c
  includes:         pcg_variants.h
  install-includes: pcg_variants.h

test-suite doctests
  default-language: Haskell2010
  type:             exitcode-stdio-1.0
  main-is:          doctest.hs
  hs-source-dirs:   test
  build-depends:
    base,
    doctest
