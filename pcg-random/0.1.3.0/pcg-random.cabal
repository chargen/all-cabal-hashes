-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:e3750ba843e663e95f152a015eaa0ace
    SHA1:5b0e206ad1db3ba81ccc56a6e011d77795e292e8
    SHA256:02ce793223977c22e1a1e269531791c939d915aaf8c5ed49be675e02bb7f7aca
    SHA512:0139021eed0573b1dff2f4fce293a3b6d1d346e37b9eab04acc12ed5d947f8f40c3f7f1e9790da4ee9485cc902bbc7a0f0f957daab05293064a449255869239e
    Skein512_512:a114f4f036c3d72469b28942acbcbdb70d8fdbb6e57a62aeb6144d867f60c52012f4fd8640eb4b79b23d370c5f8bb22e5bdacf92f3da0716717f3980dfa4af55

x-package-locations:
    https://hackage.haskell.org/package/pcg-random-0.1.3.0/pcg-random-0.1.3.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/pcg-random-0.1.3.0.tar.gz

x-package-size: 22631
-- END Added by all-cabal-hashes-tool

name:                pcg-random
version:             0.1.3.0
synopsis:            Haskell bindings to the PCG random number generator.
description:
  PCG is a family of simple fast space-efficient statistically good
  algorithms for random number generation with better-than-typical
  cryptographic security. See http://http://www.pcg-random.org for more
  information.
  .
  This library implements bindings to the standard C implementation.
  This includes the standard, unique, fast and single variants in the
  pcg family. There is a pure implementation that can be used as a
  generator with the random package as well as a faster primitive api
  that includes functions for generating common types.
  .
  The generators in this module are suitable for use in parallel but
  make sure threads don't share the same generator or things will go
  horribly wrong.

license:             BSD3
license-file:        LICENSE
extra-source-files:  README.md CHANGELOG.md c/LICENSE.txt
author:              Christopher Chalmers
maintainer:          c.chalmers@me.com
Homepage:            http://github.com/cchalmers/pcg-random
Bug-reports:         http://github.com/cchalmers/pcg-random/issues
copyright:           (c) 2014-2015. Christopher Chalmers <c.chalmers@me.com>
category:            System
build-type:          Simple
cabal-version:       >=1.10

source-repository head
  type:     git
  location: git://github.com/cchalmers/pcg-random.git

library
  exposed-modules:
    System.Random.PCG
    System.Random.PCG.Class
    System.Random.PCG.Fast
    System.Random.PCG.Unique
    System.Random.PCG.Single
  hs-source-dirs:      src
  ghc-options:         -Wall
  other-extensions:    BangPatterns, CPP, ForeignFunctionInterface
  build-depends:
    base        >=4.3 && < 5,
    primitive   >=0.4 && < 0.7,
    random      >=1.0 && < 2.0,
    bytestring,
    entropy,
    time
  default-language:    Haskell2010
  cc-options:
    -DMEXP=19937
    -DNDEBUG
    -finline-functions -fomit-frame-pointer
    -fno-strict-aliasing
    -std=c99 -fPIC

  c-sources:
    c/pcg-advance-128.c
    c/pcg-advance-64.c
    c/pcg-global-64.c
    c/pcg-output-64.c
    c/pcg-rngs-64.c
  include-dirs:     c
  includes:         pcg_variants.h
  install-includes: pcg_variants.h

test-suite doctests
  default-language: Haskell2010
  type:             exitcode-stdio-1.0
  main-is:          doctest.hs
  hs-source-dirs:   test
  build-depends:
    base,
    doctest
