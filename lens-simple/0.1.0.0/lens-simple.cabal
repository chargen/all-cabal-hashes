-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:234c31df156312419c31009fa610dbd4
    SHA1:ddf3298ce0eefc3bad05708211249688f24c7e2e
    SHA256:26ebee597b708a0651125e7f20a595fec214d0579f5c9ea5fa5e00a0634b7f9a
    SHA512:a4d482a3f9933e76464ad47c64e0a79bb05f0b92c23c56c425f4ffad65515f11f17688317938b49e2ec6c6c364999ce15447785a85f6b1316dc63ed3d55225fa
    Skein512_512:aeedd83d24a18b4fdfb4bb4be8d5566ad9f73178b491cc802ede319d2284cda2b478b8662b7f2c3255eb5ffca6768845bd6e0edd6830ba3b365982e452f4e3a6

x-package-locations:
    https://hackage.haskell.org/package/lens-simple-0.1.0.0/lens-simple-0.1.0.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/lens-simple-0.1.0.0.tar.gz

x-package-size: 3240
-- END Added by all-cabal-hashes-tool

name:                lens-simple
version:             0.1.0.0
synopsis:            simplified import of essential lens combinators

description:         This module, @Lens.Simple@, just re-exports the main modules from Russell O\'Connor's 
                     <http://hackage.haskell.org/package/lens-family-core lens-family-core> 
                     package, the original <http://r6.ca/blog/20120623T104901Z.html van Laarhoven lens> library. 
                     @Lens.Simple@ also re-exports @makeLenses@ and 
                     other TH incantations from Dan Burton's associated 
                     <http://hackage.haskell.org/package/lens-family-th lens-family-th>. 
                     .
                     The idea is just to make a lens-family equivalent of @import Control.Lens@, namely @import Lens.Simple@ 
                     /-/- it's even one character shorter! As an illustration, note that 
                     the <https://github.com/michaelt/lens-family-simple/blob/master/examples/Pong.hs pong example> 
                     from the @lens@ library requires only this abbreviating change of imports. 
                     .
                     Similarly, when need arises for the unfathomably more 
                     sophisticated material in @Control.Lens@, a
                     change of imports will tend be all that is necessary 
                     to begin using them. 
                     .
                     It should be kept in mind that the @zoom@ exported here does
                     not use @MonadState@ from @mtl@ but is 
                     specialized to @Control.Monad.Trans.State.Strict@  Many of
                     the other lenses and combinators are a bit more 
                     specialized than their @Control.Lens@ equivalents: 
                     for example, _1 and _2 are here 
                     familiarly specialized to act just on real Haskell
                     pairs; with the loss of abstraction we also of course
                     lose the concomitant opaque error messages 
                     about @Field1 s t a b@ etc.
                     
-- description:  

homepage:            https://github.com/michaelt/lens-simple
license:             BSD3
license-file:        LICENSE
author:              michaelt
maintainer:          what_is_it_to_do_anything@yahoo.com
copyright:           Copyright (C) 2012,2013,2014 Russell O'Connor, 2014 michaelt
category:            Lenses     
build-type:          Simple
extra-source-files:  README.md
cabal-version:       >=1.10
source-repository head
  type:     git
  location: https://github.com/michaelt/lens-simple    
    
library
  exposed-modules:     Lens.Simple
  build-depends:       base >= 4       && < 5
                       , lens-family == 1.2.*
                       , lens-family-core == 1.2.*
                       , lens-family-th == 0.4.*
  default-language:    Haskell2010
