Name:                redis
Version:             0.10.1
License:             MIT
Maintainer:          Alexander Bogdanov <andorn@gmail.com>
Author:              Alexander Bogdanov <andorn@gmail.com>
Copyright:           Copyright (c) 2009-2010 Alexander Bogdanov
Category:            Database
Synopsis:            A driver for Redis key-value database
Description:
	Redis (<http://redis.io>) is an open source, BSD licensed, advanced
	key-value store. It is often referred as a data structure server
	since keys can contain different data structures, such as strings,
	hashes, lists, sets and sorted sets.
    .
    This library is a Haskell driver for Redis. Note that this library
	supports the most recent (actually the git one) version of
	Redis. Most of the functions will work correctly with stable
	version but not all.
	.
	Changes from v0.9:
	.
	- New commands implemented: echo, linsert, zrevrangebyscore,
      lpushx and rpushx
	.
	- blpop and brpop has changed their types: it's now IO (Maybe (s1,
      s2)) instead of IO (Reply s2). Warning! It's backward
      incompatible!
	.
	- New helpers fromRBulk' and fromRMultiBulk' which not only
      unwraps RBulk and RMulti replies but also (unsafely) unwraps
      /Maybes/ inside it.
	.
	- Now it's posible to use Redis renamed commands (config option
      /rename-command/). You just have to call /renameCommand/ to make
      client configuration the same as the server one.
	.
	- Type of run_multi changed. The second param is now (Redis -> IO
      a) action instead of list of IO (Reply ()). Warning! It's
      backward incompatible!
	.
	- Type of run_cas changed too. The third param is now (Redis -> IO
      a) action instead of IO (Reply ()). Warning! It's backward
      incompatible!
	.
	- Most of the protocol functions is now covered with tests (and
      all tests are passed with the most recent Redis version). You
      may run it using something like \"runhaskell Test.hs
      \<path-to-your-redis-binary\>\". \*Warning!\* Don't do that if you
      have running redis instance on the default port and host! All
      data in databases 0 and 1 will be lost!
	.
	- Fixed issues with connection on OSX and missed exports in Redis
      module - many thanks to Dan Colish
	.

Stability:           beta
Build-Type:          Simple
Cabal-Version: >= 1.4

Extra-Source-Files: Test.hs,
					Test/CASCommands.hs, Test/ListCommands.hs,
					Test/PubSubCommands.hs, Test/StringCommands.hs,
					Test/Connection.hs, Test/Lock.hs,
					Test/SetCommands.hs, Test/Utils.hs,
					Test/GenericCommands.hs, Test/Setup.hs,
					Test/ZSetCommands.hs, Test/HashCommands.hs,
					Test/MultiCommands.hs, Test/SortCommands.hs,
					Test/Monad/CASCommands.hs, Test/Monad/MultiCommands.hs,
					redis.conf

Library
    Build-Depends:       base < 5, containers, bytestring, utf8-string,
                         network, mtl, old-time, MonadCatchIO-mtl
    Exposed-modules:     Database.Redis.Redis
                         Database.Redis.Monad
                         Database.Redis.ByteStringClass
                         Database.Redis.Monad.State
                         Database.Redis.Utils.Lock
                         Database.Redis.Utils.Monad.Lock
    Other-modules:       Database.Redis.Internal


package-hashes:
    MD5:392d694566a59dc09a9dc6a0b7ad8c71
    SHA1:abae6ba77178f544d33fac0e28da52605b9ebe65
    SHA256:0c6a2442cc5f3d544d3a14f7478a61239562d6ebbd76ae1585cfa08a7ba40324
    SHA512:e0faa9e8ff706a982c14fe17fe0d482a7e07020dbafd4e78e4821cb87e8869cebb6fad40cb149f7b9c8b7f6d34d4bf8dafd983c26e08259916987d89658ce4f5
    Skein512_512:6305ffd590b99d230ff0ccfe0b62927beeaab041f87b107e40b4b6b74c6542f5826a22b3638ac91a59b717fda7978637616a48c7d5daa94a784988e891925dc0

package-locations:
    https://hackage.haskell.org/package/redis-0.10.1/redis-0.10.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/redis-0.10.1.tar.gz

