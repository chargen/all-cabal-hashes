Name:           stm-io-hooks
Synopsis:       An STM monad with IO hooks
Description:
    This library provides an STM monad with commit and retry IO hooks. 
    A retry-action is run (once) if the transaction retries, while commit-actions are 
    executed iff the transaction commits. The library also gives some atomicity
    guarantees for commit-actions:
    .
    * When a TVar is modified in a transaction and this transaction commits,
    the update remains invisible to other threads until the corresponding 
    onCommit action is run. 
    .
    * If the onCommit action throws an exception, the original values of 
    the modified TVars are restored.
    .
    Note: Part of this library uses code from
    the Haskell Wiki (see <http://haskell.org/haskellwiki/?title=New_monads/MonadAdvSTM>).

Category:       Concurrency
Author:         Peter Robinson 2009, Chris Kuklewicz 2006
Maintainer:     Peter Robinson <thaldyron@gmail.com>
License:        BSD3
License-file:   LICENSE
Homepage:       http://darcs.monoid.at/stm-io-hooks
Version:        0.2.0

Build-type:     Simple                        
Cabal-Version:  >= 1.2.3

library
    Exposed-Modules:    Control.Monad.AdvSTM
                       ,Control.Concurrent.AdvSTM
                       ,Control.Concurrent.AdvSTM.TMVar      
                       ,Control.Concurrent.AdvSTM.TVar
                       ,Control.Concurrent.AdvSTM.TArray
                       ,Control.Concurrent.AdvSTM.TChan

    Other-Modules:  Control.Monad.AdvSTM.Def
                   ,Control.Monad.AdvSTM.Class
                    -- TODO: add Sample module!
                   
    build-depends:  base       >= 4.0.0.0 && < 4.1
                   ,stm        >= 2.1.1.2 && < 2.2
                   ,array      >= 0.2.0.0 && < 0.3
                   ,containers >= 0.2.0.0 && < 0.3
                   ,mtl        >= 1.1.0.2 && < 1.2

    extensions:     MultiParamTypeClasses
                   ,FunctionalDependencies
                   ,FlexibleInstances
                   ,GeneralizedNewtypeDeriving
                   ,ScopedTypeVariables
                   ,DeriveDataTypeable
                   ,RankNTypes
                   ,ExistentialQuantification
                    



package-hashes:
    MD5:ba36276a89f2d437f85eccb51ddb603d
    SHA1:ddc8ac96a65699d64c61abddc9f521ee9e016cbb
    SHA256:de02c7402118ddc12f5b86a554c612f2e2c225600ecdc5988a506a5184e5ae77
    SHA512:8a0eb4f6fc4262663a1186cdc1743cf8ed44389c8798a368530093c3fba60258da5d202414b84624ea5ffd08bbcd0e22848f87eeeeb1997ec4436a0d35c02c9a
    Skein512_512:17e00958b59f8a8fd9030e3c75993651e09a7c406e48549ab5c15dc1113e52cfe51cc2961574843dc1cc01caa09f49c5f5c04e14847c8f90d032820444a77a9e

package-locations:
    https://hackage.haskell.org/package/stm-io-hooks-0.2.0/stm-io-hooks-0.2.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/stm-io-hooks-0.2.0.tar.gz

