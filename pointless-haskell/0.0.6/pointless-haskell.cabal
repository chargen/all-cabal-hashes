-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:762750dc606f116476e66f3c3520f3eb
    SHA1:a18d18ac03e8ded8fbded4b3ac29daf3f5f1e7cb
    SHA256:baf3d18243f8f35cac525082b38d747c2d927933fcccacdd1807034c428c46b8
    SHA512:e7282cb971ac849fa4df43f34dbdcf805a2cc071e03387830072fe5504f1d3d4223ef85c634df4e391fa59cf055913cceb296a65a06efbe48b039a1ea830d333
    Skein512_512:d42d219906d8ebc75bd80043b47a7d2ab39547a2ddc60de87af7a872d33b2e437d6a6fae584efc40989b2dd2f0d05e8f96089b7b74af1b5859a53e5a23dfbcf6

package-locations:
    https://hackage.haskell.org/package/pointless-haskell-0.0.6/pointless-haskell-0.0.6.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/pointless-haskell-0.0.6.tar.gz

package-size: 21045
-- END Added by all-cabal-hashes-tool

Name:            pointless-haskell
Version:         0.0.6
License:         BSD3
License-file:    LICENSE
Author:          Alcino Cunha <alcino@di.uminho.pt>, Hugo Pacheco <hpacheco@di.uminho.pt>
Maintainer:      Hugo Pacheco <hpacheco@di.uminho.pt>
Synopsis:        Pointless Haskell library
Description:
	Pointless Haskell is library for point-free programming with recursion patterns defined as hylomorphisms, inspired in ideas from the PolyP library.
	Generic recursion patterns can be expressed for recursive types and no support for mutually recursive types or nested data types is provided.
	The library also features the visualization of the intermediate data structure of hylomorphisms with GHood (<http://hackage.haskell.org/cgi-bin/hackage-scripts/package/GHood>).
Homepage:        http://haskell.di.uminho.pt/wiki/Pointless+Haskell

Category: Generics

extra-source-files: README, Test.hs

Build-type: Simple
Cabal-Version:  >= 1.2.3

Flag splitBase
  Description:          Choose the new smaller, split-up base package.

Library
  Hs-Source-Dirs: src
  Build-Depends:        base >= 3 && < 5, GHood, haskell98, process, syb >= 0.1.0.2
  exposed-modules:
        Generics.Pointless.Combinators
        Generics.Pointless.Functors,
        Generics.Pointless.Fctrable,
        Generics.Pointless.RecursionPatterns,
        Generics.Pointless.Observe.Functors,
        Generics.Pointless.Observe.RecursionPatterns,
        Generics.Pointless.Examples.Examples,
        Generics.Pointless.Examples.Observe,
        Generics.Pointless.MonadCombinators,
        Generics.Pointless.Bifunctors,
        Generics.Pointless.Bifctrable

  extensions: TypeFamilies, TypeOperators, ScopedTypeVariables, UndecidableInstances, FlexibleInstances, FlexibleContexts, DeriveDataTypeable, EmptyDataDecls, GADTs
