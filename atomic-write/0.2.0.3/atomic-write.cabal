-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:1570e479a03535db254f51aed7aa0d6b
    SHA1:e0b2bf853a26bd650ac84097436322e31e51b631
    SHA256:355fbde47f0153e7200592ccf3ee9dc2cdaad072950f03dac2102b0ef5294143
    SHA512:3aa435a424c56349624ae5195f25fd590e5d8c66795d4538b0d75772592b4ae8818ff0ee905a04c5b218767048612801d0589c6ea6b7dbbf8533073c841b671d
    Skein512_512:6955230ff83c8786f20751bda39c620c3adef8b78f676c1ddb77fbce7fc12005c901a3d15f3a0004d387e19aa1b6600c63ec999cf521a817fea5b650311455ef

x-package-locations:
    https://hackage.haskell.org/package/atomic-write-0.2.0.3/atomic-write-0.2.0.3.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/atomic-write-0.2.0.3.tar.gz

x-package-size: 3302
-- END Added by all-cabal-hashes-tool

name:                atomic-write
version:             0.2.0.3
synopsis:            Atomically write to a file

description:
  .
  Atomically write to a file on POSIX-compliant systems while preserving
  permissions.
  .
  On most Unix systems, `mv` is an atomic operation. This makes it simple to write
  to a file atomically just by using the mv operation. However, this will
  destroy the permissions on the original file. This library does the following
  to preserve permissions while atomically writing to a file:
  .
  * If an original file exists, take those permissions and apply them to the
    temp file before `mv`ing the file into place.
  .
  * If the original file does not exist, create a following with default
    permissions (based on the currently-active umask).
  .
  This way, when the file is `mv`'ed into place, the permissions will be the ones
  held by the original file.
  .
  This library is based on similar implementations found in common libraries in
  Ruby and Python:
  .
  * <http://apidock.com/rails/File/atomic_write/class Ruby on Rails includes a similar method called atomic_write>
  .
  * <https://github.com/chef/chef/blob/c4631816132fcfefaba3d123a1d0dfe8bc2866bb/lib/chef/file_content_management/deploy/mv_unix.rb#L23:L71 Chef includes atomic update functionality>
  .
  * <https://github.com/sashka/atomicfile There is a python library for atomically updating a file>
  .
  To use `atomic-write`, import the module corresponding to the type you wish to
  write atomically, e.g., to write a (strict) ByteString atomically:
  .
  > import System.AtomicWrite.Writer.ByteString
  .
  Then you can use the atomicWrite function that accepts a `FilePath` and a
  `ByteString`, e.g.:
  .
  > atomicWrite myFilePath myByteString
license:             MIT
license-file:        LICENSE
author:              Justin Leitgeb
maintainer:          justin@stackbuilders.com
copyright:           2015 Stack Builders Inc.
category:            System
build-type:          Simple
cabal-version:       >=1.10
bug-reports:         https://github.com/stackbuilders/atomic-write/issues

library
  exposed-modules:       System.AtomicWrite.Writer.ByteString
                       , System.AtomicWrite.Writer.ByteStringBuilder
                       , System.AtomicWrite.Writer.LazyByteString
                       , System.AtomicWrite.Writer.String
                       , System.AtomicWrite.Writer.Text

  other-modules:       System.AtomicWrite.Internal

  build-depends:         base >=4.5 && <4.8
                       , temporary
                       , unix-compat
                       , directory
                       , filepath
                       , text
                       , bytestring >= 0.10.4

  hs-source-dirs:      src
  default-language:    Haskell2010
  ghc-options:         -Wall

test-suite atomic-write-test
  type: exitcode-stdio-1.0
  hs-source-dirs: spec, src
  main-is: Spec.hs

  build-depends:       base >=4.5 && <4.8
                     , temporary
                     , unix-compat
                     , directory
                     , filepath
                     , text
                     , bytestring >= 0.10.4

                     , hspec

  default-language:    Haskell2010
  ghc-options:         -Wall


source-repository head
  type:     git
  location: git@github.com:stackbuilders/atomic-write.git
