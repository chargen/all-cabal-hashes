name:                atomic-write
version:             0.1.0.1
synopsis:            Atomically write to a file

description:
  .
  Atomically write to a file on POSIX-compliant systems while preserving
  permissions.
  .
  On most Unix systems, `mv` is an atomic operation. This makes it simple to write
  to a file atomically just by using the mv operation. However, this will
  destroy the permissions on the original file. This library does the following
  to preserve permissions while atomically writing to a file:
  .
  * If an original file exists, take those permissions and apply them to the
    temp file before `mv`ing the file into place.
  .
  * If the original file does not exist, create a following with default
    permissions (based on the currently-active umask).
  .
  This way, when the file is `mv`'ed into place, the permissions will be the ones
  held by the original file.
  .
  This library is based on similar implementations found in common libraries in
  Ruby and Python:
  .
  * <http://apidock.com/rails/File/atomic_write/class Ruby on Rails includes a similar method called atomic_write>
  .
  * <https://github.com/chef/chef/blob/c4631816132fcfefaba3d123a1d0dfe8bc2866bb/lib/chef/file_content_management/deploy/mv_unix.rb#L23:L71 Chef includes atomic update functionality>
  .
  * <https://github.com/sashka/atomicfile There is a python library for atomically updating a file>
  .
  Note that at this time Windows is not supported, however we would appreciate
  contributions to the <http://github.com/stackbuilders/atomic-write github repository>.
license:             MIT
license-file:        LICENSE
author:              Justin Leitgeb
maintainer:          justin@stackbuilders.com
copyright:           2015 Stack Builders Inc.
category:            System
build-type:          Simple
-- extra-source-files:
cabal-version:       >=1.10

library
  exposed-modules:     System.AtomicWrite
  -- other-modules:
  -- other-extensions:
  build-depends:         base >=4.5 && <4.8
                       , temporary
                       , unix
                       , directory
                       , filepath

  hs-source-dirs:      src
  default-language:    Haskell2010
  ghc-options:         -Wall

test-suite atomic-write-test
  type: exitcode-stdio-1.0
  hs-source-dirs: spec, src
  main-is: Spec.hs

  build-depends:       base >=4.5 && <4.8
                     , temporary
                     , unix
                     , directory
                     , filepath

                     , hspec

  default-language:    Haskell2010
  ghc-options:         -Wall


source-repository head
  type:     git
  location: https://github.com/stackbuilders/atomic-file


package-hashes:
    MD5:4aaa58095cf5a64176175d0aa354735d
    SHA1:325b11f52ae8a5e046e4c21fb6fbf409100d7de5
    SHA256:1dd69374d5c563516506b0ea7023d4d9a8588f29d8cd788d01e50f477b0d9b20
    SHA512:58affa301b9322ccab7bf9dd2e435dc60f00f18adf6cec5520131fdfea247275d69306b22a98fe8f10cbdc285d30c5adbe7b66434f0d1481c203dc177bf9e2db
    Skein512_512:63ec380984a8d2c75589950b1efc523e801b9e7d268f3f906db7f92cbc6034d65b6c94b47a4009251f0b0914694f06ca4f28fb7e5fff4eb74390300bf955cf22

package-locations:
    https://hackage.haskell.org/package/atomic-write-0.1.0.1/atomic-write-0.1.0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/atomic-write-0.1.0.1.tar.gz

package-size: 2740
