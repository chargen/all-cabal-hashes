-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:afe64285f1761c631eeae15cf8f133bd
    SHA1:e38f55bf042353d1e272b1a5048e6b98b1fe01ec
    SHA256:554e6dfffc1daec09cf5fa24b37df7c1978adbe51e7aaef0c5ee55eee1c73a70
    SHA512:09f8687007fb0a4341d4934bfcf98cda7447566d936a5a22277e2b0ac7274ac765209791def62e044665ab8be7bbb61723e231cab48f2e03cb977406312407ec
    Skein512_512:f8719fc19d80e9d64e38537fffb29d11774da9a9c99a94df213aa8c36f72f595276e701d748e314b122119fb63454378fc584e9032d556085e0cfaa528452c6b

x-package-locations:
    https://hackage.haskell.org/package/memoize-0.3/memoize-0.3.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/memoize-0.3.tar.gz

x-package-size: 7507
-- END Added by all-cabal-hashes-tool

name:           memoize
version:        0.3
cabal-version:  >= 1.6
license:        BSD3
license-file:   LICENSE
stability:      experimental
author:         Jesse A. Tov <tov@ccs.neu.edu>
maintainer:     tov@ccs.neu.edu
category:       Data
synopsis:       A memoization library
build-type:     Simple
tested-with:    GHC == 7.4.1, GHC == 7.0.2, GHC == 6.12.3

description:
        This library provides a type class 'Memoizable' for memoizing
        functions, along with instances for a variety of argument types.
        It includes a Template Haskell function for deriving
        'Memoizable' instances for arbitrary algebraic datatypes.
        .
        The library constructs pure memo caches without the use of
        'unsafePerformIO'.  This technique relies on implementation
        assumptions that, while not guaranteed by the semantics of
        Haskell, appear to be true.

library
  build-depends:        base >=3 && <5,
                        template-haskell >=2

  ghc-options:          -Wall -fno-warn-orphans

  exposed-modules:
    Data.Function.Memoize
  other-modules:
    Data.Function.Memoize.TH
    Data.Function.Memoize.Class

source-repository head
  type:                 git
  location:             git://github.com/tov/memoize.git
