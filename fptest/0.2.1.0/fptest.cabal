-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:b433a4959d1892a6699454541919f873
    SHA1:f068cf0c3f4603c4dc7c839379d9d0485da5823b
    SHA256:70d855b3f61de5666cb070132e5d9d8248b4a5b3a5ceb349247b897930d27c3d
    SHA512:327b1693064f6c7dac60ad2c743b33017c14f6d5cd1eacd155cd183dc65f7389cde771bc5e8d6669b2aa28cdb338949f3c4901305390abec2019d0683f846dd2
    Skein512_512:5ab9df53dbb7b1bdc91e01031a2ec50b718ea23455d63b931946534209710ce2637b7039ab5877acc44e9dcc3a37d584ce9a372fb461c09383634d5d04f2b182

package-locations:
    https://hackage.haskell.org/package/fptest-0.2.1.0/fptest-0.2.1.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/fptest-0.2.1.0.tar.gz

package-size: 2147475
-- END Added by all-cabal-hashes-tool

name:                fptest

-- The package version.  See the Haskell package versioning policy (PVP) 
-- for standards guiding when and how versions should be incremented.
-- http://www.haskell.org/haskellwiki/Package_versioning_policy
-- PVP summary:      +-+------- breaking API changes
--                   | | +----- non-breaking API additions
--                   | | | +--- code changes with no API change
version:             0.2.1.0

synopsis:            IEEE754r floating point conformance tests

description:          =A series of floating point conformance tests for Haskell.

			Currently implemented are:

			==QTrial
			QTrial is the floating point benchmark described in /IEEE Standard 754 for Binary Floating-Point
			Arithmetic/ by Prof. W. Kahan <http://www.eecs.berkeley.edu/~wkahan/ieee754status/IEEE754.PDF>

			This can be run with a simple @cabal run qtrial@

			
			==FPTest
			FPTest runs a sequence of floating point test vectors generated by IBM's
			<https://www.research.ibm.com/haifa/projects/verification/fpgen/ FPGen Floating-Point Test Generator>.

			This is done in two ways:

			* By interpreting the tests
			* By translating the tests into a Haskell HUnit test suite script that can just be executed using
			@runhaskell@

			The IBM test vectors are available from
			<https://www.research.ibm.com/haifa/projects/verification/fpgen/i here>.

			You will, most likely, want the binary tests unless you have a decimal machine.
			Only 32-bit float tests are provided (not 64-bit double ones) although FPTest supports Doubles.


			The syntax of the test vectors can be founds
			<https://www.research.ibm.com/haifa/projects/verification/fpgen/syntax.txt here> or in Chapter 4
			of  <https://www.research.ibm.com/haifa/projects/verification/fpgen/papers/ieee-test-suite-v2.pdfs
			   Floating-Point Test-Suite for IEEE>

homepage:            https://github.com/jrp2014/fptest

license:             BSD3

license-file:        LICENSE

author:              John Pavel

maintainer:          jrp@dial.pipex.com

bug-reports:		https://github.com/jrp2014/fptest/issues

stability:		alpha

copyright:           2014 John Pavel and 2004 IBM Corp

category:            Math

tested-with:		GHC ==7.8.3

data-files:		*.fptest
data-dir:		test_suite

build-type:          Simple

extra-source-files:  README.md

cabal-version:       >=1.10

source-repository head
  type:			git
  location:		https://github.com/jrp2014/fptest.git
  branch:		master


executable qtrial
  main-is:             QTrial.hs
  build-depends:       base >=4.7 && <4.8, parsec >=3.1 && <3.2, test-framework >=0.8 && <0.9, test-framework-hunit >=0.3 && <0.4, HUnit >=1.2 && <1.3, parsec3-numbers >=0.0 && <0.1, QuickCheck >=2.7 && <2.8, test-framework-quickcheck2 >=0.3 && <0.4
  hs-source-dirs:      src
  ghc-options:		-Wall
  default-language:    Haskell2010
  
executable fptest
  build-depends:	 base >=4.7 && <4.8, parsec >=3.1 && <3.2, test-framework >=0.8 && <0.9, test-framework-hunit >=0.3 && <0.4, HUnit >=1.2 && <1.3, parsec3-numbers >=0.0 && <0.1, QuickCheck >=2.7 && <2.8, test-framework-quickcheck2 >=0.3 && <0.4
  main-is:		FPMain.hs
  hs-source-dirs:	src
  ghc-options:		-Wall
  other-modules:	FPTypes, FPParse, FPRun
  default-language:    Haskell2010


-- TODO:: put these tests into a separate test file
test-suite qtrial-quickcheck
  build-depends:	 base >=4.7 && <4.8, parsec >=3.1 && <3.2, test-framework >=0.8 && <0.9, test-framework-hunit >=0.3 && <0.4, HUnit >=1.2 && <1.3, parsec3-numbers >=0.0 && <0.1, QuickCheck >=2.7 && <2.8, test-framework-quickcheck2 >=0.3 && <0.4

  default-language:	Haskell2010
  hs-source-dirs:	src
  main-is:		QTrial.hs
  type:			exitcode-stdio-1.0

test-suite fptest-quickcheck
  build-depends:	 base >=4.7 && <4.8, parsec >=3.1 && <3.2, test-framework >=0.8 && <0.9, test-framework-hunit >=0.3 && <0.4, HUnit >=1.2 && <1.3, parsec3-numbers >=0.0 && <0.1, QuickCheck >=2.7 && <2.8, test-framework-quickcheck2 >=0.3 && <0.4

  default-language:	Haskell2010
  hs-source-dirs:	test src
  main-is:		FPTestTest.hs
  type:			exitcode-stdio-1.0

test-suite doctest
  build-depends:    base, doctest, Glob
  default-language: Haskell2010
  hs-source-dirs:   test
  main-is:          DocTest.hs
  type:             exitcode-stdio-1.0


test-suite haddock
  build-depends:    base, process, regex-compat
  default-language: Haskell2010
  hs-source-dirs:   test
  main-is:          Haddock.hs
  type:             exitcode-stdio-1.0

test-suite hlint
  build-depends:    base, hlint
  default-language: Haskell2010
  hs-source-dirs:   test
  main-is:          HLint.hs
  type:             exitcode-stdio-1.0
