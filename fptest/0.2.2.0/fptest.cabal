-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:1accdc5d3147c9258ea782c9471b18a1
    SHA1:592115b92fc6a3ea5d987cd9d1336dafdd2350fe
    SHA256:4420eb2fa772ae97678d0ff3479fca96b071a8bf81373cb9cd0c270888510cf3
    SHA512:bb40a2942b0bb3d9fb5856afcd6eb014a0da63b6f879837689e7fdc706d7a55aeb933855faaf84f09b3cfcbc812c018e5be0c3d3e4df9646206fcc0fa7afe5c9
    Skein512_512:9ea7cb69515e18dbe5b1eefdd67236a86b51f23687fbe25db9fa37afd8ef0b4b80984a0b951d50fcf9fdfec7f626c97f3f8798a7d3366c6a83157445172785ad

package-locations:
    https://hackage.haskell.org/package/fptest-0.2.2.0/fptest-0.2.2.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/fptest-0.2.2.0.tar.gz

package-size: 2148347
-- END Added by all-cabal-hashes-tool

name:                fptest

-- The package version.  See the Haskell package versioning policy (PVP) 
-- for standards guiding when and how versions should be incremented.
-- http://www.haskell.org/haskellwiki/Package_versioning_policy
-- PVP summary:      +-+------- breaking API changes
--                   | | +----- non-breaking API additions
--                   | | | +--- code changes with no API change
version:             0.2.2.0

synopsis:            IEEE754r floating point conformance tests

description:            A series of floating point conformance tests for Haskell.

			Currently implemented are:

			QTrial, the floating point benchmark described in / IEEE Standard 754 for Binary Floating-Point
			Arithmetic / by Prof. W. Kahan <http://www.eecs.berkeley.edu/~wkahan/ieee754status/IEEE754.PDF>

			This can be run with a simple @cabal run qtrial@.

			
			FPTest runs a sequence of floating point test vectors generated by IBM's
			<https://www.research.ibm.com/haifa/projects/verification/fpgen/ FPGen Floating-Point Test Generator>.

			This is done either by interpreting the tests or by translating the tests
			into a Haskell HUnit test suite script that can just be executed using
			@runhaskell@.

			The IBM test vectors are available from
			<https://www.research.ibm.com/haifa/projects/verification/fpgen/ here>.

			You will, most likely, want the binary tests unless you have a decimal machine.
			Only 32-bit float tests are provided (not 64-bit double ones) although FPTest supports Doubles.

			The syntax of the test vectors can be found 
			<https://www.research.ibm.com/haifa/projects/verification/fpgen/syntax.txt here> or in Chapter 4
			<https://www.research.ibm.com/haifa/projects/verification/fpgen/papers/ieee-test-suite-v2.pdfs
			   Floating-Point Test-Suite for IEEE here>

homepage:            https://github.com/jrp2014/fptest

license:             BSD3

license-file:        LICENSE

author:              John Pavel

maintainer:          jrp@dial.pipex.com

bug-reports:		https://github.com/jrp2014/fptest/issues

stability:		alpha

copyright:           2014 John Pavel and 2004 IBM Corp

category:            Math

tested-with:		GHC ==7.8.3

data-files:		*.fptest
data-dir:		test_suite

build-type:          Simple

extra-source-files:  README.md

cabal-version:       >=1.10

source-repository head
  type:			git
  location:		https://github.com/jrp2014/fptest.git
  branch:		master


executable qtrial
  main-is:             QTrial.hs
  build-depends:       base >=4.7 && <4.8, test-framework >=0.8 && <0.9, test-framework-hunit >=0.3 && <0.4, HUnit >=1.2 && <1.3, parsec3-numbers >=0.0 && <0.1, QuickCheck >=2.7 && <2.8, test-framework-quickcheck2 >=0.3 && <0.4
  hs-source-dirs:      src
  ghc-options:		-Wall -fno-warn-missing-signatures
  default-language:    Haskell2010
  
executable fptest
  build-depends:	 base >=4.7 && <4.8, parsec >=3.1 && <3.2, test-framework >=0.8 && <0.9, test-framework-hunit >=0.3 && <0.4, HUnit >=1.2 && <1.3, parsec3-numbers >=0.0 && <0.1, QuickCheck >=2.7 && <2.8, test-framework-quickcheck2 >=0.3 && <0.4
  main-is:		FPMain.hs
  hs-source-dirs:	src
  ghc-options:		-Wall
  other-modules:	FPTypes, FPParse, FPRun
  default-language:    Haskell2010


-- TODO:: put these tests into a separate test file
test-suite qtrial-quickcheck
  build-depends:	 base >=4.7 && <4.8, parsec >=3.1 && <3.2, test-framework >=0.8 && <0.9, test-framework-hunit >=0.3 && <0.4, HUnit >=1.2 && <1.3, parsec3-numbers >=0.0 && <0.1, QuickCheck >=2.7 && <2.8, test-framework-quickcheck2 >=0.3 && <0.4

  default-language:	Haskell2010
  hs-source-dirs:	src
  main-is:		QTrial.hs
  type:			exitcode-stdio-1.0

test-suite fptest-quickcheck
  build-depends:	 base >=4.7 && <4.8, parsec >=3.1 && <3.2, test-framework >=0.8 && <0.9, test-framework-hunit >=0.3 && <0.4, HUnit >=1.2 && <1.3, parsec3-numbers >=0.0 && <0.1, QuickCheck >=2.7 && <2.8, test-framework-quickcheck2 >=0.3 && <0.4

  default-language:	Haskell2010
  hs-source-dirs:	test src
  main-is:		FPTestTest.hs
  type:			exitcode-stdio-1.0

test-suite doctest
  build-depends:    base, doctest, Glob
  default-language: Haskell2010
  hs-source-dirs:   test
  main-is:          DocTest.hs
  type:             exitcode-stdio-1.0


test-suite haddock
  build-depends:    base, process, regex-compat
  default-language: Haskell2010
  hs-source-dirs:   test
  main-is:          Haddock.hs
  type:             exitcode-stdio-1.0

test-suite hlint
  build-depends:    base, hlint
  default-language: Haskell2010
  hs-source-dirs:   test
  main-is:          HLint.hs
  type:             exitcode-stdio-1.0
