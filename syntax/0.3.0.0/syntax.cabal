name:                syntax
version:             0.3.0.0
synopsis:            Syntax descriptions for unified parsing and pretty-printing.
description:
  'syntax' allows you to write a single syntax description and instantiate is both as a parser and a pretty printer.
  .
  The interface is based on a custom Functor\/Applicative\/Monad hierarchy, provided by the 'semi-iso' package. You fmap using
  a semi-isomorphism instead of function. A semi-isomorphism is a isomorphism that can fail in both directions, with slightly
  weakened laws. It is worth to note that @Iso@s and @Prism@s from 'lens' are valid semi-isomorphisms :)
  .
  Once you write a description you can, for example turn it into an Attoparsec parser, or into a 'Data.Syntax.Printer.Text.Printer'.
  .
  See @syntax-example@ and @syntax-example-json@ for examples, @syntax-attoparsec@ and @syntax-printer@ for a parser/printer implementation.
  .
  The library was inspired by:
  .
  * Rendel, Tillmann, and Klaus Ostermann. "Invertible syntax descriptions: unifying parsing and pretty printing." ACM Sigplan Notices. Vol. 45. No. 11. ACM, 2010.
  .
  TODO:
  .
  * Research relative monads and relative monad transformers. Indent is basically a Reader monad over a syntax. How would a State monad look?
  .
  * Try to implement Haskell layout rule.
  .
  * Combinators for binary data formats, vectors.
  .
  * Better error messages.
  .
  * Maybe an implementation of do notation for SemiIsoMonad with QuasiQuoters, like the codo notation for comonads.

license:             MIT
license-file:        LICENSE
author:              Paweł Nowak
maintainer:          Paweł Nowak <pawel834@gmail.com>
copyright:           Paweł Nowak 2014
category:            Data
build-type:          Simple
cabal-version:       >=1.10

source-repository head
  type:     git
  location: git@github.com:Pawel834/syntax.git

library
  exposed-modules:     Data.Syntax
                       Data.Syntax.Char
                       Data.Syntax.Combinator
                       Data.Syntax.Indent
  build-depends:       base >= 4 && < 5, mono-traversable, lens >= 4, semi-iso >= 0.5.0, scientific >= 0.3, text
  default-language:    Haskell2010


package-hashes:
    MD5:a01e799c3b0c9f3851dd10c033acbd3f
    SHA1:7dab4149aedde692b35fd496689e82041d118fbb
    SHA256:f2525a54c9118fb006f0b1b9176f4278f89dbac6081df8c8a8ba9f4064837cb8
    SHA512:e6160e1e9ff7feae9ff8e31a7d021fc1e6ffbe33f425c7328f8b35f08976a714cab1165a0ef1af0557b7e164c802248100b43edf3299c56539bcebc53eecbdb9
    Skein512_512:bb4e4576c46211c1d353d81511c0369f7d18ffedbe2b1beecf45b3926d71a42d443d5ecc6a632ad4bc251506fccaf1b481075115eec1cdea54c172f14ed747b2

package-locations:
    https://hackage.haskell.org/package/syntax-0.3.0.0/syntax-0.3.0.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/syntax-0.3.0.0.tar.gz

package-size: 5061
