-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:551ebff8c1ff7157c1b4a1fb7172ef20
    SHA1:2b01fe6c8f4cf83a756465b564e4c41710069c86
    SHA256:a6fa9d3eb0d5c20cfd045e9da5ffeee7a6a9484528e045a6c560c9d32b33b763
    SHA512:b9ca6bf0561903d0433d2588c32c6c9285f6f6728825d565c555ae5a9f9fa00fa486845d31e627529f62fd7b52bc42571c2be5df06b393b2fd97383b5df05c6b
    Skein512_512:c44a167e74fe66b22410177fd1abe2d5cf946ad90f53a73ada554b3a725a4c7dbb94b82244d784e27c952362294667273babddd2f5ed4850a50b2d2270b320ad

x-package-locations:
    https://hackage.haskell.org/package/syntax-0.1.1.0/syntax-0.1.1.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/syntax-0.1.1.0.tar.gz

x-package-size: 3245
-- END Added by all-cabal-hashes-tool

name:                syntax
version:             0.1.1.0
x-revision:          1
synopsis:            Abstract syntax descriptions for parsing and pretty-printing.
description:         Abstract syntax descriptions for parsing and pretty-printing.
                     Write a single syntax description, get both a parser and a pretty-printer.
                     .
                     Syntax descriptions are based on semi-isomorphisms from @semi-iso@ library.
                     .
                     The library is very young. There are lots of useful combinators that could be written.
                     .
                     See @syntax-example@ for an example, @syntax-attoparsec@ and @syntax-pretty@ for
                     a parser/printer implementation.
license:             MIT
license-file:        LICENSE
author:              PaweÅ Nowak
maintainer:          PaweÅ Nowak <pawel834@gmail.com>
copyright:           PaweÅ Nowak 2014
category:            Data
build-type:          Simple
cabal-version:       >=1.10

source-repository head
  type:     git
  location: git@github.com:Pawel834/syntax.git

library
  exposed-modules:     Data.Syntax
                       Data.Syntax.Char
                       Data.Syntax.Combinator
  build-depends:       base >= 4 && < 5, mono-traversable, lens, semi-iso
  default-language:    Haskell2010
