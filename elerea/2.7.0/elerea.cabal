-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:5484064c99cdea5cee48720923628eb2
    SHA1:556ec85ef0a21f9b02c3498256484a1bd7aa6d1a
    SHA256:5bfe01050f3d8da8d31cf12c5fc114d7446be870b29bd1f0dd566918aa1c7c48
    SHA512:be97859789f578adec86745f9e1e811a04870cfac316057a908bdf88e9cecdda752326e5147a15435d3d7c3d3ff221b76057b30212550c9219a88035e0ee0cac
    Skein512_512:8031c4989e14a077f919fcb7c52d8aaa53283540319bb9446d4c7d47e9f3fcea1b8828a3667ee8ae1d02003f1cc5243fe88262e69a5759a0f1c6f74edde72eb0

package-locations:
    https://hackage.haskell.org/package/elerea-2.7.0/elerea-2.7.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/elerea-2.7.0.tar.gz

package-size: 17253
-- END Added by all-cabal-hashes-tool

Name:                elerea
Version:             2.7.0
Cabal-Version:       >= 1.2
Synopsis:            A minimalistic FRP library
Category:            reactivity, FRP
Description:

 Elerea (Eventless reactivity) is a tiny discrete time FRP
 implementation without the notion of event-based switching and
 sampling, with first-class signals (time-varying values).  Reactivity
 is provided through various higher-order constructs that also allow
 the user to work with arbitrary time-varying structures containing
 live signals.  Signals have precise and simple denotational
 semantics.
 .
 Stateful signals can be safely generated at any time through a
 monadic interface, while stateless combinators can be used in a
 purely applicative style.  Elerea signals can be defined recursively,
 and external input is trivial to attach.  The library comes in three
 major variants:
 .
 * Simple: signals are plain discrete streams isomorphic to functions
   over natural numbers;
 .
 * Param: adds a globally accessible input signal for convenience;
 .
 * Clocked: adds the ability to freeze whole subnetworks at will.
 .
 This is a minimal library that defines only some basic primitives,
 and you are advised to install @elerea-examples@ as well to get an
 idea how to build non-trivial systems with it.  The examples are
 separated in order to minimise the dependencies of the core library.
 The @dow@ package contains a full game built on top of the simple
 variant.
 .
 The basic idea of the implementation is described in the WFLP 2010
 paper /Efficient and Compositional Higher-Order Streams/
 (<http://sgate.emt.bme.hu/documents/patai/publications/PataiWFLP2010.pdf>).
 .
 Additional contributions: Takano Akio

Author:              Patai Gergely
Maintainer:          Patai Gergely (patai.gergely@gmail.com)
Copyright:           (c) 2009-2011, Patai Gergely
License:             BSD3
License-File:        LICENSE
Stability:           experimental
Build-Type:          Simple
Extra-Source-Files:
  CHANGES

Library
  Exposed-Modules:
    FRP.Elerea
    FRP.Elerea.Simple
    FRP.Elerea.Simple.Pure
    FRP.Elerea.Param
    FRP.Elerea.Clocked

  Build-Depends:       base >= 4 && < 5, containers
  ghc-options:         -Wall -O2
