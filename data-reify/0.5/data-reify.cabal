Name:               data-reify
Version:            0.5
Synopsis:           Reify a recursive data structure into an explicit graph.
Description:	    'data-reify' provided the ability to turn recursive structures into explicit graphs. 
		    Many (implicitly or explicitly) recursive data structure can be given this ability, via
		    a type class instance. This gives an alternative to using 'Ref' for observable sharing.
		    .
		    Observable sharing in general is unsafe, so we use the IO monad to bound this effect,
		    but can be used safely even with 'unsafePerformIO' if some simple conditions are met.
		    Typically this package will be used to tie the knot with DSL's that depend of
		    observable sharing, like Lava.
 		    .
		    Providing an instance for 'MuRef' is the mechanism for allowing a structure to be 
		    reified into a graph, and several examples of this are provided.
		    .
		    History: 
		    Version 0.1 used unsafe pointer compares.
		    Version 0.2 of 'data-reify' used 'StableName's, and was much faster.
		    Version 0.3 provided two versions of 'MuRef', the mono-typed version,
		    for trees of a single type,
		    and the dynamic-typed version, for trees of different types.
		    Version 0.4 used 'Int' as a synonym for 'Unique' rather than 'Data.Unique'
		    for node ids, by popular demand.
		    Version 0.5 merged the mono-typed and dynamic version again, by using 
		    'DynStableName', an unphantomized version of StableName.
		    .
		    &#169; 2009 Andy Gill; BSD3 license.

Category:            Language, Data, Parsing, Reflection 
License:             BSD3
License-file:        LICENSE
Author:              Andy Gill
Maintainer:          Andy Gill <andygill@ku.edu>
Copyright:           (c) 2009 Andy Gill
Homepage:            http://ittc.ku.edu/~andygill/data-reify.php
Stability:	     alpha
build-type: 	     Simple
Cabal-Version:       >= 1.6

Library
  Build-Depends: base >= 3 && < 4.2, containers
  Exposed-modules:
       Data.Reify,
       Data.Reify.Graph
  Ghc-Options:  -Wall

Executable data-reify-test1
  Build-Depends:  base
  Main-Is:        Test1.hs
  Hs-Source-Dirs: ., test
  buildable: False

Executable data-reify-test2
  Build-Depends:  base
  Main-Is:        Test2.hs
  Hs-Source-Dirs: ., test
  buildable: False

Executable data-reify-test3
  Build-Depends:  base
  Main-Is:        Test3.hs
  Hs-Source-Dirs: ., test
  buildable: False

Executable data-reify-test4
  Build-Depends:  base
  Main-Is:        Test4.hs
  Hs-Source-Dirs: ., test
  buildable: False

Executable data-reify-test5
  Build-Depends:  base
  Main-Is:        Test5.hs
  Hs-Source-Dirs: ., test
  buildable: False

Executable data-reify-test6
  Build-Depends:  base
  Main-Is:        Test6.hs
  Hs-Source-Dirs: ., test
  buildable: False

Executable data-reify-test7
  Build-Depends:  base
  Main-Is:        Test7.hs
  Hs-Source-Dirs: ., test
  buildable: False


package-hashes:
    MD5:8a07bbe81cb1ee5b1fe711ffbc33533a
    SHA1:121a887c860269fcaeced7bfc10544e20c4f9d23
    SHA256:ca501cbde57d3b53b4def9ce3de9ecccc5136fb0575877e98e163668ebe23055
    SHA512:488be9c4cae76fd697b81a7225efde0c1861fe3b323bbdee132fbb7082bdb06e5ee6fdc9a2d2f14c12571b42932483dcbcdbf6c73af943d40e0927b55fff5290
    Skein512_512:6e79c75c5364148c80e8d2664e70aa589647b62ca4124a66755390c77a62262995bbe3702683a35a208935ab57f6b0aee8a1a81261f1a1170b63d833fcfd188a

package-locations:
    https://hackage.haskell.org/package/data-reify-0.5/data-reify-0.5.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/data-reify-0.5.tar.gz

