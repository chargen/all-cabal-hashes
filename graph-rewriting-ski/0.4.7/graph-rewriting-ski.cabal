-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:4113265b83702aff684d4bb959923e2d
    SHA1:fff0792ce6ca731caab304f7f115e3d60d80d16b
    SHA256:bbfec344c022992a13f0f021f8d08b059e6a58866bd626094fe99bb9056cd328
    SHA512:4b7d6fcdb91e0807179b00f61d02e5120a7dcd8c4545fe76a793486f7bb7f52993bd0366a62daee26f8d2b062a368310397eba17587aba801eed7f17a30abb5c
    Skein512_512:90c4cca6167864ba9c72a887c21c04494fb312f344d46b1b173ccc746012dedeeca1baa5f6b4746845902fc08c3f58fd5755bd742b265ce2630a305b38147ee5

package-locations:
    https://hackage.haskell.org/package/graph-rewriting-ski-0.4.7/graph-rewriting-ski-0.4.7.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/graph-rewriting-ski-0.4.7.tar.gz

package-size: 9933
-- END Added by all-cabal-hashes-tool

Name:           graph-rewriting-ski
Version:        0.4.7
Copyright:      (c) 2010, Jan Rochel
License:        BSD3
License-File:   LICENSE
Author:         Jan Rochel
Maintainer:     jan@rochel.info
Stability:      beta
Build-Type:     Simple
Synopsis:       Implementation of the SKI combinators as an interactive graph rewriting system
Description:
	This package serves as an example for how to use the graph-rewriting, graph-rewriting-layout, and graph-rewriting-gl packages to create a graph rewriting system with an interactive, graphical front-end. The sources are well documented and can used as a tutorial for implementing your own rewrite system. Start reading in Graph.hs
Category:       Graphs, Application
Cabal-Version:  >= 1.6
Data-Files:     examples/*.ski examples/combinator_birds/*.ski

Executable:     ski
Main-Is:        Main.hs
Build-Depends:
	base >= 4 && < 4.3,
	base-unicode-symbols >= 0.2 && < 0.3,
	graph-rewriting >= 0.4.4 && < 0.5,
	graph-rewriting-layout >= 0.4.1 && < 0.5,
	graph-rewriting-gl >= 0.6 && < 0.7,
	parsec >= 2.1 && < 2.2,
	GLUT >= 2.2 && < 2.3,
	OpenGL >= 2.4 && < 2.5
Extensions:
	UnicodeSyntax
	FlexibleInstances
	FlexibleContexts
	MultiParamTypeClasses
GHC-Options:    -fno-warn-duplicate-exports -fwarn-unused-imports
Other-Modules:  GL Graph Rules Term
