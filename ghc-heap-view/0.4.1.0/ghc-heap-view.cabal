Name:                ghc-heap-view
Version:             0.4.1.0
Synopsis:            Extract the heap representation of Haskell values and thunks
Description:
  This library provides functions to introspect the Haskell heap, for example
  to investigate sharing and lazy evaluation.
  .
  It has been inspired by (and taken code from) the vacuum package and the GHCi
  debugger, but also allows to investiage thunks and other closures. 
  .
  This package also provides a new GHCi-command, @:printHeap@, which allows you
  to inspect the current heap representation of a value, including sharing and
  cyclic references. To enable the command, you need to load the included ghci
  script or add it to @~/.ghci@, as explained by @cabal install@. Once it is
  set up, you can do this:
  .
  >> let value = "A Value"
  >> let x = (value, if head value == 'A' then value else "", cycle [True, False])
  >> :printHeap x
  >let x1 = _bco
  >    x21 = []
  >in (x1,_bco,_bco)
  >> length (take 100 (show x)) `seq` return () -- evaluate everything
  >> :printHeap x
  >let x1 = "A Value"
  >    x16 = True : False : x16
  >in (x1,x1,x16)
  .
  You can change the maximum recursion depth using @:setPrintHeapDepth@:
  .
  >> :setPrintHeapDepth 3
  >> :printHeap x
  >let x1 = C# 'A' : ... : ...
  >in (x1,x1,True : ... : ...)
  .
  If the view is impaired by blackholes (written @_bh@), running
  @System.Mem.performGC@ usually helps.
  .
  The work on this package has been supported by the Deutsche Telekom Stiftung
  (<http://telekom-stiftung.de>).
License:             BSD3
License-file:        LICENSE
Author:              Joachim Breitner, Dennis Felsing
Maintainer:          Joachim Breitner <mail@joachim-breitner.de>
Copyright:           2012 Joachim Breitner
Category:            Debug, GHC
Build-type:          Custom
Cabal-version:       >=1.14
Extra-source-files:  Demo.hs
data-files:          ghci

Flag prim-supports-any
    Description: The used GHC supports Any as an argument to foreign prim functions (GHC ticket #5931)
    Default: False

Library
  Exposed-modules: GHC.HeapView 
  Default-Language:    Haskell2010
  Build-depends:
    base >= 4.5 && < 4.7,
    containers,
    transformers,
    ghc
  C-Sources: cbits/HeapView.c cbits/HeapViewPrim.cmm
  Hs-source-dirs: src/
  Ghc-options: -Wall

  if flag(prim-supports-any)
    cpp-options: -DPRIM_SUPPORTS_ANY
  
source-repository head
  type:     darcs
  location: http://darcs.nomeata.de/ghc-heap-view/


package-hashes:
    MD5:10a146681da75a9f87c9759773301034
    SHA1:f749b4a65c63d664448adbfce8107b441ff72aaa
    SHA256:21f051f5172763e03496107bbca8232425578ea5d779045a41f60c09842998c5
    SHA512:d02947c73a0cedacf31f70f2d49da44ae5bd5f1f90d5f2f17389f505cc1c29a36e6e02366350a29ca722c077a97adf598fca93c797dcc81d6727db2a1bc4d0a9
    Skein512_512:6c0b3e7a79f3b5db92327a0f62b5eedf98663180ef5ef9ef2464d105da832206877138182a2c361f4556668eade9b2e49a7fcf429ad02138f337eee15e31c880

package-locations:
    https://hackage.haskell.org/package/ghc-heap-view-0.4.1.0/ghc-heap-view-0.4.1.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/ghc-heap-view-0.4.1.0.tar.gz

package-size: 15265
