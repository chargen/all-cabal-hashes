-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:b0f2a1dfd375b40d1cfbad365177c65a
    SHA1:4e987482932f74b5d3b4482aecc837efe44e8079
    SHA256:0cecdbbd6dede8e6b62915d21177cfe3d77ab7540df897dc95b69784715c5103
    SHA512:0165e8f83dde4602f9dfe61f45c5fbe1d82ba54e06133680bf05c40605ca6b1b2aaeb92f4fe6c4ae9efacde3a7ef37d5a2d6b157d4b6f6157fdf2de1c06d73eb
    Skein512_512:6043342aea6ffd7e6fca32c6143f92dc248c1ca0591f97cc26441c3588c98180b880dcc96d089b67b0faa7670dcf9b34b3ee60044d33d34402d800706c098ce0

package-locations:
    https://hackage.haskell.org/package/ghc-heap-view-0.5/ghc-heap-view-0.5.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/ghc-heap-view-0.5.tar.gz

package-size: 21694
-- END Added by all-cabal-hashes-tool

Name:                ghc-heap-view
Version:             0.5
Synopsis:            Extract the heap representation of Haskell values and thunks
Description:
  This library provides functions to introspect the Haskell heap, for example
  to investigate sharing and lazy evaluation.
  .
  It has been inspired by (and taken code from) the vacuum package and the GHCi
  debugger, but also allows to investiage thunks and other closures. 
  .
  This package also provides a new GHCi-command, @:printHeap@, which allows you
  to inspect the current heap representation of a value, including sharing and
  cyclic references. To enable the command, you need to load the included ghci
  script or add it to @~/.ghci@, as explained by @cabal install@. Once it is
  set up, you can do this:
  .
  >> let value = "A Value"
  >> let x = (value, if head value == 'A' then value else "", cycle [True, False])
  >> :printHeap x
  >let x1 = _bco
  >    x21 = []
  >in (x1,_bco,_bco)
  >> length (take 100 (show x)) `seq` return () -- evaluate everything
  >> :printHeap x
  >let x1 = "A Value"
  >    x16 = True : False : x16
  >in (x1,x1,x16)
  .
  You can change the maximum recursion depth using @:setPrintHeapDepth@:
  .
  >> :setPrintHeapDepth 3
  >> :printHeap x
  >let x1 = C# 'A' : ... : ...
  >in (x1,x1,True : ... : ...)
  .
  If the view is impaired by blackholes (written @_bh@), running
  @System.Mem.performGC@ usually helps.
  .
  The work on this package has been supported by the Deutsche Telekom Stiftung
  (<http://telekom-stiftung.de>).
License:             BSD3
License-file:        LICENSE
Author:              Joachim Breitner, Dennis Felsing
Maintainer:          Joachim Breitner <mail@joachim-breitner.de>
Copyright:           2012-2013 Joachim Breitner
Category:            Debug, GHC
Build-type:          Custom
Cabal-version:       >=1.14
Extra-source-files:  Demo.hs
data-files:          ghci

Flag prim-supports-any
    Description: The used GHC supports Any as an argument to foreign prim functions (GHC ticket #5931)
    Default: False

Library
  Default-Language:    Haskell2010
  Exposed-modules:
    GHC.HeapView 
    GHC.AssertNF 
    GHC.Disassembler
    GHC.HeapView.Debug
  Build-depends:
    base >= 4.5 && < 4.7,
    containers,
    transformers,
    template-haskell,
    bytestring,
    binary,
    ghc
  C-Sources: cbits/HeapView.c cbits/HeapViewPrim.cmm
  Hs-source-dirs: src/
  Ghc-options: -Wall

  if flag(prim-supports-any)
    cpp-options: -DPRIM_SUPPORTS_ANY
  
source-repository head
  type:     darcs
  location: http://darcs.nomeata.de/ghc-heap-view/
