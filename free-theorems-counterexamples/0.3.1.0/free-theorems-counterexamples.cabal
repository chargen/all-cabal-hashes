-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:e867857992ff38d39643b024c3031265
    SHA1:fd190ede57552b7af08882b8048f951fb06c7e73
    SHA256:63adb51b031de074b8455c3dfe964652e011c98f74241cf6c72271eaeda605f3
    SHA512:895087455fdfbfb2f43f15766978a5d08710940d92b59dc692f4337f5c520ce9dc3f17259d121930c213fe0ef440082e84bbbe9e5f648597ff72c0774703819e
    Skein512_512:bc2678600c80d669aafcced9ed7efe8a8468c099401607d69d2e34ef4d3f45b0ca5b578d2b34fa0afc6dd9ca036cafc0933fe9760c37796532213d4624bdb7e1

x-package-locations:
    https://hackage.haskell.org/package/free-theorems-counterexamples-0.3.1.0/free-theorems-counterexamples-0.3.1.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/free-theorems-counterexamples-0.3.1.0.tar.gz

x-package-size: 34990
-- END Added by all-cabal-hashes-tool

name:           free-theorems-counterexamples
version:        0.3.1.0
license:        PublicDomain
author:         Daniel Seidel, Joachim Breitner
maintainer:     ds@iai.uni-bonn.de
synopsis:       Automatically Generating Counterexamples to Naive Free Theorems
description:
	This program is to verify (or to put into question) strictness conditions 
	on free theorems that arise if a polymorphic lambda calculus is	enriched by 
	general recursion.
	Given a type the program either returns an instance of the corresponding
	unrestricted free theorem that does not hold and thereby verifies the need
	of the additional restrictions or it returns without finding such an
	instantiation and thereby suggests (but not proves) that the strictness
	conditions are superfluous.
	The underlying algorithm is described in \"Automatically Generating 
	Counterexamples to Naive Free Theorems\" (FLOPS'10) by Daniel Seidel and Janis
	Voigtl√§nder.
	A webinterface for the program is also available at 
	<http://www-ps.iai.uni-bonn.de/cgi-bin/exfind.cgi>.
	.
	Related to this package you may be interested in the online free theorem generator
	at <http://www-ps.iai.uni-bonn.de/ft> that is also available offline via
	<http://hackage.haskell.org/cgi-bin/hackage-scripts/package/free-theorems-webui>.
	Also interesting may be the tool polyseq that generates \"optimal\" free theorems in a 
	polymorphic lambda calculus with selective strictness.
	Polyseq can be downloaded at 
	<http://hackage.haskell.org/cgi-bin/hackage-scripts/package/polyseq>
	but the functionality is as well provided via a webinterface at
	<http://www-ps.iai.uni-bonn.de/cgi-bin/polyseq.cgi>.
	
category:       Language
tested-with:    GHC==7.6.1
build-type:	Simple
cabal-version:  >= 1.2.3

extra-source-files:
    Language/Haskell/FreeTheorems/Variations/CounterExamples/Test/TestItExt.hs
    Language/Haskell/FreeTheorems/Variations/CounterExamples/Test/TestGen.hs
    testcgi.py
    test.sh
    README

library
    build-depends:
        mtl >= 1.0
      , haskell-src >= 1.0
      , haskell-src-exts >= 0.3.9
      , pretty >= 1.0.0.0
      , containers >= 0.1.0.1
      , HUnit >= 1.2
    if impl(ghc >= 6.10)
      build-depends:
          base >= 4
        , syb >= 0.1.0.0
    else
      build-depends:
          base >= 1 && < 4
    exposed-modules:
        Language.Haskell.FreeTheorems.Variations.CounterExamples.ExFind
        Language.Haskell.FreeTheorems.Variations.CounterExamples.Parser.ParseType
        Language.Haskell.FreeTheorems.Variations.CounterExamples.Common.AlgCommon
        Language.Haskell.FreeTheorems.Variations.CounterExamples.Internal.ExFindExtended
    other-modules:
        Language.Haskell.FreeTheorems.Variations.CounterExamples.Internal.FTSync
        Language.Haskell.FreeTheorems.Variations.CounterExamples.Internal.M
        Language.Haskell.FreeTheorems.Variations.CounterExamples.Internal.TimeOut

executable counterexamples.cgi
    main-is:
        counterexamples-cgi.hs
    build-depends:
        xhtml, cgi, utf8-string, free-theorems >= 0.3.1.3

  extensions:
      FlexibleContexts
    , DeriveDataTypeable 
    , ScopedTypeVariables

