-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:039599c0fb65a8f6adf6c5ecb1503499
    SHA1:a10a1fb23d3ffed22c115c2788dbf3ab92e595a0
    SHA256:304092862e88464550e3f600fd48ef802c1b382554c369ce733132229f763dcf
    SHA512:c728b1c05166366096a6b6711d05792408c9d6fce23624ac7702c0ed88d22a9384ac9c3e90b607b0602edcbe6fcad27f18111dfa8d1fb123fa1fea7ca2cd1ae4
    Skein512_512:62635336249872de7d07b098d584db00f5f92549027d27fe13f6aa8a4b12c3b481e9732a9c53e94d3dfc7cf2f8374478f5699fbe69ce82bc2527e6d26fe6a3e9

package-locations:
    https://hackage.haskell.org/package/thorn-0.2/thorn-0.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/thorn-0.2.tar.gz

package-size: 11676
-- END Added by all-cabal-hashes-tool

name: thorn
synopsis: Datatype Manipulation with Template Haskell
description:
    Thorn generates
    .
    * functors from various kinds of datatypes, regardless of arity or variances.
    .
    * folds and unfolds from various kinds of recursive datatypes, including mutually recursive ones.
    .
    A single function of Thorn will give you a lot. Just try it.
category: Data, Generics
version: 0.2
x-revision: 1
stability: experimental
license: BSD3
license-file: LICENSE
copyright: Copyright (C) 2013 Yusuke Matsushita
author: Yusuke Matsushita
maintainer: Yusuke Matsushita <y.skm24t@gmail.com>
homepage: https://github.com/Kinokkory/Thorn
bug-reports: https://github.com/Kinokkory/Thorn/issues
build-type: Simple
cabal-version: >= 1.16

source-repository head
    type: git
    location: git://github.com/Kinokkory/Thorn.git

library
    exposed-modules: Data.Thorn, Data.Thorn.Functor, Data.Thorn.Fold, Data.Thorn.Basic
    other-modules: Data.Thorn.Internal
    build-depends:
        base >= 4 && < 5,
        random > 1,
        template-haskell < 3,
        mtl < 3,
        containers < 1,
        contravariant < 1,
        bifunctors < 5,
        profunctors < 5
    ghc-options: -Wall
    default-language: Haskell2010
