Name:               mediawiki
Version:            0.2.3
License:            BSD3
License-file:       LICENSE
Category:           Web
Synopsis:           Interfacing with the MediaWiki API
Description:        A complete Haskell binding to the MediaWiki API
Author:             Sigbjorn Finne <sof@forkIO.com>
Maintainer:         Sigbjorn Finne <sof@forkIO.com>
Cabal-version:   >= 1.2
build-type: Simple
extra-source-files: README
                    examples/ListCat.hs
                    examples/Util/GetOpts.hs

flag old-base
  description: Old, monolithic base
  default: False
  
library
    Exposed-Modules: MediaWiki.API.Types,
                     MediaWiki.API.Output,
                     MediaWiki.API, 
                     MediaWiki.API.Base, 
                     MediaWiki.API.Utils, 
                     MediaWiki.API.Query.AllCategories,
                     MediaWiki.API.Query.AllCategories.Import,
                     MediaWiki.API.Query.AllImages,
                     MediaWiki.API.Query.AllImages.Import,
                     MediaWiki.API.Query.AllLinks,
                     MediaWiki.API.Query.AllLinks.Import,
                     MediaWiki.API.Query.AllMessages,
                     MediaWiki.API.Query.AllMessages.Import,
                     MediaWiki.API.Query.AllPages,
                     MediaWiki.API.Query.AllPages.Import,
                     MediaWiki.API.Query.AllUsers,
                     MediaWiki.API.Query.AllUsers.Import,
                     MediaWiki.API.Query.BackLinks,
                     MediaWiki.API.Query.BackLinks.Import,
                     MediaWiki.API.Query.Blocks,
                     MediaWiki.API.Query.Blocks.Import,
                     MediaWiki.API.Query.Categories,
                     MediaWiki.API.Query.Categories.Import,
                     MediaWiki.API.Query.CategoryInfo,
                     MediaWiki.API.Query.CategoryInfo.Import,
                     MediaWiki.API.Query.CategoryMembers,
                     MediaWiki.API.Query.CategoryMembers.Import,
                     MediaWiki.API.Query.DeletedRevisions,
                     MediaWiki.API.Query.DeletedRevisions.Import,
                     MediaWiki.API.Query.EmbeddedIn,
                     MediaWiki.API.Query.EmbeddedIn.Import,
                     MediaWiki.API.Query.ExternalLinks
                     MediaWiki.API.Query.ExternalLinks.Import,
                     MediaWiki.API.Query.ExternalURLUsage
                     MediaWiki.API.Query.ExternalURLUsage.Import,
                     MediaWiki.API.Query.ImageInfo,
                     MediaWiki.API.Query.ImageInfo.Import,
                     MediaWiki.API.Query.Images,
                     MediaWiki.API.Query.Images.Import,
                     MediaWiki.API.Query.ImageUsage,
                     MediaWiki.API.Query.ImageUsage.Import,
                     MediaWiki.API.Query.Info,
                     MediaWiki.API.Query.Info.Import,
                     MediaWiki.API.Query.LangLinks,
                     MediaWiki.API.Query.LangLinks.Import,
                     MediaWiki.API.Query.Links,
                     MediaWiki.API.Query.Links.Import,
                     MediaWiki.API.Query.LogEvents,
                     MediaWiki.API.Query.LogEvents.Import,
                     MediaWiki.API.Query.Random,
                     MediaWiki.API.Query.Random.Import,
                     MediaWiki.API.Query.RecentChanges,
                     MediaWiki.API.Query.RecentChanges.Import,
                     MediaWiki.API.Query.Revisions,
                     MediaWiki.API.Query.Revisions.Import,
                     MediaWiki.API.Query.Search,
                     MediaWiki.API.Query.Search.Import,
                     MediaWiki.API.Query.SiteInfo,
                     MediaWiki.API.Query.SiteInfo.Import,
                     MediaWiki.API.Query.Templates,
                     MediaWiki.API.Query.Templates.Import,
                     MediaWiki.API.Query.UserContribs,
                     MediaWiki.API.Query.UserContribs.Import,
                     MediaWiki.API.Query.UserInfo,
                     MediaWiki.API.Query.UserInfo.Import,
                     MediaWiki.API.Query.Users,
                     MediaWiki.API.Query.Users.Import,
                     MediaWiki.API.Query.WatchList,
                     MediaWiki.API.Query.WatchList.Import,
                     MediaWiki.API.Action.Sitematrix,
                     MediaWiki.API.Action.Login,
                     MediaWiki.API.Action.Login.Import,
                     MediaWiki.API.Action.ParamInfo,
                     MediaWiki.API.Action.Parse,
                     MediaWiki.API.Action.Parse.Import,
                     MediaWiki.API.Action.Rollback,
                     MediaWiki.API.Action.Delete,
                     MediaWiki.API.Action.Undelete,
                     MediaWiki.API.Action.Protect,
                     MediaWiki.API.Action.Block,
                     MediaWiki.API.Action.Unblock,
                     MediaWiki.API.Action.Move,
                     MediaWiki.API.Action.Edit,
                     MediaWiki.API.Action.EmailUser,
                     MediaWiki.API.Action.Watch,
                     MediaWiki.API.Action.OpenSearch,
                     MediaWiki.API.Action.FeedWatchlist,
                     MediaWiki.API.Action.ExpandTemplates,
                     MediaWiki.API.Action.ExpandTemplates.Import,
                     MediaWiki.Util.Fetch,
                     MediaWiki.Util.Codec.Percent,
                     MediaWiki.Util.Codec.URLEncoder
    Ghc-Options:     -Wall -O2 
    Build-Depends:   xml, HTTP >= 3001, network, mime, utf8-string
 if flag(old-base)
   Build-Depends: base < 3
 else
   Build-Depends: base >= 4

 if impl(ghc >= 6.10)
    cpp-options:     -DEXTENSIBLE_EXCEPTIONS

executable main {
  if flag(old-base)
   Build-Depends: base < 3
  else
   Build-Depends: base >= 4
  main-is:              Main.hs
  ghc-options:          -Wall -fglasgow-exts
  if impl(ghc >= 6.10)
    cpp-options:     -DEXTENSIBLE_EXCEPTIONS
}

executable listCat {
  build-depends:        pretty
  if flag(old-base)
   Build-Depends: base < 3
  else
   Build-Depends: base >= 4
  main-is:              examples/ListCat.hs
  ghc-options:          -Wall -fglasgow-exts -iexamples
  if impl(ghc >= 6.10)
    CPP-options:     -DEXTENSIBLE_EXCEPTIONS
}


package-hashes:
    MD5:b9f735ac4061258f4c1204d87fef783c
    SHA1:1866a3e153bfcfbd2c657b4b8e8a06e9402d87a4
    SHA256:180b525a7090c9b0c0a15ae4ee90dadfd1b34fc8abdc66c7780173ce979b2fef
    SHA512:6f48d8f855f32077630ce8cd82ed2e2ab771a8f7a391ae12e817d84045a3aab649b36823d9c0662c281e6d682974e8a2d89f909ec46d68cd4fd13ce2ecaa671b
    Skein512_512:047d4644eab34bdc6dff96a1bb538dd8737a9963f5546999b5f9a7381d308010c5ff4a6eadb5e3eb2ebed0b3944ba50c9b2a00fd337fa1cf9ce1c96d01a380cf

package-locations:
    https://hackage.haskell.org/package/mediawiki-0.2.3/mediawiki-0.2.3.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/mediawiki-0.2.3.tar.gz

