-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:13189f9bc984475a389d626e5f050e67
    SHA1:44579f04a5d6cd5e4644b1237bd41327f40ed026
    SHA256:85a3a9a3dc9f51c84c3b340f79c37ab5f223cc1e2a398e62575b3dd1f03048bb
    SHA512:1ede8c8f3850700d49b9ddfc45ad9ffe53577d8cd4458a7770527712ea2134c0a7099b2efb97de23c6b95258282704fa19a74aa3f4c158a4afbe91ccd8b50822
    Skein512_512:67511ef9d3fc18d140f83648bb40718f18346e72170b52edb49f273aa848c6dc6028e984a18329037070eb07b8381f6ad44854e56a1af2921c122148b0f8a9cc

x-package-locations:
    https://hackage.haskell.org/package/bindings-levmar-0.1/bindings-levmar-0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/bindings-levmar-0.1.tar.gz

x-package-size: 74502
-- END Added by all-cabal-hashes-tool

name:          bindings-levmar
version:       0.1
cabal-version: >= 1.6
build-type:    Simple
stability:     experimental
author:        Roel van Dijk & Bas van Dijk
maintainer:    vandijk.roel@gmail.com, v.dijk.bas@gmail.com
copyright:     (c) 2009 Roel van Dijk & Bas van Dijk
license:       OtherLicense
license-file:  LICENSE
category:      numerical
synopsis:      A binding to the C levmar (Levenberg-Marquardt) library
description:   The Levenberg-Marquardt algorithm is an iterative
               technique that finds a local minimum of a function that
               is expressed as the sum of squares of nonlinear
               functions. It has become a standard technique for
               nonlinear least-squares problems and can be thought of
               as a combination of steepest descent and the
               Gauss-Newton method. When the current solution is far
               from the correct one, the algorithm behaves like a
               steepest descent method: slow, but guaranteed to
               converge. When the current solution is close to the
               correct solution, it becomes a Gauss-Newton method.
               .
               Both unconstrained and constrained (under linear
               equations and box constraints) Levenberg-Marquardt
               variants are included.  All functions have Double and
               Float variants.
               .
               See: <http://www.ics.forth.gr/~lourakis/levmar/>
               .
	       Note that the included C library is lightly patched to
	       make it pure. This way the functions can be used inside
	       unsafePerformIO.
	       .
               A note regarding the license:
               .
               All files EXCEPT those in the levmar-2.4 directory fall
               under the BSD3 license. The levmar C library, which is
               bundled with this binding, falls under the GPL. If you
               build a program which is linked with this binding then
               it is also linked with levmar. This means such a
               program can only by distributed under the terms of the
               GPL.


extra-source-files: levmar-2.4/LICENSE
                  , levmar-2.4/*.h
                  , levmar-2.4/*.c
                  , levmar-2.4/*.txt
                  , levmar-2.4/Makefile
                  , levmar-2.4/Makefile.icc
                  , levmar-2.4/Makefile.vc
                  , levmar-2.4/levmar.vcproj
                  , levmar-2.4/matlab/*.m
                  , levmar-2.4/matlab/*.c
                  , levmar-2.4/matlab/*.txt
                  , levmar-2.4/matlab/Makefile
                  , levmar-2.4/matlab/Makefile.w32

source-repository head
  type: darcs
  location: http://code.haskell.org/bindings-levmar

library
  build-depends: base >= 3 && < 4.2
  exposed-modules: Bindings.LevMar
                 , Bindings.LevMar.CurryFriendly
  ghc-options: -Wall -O2
  cc-options: -D_OPENMP
  include-dirs: levmar-2.4
  c-sources:
    levmar-2.4/Axb.c
    levmar-2.4/lm.c
    levmar-2.4/lmbc.c
    levmar-2.4/lmblec.c
    levmar-2.4/lmlec.c
    levmar-2.4/misc.c
  pkgconfig-depends: lapack
