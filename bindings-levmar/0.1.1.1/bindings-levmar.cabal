-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:7b59e2f7775441ea495f7e91e7a8956e
    SHA1:85c2baf88fd30eb6b7d97fbd4c8afbd8086165d5
    SHA256:f7b012a3a1f7cf01668984eb12ca73c54193e5c1be41fc1177389cba2a78a206
    SHA512:cb2269d1da81db48532f6c55f513e928353171abcc686547260c7723fc33d669b50ceff6e64d827efad7a62dd640e7895990237d349636bb93afd5f8294e40b3
    Skein512_512:f28c3ac02860607fefc8b187be69a03dc13a416ef580ff0957289e11538fd96857475d724701a339d2e44e0311763fadcda076a450a2a7dbdc5eb3a0b1e30cfe

package-locations:
    https://hackage.haskell.org/package/bindings-levmar-0.1.1.1/bindings-levmar-0.1.1.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/bindings-levmar-0.1.1.1.tar.gz

package-size: 71663
-- END Added by all-cabal-hashes-tool

name:          bindings-levmar
version:       0.1.1.1
cabal-version: >= 1.6
build-type:    Simple
stability:     experimental
tested-with:   GHC ==6.10.4
author:        Roel van Dijk & Bas van Dijk
maintainer:    vandijk.roel@gmail.com, v.dijk.bas@gmail.com
copyright:     (c) 2009 Roel van Dijk & Bas van Dijk
license:       OtherLicense
license-file:  LICENSE
category:      numerical, FFI
synopsis:      A binding to the C levmar (Levenberg-Marquardt) library
description:   The Levenberg-Marquardt algorithm is an iterative
               technique that finds a local minimum of a function that
               is expressed as the sum of squares of nonlinear
               functions. It has become a standard technique for
               nonlinear least-squares problems and can be thought of
               as a combination of steepest descent and the
               Gauss-Newton method. When the current solution is far
               from the correct one, the algorithm behaves like a
               steepest descent method: slow, but guaranteed to
               converge. When the current solution is close to the
               correct solution, it becomes a Gauss-Newton method.
               .
               Both unconstrained and constrained (under linear
               equations and box constraints) Levenberg-Marquardt
               variants are included.  All functions have Double and
               Float variants.
               .
               See: <http://www.ics.forth.gr/~lourakis/levmar/>
               .
	       Note that the included C library is lightly patched to
	       make it pure. This way the functions can be used inside
	       unsafePerformIO.
	       .
               A note regarding the license:
               .
               All files EXCEPT those in the levmar-2.4 directory fall
               under the BSD3 license. The levmar C library, which is
               bundled with this binding, falls under the GPL. If you
               build a program which is linked with this binding then
               it is also linked with levmar. This means such a
               program can only by distributed under the terms of the
               GPL.

extra-source-files: LICENSE
                  , levmar-2.4/LICENSE
                  , levmar-2.4/*.h
                  , levmar-2.4/*.c
                  , levmar-2.4/*.txt
                  , levmar-2.4/Makefile
                  , levmar-2.4/Makefile.icc
                  , levmar-2.4/Makefile.vc
                  , levmar-2.4/levmar.vcproj
                  , levmar-2.4/matlab/*.m
                  , levmar-2.4/matlab/*.c
                  , levmar-2.4/matlab/*.txt
                  , levmar-2.4/matlab/Makefile
                  , levmar-2.4/matlab/Makefile.w32

flag mkl
  description: Link with Intel's MKL optimized libraries.
  default:     False

flag accelerate
  description: Use the accelerate framework for LAPACK/BLAS on OS X
  default:     False

source-repository head
  type: darcs
  location: http://code.haskell.org/bindings-levmar

library
  build-depends: base >= 3 && < 4.2
  exposed-modules: Bindings.LevMar
                 , Bindings.LevMar.CurryFriendly
  ghc-options: -Wall -O2
  cc-options: -D_OPENMP
  include-dirs: levmar-2.4
  c-sources:
    levmar-2.4/Axb.c
    levmar-2.4/lm.c
    levmar-2.4/lmbc.c
    levmar-2.4/lmblec.c
    levmar-2.4/lmlec.c
    levmar-2.4/misc.c

  if flag(mkl)
    extra-libraries: mkl_lapack mkl_sequential mkl_core
    if arch(x86_64)
      extra-libraries: mkl_intel_lp64
    else
      extra-libraries: mkl_intel
  else
    extra-libraries: lapack

  if flag(accelerate)
    frameworks: Accelerate
