-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:0ce57d7ade07b28a6cc7afd0fdb13338
    SHA1:e476866cb202d21fcd8084580cd9af828a314529
    SHA256:d364b95d3aee48dfedb31cb8998903853d53edd536cf7b3ffdf263476e4cccad
    SHA512:f7f03e4739c0bdd5bff2afc509988f61f4eb06f960b58625a390be087ab0e390d3cc10caa0813075249b12c08793a39096e3657e8c7c48a3d1a5cf3586517274
    Skein512_512:79d1a37ab1a352f89cfad0a1187679fd78923d9378b891051398f64c3386c3cd5950ef5e7718119520d55d775d7429a3b847580251c9469af7693297c29706c3

x-package-locations:
    https://hackage.haskell.org/package/dclabel-eci11-0.3/dclabel-eci11-0.3.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/dclabel-eci11-0.3.tar.gz

x-package-size: 12686
-- END Added by all-cabal-hashes-tool

Name:           dclabel-eci11
Version:        0.3
build-type:     Simple
License:        BSD3
License-File:   LICENSE
Copyright:      (c) 2011 Deian Stefan, David Mazieres, Alejandro Russo
Author:         Deain Stefan, David Mazieres, Alejandro Russo
Maintainer:	Deian Stefan  <deian at cs dot stanford dot edu>,
		Alejandro Russo < russo at chalmers dot se >,
Stability:      experimental
Synopsis:       The Disjunction Category Label Format.
Category:       Security
Cabal-Version:  >=1.6

Extra-source-files:
     Examples/UsingEDSL.hs,
     Examples/Labels.hs,
     Examples/ExamplesDCLabels.hs,
     Tests/Main.hs

Description:
         A package that provides dynamic labels in the form of conjunctions of disjunctions of principals. This package is intended to only be used at the computer science school ECI 2011 (Buenos Aires, Argentina) <http://www.dc.uba.ar/events/eci/2011/index_html>. Please, refer to the official release of dclabels if you plan to use it for other purposes.

        The /DC Label/ (DCLabel) library provides dynamic information
	flow control label format in the form of conjunctions of
	disjunctions of principals. Most code should import module
	"DCLabel.Safe"; trusted code should import "DCLabel.TCB".
	The core functionality of the library is documented in
	"DCLabel.Core", while the small EDSL used to create labels is
	documented in "DCLabel.NanoEDSL". DCLabel was implemented by David
        Mazieres (<http://www.scs.stanford.edu/~dm/>), Deian Stefan
        (<http://www.scs.stanford.edu/~deian/>), and Alejandro Russo
        (<http://www.cse.chalmers.se/~russo/>).

        To obtain the latest experimental source code, run:

        @git clone http:\/\/www.scs.stanford.edu\/~deian\/dclabel.git@

Library 
   Build-depends: base >= 4 && < 5, 
                  pretty > 1.0.1 && < 2,
                  QuickCheck >= 2.1

   Exposed-modules:
       DCLabel.Safe,
       DCLabel.TCB,
       DCLabel.Core, 
       DCLabel.NanoEDSL,
       DCLabel.PrettyShow,
       DCLabel.Secrecy,
       DCLabel.Integrity
