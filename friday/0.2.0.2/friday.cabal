-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:1798bfe7ddb5ab90cf0e434a2abb04ad
    SHA1:7de0db5835969cd1093c6b38037a5bd4bd9e9241
    SHA256:0b283b1f732880e3604711d9f547cc7b24e405fa5db9c947f34b4556fc9759f1
    SHA512:629a8205cba54ad480d70636f205340201484554ff543cd06848f336b24297b74d0aa170210fd3c95b6e659bff26b2b9483c8a2664b8053a88cd01f8ffd62dc9
    Skein512_512:c25309446271cddc96fccf60e1ee26cc1c8f6fa1c4d6e76d42410720476196ad8444efd1efe5d61610a3cd1c077c5536205ba5b83290886cca6b6d4907497bc1

x-package-locations:
    https://hackage.haskell.org/package/friday-0.2.0.2/friday-0.2.0.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/friday-0.2.0.2.tar.gz

x-package-size: 34343
-- END Added by all-cabal-hashes-tool

name:                   friday
--                      +-+------- breaking API changes
--                      | | +----- non-breaking API additions
--                      | | | +--- code changes with no API change
version:                0.2.0.2
synopsis:               A functional image processing library for Haskell.
homepage:               https://github.com/RaphaelJ/friday
license:                LGPL-3
license-file:           LICENSE
author:                 Raphael Javaux <raphaeljavaux[at]gmail.com>
maintainer:             Raphael Javaux <raphaeljavaux[at]gmail.com>

description:            Friday provides functions to manipulate images in a
                        functional way.
                        The library is designed to be fast, generic and
                        type-safe.
                        .
                        Images can be represented in two representations:
                        .
                        * the 'Manifest' representation stores images in Haskell
                        'Vector's ;
                        .
                        * the 'Delayed' representation uses functions to produce
                        images pixels. These images can be combined to produce
                        complex transformations. By some inlining, Haskell
                        compilers are able to produce fast algorithms by
                        removing intermediate structures.
                        .
                        The library currently support four color spaces: RGB,
                        RGBA, HSV and gray-scale images.
                        .
                        Please read our
                        <https://github.com/RaphaelJ/friday/blob/master/README.md README>
                        to get a detailed usage and some examples.

category:               Graphics
stability:              Experimental
build-type:             Simple
cabal-version:          >= 1.10

source-repository       head
    type:               git
    location:           https://github.com/RaphaelJ/friday

library
    exposed-modules:    Vision.Detector.Edge
                        Vision.Histogram
                        Vision.Image
                        Vision.Image.Class
                        Vision.Image.Grey
                        Vision.Image.Grey.Conversion
                        Vision.Image.Grey.Specialize
                        Vision.Image.Grey.Type
                        Vision.Image.Filter
                        Vision.Image.Filter.Internal
                        Vision.Image.HSV
                        Vision.Image.HSV.Conversion
                        Vision.Image.HSV.Specialize
                        Vision.Image.HSV.Type
                        Vision.Image.Interpolate
                        Vision.Image.Mutable
                        Vision.Image.RGBA
                        Vision.Image.RGBA.Conversion
                        Vision.Image.RGBA.Specialize
                        Vision.Image.RGBA.Type
                        Vision.Image.RGB
                        Vision.Image.RGB.Conversion
                        Vision.Image.RGB.Specialize
                        Vision.Image.RGB.Type
                        Vision.Image.Threshold
                        Vision.Image.Transform
                        Vision.Image.Type
                        Vision.Primitive
                        Vision.Primitive.Shape

    ghc-options:        -Wall -O2
    hs-source-dirs:     src/
    default-language:   Haskell2010

    build-depends:      base                    >= 4            && < 5
                      , bytestring              >= 0.10         && < 1
                      , convertible             >= 1            && < 2
                      , deepseq                 >= 1.3          && < 2
                      , primitive               >= 0.5.2.1      && < 0.6
                      , ratio-int               >= 0.1.2        && < 0.2
                      , vector                  >= 0.10.0.1     && < 1
                      , transformers            >= 0.3          && < 0.5

Test-Suite      test
    type:       exitcode-stdio-1.0

    main-is:            Test.hs
    ghc-options:        -Wall -O2 -rtsopts
    hs-source-dirs:     test/
    default-language:   Haskell2010

    build-depends:      base                         >= 4            && < 5
                      , QuickCheck                   >= 2.6          && < 3
                      , friday
                      , test-framework               >= 0.8          && < 0.9
                      , test-framework-quickcheck2   >= 0.3.0.2      && < 0.4
                      , vector                       >= 0.10.0.1     && < 1
