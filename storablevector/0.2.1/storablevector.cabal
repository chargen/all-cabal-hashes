-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:5e5343ac91d4b38f938057053bc3f488
    SHA1:59ceab27319ea9b9f2b3daa153562094c3ddbe88
    SHA256:636e56fd81314f4b0ba077d9e09775fab6cb9f849180351f736338fb6801fe87
    SHA512:c5c4dfc6373941a60a88da4989ee73f2564b764e11a4c26375e3dfbdea767eadf2d32f78c001ecfe488ff5da72c62150ab0ba6a5757d88d59ad3c82f06656ea1
    Skein512_512:fdb63a6dbfa96a14386e2aaecceed2f0d9f41e3ac3587bd696d4e9588f361ee1c6894bb62e716bcd4b609e275bc683c4ed201eace3d91906902efbd20320a8a4

x-package-locations:
    https://hackage.haskell.org/package/storablevector-0.2.1/storablevector-0.2.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/storablevector-0.2.1.tar.gz

x-package-size: 34552
-- END Added by all-cabal-hashes-tool

Name:                storablevector
Version:             0.2.1
Category:            Data
Synopsis:            Fast, packed, strict storable arrays with a list interface like ByteString
Description:
    Fast, packed, strict storable arrays
    with a list interface,
    a chunky lazy list interface with variable chunk size
    and an interface for write access via the @ST@ monad.
    This is much like @bytestring@ and @binary@ but can be used for every 'Foreign.Storable.Storable' type.
    See also packages
        <http://hackage.haskell.org/cgi-bin/hackage-scripts/package/vector>,
        <http://hackage.haskell.org/cgi-bin/hackage-scripts/package/uvector>
    with a similar intention.
License:             BSD3
License-file:        LICENSE
Author:              Spencer Janssen <sjanssen@cse.unl.edu>
Maintainer:          Henning Thielemann <storablevector@henning-thielemann.de>
Homepage:            http://www.haskell.org/haskellwiki/Storable_Vector
Package-URL:         http://code.haskell.org/storablevector
Stability:           Experimental
Build-Type:          Simple
Tested-With:         GHC==6.4.1, GHC==6.8.2
Cabal-Version:       >=1.2

Flag splitBase
  description: Choose the new smaller, split-up base package.

Flag buildTests
  description: Build test executables
  default:     False

Library
  Build-Depends:   mtl >= 1 && <2
  If flag(splitBase)
    Build-Depends: base >= 3
  Else
    Build-Depends: base >= 1.0 && < 2

  Extensions:          CPP, ForeignFunctionInterface
  GHC-Options:         -Wall -funbox-strict-fields
  Hs-Source-Dirs:      ., slow-foreign-ptr

  Exposed-Modules:
    Data.StorableVector
    Data.StorableVector.Base
    Data.StorableVector.Lazy
    Data.StorableVector.ST.Strict
    Data.StorableVector.ST.Lazy

  Other-Modules:
    -- LazySize and LazyVarying have no mature interface so far
    Data.StorableVector.LazySize
    Data.StorableVector.LazyVarying
    -- Cursor has no mature interface so far
    Data.StorableVector.Cursor
    Data.StorableVector.Memory
    Data.StorableVector.Utility



Executable test
  GHC-Options:         -Wall -funbox-strict-fields
  Hs-Source-Dirs:      ., slow-foreign-ptr, tests
  Main-Is:             tests.hs
  Other-Modules:       QuickCheckUtils, Instances
  Build-Depends:       bytestring >= 0.9 && < 0.10, QuickCheck >= 1 && < 2
  Extensions:          CPP, ForeignFunctionInterface
  If flag(splitBase)
    Hs-Source-Dirs:    tests-2
    Build-Depends:     base >= 3, random >= 1.0 && < 1.1
  Else
    Hs-Source-Dirs:    tests-1
    Build-Depends:     base >= 1.0 && < 2
  if !flag(buildTests)
    buildable:         False

Executable speedtest
  GHC-Options:         -Wall -funbox-strict-fields
  Main-Is:             SpeedTestLazy.hs
  Extensions:          CPP, ForeignFunctionInterface
  Hs-Source-Dirs:      ., slow-foreign-ptr, speedtest
  If flag(splitBase)
    Build-Depends:     base >= 3
  Else
    Build-Depends:     base >= 1.0 && < 2
  If !flag(buildTests)
    Buildable:         False
