-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:35eb7cafe37d871f519d7e793f82f4a0
    SHA1:e4ca226dbe47ee9a9c3bd4c2435394bd3ebf9cc2
    SHA256:6067f10e910437d7584688a173be55c512bdb4e8402e4b14014c9e6d5e9d9019
    SHA512:9b63635cdd89d644f81f9e1bc3d975dfb5993f9c874ce97497f238b203092b88a80f368d4fc4c913bad9d57be23c9a1396dba75d289d0c4130ec91468c672731
    Skein512_512:acb13ae946144fdd247db995722e95cc57f1780d516125ebfc9d6fc1186b6bfe1bc65e5d94bbc581912a1c8b790031a57c4329d174815b084ff8c848c66e84f4

x-package-locations:
    https://hackage.haskell.org/package/route-generator-0.4/route-generator-0.4.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/route-generator-0.4.tar.gz

x-package-size: 4297
-- END Added by all-cabal-hashes-tool

name:            route-generator
version:         0.4
cabal-version:   >= 1.8
license:         OtherLicense
license-file:    COPYING
category:        Utility
copyright:       Â© 2012 Stephen Paul Weber
author:          Stephen Paul Weber <singpolyma@singpolyma.net>
maintainer:      Stephen Paul Weber <singpolyma@singpolyma.net>
stability:       experimental
tested-with:     GHC == 7.0.3
synopsis:        Utility to generate routes for use with yesod-routes
homepage:        http://github.com/singpolyma/route-generator
bug-reports:     http://github.com/singpolyma/route-generator/issues
build-type:      Simple
description:
        Most of the defacto Haskell web routing libraries are either linear
        in complexity, or require lots of extra extensions, like Template
        Haskell.
        .
        Luckily, yesod-routes has Yesod.Routes.Dispatch, which is a very clean,
        efficient, and extension-free router.  Writing routes out in code can,
        however, be quite verbose.  This utility is a code generator to produce
        routes compatible with Yesod.Routes.Dispatch from a nice input format.
        .
        Example:
        .
        > GET /       => home
        > GET /post/: => showPost
        > PUT /*      => updateSomething
        .
        > ./routeGenerator -r -m SomeModule routes.txt
        .
        Will generate routes that map the correct HTTP verb (which you should
        pass as a prepended "path segment" to your Dispatch) and path to
        functions imported from the module specified in the second parameter.
        .
        A colon matches any path segment, and passes the matched segment
        through to the specified function, passing each match segment in order.
        The expected type of the segment is inferred from the type of the
        function.  If the segment cannot be parsed as that type, the path does
        not match.  Parsing is done with Web.PathPieces.fromPathPiece.
        .
        An asterisk at the end of the path causes rhHasMulti to be set to True,
        meaning that any path segments after what has been specified will be
        allowed.

extra-source-files:
        README

executable routeGenerator
        main-is: routeGenerator.hs

        build-depends:
                base == 4.*,
                text >= 0.7,
                attoparsec >= 0.10.0.0,
                yesod-routes,
                network

source-repository head
        type:     git
        location: git://github.com/singpolyma/route-generator.git
