-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:512adbfa9a45093b208ec54d13c0f98c
    SHA1:e7fa26d822a7ec97ea466f702852a0fe4b8a1a72
    SHA256:5331ef03e7f9de9393daf1925666a63e6a234637839b34f3974c438d3eb8c893
    SHA512:3f0d4d49df7f62f9ae0a4f93cf651cb7f61cc22eafa3f43fc56ec02fbf1c5fa0006cfb0fc0c3f5ac243bd6cf197bd49e7742821f86a8307d1d84d4ccd0819c20
    Skein512_512:8bd08f5a9fa1cc77d49a9bd71e3de92c92771905a8c5b610a914bc964011e5fa442bc895f21df1fe15072e9ac1733988c9d26f32070e8ed0d115e0dc654c1467

x-package-locations:
    https://hackage.haskell.org/package/route-generator-0.3.1/route-generator-0.3.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/route-generator-0.3.1.tar.gz

x-package-size: 4045
-- END Added by all-cabal-hashes-tool

name:            route-generator
version:         0.3.1
cabal-version:   >= 1.8
license:         OtherLicense
license-file:    COPYING
category:        Utility
copyright:       Â© 2012 Stephen Paul Weber
author:          Stephen Paul Weber <singpolyma@singpolyma.net>
maintainer:      Stephen Paul Weber <singpolyma@singpolyma.net>
stability:       experimental
tested-with:     GHC == 7.0.3
synopsis:        Utility to generate routes for use with yesod-routes
homepage:        http://github.com/singpolyma/route-generator
bug-reports:     http://github.com/singpolyma/route-generator/issues
build-type:      Simple
description:
        Most of the defacto Haskell web routing libraries are either linear
        in complexity, or require lots of extra extensions, like Template
        Haskell.
        .
        Luckily, yesod-routes has Yesod.Routes.Dispatch, which is a very clean,
        efficient, and extension-free router.  Writing routes out in code can,
        however, be quite verbose.  This utility is a code generator to produce
        routes compatible with Yesod.Routes.Dispatch from a nice input format.
        .
        Example:
        .
        > GET /       => home
        > GET /post/: => showPost
        > PUT /*      => updateSomething
        .
        > ./routeGenerator -r -m SomeModule routes.txt
        .
        Will generate routes that map the correct HTTP verb (which you should
        pass as a prepended "path segment" to your Dispatch) and path to
        functions imported from the module specified in the second parameter.
        .
        A colon matches any path segment, and passes the matched segment
        through to the specified function, passing each match segment in order.
        The expected type of the segment is inferred from the type of the
        function.  If the segment cannot be parsed as that type, the path does
        not match.  Parsing is done with Web.PathPieces.fromPathPiece.
        .
        An asterisk at the end of the path causes rhHasMulti to be set to True,
        meaning that any path segments after what has been specified will be
        allowed.

extra-source-files:
        README

executable routeGenerator
        main-is: routeGenerator.hs

        build-depends:
                base == 4.*,
                text >= 0.7,
                attoparsec >= 0.10.0.0,
                yesod-routes

source-repository head
        type:     git
        location: git://github.com/singpolyma/route-generator.git
