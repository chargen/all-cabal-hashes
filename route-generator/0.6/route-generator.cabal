-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:a65dbd068ebdf345cd158d01ff5bbbe6
    SHA1:781d8b7a1a449a9a8491a12e72e149e028bcdd06
    SHA256:9699d940fb017b7ae55b95260f0f0d2f89cd850f9eebfc9501afd709b7ed707d
    SHA512:cdc7873f7ecc642939f2eb9be1138e297bee0b7f2ee2578e50256c5583f8814067a3395edff30a764ae90a875d1118469dfa137aed0dfbf9914ba45cb74df2c8
    Skein512_512:7ca240f75cf7e2381b8e50b3f5a23c8ec5893669baf406e537c80fbcd05ae2c7e7d5644f4a6629dbf1f843e1a0be0eb95ef4b52acfda635456b9f77a713f4dbc

package-locations:
    https://hackage.haskell.org/package/route-generator-0.6/route-generator-0.6.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/route-generator-0.6.tar.gz

package-size: 4513
-- END Added by all-cabal-hashes-tool

name:            route-generator
version:         0.6
cabal-version:   >= 1.8
license:         OtherLicense
license-file:    COPYING
category:        Utility
copyright:       Â© 2012 Stephen Paul Weber
author:          Stephen Paul Weber <singpolyma@singpolyma.net>
maintainer:      Stephen Paul Weber <singpolyma@singpolyma.net>
stability:       experimental
tested-with:     GHC == 7.0.3
synopsis:        Utility to generate routes for use with yesod-routes
homepage:        http://github.com/singpolyma/route-generator
bug-reports:     http://github.com/singpolyma/route-generator/issues
build-type:      Simple
description:
        Most of the defacto Haskell web routing libraries are either linear
        in complexity, or require lots of extra extensions, like Template
        Haskell.
        .
        Luckily, yesod-routes has Yesod.Routes.Dispatch, which is a very clean,
        efficient, and extension-free router.  Writing routes out in code can,
        however, be quite verbose.  This utility is a code generator to produce
        routes compatible with Yesod.Routes.Dispatch from a nice input format.
        .
        Example:
        .
        > GET /       => home
        > GET /post/: => showPost
        > PUT /*      => updateSomething
        .
        > ./routeGenerator -r -m SomeModule routes.txt
        .
        Will generate routes that map the correct HTTP verb (which you should
        pass as a prepended "path segment" to your Dispatch) and path to
        functions imported from the module specified in the second parameter.
        .
        A colon matches any path segment, and passes the matched segment
        through to the specified function, passing each match segment in order.
        The expected type of the segment is inferred from the type of the
        function.  If the segment cannot be parsed as that type, the path does
        not match.  Parsing is done with Web.PathPieces.fromPathPiece.
        .
        An asterisk at the end of the path causes rhHasMulti to be set to True,
        meaning that any path segments after what has been specified will be
        allowed.

extra-source-files:
        README

executable routeGenerator
        main-is: routeGenerator.hs

        build-depends:
                base == 4.*,
                text >= 0.7,
                attoparsec >= 0.10.0.0,
                yesod-routes,
                network

source-repository head
        type:     git
        location: git://github.com/singpolyma/route-generator.git
