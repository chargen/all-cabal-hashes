Name:                monad-control
Version:             0.3.3.1
Synopsis:            Lift control operations, like exception catching, through monad transformers
License:             BSD3
License-file:        LICENSE
Author:              Bas van Dijk, Anders Kaseorg
Maintainer:          Bas van Dijk <v.dijk.bas@gmail.com>
Copyright:           (c) 2011 Bas van Dijk, Anders Kaseorg
Homepage:            https://github.com/basvandijk/monad-control
Bug-reports:         https://github.com/basvandijk/monad-control/issues
Category:            Control
Build-type:          Simple
Cabal-version:       >= 1.6
Description:
  This package defines the type class @MonadBaseControl@, a subset of
  @MonadBase@ into which generic control operations such as @catch@ can be
  lifted from @IO@ or any other base monad. Instances are based on monad
  transformers in @MonadTransControl@, which includes all standard monad
  transformers in the @transformers@ library except @ContT@.
  .
  See the @lifted-base@ package which uses @monad-control@ to lift @IO@
  operations from the @base@ library (like @catch@ or @bracket@) into any monad
  that is an instance of @MonadBase@ or @MonadBaseControl@.
  .
  Note that this package is a rewrite of Anders Kaseorg's @monad-peel@
  library. The main difference is that this package provides CPS style operators
  and exploits the @RankNTypes@ and @TypeFamilies@ language extensions to
  simplify and speedup most definitions.

extra-source-files:  README.markdown, NEWS

--------------------------------------------------------------------------------

source-repository head
  type:     git
  location: git://github.com/basvandijk/monad-control.git

--------------------------------------------------------------------------------

Flag instanceST
  Description:
    If enabled this package will export MonadBaseControl instances for the lazy
    and strict ST monad. If disabled these instances are only exported when base
    >= 4.4. If enabled it is required that the transformer-base package exports
    MonadBase instances for ST. It will do this by default.
  Default: True

Library
  if flag(instanceST)
    CPP-options: -DINSTANCE_ST

  Exposed-modules: Control.Monad.Trans.Control

  Build-depends: base                 >= 3     && < 5
               , transformers         >= 0.2   && < 0.5
               , transformers-base    >= 0.4.4 && < 0.5
               , transformers-compat  >= 0.3   && < 0.5

  Ghc-options: -Wall


package-hashes:
    MD5:74283c1d55bea573895d446518136ff5
    SHA1:ddd269c8dd0ee794b27612cc89365132838333a7
    SHA256:5f3c41454b1e394f28f1ceb2f0307676d1a02dacff205c28523f64913e90640b
    SHA512:f7768f1d0fc2aed697832d656e896e501419329fb35769f3328ddfab9eed736ebf6d6c7416a51e3e08946bb26b0267bbeb9471c90ef10817e491bf5a3412533e
    Skein512_512:7b20698901e44e924885f246ac1f4b88ea08797d96df5cbad03cfee56390727dc40c6b13b689ed92420df5500d05534494cf4fae2beadbf001ba2ecdfd58ffab

package-locations:
    https://hackage.haskell.org/package/monad-control-0.3.3.1/monad-control-0.3.3.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/monad-control-0.3.3.1.tar.gz

