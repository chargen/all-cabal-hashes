Name:                monad-control
Version:             0.3.2.3
Synopsis:            Lift control operations, like exception catching, through monad transformers
License:             BSD3
License-file:        LICENSE
Author:              Bas van Dijk, Anders Kaseorg
Maintainer:          Bas van Dijk <v.dijk.bas@gmail.com>
Copyright:           (c) 2011 Bas van Dijk, Anders Kaseorg
Homepage:            https://github.com/basvandijk/monad-control
Bug-reports:         https://github.com/basvandijk/monad-control/issues
Category:            Control
Build-type:          Simple
Cabal-version:       >= 1.6
Description:
  This package defines the type class @MonadBaseControl@, a subset of
  @MonadBase@ into which generic control operations such as @catch@ can be
  lifted from @IO@ or any other base monad. Instances are based on monad
  transformers in @MonadTransControl@, which includes all standard monad
  transformers in the @transformers@ library except @ContT@.
  .
  See the @lifted-base@ package which uses @monad-control@ to lift @IO@
  operations from the @base@ library (like @catch@ or @bracket@) into any monad
  that is an instance of @MonadBase@ or @MonadBaseControl@.
  .
  Note that this package is a rewrite of Anders Kaseorg's @monad-peel@
  library. The main difference is that this package provides CPS style operators
  and exploits the @RankNTypes@ and @TypeFamilies@ language extensions to
  simplify and speedup most definitions.

extra-source-files:  README.markdown, NEWS

--------------------------------------------------------------------------------

source-repository head
  type:     git
  location: git://github.com/basvandijk/monad-control.git

--------------------------------------------------------------------------------

Flag instanceST
  Description:
    If enabled this package will export MonadBaseControl instances for the lazy
    and strict ST monad. If disabled these instances are only exported when base
    >= 4.4. If enabled it is required that the transformer-base package exports
    MonadBase instances for ST. It will do this by default.
  Default: True

Library
  if flag(instanceST)
    CPP-options: -DINSTANCE_ST

  Exposed-modules: Control.Monad.Trans.Control

  Build-depends: base                 >= 3     && < 5
               , base-unicode-symbols >= 0.1.1 && < 0.3
               , transformers         >= 0.2   && < 0.4
               , transformers-base    >= 0.4.1 && < 0.5

  Ghc-options: -Wall


package-hashes:
    MD5:ec5b1e679b97ceb04ec225b99a835925
    SHA1:081925e5fba83e9b24f6d28c174258693b928db6
    SHA256:9cf2580051a16e53d1a1771e2c9e623919534904327c209abfd2f3a83f6663ba
    SHA512:7b5fb9721628714c128572c737b006c9dbb9bd481972f07d4e13bd044b20a23b50abbb2e62dde7bc8d8ad286844975841f7de29773b46e0af5e36e71f743f3d9
    Skein512_512:cfee02601fe5464dd607a5e550a26b85f73db6c74d2be27d2e714247a586785aa6ff014359df71bf142fd1085ab7c5143614c74b9dd195d8f02d752aae78438e

package-locations:
    https://hackage.haskell.org/package/monad-control-0.3.2.3/monad-control-0.3.2.3.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/monad-control-0.3.2.3.tar.gz

