Name:                monad-control
Version:             0.3.3.0
Synopsis:            Lift control operations, like exception catching, through monad transformers
License:             BSD3
License-file:        LICENSE
Author:              Bas van Dijk, Anders Kaseorg
Maintainer:          Bas van Dijk <v.dijk.bas@gmail.com>
Copyright:           (c) 2011 Bas van Dijk, Anders Kaseorg
Homepage:            https://github.com/basvandijk/monad-control
Bug-reports:         https://github.com/basvandijk/monad-control/issues
Category:            Control
Build-type:          Simple
Cabal-version:       >= 1.6
Description:
  This package defines the type class @MonadBaseControl@, a subset of
  @MonadBase@ into which generic control operations such as @catch@ can be
  lifted from @IO@ or any other base monad. Instances are based on monad
  transformers in @MonadTransControl@, which includes all standard monad
  transformers in the @transformers@ library except @ContT@.
  .
  See the @lifted-base@ package which uses @monad-control@ to lift @IO@
  operations from the @base@ library (like @catch@ or @bracket@) into any monad
  that is an instance of @MonadBase@ or @MonadBaseControl@.
  .
  Note that this package is a rewrite of Anders Kaseorg's @monad-peel@
  library. The main difference is that this package provides CPS style operators
  and exploits the @RankNTypes@ and @TypeFamilies@ language extensions to
  simplify and speedup most definitions.

extra-source-files:  README.markdown, NEWS

--------------------------------------------------------------------------------

source-repository head
  type:     git
  location: git://github.com/basvandijk/monad-control.git

--------------------------------------------------------------------------------

Flag instanceST
  Description:
    If enabled this package will export MonadBaseControl instances for the lazy
    and strict ST monad. If disabled these instances are only exported when base
    >= 4.4. If enabled it is required that the transformer-base package exports
    MonadBase instances for ST. It will do this by default.
  Default: True

Library
  if flag(instanceST)
    CPP-options: -DINSTANCE_ST

  Exposed-modules: Control.Monad.Trans.Control

  Build-depends: base                 >= 3     && < 5
               , transformers         >= 0.2   && < 0.5
               , transformers-base    >= 0.4.2 && < 0.5

  Ghc-options: -Wall


package-hashes:
    MD5:e32491e2699a7160ea16a4114bf4c8b3
    SHA1:e373d53c8632b9ab03bec889b4193b2b3bdeddfd
    SHA256:ef44c9943760f2120eb450182852d6150390daa2de4b87e9dda9591e89714e6e
    SHA512:734ca14baea74f9bd6f3603dc84426bd6d79ae23998ffcce5c8b994dfa8d58b8a573e7b0f68f7eaab07163c8806d8d5f95160f0439cc5fbd07b9509c84e4ef8a
    Skein512_512:603cbbb100ea2a236679952d6f863345bcbebee78ce188cd4b46a266e5a20c190be0e4f0a4a51244ac996ea4e2a9141b7b995cd598e34f0116489017fa10d45b

package-locations:
    https://hackage.haskell.org/package/monad-control-0.3.3.0/monad-control-0.3.3.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/monad-control-0.3.3.0.tar.gz

package-size: 10518
