-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:0bace1f622bbc5eddd9b592a1c7e0467
    SHA1:9e95735a9cf05b179a2186a7094d958634631523
    SHA256:6369911e009c0210a0286f3f440e178cc661612c9895fa35e18f7b3ed8819a15
    SHA512:b8f4f1cd3a62dcd690937bf0cc8a8e0458e8f215c3274b1949f2e7dc49b276ebc8882f168bccb63e6a226afb8ccd4c3493afb7ebeed6c827c1e01f44861ba2ac
    Skein512_512:537c89f9b2498b37bf7976f01f444ff5cd7279e70247ab30d09b51e879605d9e2dbd091fd4753cf1c21c7127b9ca7e337b7dd43077f5f9953ada4686a918ee02

package-locations:
    https://hackage.haskell.org/package/GPipe-1.1.6/GPipe-1.1.6.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/GPipe-1.1.6.tar.gz

package-size: 29420
-- END Added by all-cabal-hashes-tool

name: GPipe
version: 1.1.6
cabal-version: >= 1.2.3
build-type: Simple
license: BSD3
license-file: ""
copyright: Tobias Bexelius
maintainer: Tobias Bexelius
build-depends: containers -any, mtl -any, list-tries -any,
               GLUT >=2.2.2.0, OpenGL >=2.4.0.1,
               Boolean == 0.0.1, Vec == 0.9.6, Vec-Boolean >= 1.0.2, base >= 4 && < 5
stability: Experimental
homepage: http://www.haskell.org/haskellwiki/GPipe
package-url: http://hackage.haskell.org/package/GPipe
bug-reports: mailto:tobias_bexelius@hotmail.com
synopsis: A functional graphics API for programmable GPUs
description: GPipe models the entire graphics pipeline in a purely functional, immutable and typesafe way. It is built on top of the programmable pipeline (i.e. non-fixed function) of
             OpenGL 2.1 and uses features such as vertex buffer objects (VBO's), texture objects and GLSL shader code synthetisation to create fast graphics programs. Buffers,
             textures and shaders are cached internally to ensure fast framerate, and GPipe is also capable of managing multiple windows and contexts. By creating your own
             instances of GPipes classes, it's possible to use additional datatypes on the GPU.
             .
             You'll need full OpenGL 2.1 support, including GLSL 1.20 to use GPipe. Thanks to OpenGLRaw, you may still build GPipe programs on machines lacking this support.
category: Graphics
author: Tobias Bexelius
tested-with: GHC ==6.10.3
data-files:
data-dir: ""
extra-source-files:
extra-tmp-files:
exposed-modules: Graphics.GPipe Graphics.GPipe.Format
                 Graphics.GPipe.FrameBuffer Graphics.GPipe.Stream
                 Graphics.GPipe.Texture Graphics.GPipe.Stream.Fragment
                 Graphics.GPipe.Stream.Primitive
exposed: True
buildable: True
build-tools:
cpp-options:
cc-options:
ld-options:
pkgconfig-depends:
frameworks:
c-sources:
extensions: ParallelListComp MultiParamTypeClasses
            NoMonomorphismRestriction ScopedTypeVariables FlexibleContexts
            FlexibleInstances EmptyDataDecls GeneralizedNewtypeDeriving
            TypeFamilies TypeOperators
extra-libraries:
extra-lib-dirs:
includes:
install-includes:
include-dirs:
hs-source-dirs: src
other-modules: Formats GPUStream InputAssembler OutputMerger
               Rasterizer Resources Shader Textures
ghc-prof-options:
ghc-shared-options:
ghc-options:
hugs-options:
nhc98-options:
jhc-options: