-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:2b97ed53cef55bdf3d6747b18f1fa422
    SHA1:46fa34afe0f7e786d48639547d29a044809f6526
    SHA256:d452f75c732d296d1469085003f518f2afe99e5af024b570bc8e245fe2fda39f
    SHA512:fae77287382fd4d556ffd0848a4a31bc7f8406b4c4eac900c621301104138747408c37a494e230137257b6468f21a68ab30213aff5dccfaf8e81e4d7d76325b6
    Skein512_512:e10c41aa967eb5bffd60688a76db93a2eed059f1b2ddd6e632641c03ae92c78db9b99ba8eb3bc8a0a091ab7f6f534537226bba7d72f439119d936f014377a623

x-package-locations:
    https://hackage.haskell.org/package/GPipe-1.1.4/GPipe-1.1.4.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/GPipe-1.1.4.tar.gz

x-package-size: 29323
-- END Added by all-cabal-hashes-tool

name: GPipe
version: 1.1.4
cabal-version: >= 1.2.3
build-type: Simple
license: BSD3
license-file: ""
copyright: Tobias Bexelius
maintainer: Tobias Bexelius
build-depends: containers -any, mtl -any, list-tries -any,
               GLUT >=2.2.2.0, OpenGL >=2.4.0.1,
               Boolean == 0.0.1, Vec == 0.9.6, Vec-Boolean == 1.0.1, base == 4.1.0.0
stability: Experimental
homepage: http://www.haskell.org/haskellwiki/GPipe
package-url: http://hackage.haskell.org/package/GPipe
bug-reports: mailto:tobias_bexelius@hotmail.com
synopsis: A functional graphics API for programmable GPUs
description: GPipe models the entire graphics pipeline in a purely functional, immutable and typesafe way. It is built on top of the programmable pipeline (i.e. non-fixed function) of
             OpenGL 2.1 and uses features such as vertex buffer objects (VBO's), texture objects and GLSL shader code synthetisation to create fast graphics programs. Buffers,
             textures and shaders are cached internally to ensure fast framerate, and GPipe is also capable of managing multiple windows and contexts. By creating your own
             instances of GPipes classes, it's possible to use additional datatypes on the GPU.
             .
             You'll need full OpenGL 2.1 support, including GLSL 1.20 to use GPipe. Thanks to OpenGLRaw, you may still build GPipe programs on machines lacking this support.
category: Graphics
author: Tobias Bexelius
tested-with: GHC ==6.10.3
data-files:
data-dir: ""
extra-source-files:
extra-tmp-files:
exposed-modules: Graphics.GPipe Graphics.GPipe.Format
                 Graphics.GPipe.FrameBuffer Graphics.GPipe.Stream
                 Graphics.GPipe.Texture Graphics.GPipe.Stream.Fragment
                 Graphics.GPipe.Stream.Primitive
exposed: True
buildable: True
build-tools:
cpp-options:
cc-options:
ld-options:
pkgconfig-depends:
frameworks:
c-sources:
extensions: ParallelListComp MultiParamTypeClasses
            NoMonomorphismRestriction ScopedTypeVariables FlexibleContexts
            FlexibleInstances EmptyDataDecls GeneralizedNewtypeDeriving
            TypeFamilies TypeOperators
extra-libraries:
extra-lib-dirs:
includes:
install-includes:
include-dirs:
hs-source-dirs: src
other-modules: Formats GPUStream InputAssembler OutputMerger
               Rasterizer Resources Shader Textures
ghc-prof-options:
ghc-shared-options:
ghc-options:
hugs-options:
nhc98-options:
jhc-options: