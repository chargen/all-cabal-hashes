-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:85509c1b35a13255150cfb7b057f5b15
    SHA1:b42edb1d66e372c366b4eb4ad19b5a68eaa74e1e
    SHA256:32153540a68ef13b4e18ac7db9fe3d3ed0d7891566485124d3fca42accc66eb9
    SHA512:8f7daf85192e698392616d50483dee875fd56ad39ed2c426c001b2750d3856e1abb9ecae290485abbef16f866342bc8d3026101fbfeddfdfb312306d4dc7c12a
    Skein512_512:a9eb87dd30549cfcf644dfdf632e9b4f977673a15e831543d6fb690b18298425ee4790091a869b69845ffd3443f720961653c56ecfa78a5a6a30d3848598ebbe

x-package-locations:
    https://hackage.haskell.org/package/GPipe-1.2.1/GPipe-1.2.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/GPipe-1.2.1.tar.gz

x-package-size: 29509
-- END Added by all-cabal-hashes-tool

name: GPipe
version: 1.2.1
cabal-version: >= 1.2.3
build-type: Simple
license: BSD3
copyright: Tobias Bexelius
maintainer: Tobias Bexelius
                 
stability: Experimental
homepage: http://www.haskell.org/haskellwiki/GPipe
package-url: http://hackage.haskell.org/package/GPipe
bug-reports: mailto:tobias_bexelius@hotmail.com
synopsis: A functional graphics API for programmable GPUs
description: GPipe models the entire graphics pipeline in a purely functional, immutable and typesafe way. It is built on top of the programmable pipeline (i.e. non-fixed function) of
             OpenGL 2.1 and uses features such as vertex buffer objects (VBO's), texture objects and GLSL shader code synthetisation to create fast graphics programs. Buffers,
             textures and shaders are cached internally to ensure fast framerate, and GPipe is also capable of managing multiple windows and contexts. By creating your own
             instances of GPipes classes, it's possible to use additional datatypes on the GPU.
             .
             You'll need full OpenGL 2.1 support, including GLSL 1.20 to use GPipe. Thanks to OpenGLRaw, you may still build GPipe programs on machines lacking this support.
             .
             Note on installation: If you have cabal installed list-tries with flag containers03 (you should) then use the same flag when installing GPipe. This flag is false by default since it's
             false for list-tries as well, and I want Hackage to be able to build it.
             
category: Graphics
author: Tobias Bexelius

Flag containers03
   Default: False

Library
    if flag(containers03)
        build-depends: containers >= 0.3 && < 0.4, 
                       mtl -any, 
                       list-tries >= 0.1 && < 0.2,
                       GLUT ==2.2.2.0,
                       OpenGL ==2.4.0.1,
                       Boolean == 0.0.1,
                       Vec == 0.9.7, 
                       Vec-Boolean == 1.0.3,
                       base >= 3 && < 5
    else
        build-depends: containers >= 0.2 && < 0.3,
                       mtl -any, 
                       list-tries >= 0.1 && < 0.2,
                       GLUT ==2.2.2.0,
                       OpenGL ==2.4.0.1,
                       Boolean == 0.0.1,
                       Vec == 0.9.7, 
                       Vec-Boolean == 1.0.3,
                       base >= 3 && < 5
                       
    exposed-modules: Graphics.GPipe
                     Graphics.GPipe.Stream
                     Graphics.GPipe.Stream.Primitive
                     Graphics.GPipe.Stream.Fragment
                     Graphics.GPipe.FrameBuffer
                     Graphics.GPipe.Texture
                     Graphics.GPipe.Format
    other-modules: Formats 
                   GPUStream 
                   InputAssembler 
                   OutputMerger
                   Rasterizer 
                   Resources 
                   Shader 
                   Textures
    extensions: ParallelListComp
                MultiParamTypeClasses
                NoMonomorphismRestriction 
                ScopedTypeVariables 
                FlexibleContexts
                FlexibleInstances 
                EmptyDataDecls 
                GeneralizedNewtypeDeriving
                TypeFamilies 
                TypeOperators
    hs-source-dirs: src
