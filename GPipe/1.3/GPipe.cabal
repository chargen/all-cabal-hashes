-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:e8f742ca4c4c35252ea874ef6b28ec65
    SHA1:f0ef4a9124d784160fb834adca90359819dac587
    SHA256:cb8ea32c54de575bf4df055becdf8fca936d1fb6d4d7958e4be044eab3cc16b9
    SHA512:4378b1c08faf2ec9b12d85d69a273b75a946e5499d382c3cd67788e1173ee578a6690d7e41a47234292bfc8e5ef88716a20ef7513afe62154258946bc7c38057
    Skein512_512:3fd2783977ac1deeab0b16f00cfa71bf83979500d6deeab26c75a35f7e3c1a65efb5f7e5d30dabeb9c496a338bb8b70357bb56d1759cd11da894d10be7964b78

x-package-locations:
    https://hackage.haskell.org/package/GPipe-1.3/GPipe-1.3.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/GPipe-1.3.tar.gz

x-package-size: 29476
-- END Added by all-cabal-hashes-tool

name: GPipe
version: 1.3
cabal-version: >= 1.2.3
build-type: Simple
license: BSD3
copyright: Tobias Bexelius
maintainer: Tobias Bexelius
                 
stability: Experimental
homepage: http://www.haskell.org/haskellwiki/GPipe
package-url: http://hackage.haskell.org/package/GPipe
bug-reports: mailto:tobias_bexelius@hotmail.com
synopsis: A functional graphics API for programmable GPUs
description: GPipe models the entire graphics pipeline in a purely functional, immutable and typesafe way. It is built on top of the programmable pipeline (i.e. non-fixed function) of
             OpenGL 2.1 and uses features such as vertex buffer objects (VBO's), texture objects and GLSL shader code synthetisation to create fast graphics programs. Buffers,
             textures and shaders are cached internally to ensure fast framerate, and GPipe is also capable of managing multiple windows and contexts. By creating your own
             instances of GPipes classes, it's possible to use additional datatypes on the GPU.
             .
             You'll need full OpenGL 2.1 support, including GLSL 1.20 to use GPipe. Thanks to OpenGLRaw, you may still build GPipe programs on machines lacking this support.
             .
             Note on installation: If you have cabal installed list-tries with flag containers03 (you should) then use the same flag when installing GPipe. This flag is false by default since it's
             false for list-tries as well, and I want Hackage to be able to build it.
             
category: Graphics
author: Tobias Bexelius

Flag containers03
   Default: False

Library
    build-depends: containers >= 0.3 && < 0.4, 
                    mtl -any, 
                    list-tries >= 0.4 && < 0.5,
                    GLUT ==2.2.2.0,
                    OpenGL ==2.4.0.1,
                    Boolean == 0.0.1,
                    Vec == 0.9.7, 
                    Vec-Boolean == 1.0.3,
                    base >= 3 && < 5
                       
    exposed-modules: Graphics.GPipe
                     Graphics.GPipe.Stream
                     Graphics.GPipe.Stream.Primitive
                     Graphics.GPipe.Stream.Fragment
                     Graphics.GPipe.FrameBuffer
                     Graphics.GPipe.Texture
                     Graphics.GPipe.Format
    other-modules: Formats 
                   GPUStream 
                   InputAssembler 
                   OutputMerger
                   Rasterizer 
                   Resources 
                   Shader 
                   Textures
    extensions: ParallelListComp
                MultiParamTypeClasses
                NoMonomorphismRestriction 
                ScopedTypeVariables 
                FlexibleContexts
                FlexibleInstances 
                EmptyDataDecls 
                GeneralizedNewtypeDeriving
                TypeFamilies 
                TypeOperators
    hs-source-dirs: src
