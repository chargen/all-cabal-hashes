-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:1683467e04e9d765d59ed9cf06d96686
    SHA1:b8d29a5baf8e2eeab32e4c53b179355edc6043ca
    SHA256:08504791bc16d1e8fa17f4826304740740df8078f033bdc4f8a7636d23948c20
    SHA512:7414f033424623ea521cf1a1e388b4e32613a0b341ce49288903a7789bcf0991c6bf8239319fb1053880835633f400478df7b842d01e53552ce7202a16baa69f
    Skein512_512:1008deaaf774b87e680f70a069c8271a12f4797c34b1042c030058d3d03530a217e79da250716bcc57d003784cb0f2c486a55ce2cd058d89ac924706f5872ea4

package-locations:
    https://hackage.haskell.org/package/SafeSemaphore-0.7.0/SafeSemaphore-0.7.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/SafeSemaphore-0.7.0.tar.gz

package-size: 14353
-- END Added by all-cabal-hashes-tool

Name:                SafeSemaphore
Version:             0.7.0
x-revision: 1
Synopsis:            Much safer replacement for QSemN, QSem, and SampleVar
Description:         This provides a much safer semaphore than the QSem in base.  Performance has not been compared.  In the source is a tests/TestKillSem.hs executable (run by cabal test) that shows the problem with QSem.
Homepage:            http://hackage.haskell.org/package/SafeSemaphore
License:             BSD3
License-file:        LICENSE
Author:              Chris Kuklewicz <haskell@list.mightyreason.com>
Maintainer:          Chris Kuklewicz <haskell@list.mightyreason.com>
Category:            Concurrency
Build-type:          Simple
Cabal-version:       >=1.8

Library
  Hs-Source-Dirs: src
  ghc-options:  -Wall -O2 -funbox-strict-fields
  Exposed-modules: Control.Concurrent.MSem
                   Control.Concurrent.MSemN
                   Control.Concurrent.MSampleVar
                   Control.Concurrent.FairRWLock
  Build-depends:  base < 4.7, containers

Test-Suite TestSafeSemaphore
  type:          exitcode-stdio-1.0
  main-is:       tests/TestKillSem.hs
  build-depends: base < 5, SafeSemaphore, HUnit

