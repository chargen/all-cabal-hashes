-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:e09688079a234f0ee647d38917426342
    SHA1:e6d3a8aa8cc92a37614452e30e693efb975c51b1
    SHA256:a303b795f0a5416a3a18a2322138e3f35b7416d27e2a43a3fe85aceecac400e9
    SHA512:b84445fe5f398bb58a3029f7e7b83d1bdf2928dbb032a1fa7a288a9b4dee2b387a55a67730648ccf08abfe8bdaea27c091bfbdf16cc06924a3ae64da79328c86
    Skein512_512:6e2b94017d2c0e17589c08498c5519121f93091ded5ba58d447cd8dbc0fd314a4f472bda4632c87b2cf60fe732d61f95c1bf7197a4ed04baf74cb761132dd264

package-locations:
    https://hackage.haskell.org/package/optimization-0.1.4/optimization-0.1.4.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/optimization-0.1.4.tar.gz

package-size: 12697
-- END Added by all-cabal-hashes-tool

name:          optimization
category:      Math
version:       0.1.4
license:       BSD3
cabal-version: >= 1.10
license-file:  LICENSE
author:        Ben Gamari
maintainer:    Ben Gamari <bgamari@gmail.com>
stability:     experimental
homepage:      http://github.com/bgamari/optimization
bug-reports:   http://github.com/bgamari/optimization/issues
copyright:     Copyright (C) 2013 Ben Gamari
synopsis:      Numerical optimization
description:
  These are a set of implementations of various numerical optimization
  methods in Haskell. Note that these implementations were originally
  written as part of a class project; while at one point they worked
  no attention has been given to numerical stability or the many other
  potential difficulties of implementing robust numerical
  methods. That being said, they should serve to succinctly illustrate
  a number of optimization techniques from the modern optimization
  literature.
  .
  Those seeking a high-level overview of some of these methods are
  referred to Stephen Wright's excellent tutorial from NIPS 2010
  <http://videolectures.net/nips2010_wright_oaml/>. A deeper
  introduction can be found in Boyd and Vandenberghe's *Complex
  Optimization* which available freely online.

build-type:    Custom

extra-source-files:
  .ghci
  .gitignore
  .travis.yml
  .vim.custom
  CHANGELOG.markdown
  HLint.hs
  README.markdown
  travis/cabal-apt-install
  travis/config

source-repository head
  type: git
  location: git://github.com/bgamari/optimization.git

library
  hs-source-dirs: src
  default-language: Haskell2010
  ghc-options: -Wall -fno-warn-type-defaults
  build-depends:
    base                >= 4.4          && < 5,
    vector              >= 0.10         && < 1.0,
    ad                  >= 3.4          && < 4.0,
    linear              >= 1.0          && < 2.0,
    semigroupoids       >= 3.0          && < 5.0,
    distributive        >= 0.3          && < 0.5

  exposed-modules:
    Optimization.LineSearch
    Optimization.LineSearch.ConjugateGradient
    Optimization.LineSearch.BarzilaiBorwein
    Optimization.LineSearch.SteepestDescent
    Optimization.LineSearch.MirrorDescent
    Optimization.LineSearch.BFGS
    Optimization.TrustRegion.Nesterov1983
    Optimization.TrustRegion.Fista
    Optimization.TrustRegion.Newton
    Optimization.Constrained.Penalty
    Optimization.Constrained.ProjectedSubgradient


test-suite doctests
  type:    exitcode-stdio-1.0
  main-is: doctests.hs
  default-language: Haskell2010
  build-depends:
    base,
    directory >= 1.0,
    doctest >= 0.9.1,
    filepath
  ghc-options: -Wall -threaded
  if impl(ghc<7.6.1)
    ghc-options: -Werror
  hs-source-dirs: tests
