-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:e1b04ba74e981ee1b938b5dc3ae6acb2
    SHA1:d059758a37ecbc7540215e33ec6f5639be40e6f7
    SHA256:78ce1ab5dc829d1a94039a85ab872a7c51c00ba6dc584aa007c869137e7d3348
    SHA512:fe182eb7e8db1e7bb4104bf957651a25071e062a669ff73cdd931012c5575d91e4165448268c1bb2ebb87d9c9e03754833a81e3b7efb4c5edbb44c7634e147e3
    Skein512_512:45d2ab5b17ec4e60de1772a6f2a52c8d3e5d023ba2bb597d6bf26ff1d76cf444615c27862ed1fe53a48a58cfce5b91b7c89f74c234ab348e5b723d3e5276bbba

package-locations:
    https://hackage.haskell.org/package/optimization-0.1.3/optimization-0.1.3.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/optimization-0.1.3.tar.gz

package-size: 12698
-- END Added by all-cabal-hashes-tool

name:          optimization
category:      Math
version:       0.1.3
license:       BSD3
cabal-version: >= 1.10
license-file:  LICENSE
author:        Ben Gamari
maintainer:    Ben Gamari <bgamari@gmail.com>
stability:     experimental
homepage:      http://github.com/bgamari/optimization
bug-reports:   http://github.com/bgamari/optimization/issues
copyright:     Copyright (C) 2013 Ben Gamari
synopsis:      Numerical optimization
description:
  These are a set of implementations of various numerical optimization
  methods in Haskell. Note that these implementations were originally
  written as part of a class project; while at one point they worked
  no attention has been given to numerical stability or the many other
  potential difficulties of implementing robust numerical
  methods. That being said, they should serve to succinctly illustrate
  a number of optimization techniques from the modern optimization
  literature.
  .
  Those seeking a high-level overview of some of these methods are
  referred to Stephen Wright's excellent tutorial from NIPS 2010
  <http://videolectures.net/nips2010_wright_oaml/>. A deeper
  introduction can be found in Boyd and Vandenberghe's *Complex
  Optimization* which available freely online.

build-type:    Custom

extra-source-files:
  .ghci
  .gitignore
  .travis.yml
  .vim.custom
  CHANGELOG.markdown
  HLint.hs
  README.markdown
  travis/cabal-apt-install
  travis/config

source-repository head
  type: git
  location: git://github.com/bgamari/optimization.git

library
  hs-source-dirs: src
  default-language: Haskell2010
  ghc-options: -Wall -fno-warn-type-defaults
  build-depends:
    base                >= 4.4          && < 5,
    vector              >= 0.10         && < 1.0,
    ad                  >= 3.4          && < 4.0,
    linear              >= 1.0          && < 2.0,
    semigroupoids       >= 3.0          && < 4.0,
    distributive        >= 0.3          && < 0.4

  exposed-modules:
    Optimization.LineSearch
    Optimization.LineSearch.ConjugateGradient
    Optimization.LineSearch.BarzilaiBorwein
    Optimization.LineSearch.SteepestDescent
    Optimization.LineSearch.MirrorDescent
    Optimization.LineSearch.BFGS
    Optimization.TrustRegion.Nesterov1983
    Optimization.TrustRegion.Fista
    Optimization.TrustRegion.Newton
    Optimization.Constrained.Penalty
    Optimization.Constrained.ProjectedSubgradient


test-suite doctests
  type:    exitcode-stdio-1.0
  main-is: doctests.hs
  default-language: Haskell2010
  build-depends:
    base,
    directory >= 1.0,
    doctest >= 0.9.1,
    filepath
  ghc-options: -Wall -threaded
  if impl(ghc<7.6.1)
    ghc-options: -Werror
  hs-source-dirs: tests
