name:          optimization
category:      Math
version:       0.1
license:       BSD3
cabal-version: >= 1.10
license-file:  LICENSE
author:        Ben Gamari
maintainer:    Ben Gamari <bgamari@gmail.com>
stability:     experimental
homepage:      http://github.com/bgamari/optimization
bug-reports:   http://github.com/bgamari/optimization/issues
copyright:     Copyright (C) 2013 Ben Gamari
synopsis:      Numerical optimization
description:
  These are a set of implementations of various numerical optimization
  methods in Haskell. Note that these implementations were originally
  written as part of a class project; while at one point they worked
  no attention has been given to numerical stability or the many other
  potential difficulties of implementing robust numerical
  methods. That being said, they should serve to succinctly illustrate
  a number of optimization techniques from the modern optimization
  literature.
  .
  Those seeking a high-level overview of some of these methods are
  referred to Stephen Wright's excellent tutorial from NIPS 2010
  <http://videolectures.net/nips2010_wright_oaml/>. A deeper
  introduction can be found in Boyd and Vandenberghe's *Complex
  Optimization* which available freely online.

build-type:    Custom

extra-source-files:
  .ghci
  .gitignore
  .travis.yml
  .vim.custom
  CHANGELOG.markdown
  HLint.hs
  README.markdown
  travis/cabal-apt-install
  travis/config

source-repository head
  type: git
  location: git://github.com/bgamari/optimization.git

library
  hs-source-dirs: src
  default-language: Haskell2010
  ghc-options: -Wall -fno-warn-type-defaults
  build-depends:
    base                >= 4.4          && < 5,
    vector              >= 0.10         && < 1.0,
    ad                  >= 3.4          && < 4.0,
    linear              >= 1.0          && < 2.0,
    semigroupoids       >= 3.0          && < 4.0,
    distributive        >= 0.3          && < 0.4

  exposed-modules:
    Optimization.LineSearch
    Optimization.LineSearch.ConjugateGradient
    Optimization.LineSearch.BarzilaiBorwein
    Optimization.LineSearch.SteepestDescent
    Optimization.LineSearch.MirrorDescent
    Optimization.LineSearch.BFGS
    Optimization.TrustRegion.Nesterov1983
    Optimization.TrustRegion.Fista
    Optimization.TrustRegion.Newton
    Optimization.Constrained.Penalty
    Optimization.Constrained.ProjectedSubgradient


test-suite doctests
  type:    exitcode-stdio-1.0
  main-is: doctests.hs
  default-language: Haskell2010
  build-depends:
    base,
    directory >= 1.0,
    doctest >= 0.9.1,
    filepath
  ghc-options: -Wall -threaded
  if impl(ghc<7.6.1)
    ghc-options: -Werror
  hs-source-dirs: tests


package-hashes:
    MD5:d7543a5aa445e398fa647c87a504e62f
    SHA1:ec7d3fc37b97701d6569b2bb2e57b768f3bb0364
    SHA256:9070c80a0aae72197621739af65664c12906f7af44227178856c979dfe2b0c6e
    SHA512:ff637a3e43e45a3fa9ba85da23d9bfff1a29de522dfaa64a55538119ba84dc4b3bb3b11d31a74070a210872038eb0ec6c050b3c529024731450fe6f20de6c447
    Skein512_512:a6cceab39d382813189b7746df9f182b7be621c7033b22f9400a09f8043047aeb86cec0e9227294d2ba5ef16e64606621a9fce91410bbf4786f444b15d5f9b0c

package-locations:
    https://hackage.haskell.org/package/optimization-0.1/optimization-0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/optimization-0.1.tar.gz

