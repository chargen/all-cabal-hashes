-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:461a2f8fcad5cb9c820f0ffd68ed11a7
    SHA1:c30346e2ca4f707d950492fa26bf7712f2e99577
    SHA256:0aa7b97ecf63d1889266808fabb01e02f8f6754c7a17b75943d275d85bbcb1c7
    SHA512:39fc98dc89023e45aa7b6b195dfe9beac19fa28b86a30981beeb0b2b94f23b544232512f2c14d15111627127164baaa7f7c211bda85134bc2ad633acf793a631
    Skein512_512:39be3bff520c40262b7be0afc4b5b191cceb59f228669eb88b563b21e58234ab74e2561cb85f17c20993a8482ffaa27594d163612426663599640be2e4f519de

x-package-locations:
    https://hackage.haskell.org/package/kangaroo-0.2.0/kangaroo-0.2.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/kangaroo-0.2.0.tar.gz

x-package-size: 22422
-- END Added by all-cabal-hashes-tool

name:             kangaroo
version:          0.2.0
license:          BSD3
license-file:     LICENSE
copyright:        Stephen Tetley <stephen.tetley@gmail.com>
maintainer:       Stephen Tetley <stephen.tetley@gmail.com>
homepage:         http://code.google.com/p/copperbox/
category:         Parsing
synopsis:         Binary parsing with random access.
description:
  Binary parsing with random access. The target file to be 
  parsed is loaded into memory at the start (represented as
  an IOUArray Int Word8). Parsing proceeds by moving a cursor
  around, the array is left intact. This allows _jumping_
  inside the file and contrasts with other parser 
  combinators that progress via consuming input.
  .
  \* Caveat \* - the above of course means that the target file 
  is obliged to be small enough to fit into memory. 
  .
  \*\* MAJOR CAVEAT \*\* - kangaroo is somewhat half-baked at the
  moment - the parsing machinery seems good but the combinators
  and primitive parsers need more work. I\'ve only released it on 
  Hackage because I'm now using it with Hurdle which was already 
  on Hackage.
  .
  Currently kangaroo is twinned with its own library of formatting
  combinators, at some point this is likely to be put into its 
  own package
  .
  Changelog:
  .
  0.2.0 Changes to ParseMonad - parsing within a region simplified, 
  temporarily added JoinPrint.
  . 
  0.1.0 First version.
  .

build-type:         Simple
stability:          half baked
cabal-version:      >= 1.2

extra-source-files:
  demo/MidiDatatypes.hs
  demo/MidiRead.hs
  demo/MidiText.hs
  demo/PrintMidi.hs
  test/Picklers.hs


library
  hs-source-dirs:     src
  build-depends:      base < 5,
                      array >= 0.2.0.0 && < 0.4

  
  exposed-modules:
    Data.ParserCombinators.Kangaroo,
    Data.ParserCombinators.KangarooReader
    Data.ParserCombinators.KangarooRWS,
    Data.ParserCombinators.KangarooState,
    Data.ParserCombinators.KangarooWriter,
    Text.PrettyPrint.JoinPrint

  other-modules:
    Data.ParserCombinators.Kangaroo.Combinators,
    Data.ParserCombinators.Kangaroo.Debug,
    Data.ParserCombinators.Kangaroo.IEEEFloat,
    Data.ParserCombinators.Kangaroo.ParseMonad,
    Data.ParserCombinators.Kangaroo.Prim,
    Data.ParserCombinators.Kangaroo.Region,
    Data.ParserCombinators.Kangaroo.Utils,
    Text.PrettyPrint.JoinPrint.Core,
    Text.PrettyPrint.JoinPrint.HexDump,
    Text.PrettyPrint.JoinPrint.JoinString
      
  extensions:
    

  ghc-options:
  
  includes: 
  

  
  
