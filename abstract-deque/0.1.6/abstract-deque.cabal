-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:dea4c0bf5e745a8f8be9dd37e8963f6e
    SHA1:4112b6f894731d4a46fbabc9f12bbdf003270d72
    SHA256:ea079d582fb93a990cc7eeba235478a5158e9d40b713b8864512eb30f2ea488f
    SHA512:18fa0ebd3c1ba01bdebe25815d1d1b17f51c6395ca31beec19118e5b8c594623cae682141bed2e82c500b4ed3085a68e6337bc1369f1a6f214c504282f36f67c
    Skein512_512:794b8e96e78b86e711b6f12cd97dc949614a8cd881f42c1e1fca97a058432bf07bb702237016e0b4a860186fec6e720d6869e64fc1092e56229956cad8ad767f

package-locations:
    https://hackage.haskell.org/package/abstract-deque-0.1.6/abstract-deque-0.1.6.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/abstract-deque-0.1.6.tar.gz

package-size: 10104
-- END Added by all-cabal-hashes-tool

Name:                abstract-deque
Version:             0.1.6
License:             BSD3
License-file:        LICENSE
Author:              Ryan R. Newton
Maintainer:          rrnewton@gmail.com
Category:            Data 
Build-type:          Simple
Cabal-version:       >= 1.8

Homepage: https://github.com/rrnewton/haskell-lockfree-queue/wiki

-- Version History:
-- 0.1: 
-- 0.1.1: Added nullQ to interface. [First release]
-- 0.1.2: dependency on IORefCAS
-- 0.1.3: Actually turned on real CAS! DANGER
-- 0.1.4: Another release.
-- 0.1.5: Fix for 6.12 and 7.0.
-- 0.1.6: Make useCAS default FALSE.

Synopsis: Abstract, parameterized interface to mutable Deques.

Description:

  An abstract interface to highly-parameterizable queues/deques.
  . 
  Background: There exists a feature space for queues that extends between:
  .
    * simple, single-ended, non-concurrent, bounded queues 
  .
    * double-ended, threadsafe, growable queues
  .
  ... with important points inbetween (such as
  the queues used for work-stealing).
  .
  This package includes an interface for Deques that allows the
  programmer to use a single API for all of the above, while using the
  type-system to select an efficient implementation given the
  requirements (using type families).
  .
  This package also includes a simple reference implementation based
  on 'IORef' and "Data.Sequence".


-- Making this default False because abstract-deque should be VERY depndency-safe.
-- The reference implementation can be factored out in the future.
Flag useCAS
  Description: Enable the reference implementation to use hardware compare-and-swap.
  Default:     False

Library
  exposed-modules:   Data.Concurrent.Deque.Class,
                     Data.Concurrent.Deque.Tests,
                     Data.Concurrent.Deque.Reference,
                     Data.Concurrent.Deque.Reference.DequeInstance
  build-depends:     base >= 4 && < 5, 
                     containers, HUnit

  if flag(useCAS) && impl( ghc >= 7.4 ) && !os(mingw32) {
    build-depends:   IORefCAS >= 0.2 
    cpp-options:  -DUSE_CAS -DDEFAULT_SIGNATURES
--    extensions: DefaultSignatures
--    GHC-Options: -XDefaultSignatures
  }

  extensions: CPP
  ghc-options: -O2

Source-Repository head
    Type:         git
    Location:     git://github.com/rrnewton/haskell-lockfree-queue.git
