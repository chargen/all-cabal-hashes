Name:                abstract-deque
Version:             0.3 
License:             BSD3
License-file:        LICENSE
Author:              Ryan R. Newton
Maintainer:          rrnewton@gmail.com
Category:            Data 
Build-type:          Simple
Cabal-version:       >= 1.8

Homepage: https://github.com/rrnewton/haskell-lockfree/wiki
Bug-Reports: https://github.com/rrnewton/haskell-lockfree/issues

-- Version History:
-- 0.1: 
-- 0.1.1: Added nullQ to interface. [First release]
-- 0.1.2: dependency on IORefCAS
-- 0.1.3: Actually turned on real CAS! DANGER
-- 0.1.4: Another release.
-- 0.1.5: Fix for 6.12 and 7.0.
-- 0.1.6: Make useCAS default FALSE.
-- 0.1.7: Add leftThreadSafe / rightThreadSafe
-- 0.2:   [breaking] Refactor names of exposed Tests
-- 0.2.2:   Add Debugger
-- 0.2.2.1: Add some extra testing helpers.
-- 0.3:  Remove testing utilities to their own package.

Synopsis: Abstract, parameterized interface to mutable Deques.

Description:

  An abstract interface to highly-parameterizable queues/deques.
  . 
  Background: There exists a feature space for queues that extends between:
  .
    * simple, single-ended, non-concurrent, bounded queues 
  .
    * double-ended, threadsafe, growable queues
  .
  ... with important points inbetween (such as
  the queues used for work-stealing).
  .
  This package includes an interface for Deques that allows the
  programmer to use a single API for all of the above, while using the
  type-system to select an efficient implementation given the
  requirements (using type families).
  .
  This package also includes a simple reference implementation based
  on 'IORef' and "Data.Sequence".


-- Making this default False because abstract-deque should be VERY depndency-safe.
-- The reference implementation can be factored out in the future.
Flag useCAS
  Description: Enable the reference implementation to use hardware compare-and-swap.
  Default:     False

Library
  exposed-modules:   Data.Concurrent.Deque.Class,
                     Data.Concurrent.Deque.Reference,
                     Data.Concurrent.Deque.Reference.DequeInstance,
                     Data.Concurrent.Deque.Debugger
  build-depends:     base >= 4 && < 5, array, random,
                     containers, time
  if flag(useCAS) && impl( ghc >= 7.4 ) && !os(mingw32) {
    build-depends:   atomic-primops >= 0.5.0.2
    cpp-options:  -DUSE_CAS -DDEFAULT_SIGNATURES
  }

  extensions: CPP
  ghc-options: -O2

Source-Repository head
    Type:         git
    Location:     git://github.com/rrnewton/haskell-lockfree.git





package-hashes:
    MD5:badf81da27a674b67f9bbe1e02c82de1
    SHA1:0b80d44743e6698a24088bc4073e43e423b5ff2e
    SHA256:09aa10f38193a8275a7791b92a4f3a7192a304874637e2a35c897dde25d75ca2
    SHA512:9293a366918f54458ffe13f6737bab2bee961b730732eff563d900b451bf5f7dde30276c9406bfc5c0ea64104afb70db3588b13d478bf9c60842dad906195f7a
    Skein512_512:5240cb20c01996b0729dec90d1a6329e5779d5f16e4cdcfba799229054fc322a4d04227ac1f49495e7ab162b4637124419299f39cf02e30f3d4d79d76a50f738

package-locations:
    https://hackage.haskell.org/package/abstract-deque-0.3/abstract-deque-0.3.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/abstract-deque-0.3.tar.gz

