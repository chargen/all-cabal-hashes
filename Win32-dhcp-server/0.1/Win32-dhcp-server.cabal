-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:89013ddf93d648f4b9d6357c635c8d6f
    SHA1:4f7f4d8d1aaf5a6d2d52e3c432aea52c7b4ca306
    SHA256:2085eca3d3ae519829d6c1a707466582060feaab2437aafd6a8a3babdcc3ef74
    SHA512:708d5af71c4e10e6a953376b7741848472d079a6348ce70d703c400cae4aba2ee4549a3cd46a0357126e165e53e71768df8ef4420db139f7df6675bb85cf8f43
    Skein512_512:18f0126043190e0d2cb2e9c66a562be0d0602ef9c224dd751e4f8f45e55181573232b8a48d5d63e04914bf4ee70d58e35cf4d148f991d441c1f44f09f42f7ae2

x-package-locations:
    https://hackage.haskell.org/package/Win32-dhcp-server-0.1/Win32-dhcp-server-0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/Win32-dhcp-server-0.1.tar.gz

x-package-size: 16747
-- END Added by all-cabal-hashes-tool

Name:                Win32-dhcp-server
Synopsis:            Win32 DHCP Server Management API.
Version:             0.1
License:             BSD3
License-file:        LICENSE
Author:              Michael Steele
Maintainer:          mikesteele81@gmail.com
Copyright:           2013 Michael Steele
Homepage:            http://github.com/mikesteele81/win32-dhcp-server
Bug-Reports:         http://github.com/mikesteele81/win32-dhcp-server/issues
Category:            System
Build-type:          Simple
Cabal-version:       >=1.14
Tested-With:         GHC == 7.6.3
Stability:           provisional
Description:
  This package provides a partial binding to the Win32 DHCP Server Management
  API. Its purpose is to query and control a Microsoft DHCP server. Enough
  functionality is defined so so that Ipv4 client lease and reservation
  records can be manipulated from software.
  .
  Here are a few notes on the required environment:
  .
  * Only 32-bit executables are supported. This is mainly because pointers
    are assumed to be 4 bytes wide in a few places. Support for 64-bit
    executables may be added in the future.
  .
  * All library calls should be supported on Windows 7 or above.
  .
  /Simple Example and Usage/
  .
  @
  \-\- Print all MAC addresses with an active client lease
  module Main where
  .
  import Data.Ip
  import Data.Mac
  import System.Win32.DHCP
  .
  main :: IO ()
  main = do
  &#x20;   api <- loadDHCP
  &#x20;   clients <- enumClients api context
  &#x20;   let macs = map (showMac \":\" . clientHardwareAddress) clients
  &#x20;   mapM_ putStrLn macs
  &#x20; where
  &#x20;   Just subnet = readIp \"192.168.1.0\"
  &#x20;   context = Context \"192.168.1.5\" subnet
  @

Library
  Build-depends: base  >= 4.6 && < 4.8
               , safe
               , Win32
  default-language: Haskell2010
  Exposed-modules: Data.Ip
                 , Data.Mac
                 , System.Win32.DHCP
  Ghc-Options: -funbox-strict-fields -Wall
  other-modules: Utils
               , System.Win32.DHCP.Internal
               , System.Win32.DHCP.Client
               , System.Win32.DHCP.CLIENT_UID
               , System.Win32.DHCP.DhcpStructure
               , System.Win32.DHCP.HOST_INFO
               , System.Win32.DHCP.IP_CLUSTER
               , System.Win32.DHCP.IP_RANGE
               , System.Win32.DHCP.LengthBuffer
               , System.Win32.DHCP.SEARCH_INFO
               , System.Win32.DHCP.Reservation
               , System.Win32.DHCP.SUBNET_CLIENT_INFO_ARRAY_V4
               , System.Win32.DHCP.SUBNET_ELEMENT_DATA_V4
               , System.Win32.DHCP.SUBNET_ELEMENT_INFO_ARRAY_V4
               , System.Win32.DHCP.Types
