-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:01ae360bf8173cff60ce9bcb222cf239
    SHA1:987fc24b29bf0e6661538b008d221ff308567b22
    SHA256:6e81dda0430fe602a2fb123dbd8735849f577817f0c99027b22335da36d30f7f
    SHA512:7cf5ab3e905c655236335e7207c55b50e59646c73069291e3f235d539d8f10a1a9a0985237d8066cf58255068f1409bd52a21b99901eb94b156ecb59ac58e059
    Skein512_512:92a8f2e5faeded0c7f99264135611f88772af8921bf32d5a3acab2fd98dfe767c98345bae65f6660a363da041e65810344e1a4a9d1b96f7eb9b6d0a7a7ae9e61

x-package-locations:
    https://hackage.haskell.org/package/Win32-dhcp-server-0.2/Win32-dhcp-server-0.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/Win32-dhcp-server-0.2.tar.gz

x-package-size: 17794
-- END Added by all-cabal-hashes-tool

Name:                Win32-dhcp-server
Synopsis:            Win32 DHCP Server Management API.
Version:             0.2
License:             BSD3
License-file:        LICENSE
Author:              Michael Steele
Maintainer:          mikesteele81@gmail.com
Copyright:           2013 Michael Steele
Homepage:            http://github.com/mikesteele81/win32-dhcp-server
Bug-Reports:         http://github.com/mikesteele81/win32-dhcp-server/issues
Category:            System
Build-type:          Simple
Cabal-version:       >=1.14
Tested-With:         GHC == 7.6.3
Stability:           provisional
Description:
  This package provides a partial binding to the Win32 DHCP Server Management
  API. Its purpose is to query and control a Microsoft DHCP server. Enough
  functionality is defined so so that Ipv4 client lease and reservation
  records can be manipulated programmatically.
  .
  Here are a few notes on the required environment:
  .
  * Only 32-bit executables are supported. This is mainly because pointers
    are assumed to be 4 bytes wide in a few places. Support for 64-bit
    executables may be added in the future.
  .
  * All library calls should be supported on Windows 7 or above.
  .
  /Simple Example and Usage/
  .
  @
  \-\- Print all MAC addresses with an active client lease
  module Main where
  .
  import Data.Ip
  import Data.Mac
  import qualified Data.Text.IO as T
  import System.Win32.DHCP
  .
  main :: IO ()
  main = do
  &#x20;   api <- loadDHCP
  &#x20;   clients <- enumClients api context
  &#x20;   let macs = map (showMac \":\" . clientHardwareAddress) clients
  &#x20;   mapM_ T.putStrLn macs
  &#x20; where
  &#x20;   Right subnet = readIp \"192.168.1.0\"
  &#x20;   context = Context \"192.168.1.5\" subnet
  @
extra-source-files:
    ChangeLog
    examples/*.hs

Library
  Build-depends: base         >= 4.6  && < 4.8
               , text          > 0.11 && < 1.2
               , Win32
               , Win32-errors >= 0.2  && < 1.0
  default-language: Haskell2010
  Exposed-modules: Data.Ip
                 , Data.Mac
                 , System.Win32.DHCP
  Ghc-Options: -funbox-strict-fields -Wall
  other-modules: Utils
               , System.Win32.DHCP.Internal
               , System.Win32.DHCP.Client
               , System.Win32.DHCP.CLIENT_UID
               , System.Win32.DHCP.DhcpStructure
               , System.Win32.DHCP.HOST_INFO
               , System.Win32.DHCP.IP_CLUSTER
               , System.Win32.DHCP.IP_RANGE
               , System.Win32.DHCP.LengthBuffer
               , System.Win32.DHCP.SEARCH_INFO
               , System.Win32.DHCP.Reservation
               , System.Win32.DHCP.SUBNET_CLIENT_INFO_ARRAY_V4
               , System.Win32.DHCP.SUBNET_ELEMENT_DATA_V4
               , System.Win32.DHCP.SUBNET_ELEMENT_INFO_ARRAY_V4
               , System.Win32.DHCP.Types
