-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:27a9a84521b4a8c7ee0318198b99d009
    SHA1:927c542c408a5e096e330a625c0f710d9464cc57
    SHA256:e871de8835980c076d25c54eb95a57e43276deb6853ce1ff607ce2a652565cf8
    SHA512:4943dce153988df4637057bdf69b873a47b00309c7e81cf3a10bf55e2ccf8ee6fff3b75e68082a54227a01852e6da440d5da6ac9251f331aef93e666d6f28c9e
    Skein512_512:e7ecf71a5cbafdf32a37d72dc131ab40dc1f17ed398678bb77df3bd88be3ddcc87b206b965559f7311a05baa14c3841c0ae6a71222c662956435db9d7bad5711

x-package-locations:
    https://hackage.haskell.org/package/Win32-dhcp-server-0.2.1/Win32-dhcp-server-0.2.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/Win32-dhcp-server-0.2.1.tar.gz

x-package-size: 18351
-- END Added by all-cabal-hashes-tool

Name:                Win32-dhcp-server
Synopsis:            Win32 DHCP Server Management API
Version:             0.2.1
License:             BSD3
License-file:        LICENSE
Author:              Michael Steele
Maintainer:          mikesteele81@gmail.com
Copyright:           2013 Michael Steele
Homepage:            http://github.com/mikesteele81/win32-dhcp-server
Bug-Reports:         http://github.com/mikesteele81/win32-dhcp-server/issues
Category:            System
Build-type:          Simple
Cabal-version:       >=1.14
Tested-With:         GHC == 7.8.3
Stability:           provisional
Description:
  This package provides a partial binding to the Win32 DHCP Server Management
  API. Its purpose is to query and control a Microsoft DHCP server. Enough
  functionality is defined so so that Ipv4 client lease and reservation
  records can be manipulated programmatically.
  .
  Here are a few notes on the required environment:
  .
  * Only 32-bit executables are supported. This is mainly because pointers
    are assumed to be 4 bytes wide in a few places. Support for 64-bit
    executables may be added in the future.
  .
  * All library calls should be supported on Windows 7 or above.
  .
  /Simple Example and Usage/
  .
  @
  \-\- Print all MAC addresses with an active client lease
  module Main where
  .
  import Data.Ip
  import Data.Mac
  import qualified Data.Text.IO as T
  import System.Win32.DHCP
  .
  main :: IO ()
  main = do
  &#x20;   api <- loadDHCP
  &#x20;   clients <- enumClients api context
  &#x20;   let macs = map (showMac \":\" . clientHardwareAddress) clients
  &#x20;   mapM_ T.putStrLn macs
  &#x20; where
  &#x20;   Right subnet = readIp \"192.168.1.0\"
  &#x20;   context = Context \"192.168.1.5\" subnet
  @
extra-source-files:
    ChangeLog
    examples/*.hs

Library
  Build-depends: base         >= 4.6  && < 4.8
               , text         >  0.11 && < 1.2
               , Win32        >= 2.2  && < 2.4
               , Win32-errors >= 0.2  && < 1.0
  default-language: Haskell2010
  Exposed-modules: Data.Ip
                 , Data.Mac
                 , System.Win32.DHCP
  Ghc-Options: -funbox-strict-fields -Wall
  other-modules: Utils
               , System.Win32.DHCP.Internal
               , System.Win32.DHCP.Client
               , System.Win32.DHCP.CLIENT_UID
               , System.Win32.DHCP.DhcpStructure
               , System.Win32.DHCP.HOST_INFO
               , System.Win32.DHCP.IP_CLUSTER
               , System.Win32.DHCP.IP_RANGE
               , System.Win32.DHCP.LengthBuffer
               , System.Win32.DHCP.SEARCH_INFO
               , System.Win32.DHCP.Reservation
               , System.Win32.DHCP.SUBNET_CLIENT_INFO_ARRAY_V4
               , System.Win32.DHCP.SUBNET_ELEMENT_DATA_V4
               , System.Win32.DHCP.SUBNET_ELEMENT_INFO_ARRAY_V4
               , System.Win32.DHCP.Types
