-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:0ec3309f46b0096c18a0fb053f167f49
    SHA1:d47759d28bf72daaf005b2a888cb9990a10bacac
    SHA256:848d8507da603a8b43fdebde1b3575560368d838a1350be263b567d357c44f50
    SHA512:300b48af1bcf19340adb217742285de7622d66f616b902f37ccca834d64d8f9e74fa443e95bdf30fdb6fbb0d100499db02dc01d7bc3c092939955fda5c6a0d53
    Skein512_512:34a3566ff3f43bff4454a03f18e61f15f79760adf1d5a2c887e912f26593d6f883a31b1eb87881d64581ac041e86f465c24419cf4032b2e9abcbf1888a3b18bf

x-package-locations:
    https://hackage.haskell.org/package/StrappedTemplates-0.1.0.0/StrappedTemplates-0.1.0.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/StrappedTemplates-0.1.0.0.tar.gz

x-package-size: 7453
-- END Added by all-cabal-hashes-tool

name:                StrappedTemplates
version:             0.1.0.0
synopsis:            General purpose templates in haskell
homepage:            https://github.com/hansonkd/StrappedTemplates
license:             BSD3
license-file:        LICENSE
author:              Kyle Hanson
maintainer:          me@khanson.io
category:            Text
build-type:          Simple
cabal-version:       >=1.8
description:
  Easy templating in haskell.
  .
  >  import Control.Monad.IO.Class
  >  import qualified Blaze.ByteString.Builder as B
  >  import qualified Data.Text.Lazy as T
  >  import Data.Time
  >  
  >  import Text.Strapped
  >  
  >  makeBucket :: Integer -> InputBucket IO
  >  makeBucket i = bucketFromList 
  >        [ ("is", List $ map (LitVal . LitInteger) [1..i])
  >        , ("ioTime", Func (\_ -> (liftIO $ getCurrentTime) >>= (\c -> return $ LitText $ T.pack $ show c)))
  >        ]
  >  
  >  main :: IO ()
  >  main = do
  >    tmpls <- templateStoreFromDirectory "benchmarks/strapped_templates" ".strp"
  >    case tmpls of
  >      Left err -> print err
  >      Right store -> do
  >        rendered <- render (putStore store defaultConfig) (makeBucket 2) "base_simple.strp"
  >        either (print) (print . B.toByteString) rendered
  .
  @
  &#160;$&#x7b; ioTime &#x7d;
  &#160;
  &#160;&#x7b;$ for i in is $&#x7d;
  &#160;    $&#x7b; i &#x7d;
  &#160;&#x7b;$ endfor $&#x7d;
  @

library
  exposed-modules:     Text.Strapped, Text.Strapped.Parser, Text.Strapped.Render, Text.Strapped.Types, Text.Strapped.Utils
  build-depends:       base >= 4.7 && < 4.8,
                       containers >= 0.5 && < 0.6,
                       text >= 1.0 && < 1.2, 
                       blaze-builder >=0.3 && < 0.4,
                       parsec >=3.1 && < 3.2,
                       mtl >=2.1 && < 2.3,
                       transformers >= 0.4 && < 0.5,
                       filemanip >=0.3.6 && < 0.3.7,
                       filepath >=1.3 && < 1.4
  hs-source-dirs:      src

test-suite Main
  type:            exitcode-stdio-1.0
  build-depends:   StrappedTemplates >= 0.1 && < 0.2,
                   base >= 4.7 && < 4.8, 
                   hspec >= 1.11 && < 1.12,
                   text >= 1.0 && < 1.2,
                   bytestring >= 0.10 && < 0.11,
                   blaze-builder >=0.3 && < 0.4

  ghc-options:     -Wall -rtsopts
  hs-source-dirs:  tests
  default-language: Haskell2010
  hs-source-dirs:  tests
  main-is:         StrappedTest.hs
  