-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:4e1b663e6b80e3258b3a278f2589b01a
    SHA1:835a8ccd44db721dc785770b2cd04890042bc189
    SHA256:3c0b578124c42d879bc6fe6775597249847b97fba61bfb666e0f83c12d813f4c
    SHA512:769745b5f71b9b2354e309725485471bc832861cc0a0d14cffca240ffccc5492a3cddf518a6e4f0f3b42be7fdb58af6ff6ccb948f9d079ebbf793c77ee418137
    Skein512_512:e3efec9264d1f4c085ba269c382766bfa8fb7c70d1ab7e0f64684f67fb83f41bd634bfc444f8fc275ab2f0bdd1fd136c9e2cbadbd76c1456518adeba9b20680f

x-package-locations:
    https://hackage.haskell.org/package/cprng-aes-0.3.4/cprng-aes-0.3.4.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/cprng-aes-0.3.4.tar.gz

x-package-size: 4812
-- END Added by all-cabal-hashes-tool

Name:                cprng-aes
Version:             0.3.4
Description:         
    Simple crypto pseudo-random-number-generator with really good randomness property.
    .
    Using ent, a randomness property maker on one 1Mb sample:
       Entropy = 7.999837 bits per byte.
       Optimum compression would reduce the size of this 1048576 byte file by 0 percent.
       Chi square distribution for 1048576 samples is 237.02
       Arithmetic mean value of data bytes is 127.3422 (127.5 = random)
       Monte Carlo value for Pi is 3.143589568 (error 0.06 percent)
    .
    Compared to urandom with the same sampling:
       Entropy = 7.999831 bits per byte.
       Optimum compression would reduce the size of this 1048576 byte file by 0 percent.
       Chi square distribution for 1048576 samples is 246.63 
       Arithmetic mean value of data bytes is 127.6347 (127.5 = random).
       Monte Carlo value for Pi is 3.132465868 (error 0.29 percent).

License:             BSD3
License-file:        LICENSE
Copyright:           Vincent Hanquez <vincent@snarc.org>
Author:              Vincent Hanquez <vincent@snarc.org>
Maintainer:          Vincent Hanquez <vincent@snarc.org>
Synopsis:            Crypto Pseudo Random Number Generator using AES in counter mode.
Build-Type:          Simple
Category:            Cryptography
stability:           experimental
Cabal-Version:       >=1.8
Homepage:            http://github.com/vincenthz/hs-cprng-aes
data-files:          README.md

Flag cereal
  Description:       Use cereal
  Default:           False

Flag cryptoapi
  Description:       Use cryptoapi
  Default:           True

Library
  Build-Depends:     base >= 3 && < 5
                   , bytestring
                   , random
                   , crypto-random-api >= 0.2 && < 0.3
                   , entropy >= 0.2
  Exposed-modules:   Crypto.Random.AESCtr
  ghc-options:       -Wall

  Build-Depends:   cipher-aes >= 0.1 && < 0.2
  if flag(cereal)
    Build-Depends:   cereal >= 0.3.0 && < 0.4.0
    cpp-options:     -DUSE_CEREAL
  if flag(cryptoapi)
    Build-Depends:   crypto-api >= 0.8
    cpp-options:     -DUSE_CRYPTOAPI

Benchmark bench-cprng-aes
  hs-source-dirs:    Benchmarks
  Main-Is:           Benchmarks.hs
  type:              exitcode-stdio-1.0
  Build-depends:     base >= 4 && < 5
                   , bytestring
                   , cprng-aes
                   , criterion
                   , mtl

source-repository head
  type: git
  location: git://github.com/vincenthz/hs-cprng-aes
