-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:d4fd55254e775868d4af7a28f6b06f5d
    SHA1:0e00ada49bb6e5e04d1ab647d834eff505e05b01
    SHA256:500411e4b8b3d57df76ce7c6e7ee495938636c8ce1a9bd80cb6022d5aeaa11a9
    SHA512:45dced4ff8352c06b7c9a2fe7873a307f1bf814209a3ac4447da5ffaa1a4f880e7117eb5ed997953211f3ef0b4bf3e7606d031415c19ba9a78eb902d86d7634f
    Skein512_512:b250fd18c0e08a0bf1848b416aca9c71c87f77f3769f96884eb4722e5fc0ee16cf52642ac90affaa50e0c6ef48580d9e2ec399f0349961cdd3c715f94892a8aa

package-locations:
    https://hackage.haskell.org/package/cprng-aes-0.3.0/cprng-aes-0.3.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/cprng-aes-0.3.0.tar.gz

package-size: 4950
-- END Added by all-cabal-hashes-tool

Name:                cprng-aes
Version:             0.3.0
Description:         
    Simple crypto pseudo-random-number-generator with really good randomness property.
    .
    Using ent, a randomness property maker on one 1Mb sample:
       Entropy = 7.999837 bits per byte.
       Optimum compression would reduce the size of this 1048576 byte file by 0 percent.
       Chi square distribution for 1048576 samples is 237.02
       Arithmetic mean value of data bytes is 127.3422 (127.5 = random)
       Monte Carlo value for Pi is 3.143589568 (error 0.06 percent)
    .
    Compared to urandom with the same sampling:
       Entropy = 7.999831 bits per byte.
       Optimum compression would reduce the size of this 1048576 byte file by 0 percent.
       Chi square distribution for 1048576 samples is 246.63 
       Arithmetic mean value of data bytes is 127.6347 (127.5 = random).
       Monte Carlo value for Pi is 3.132465868 (error 0.29 percent).

License:             BSD3
License-file:        LICENSE
Copyright:           Vincent Hanquez <vincent@snarc.org>
Author:              Vincent Hanquez <vincent@snarc.org>
Maintainer:          Vincent Hanquez <vincent@snarc.org>
Synopsis:            Crypto Pseudo Random Number Generator using AES in counter mode.
Build-Type:          Simple
Category:            Cryptography
stability:           experimental
Cabal-Version:       >=1.8
Homepage:            http://github.com/vincenthz/hs-cprng-aes
data-files:          README.md

Flag fastaes
  Description:       Use fast AES if available
  Default:           True

Flag cereal
  Description:       Use cereal
  Default:           False

Flag cryptoapi
  Description:       Use cereal
  Default:           True

Library
  Build-Depends:     base >= 3 && < 5
                   , bytestring
                   , random
                   , crypto-random-api
                   , entropy >= 0.2
  Exposed-modules:   Crypto.Random.AESCtr
  ghc-options:       -Wall

  if flag(fastaes) && (arch(i386) || arch(x86_64))
    cpp-options:     -DCIPHER_AES
    Build-Depends:   cipher-aes >= 0.1 && < 0.2
  else
    Build-Depends:   cryptocipher
  if flag(cereal)
    Build-Depends:   cereal >= 0.3.0 && < 0.4.0
    cpp-options:     -DUSE_CEREAL
  if flag(cryptoapi)
    Build-Depends:   crypto-api >= 0.8
    cpp-options:     -DUSE_CRYPTOAPI

Benchmark bench-cprng-aes
  hs-source-dirs:    Benchmarks
  Main-Is:           Benchmarks.hs
  type:              exitcode-stdio-1.0
  Build-depends:     base >= 4 && < 5
                   , bytestring
                   , cprng-aes
                   , criterion
                   , mtl

source-repository head
  type: git
  location: git://github.com/vincenthz/hs-cprng-aes
