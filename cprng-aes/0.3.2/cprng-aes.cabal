-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:688c978eae23396bc1b24b0b739535a0
    SHA1:bdae9e3121dd0ad98efb1b8e2d5653916311cbe3
    SHA256:418829c04d6f9f8c1fb9791c9114d560f2b88af15377a7dc77c9513ad0839cf7
    SHA512:47248b448f1ddf8476506d9ee1e18192f6a16f963295317bd3e156ac18bb169185ffb3bc5dc0c231eedb651bf96acad0aa3827874c2fc4ff3a363f3bb793dc35
    Skein512_512:bb9639dadc3ed08c0cdfcd0969da3b795c97de299654caf4143c6fa4b55fe56a0feadef51ddd038469056f42c358d881469d0c0a9185aa55ea82d186de051cb7

x-package-locations:
    https://hackage.haskell.org/package/cprng-aes-0.3.2/cprng-aes-0.3.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/cprng-aes-0.3.2.tar.gz

x-package-size: 5000
-- END Added by all-cabal-hashes-tool

Name:                cprng-aes
Version:             0.3.2
x-revision: 1
Description:
    Simple crypto pseudo-random-number-generator with really good randomness property.
    .
    Using ent, a randomness property maker on one 1Mb sample:
       Entropy = 7.999837 bits per byte.
       Optimum compression would reduce the size of this 1048576 byte file by 0 percent.
       Chi square distribution for 1048576 samples is 237.02
       Arithmetic mean value of data bytes is 127.3422 (127.5 = random)
       Monte Carlo value for Pi is 3.143589568 (error 0.06 percent)
    .
    Compared to urandom with the same sampling:
       Entropy = 7.999831 bits per byte.
       Optimum compression would reduce the size of this 1048576 byte file by 0 percent.
       Chi square distribution for 1048576 samples is 246.63
       Arithmetic mean value of data bytes is 127.6347 (127.5 = random).
       Monte Carlo value for Pi is 3.132465868 (error 0.29 percent).

License:             BSD3
License-file:        LICENSE
Copyright:           Vincent Hanquez <vincent@snarc.org>
Author:              Vincent Hanquez <vincent@snarc.org>
Maintainer:          Vincent Hanquez <vincent@snarc.org>
Synopsis:            Crypto Pseudo Random Number Generator using AES in counter mode.
Build-Type:          Simple
Category:            Cryptography
stability:           experimental
Cabal-Version:       >=1.8
Homepage:            http://github.com/vincenthz/hs-cprng-aes
data-files:          README.md

Flag fastaes
  Description:       Use fast AES if available
  Default:           True

Flag cereal
  Description:       Use cereal
  Default:           False

Flag cryptoapi
  Description:       Use cryptoapi
  Default:           True

Library
  Build-Depends:     base >= 3 && < 5
                   , bytestring
                   , random
                   , crypto-random-api >= 0.2 && < 0.3
                   , entropy >= 0.2
  Exposed-modules:   Crypto.Random.AESCtr
  ghc-options:       -Wall

  if flag(fastaes) && (arch(i386) || arch(x86_64))
    cpp-options:     -DCIPHER_AES
    Build-Depends:   cipher-aes >= 0.1 && < 0.2
  else
    Build-Depends:   cryptocipher < 0.4
  if flag(cereal)
    Build-Depends:   cereal >= 0.3.0 && < 0.4.0
    cpp-options:     -DUSE_CEREAL
  if flag(cryptoapi)
    Build-Depends:   crypto-api >= 0.8
    cpp-options:     -DUSE_CRYPTOAPI

Benchmark bench-cprng-aes
  hs-source-dirs:    Benchmarks
  Main-Is:           Benchmarks.hs
  type:              exitcode-stdio-1.0
  Build-depends:     base >= 4 && < 5
                   , bytestring
                   , cprng-aes
                   , criterion
                   , mtl

source-repository head
  type: git
  location: git://github.com/vincenthz/hs-cprng-aes
