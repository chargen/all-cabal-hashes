Cabal-Version: >= 1.6

Name:        list-tries
Version:     0.0
Homepage:    http://iki.fi/matti.niemenmaa/list-tries/
Synopsis:    Tries and Patricia tries: finite sets and maps for list keys
Category:    Data, Data Structures
Stability:   provisional
Description:
   This library provides implementations of finite sets and maps for list keys
   using tries, both simple and of the Patricia kind. In most (or all? sorry,
   haven't benchmarked yet) cases, the Patricia tries will have better
   performance, so use them unless you have reasons not to.
   .
   The data types are parametrized over the map type they use internally to
   store the child nodes: this allows extending them to support different kinds
   of key types or increasing efficiency. Child maps are required to be
   instances of the Map class in Data.ListTrie.Base.Map. Some operations
   additionally require an OrdMap instance.
   .
   The Eq, Ord, and Enum modules contain ready structures for key types which
   are instances of those classes, using lists of pairs, Data.Map, and
   Data.IntMap respectively.

Author:       Matti Niemenmaa
Maintainer:   Matti Niemenmaa <matti.niemenmaa+list-tries@iki.fi>
License:      BSD3
License-File: LICENSE.txt

Build-Type: Simple

Extra-Source-Files: headers/*.h
                    tests/README.txt
                    tests/*.hs
                    tests/Tests/*.hs

Flag containers03
   Description: Assume that containers has a version number of at least 0.3. If
                false, some functionality cannot be implemented and is changed
                to call 'error' instead. Defaults to False as such a version
                hasn't yet been released.
   Default: False

Library
   Extensions: CPP

   if flag(containers03)
      Build-Depends: base       >= 3 && < 4.1
                   , containers >= 0.3 && < 0.4
                   , dlist      == 0.4.*
   else
      Build-Depends: base       >= 3 && < 4.1
                   , containers >= 0.2 && < 0.3
                   , dlist      == 0.4.*

   Exposed-Modules: Data.ListTrie.Base.Map
                    Data.ListTrie.Map
                    Data.ListTrie.Map.Eq
                    Data.ListTrie.Map.Ord
                    Data.ListTrie.Map.Enum
                    Data.ListTrie.Set
                    Data.ListTrie.Set.Eq
                    Data.ListTrie.Set.Ord
                    Data.ListTrie.Set.Enum
                    Data.ListTrie.Patricia.Map
                    Data.ListTrie.Patricia.Map.Eq
                    Data.ListTrie.Patricia.Map.Ord
                    Data.ListTrie.Patricia.Map.Enum
                    Data.ListTrie.Patricia.Set
                    Data.ListTrie.Patricia.Set.Eq
                    Data.ListTrie.Patricia.Set.Ord
                    Data.ListTrie.Patricia.Set.Enum
   Other-Modules:   Data.ListTrie.Base
                    Data.ListTrie.Base.Classes
                    Data.ListTrie.Base.Map.Internal
                    Data.ListTrie.Patricia.Base
                    Data.ListTrie.Util

   Include-Dirs: headers


package-hashes:
    MD5:a4c7a26328ce6879df40f5a56ee7e88b
    SHA1:01c2cb59c8110c899943c0291cb1cac98763df3d
    SHA256:8e34f5dcbada9978a113a4cb4db70403f5a95ae6359c8fc63b007db79a521ccc
    SHA512:5d0982bf4ae295e660a6514a76ca67a6f2bfc7ef46bf890e30b85736ea17c63f5f5dce7637c3ad7c5f4ae8483eb18c7a2defef682ae9f24271332f0996264c4e
    Skein512_512:af83009b015794776cb32c593c250a74a158e05ab6060c8a5dad44ffe107d51e9822d2482247a8546b8429a8a834000091b41f444ec1570c6af3ad67dcce0779

package-locations:
    https://hackage.haskell.org/package/list-tries-0.0/list-tries-0.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/list-tries-0.0.tar.gz

