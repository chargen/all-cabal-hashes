-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:9c1384d0718739d883dbfea7a6b21a18
    SHA1:211c57fc58ad4cffa3f06b34335bd1ba9c138e36
    SHA256:c6eea24ba1bc14287f277b77377a1de3f388d4aa29298c13ce40d399ba20ef66
    SHA512:9e2da3999a2fd824e6d09c2e798017118c7ff11429ca1691af0e63f2033595d12ad98183b0e4f7c38309cab7635f476193952f149271547f1266cc50bf1ebfa5
    Skein512_512:03c61071f38b6f56384e9caaeb24ba8a8e8f3b575db1facc1b14a794dd731614596b5b5a0cd56c9e13ac7a6cb17667fa16f49569a73fb39fb7c64e31232a4db0

x-package-locations:
    https://hackage.haskell.org/package/pipes-rt-0.4.1/pipes-rt-0.4.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/pipes-rt-0.4.1.tar.gz

x-package-size: 4789
-- END Added by all-cabal-hashes-tool

Name:               pipes-rt
Version:            0.4.1
License:            BSD3
License-File:       LICENSE
Copyright:          (c) 2013 Greg Hale
Author:             Greg Hale
Maintainer:         Greg Hale <imalsogreg@gmail.com>
Stability:          Experimental
Homepage:           http://github.com/ImAlsoGreg/pipes-rt
Bug-Reports:        http://github.com/ImAlsoGreg/pipes-rt/issues
Category:           Control, Pipes
Build-Type:         Simple
Synopsis:           A few pipes to control the timing of yields
Cabal-Version:      >=1.8
Extra-Source-Files: README.md
Description:
  Use this library to yield values downstream according to different timing rules.  For example, use the relTimeCat pipe, and your data will be yielded according to their timestamps.  Or use poissonCat to yield values with poisson timing.

Source-Repository head
  Type:     git
  Location: git://github.com/ImAlsoGreg/pipes-rt

Library
  Hs-Source-Dirs: lib
  Build-Depends:
    base        (>= 4.2 && < 4.8)
   ,pipes       (>= 4   && < 4.1)
   ,time        (>= 1.4 && < 1.5)
   ,mwc-random  (>= 0.13 && < 0.14)
  Exposed-Modules:
    Pipes.RealTime

Executable PipesRealTimeExample
  Hs-Source-Dirs: examples
  Build-Depends:  base
                , pipes
                , pipes-rt
                , time
  Main-Is:        Examples.hs