-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:e590aa3f2de078eba409723eceed153a
    SHA1:28230978f237e6e6b40544d2943516f60de16e65
    SHA256:7eaaaf6bc43661e9e86e310ff8c56fbea16eb6bf13c31a2e28103138ac164c18
    SHA512:41a1314777661a411acf62dfa25cbb1a59fedd5d60d1a2b8566a3dd64dec361ab1fe35827320529a723a612e0443571ce38b17fa900eb8d5289bc52f653d47a5
    Skein512_512:0f2f53c980b4b82a0388d49d5c9b0caa80bb8f3f9570f2f6428894efdb105e43374e8888f024de89780aaca563c4434130b90f683977225e3ce67579274a11fb

x-package-locations:
    https://hackage.haskell.org/package/monad-loops-0.4.3/monad-loops-0.4.3.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/monad-loops-0.4.3.tar.gz

x-package-size: 4996
-- END Added by all-cabal-hashes-tool

name:                   monad-loops
version:                0.4.3
stability:              provisional
license:                PublicDomain

cabal-version:          >= 1.8
build-type:             Simple

author:                 James Cook <mokus@deepbondi.net>
maintainer:             James Cook <mokus@deepbondi.net>
homepage:               https://github.com/mokus0/monad-loops

category:               Control
synopsis:               Monadic loops
description:            Some useful control operators for looping.
                        .
                        New in 0.4: STM loop operators have been split into a
                        new package instead of being conditionally-built.
                        .
                        New in 0.3.2.0: various functions for traversing lists and 
                        computing minima/maxima using arbitrary procedures to compare
                        or score the elements.

source-repository head
  type: git
  location: git://github.com/mokus0/monad-loops.git

Flag base4
  Description:          Build using base >= 4
  Default:              True

Library
  hs-source-dirs:       src
  if impl(ghc >= 7)
    ghc-options:        -Wall -fno-warn-unused-do-bind -fno-warn-name-shadowing
  exposed-modules:      Control.Monad.Loops
  if flag(base4)
    cpp-options:        -Dbase4
    build-depends:      base >= 4 && < 5
  else
    build-depends:      base >= 2 && < 4

Test-Suite test-monad-loops
    type:       exitcode-stdio-1.0
    main-is:    Tests/test-monad-loops.hs
    if flag(base4)
      cpp-options:        -Dbase4
      build-depends:      base >= 4 && < 5, tasty, tasty-hunit, monad-loops
    else
      build-depends:      base >= 2 && < 4, tasty, tasty-hunit, monad-loops