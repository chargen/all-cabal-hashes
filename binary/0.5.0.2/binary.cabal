-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:6bf8f3d1441602c9ab09a75e3bd6e926
    SHA1:bb680c03dbae2765e14d91376440b762bb4b65a4
    SHA256:e0c2dede617dc9b1611f62f2801f21d2fd48e044ee6886e77b55df10e0f2130b
    SHA512:9f33f23d361a6a64c93097c99c794e2324fe5069fb0eb020cb5b3b1c2ad007ed0bdae660aeb58ec58625d9ddd885110d7642f092f25d82863d7dc14fb5cf04b3
    Skein512_512:5ae74e8b5d4f18f5c649acc6dca887abcc2b772d820d9985e4ad6b29519694405e6a84331140185430783f3eb77ba9dcd838a6163282c3dde3247b1ba22a3631

x-package-locations:
    https://hackage.haskell.org/package/binary-0.5.0.2/binary-0.5.0.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/binary-0.5.0.2.tar.gz

x-package-size: 41494
-- END Added by all-cabal-hashes-tool

name:            binary
version:         0.5.0.2
x-revision: 1
license:         BSD3
license-file:    LICENSE
author:          Lennart Kolmodin <kolmodin@dtek.chalmers.se>
maintainer:      Lennart Kolmodin, Don Stewart <dons@galois.com>
homepage:        http://code.haskell.org/binary/
description:     Efficient, pure binary serialisation using lazy ByteStrings.
                 Haskell values may be encoded to and from binary formats, 
                 written to disk as binary, or sent over the network.
                 Serialisation speeds of over 1 G\/sec have been observed,
                 so this library should be suitable for high performance
                 scenarios.
synopsis:        Binary serialisation for Haskell values using lazy ByteStrings
category:        Data, Parsing
stability:       provisional
build-type:      Simple
cabal-version:   >= 1.2
tested-with:     GHC ==6.4.2, GHC ==6.6.1, GHC ==6.8.0, GHC ==6.10.1
extra-source-files: README index.html

flag bytestring-in-base
flag split-base
flag applicative-in-base

library
  if flag(bytestring-in-base)
    -- bytestring was in base-2.0 and 2.1.1
    build-depends: base >= 2.0 && < 2.2
    cpp-options: -DBYTESTRING_IN_BASE
  else
    -- in base 1.0 and 3.0 bytestring is a separate package
    build-depends: base < 2.0 || >= 3, bytestring >= 0.9

  if flag(split-base)
    build-depends:   base >= 3.0 && < 4.7, containers, array
  else
    build-depends:   base < 3.0

  if flag(applicative-in-base)
    build-depends: base >= 2.0
    cpp-options: -DAPPLICATIVE_IN_BASE
  else
    build-depends: base < 2.0
  hs-source-dirs:  src

  exposed-modules: Data.Binary,
                   Data.Binary.Put,
                   Data.Binary.Get,
                   Data.Binary.Builder

  extensions:      CPP,
                   FlexibleContexts

  ghc-options:     -O2 -Wall -fliberate-case-threshold=1000

--  if impl(ghc < 6.5)
--    ghc-options:   -fallow-undecidable-instances
