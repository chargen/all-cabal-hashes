-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:a0aa299d8a2be8c7373555018877047d
    SHA1:cd03bf7eeef9a1d2514d39d40d38b85c99f7d395
    SHA256:e145aff73102bac9c06220197cf5cc79e83140251d6bb3e9a15c4e9e9fb4b1c8
    SHA512:535c1ce886b2fc187c5c311f18598ccede47daf3383d247295ed363fbdd7d3dba53a11c05b5fc2315b318696227ec781d93709155f669f303fd4e4512a048cbd
    Skein512_512:b476e1d7382c2de5c21397eaba18fcd8cfd0dbe4873a9d3374fb0cbf67df8bfd2ceabde8b943955ad01ee791ee5b2c6601b12b916a8f9c62d4dc6879e5a53a99

x-package-locations:
    https://hackage.haskell.org/package/binary-0.5.0.1/binary-0.5.0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/binary-0.5.0.1.tar.gz

x-package-size: 41448
-- END Added by all-cabal-hashes-tool

name:            binary
version:         0.5.0.1
x-revision: 1
license:         BSD3
license-file:    LICENSE
author:          Lennart Kolmodin <kolmodin@dtek.chalmers.se>
maintainer:      Lennart Kolmodin, Don Stewart <dons@galois.com>
homepage:        http://code.haskell.org/binary/
description:     Efficient, pure binary serialisation using lazy ByteStrings.
                 Haskell values may be encoded to and from binary formats, 
                 written to disk as binary, or sent over the network.
                 Serialisation speeds of over 1 G\/sec have been observed,
                 so this library should be suitable for high performance
                 scenarios.
synopsis:        Binary serialisation for Haskell values using lazy ByteStrings
category:        Data, Parsing
stability:       provisional
build-type:      Simple
cabal-version:   >= 1.2
tested-with:     GHC ==6.4.2, GHC ==6.6.1, GHC ==6.8.0, GHC ==6.10.1
extra-source-files: README index.html

flag bytestring-in-base
flag split-base
flag applicative-in-base

library
  if flag(bytestring-in-base)
    -- bytestring was in base-2.0 and 2.1.1
    build-depends: base >= 2.0 && < 2.2
    cpp-options: -DBYTESTRING_IN_BASE
  else
    -- in base 1.0 and 3.0 bytestring is a separate package
    build-depends: base < 2.0 || >= 3, bytestring >= 0.9

  if flag(split-base)
    build-depends:   base >= 3.0 && < 4.7, containers, array
  else
    build-depends:   base < 3.0

  if flag(applicative-in-base)
    build-depends: base >= 2.0
    cpp-options: -DAPPLICATIVE_IN_BASE
  else
    build-depends: base < 2.0
  hs-source-dirs:  src

  exposed-modules: Data.Binary,
                   Data.Binary.Put,
                   Data.Binary.Get,
                   Data.Binary.Builder

  extensions:      CPP,
                   FlexibleContexts

  ghc-options:     -O2 -Wall -fliberate-case-threshold=1000

--  if impl(ghc < 6.5)
--    ghc-options:   -fallow-undecidable-instances
