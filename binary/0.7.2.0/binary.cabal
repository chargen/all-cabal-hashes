name:            binary
version:         0.7.2.0
x-revision: 1
license:         BSD3
license-file:    LICENSE
author:          Lennart Kolmodin <kolmodin@gmail.com>
maintainer:      Lennart Kolmodin, Don Stewart <dons00@gmail.com>
homepage:        https://github.com/kolmodin/binary
description:     Efficient, pure binary serialisation using lazy ByteStrings.
                 Haskell values may be encoded to and from binary formats,
                 written to disk as binary, or sent over the network.
                 The format used can be automatically generated, or
                 you can choose to implement a custom format if needed.
                 Serialisation speeds of over 1 G\/sec have been observed,
                 so this library should be suitable for high performance
                 scenarios.
synopsis:        Binary serialisation for Haskell values using lazy ByteStrings
category:        Data, Parsing
stability:       provisional
build-type:      Simple
cabal-version:   >= 1.8
tested-with:     GHC == 7.4.2, GHC == 7.6.3, GHC == 7.8.2
extra-source-files:
  README.md index.html docs/hcar/binary-Lb.tex
  tools/derive/*.hs tests/Makefile benchmarks/Makefile

-- from the benchmark 'bench'
extra-source-files:
  benchmarks/CBenchmark.h

source-repository head
  type: git
  location: git://github.com/kolmodin/binary.git

library
  build-depends:   base >= 3.0 && < 4.8, bytestring >= 0.9, containers, array
  hs-source-dirs:  src
  exposed-modules: Data.Binary,
                   Data.Binary.Put,
                   Data.Binary.Get,
                   Data.Binary.Get.Internal,
                   Data.Binary.Builder,
                   Data.Binary.Builder.Internal

  other-modules:   Data.Binary.Builder.Base,
                   Data.Binary.Class

  if impl(ghc >= 7.2.1)
    cpp-options: -DGENERICS
    other-modules: Data.Binary.Generic
    if impl(ghc <= 7.6)
      -- prior to ghc-7.4 generics lived in ghc-prim
      build-depends: ghc-prim

  ghc-options:     -O2 -Wall -fliberate-case-threshold=1000

-- Due to circular dependency, we cannot make any of the test-suites or
-- benchmark depend on the binary library. Instead, for each test-suite and
-- benchmark, we include the source directory of binary and build-depend on all
-- the dependencies binary has.

test-suite qc
  type:  exitcode-stdio-1.0
  hs-source-dirs: src tests
  main-is: QC.hs
  other-modules:
    Action
    Arbitrary
  build-depends:
    base >= 3.0 && < 5,
    bytestring >= 0.9,
    random>=1.0.1.0,
    test-framework,
    test-framework-quickcheck2 >= 0.3,
    QuickCheck>=2.7

  -- build dependencies from using binary source rather than depending on the library
  build-depends: array, containers
  ghc-options: -Wall -O2 -threaded

test-suite read-write-file
  type:  exitcode-stdio-1.0
  hs-source-dirs: src tests
  main-is: File.hs
  build-depends:
    base >= 3.0 && < 5,
    bytestring >= 0.9,
    Cabal,
    directory,
    filepath,
    HUnit

  -- build dependencies from using binary source rather than depending on the library
  build-depends: array, containers
  ghc-options: -Wall

benchmark bench
  type: exitcode-stdio-1.0
  hs-source-dirs: src benchmarks
  main-is: Benchmark.hs
  other-modules: MemBench
  build-depends:
    base >= 3.0 && < 5,
    bytestring
  -- build dependencies from using binary source rather than depending on the library
  build-depends: array, containers
  c-sources: benchmarks/CBenchmark.c
  include-dirs: benchmarks
  ghc-options: -O2

benchmark get
  type: exitcode-stdio-1.0
  hs-source-dirs: src benchmarks
  main-is: Get.hs
  build-depends:
    attoparsec,
    base >= 3.0 && < 5,
    bytestring,
    cereal,
    criterion,
    deepseq,
    mtl
  -- build dependencies from using binary source rather than depending on the library
  build-depends: array, containers
  ghc-options: -O2

benchmark builder
  type: exitcode-stdio-1.0
  hs-source-dirs: src benchmarks
  main-is: Builder.hs
  build-depends:
    base >= 3.0 && < 5,
    bytestring,
    criterion,
    deepseq,
    mtl
  -- build dependencies from using binary source rather than depending on the library
  build-depends: array, containers
  ghc-options: -O2


package-hashes:
    MD5:160a53ce244ae731c3d1f35046963e6a
    SHA1:ae58be3cd5e696e41f5bf287ac59bd13ed728472
    SHA256:961bec9e8aedd9af3edc01cc4f27d168783764b560bfaf8ca170a5273f6c3791
    SHA512:4ff8b7ee0fcb635031c37fc5f9e21a8f401abf07938c09a226b711d043873c0339ddc4bab509d8199f1532387d0eaa0d1356c5b9500929857f4c0328e6115aa8
    Skein512_512:e3b68f4c3715c9a54ef305f1dd226eff598777f04338f7ceeb37aba116566d6248b5e408b773ecb855521a464e391df49c36a6d4362e45aee4649fabd1d67c8f

package-locations:
    https://hackage.haskell.org/package/binary-0.7.2.0/binary-0.7.2.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/binary-0.7.2.0.tar.gz

