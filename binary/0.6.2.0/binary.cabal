-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:6ad8961650fc85929057d6d6e1ff0915
    SHA1:8983d519fefed332924763aa96b2cac8751a2aa2
    SHA256:4b293486a5d30cc3cbd16f1df9c488f4e813c9801996490737b49eef9fdea45a
    SHA512:40a4703bfd2b6679a66a4f9d4bd0799b93ac3af0ceecdd79e7e3ebbbf3510588682c197c200f4f8dbc4317746defdb3bbf17524ccb3a228fef118e74d6144f6e
    Skein512_512:90c3e267233e326d7b992637bf5ebf32b9ebfa670990e170343d2c02e9684fa974572c9e7082e1a375990aeafc21bcb8e3c6580b6f786f43965a93bd226754f4

package-locations:
    https://hackage.haskell.org/package/binary-0.6.2.0/binary-0.6.2.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/binary-0.6.2.0.tar.gz

package-size: 36987
-- END Added by all-cabal-hashes-tool

name:            binary
version:         0.6.2.0
x-revision: 1
license:         BSD3
license-file:    LICENSE
author:          Lennart Kolmodin <kolmodin@gmail.com>
maintainer:      Lennart Kolmodin, Don Stewart <dons@galois.com>
homepage:        https://github.com/kolmodin/binary
description:     Efficient, pure binary serialisation using lazy ByteStrings.
                 Haskell values may be encoded to and from binary formats, 
                 written to disk as binary, or sent over the network.
                 Serialisation speeds of over 1 G\/sec have been observed,
                 so this library should be suitable for high performance
                 scenarios.
synopsis:        Binary serialisation for Haskell values using lazy ByteStrings
category:        Data, Parsing
stability:       provisional
build-type:      Simple
cabal-version:   >= 1.8
tested-with:     GHC == 7.0.4, GHC == 7.4.1, GHC == 7.6.1
extra-source-files: README index.html

source-repository head
  type: git
  location: git://github.com/kolmodin/binary.git

flag development
  default: False

library
  build-depends:   base >= 3.0 && < 4.8, bytestring >= 0.9, containers, array
  hs-source-dirs:  src
  exposed-modules: Data.Binary,
                   Data.Binary.Put,
                   Data.Binary.Get,
                   Data.Binary.Get.Internal,
                   Data.Binary.Builder,
                   Data.Binary.Builder.Internal

  other-modules:   Data.Binary.Builder.Base

  extensions:      CPP,
                   FlexibleContexts

  ghc-options:     -O2 -Wall -fliberate-case-threshold=1000

test-suite qc
  type:  exitcode-stdio-1.0
  hs-source-dirs: tests
  main-is: QC.hs
  build-depends:
    array,
    base >= 3.0 && < 5,
    bytestring >= 0.9,
    containers,
    random>=1.0.1.0,
    test-framework,
    test-framework-quickcheck2,
    QuickCheck>=2.5

  ghc-options: -Wall
  hs-source-dirs: src

benchmark bench
  type: exitcode-stdio-1.0
  hs-source-dirs: benchmarks
  main-is: Benchmark.hs
  build-depends:
    base >= 3.0 && < 5,
    binary,
    bytestring
  c-sources: benchmarks/CBenchmark.c
  include-dirs: benchmarks
  ghc-options: -O2

benchmark get
  type: exitcode-stdio-1.0
  hs-source-dirs: benchmarks
  main-is: Get.hs
  build-depends:
    base >= 3.0 && < 5,
    binary,
    bytestring,
    criterion,
    deepseq,
    mtl
  ghc-options: -O2

benchmark builder
  type: exitcode-stdio-1.0
  hs-source-dirs: benchmarks
  main-is: Builder.hs
  build-depends:
    base >= 3.0 && < 5,
    binary,
    bytestring,
    criterion,
    deepseq,
    mtl
  ghc-options: -O2

