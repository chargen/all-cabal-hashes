-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:936c12d1f127c5825ecf9711c5138d31
    SHA1:5dbb8bb923dc69415090df926acf1964575bef7b
    SHA256:c3886b6203a5f963dcb249efb7bc87c33b17e5cc97276d91c38248019b451134
    SHA512:2511b11a4325dede9dd631cf653467c3f07672a78a405f85b70ac3957de5ac7f2571f431bb3b93b93330a29e9782ed38321f17062b4dac56bee079c8611937f2
    Skein512_512:db6214be2f2add5b077847c6f887e546c910caca994f053a64a98e8ab9248a588a0859f0277ab8a280bd0b7b64cb2e264d4db9ddc6c6caadb9128534152d582c

x-package-locations:
    https://hackage.haskell.org/package/base-io-access-0.4.0.0/base-io-access-0.4.0.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/base-io-access-0.4.0.0.tar.gz

x-package-size: 26051
-- END Added by all-cabal-hashes-tool

name:                   base-io-access
version:                0.4.0.0
synopsis:               The IO functions included in base delimited into small, composable classes
description:            An attempt to break up the monolithic IO monad into small, composable classes
                        that can be used to restrict a function to only having access to, say, functions
                        to work with the standard pipes, or a function that can access the environment.
                        The motivation for this library is to allow people to make a stricter contract
                        than simply "this function does IO", and express through the type system exactly
                        what IO is being performed.
license:                GPL-2
license-file:           LICENSE
author:                 Aaron Stevens
maintainer:             bheklilr2@gmail.com
homepage:               https://github.com/bheklilr/base-io-access
category:               System
build-type:             Simple
cabal-version:          >=1.10

source-repository head
    type:               git
    location:           git://github.com/bheklilr/base-io-access.git

library
    exposed-modules:    Access.Control.Concurrent,
                        Access.Control.Concurrent.Chan,
                        Access.Control.Concurrent.MVar,
                        Access.Control.Concurrent.QSem,
                        Access.Control.Concurrent.QSemN,
                        Access.Control.Exception,

                        Access.Data.IORef,
                        Access.Data.Unique,

                        Access.Debug.Trace,

                        Access.System.CPUTime,
                        Access.System.Environment,
                        Access.System.Exit,
                        Access.System.IO,
                        Access.System.IO.Error,
                        Access.System.Mem,
                        Access.System.Mem.StableName,
                        Access.System.Mem.Weak,
                        Access.System.Timeout,

                        Access.Core

    build-depends:      base >=4.7 && <4.8
    default-language:   Haskell2010
