-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:f5d14f8e348a7c245bfd8e01bf6f957c
    SHA1:f43239d6dbb1cde1ed45a97e834b1dbd1b1a55b1
    SHA256:3da8c1b280bdcbb72786dadadcba1ef426f8c9bab4659ca49182a506e15503be
    SHA512:208514fc1b2d5e48d959200a8f47c0907bd03921d7702415e98367876ce53aec0cd642c77023ffa6d82de6dcbc0b2875bcaf1d50f0ac305bae6ff40f3ba6dbf1
    Skein512_512:6120ad2a039501e77e2120610cc02a71c04599b2b3651ff37a8bb566eeb64af1e65d72ded461d28a67c111cfb2c071e7a51141b1cf4e646b957e06968541273e

x-package-locations:
    https://hackage.haskell.org/package/base-io-access-0.2.0.0/base-io-access-0.2.0.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/base-io-access-0.2.0.0.tar.gz

x-package-size: 12046
-- END Added by all-cabal-hashes-tool

name:                   base-io-access
version:                0.2.0.0
synopsis:               The IO functions included in base delimited into small, composable classes
description:            An attempt to break up the monolithic IO monad into small, composable classes
                        that can be used to restrict a function to only having access to, say, functions
                        to work with the standard pipes, or a function that can access the environment.
                        The motivation for this library is to allow people to make a stricter contract
                        than simply "this function does IO", and express through the type system exactly
                        what IO is being performed.
license:                GPL-2
license-file:           LICENSE
author:                 Aaron Stevens
maintainer:             bheklilr2@gmail.com
homepage:               https://github.com/bheklilr/base-io-access
category:               System
build-type:             Simple
cabal-version:          >=1.10

source-repository head
    type:               git
    location:           git://github.com/bheklilr/base-io-access.git

library
    exposed-modules:    Access.Control.Concurrent,
                        Access.Control.Concurrent.Chan,
                        Access.Control.Concurrent.MVar,
                        Access.Control.Exception,

                        Access.Data.IORef,
                        Access.Data.Unique,

                        Access.Debug.Trace,

                        Access.System.CPUTime,
                        Access.System.Environment,
                        Access.System.Exit,
                        Access.System.IO,
                        Access.System.IO.Error,
                        Access.System.Mem,
                        Access.System.Mem.StableName,
                        Access.System.Mem.Weak,
                        Access.System.Timeout

    build-depends:      base >=4.6 && <4.7
    default-language:   Haskell2010
