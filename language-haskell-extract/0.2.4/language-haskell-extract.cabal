-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:809d7e0c34a361f542b2253a0e7b5c48
    SHA1:2f8a2fbfdc952732a56d1225a8a4e45a8d9467d2
    SHA256:14da16e56665bf971723e0c5fd06dbb7cc30b4918cf8fb5748570785ded1acdb
    SHA512:6408459abf9d531ccbe7d65766d38fcb93f4d3f9c77db1a706231bf6d8ad6f845fcefc4fbb03833f45c74f21f324a44760f3c89ff093c69f1f9999e64344ab4d
    Skein512_512:c3c4ed91dfbd41e9647092774db35295c333c91250dfab7634cf2cb8559dba700202256b710cb5f2e41f6cdb61b9832848bdd4f61be2c6bc31f01f20424c9074

x-package-locations:
    https://hackage.haskell.org/package/language-haskell-extract-0.2.4/language-haskell-extract-0.2.4.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/language-haskell-extract-0.2.4.tar.gz

x-package-size: 2458
-- END Added by all-cabal-hashes-tool

name: language-haskell-extract
version: 0.2.4
cabal-version: >=1.6
build-type: Simple
license: BSD3
license-file: "BSD3.txt"
maintainer: Oscar Finnsson

stability: stable
homepage: http://github.com/finnsson/template-helper
package-url:
bug-reports:
synopsis: Module to automatically extract functions from the local code.
description:
   @language-haskell-extract@ contains some useful helper functions on top of Template Haskell.
   .
   @functionExtractor@ extracts all functions after a regexp-pattern.
   .
   > foo = "test"
   > boo = "testing"
   > bar = $(functionExtractor "oo$")
   .  
   will automagically extract the functions ending with @oo@ such as
   . 
   > bar = [("foo",foo), ("boo",boo)]
   .
   This can be useful if you wish to extract all functions beginning with test (for a test-framework)
   or all functions beginning with wc (for a web service).
   .
   @functionExtractorMap@ works like @functionsExtractor@ but applies a function over all function-pairs.
   .
   This functions is useful if the common return type of the functions is a type class.
   .
   Example:
   .
   > secondTypeclassTest =
   >   do let expected = ["45", "88.8", "\"hej\""]
   >          actual = $(functionExtractorMap "^tc" [|\n f -> show f|] )
   >      expected @=? actual
   > 
   > tcInt :: Integer
   > tcInt = 45
   > 
   > tcDouble :: Double
   > tcDouble = 88.8
   > 
   > tcString :: String
   > tcString = "hej"
category: Template Haskell
author: Oscar Finnsson & Emil Nordling

library
  ghc-options: -Wall
  hs-source-dirs: src
  exposed-modules: Language.Haskell.Extract
  build-depends: base >= 4 && < 5, regex-posix, template-haskell

source-repository head
  type:     git
  location: http://github.com/finnsson/template-helper
