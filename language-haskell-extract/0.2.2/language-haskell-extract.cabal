-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:0a78d745fa980191d01478cf88fca15d
    SHA1:4ee9f07e49b432e33e92cdb12e2b1f841146067d
    SHA256:5b2165b098070c93d8cb5dbc5904cb4bdc07d9ddcc73be73a261adfb3522e63f
    SHA512:d035ba5e7c761d0bc68194679ed11214a828bbd03f1c121d28161d3d1635b8cdb5ba9a83c9e84b45ba402d1febf9c8c338f4476d4d5f12d21f670249ddacf4bb
    Skein512_512:7c5b8160908de426f461d0b47775c0f6173b6d7c4a85f1e5e5e9b32c86d0ef528c387fe9764d320f05275baae66bd48f195042f6986f914f47baf19e72140228

x-package-locations:
    https://hackage.haskell.org/package/language-haskell-extract-0.2.2/language-haskell-extract-0.2.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/language-haskell-extract-0.2.2.tar.gz

x-package-size: 2982
-- END Added by all-cabal-hashes-tool

name: language-haskell-extract
version: 0.2.2
cabal-version: >=1.6
build-type: Simple
license: BSD3
license-file: "BSD3.txt"
maintainer: Oscar Finnsson

stability: stable
homepage: http://github.com/finnsson/template-helper
package-url:
bug-reports:
synopsis: Module to automatically extract functions from the local code.
description:
   @language-haskell-extract@ contains some useful helper functions on top of Template Haskell.
   .
   @functionExtractor@ extracts all functions after a regexp-pattern.
   .
   > foo = "test"
   > boo = "testing"
   > bar = $(functionExtractor "oo$")
   .  
   will automagically extract the functions ending with @oo@ such as
   . 
   > bar = [("foo",foo), ("boo",boo)]
   .
   This can be useful if you wish to extract all functions beginning with test (for a test-framework)
   or all functions beginning with wc (for a web service).
   .
   @functionExtractorMap@ works like @functionsExtractor@ but applies a function over all function-pairs.
   .
   This functions is useful if the common return type of the functions is a type class.
   .
   Example:
   .
   > secondTypeclassTest =
   >   do let expected = ["45", "88.8", "\"hej\""]
   >          actual = $(functionExtractorMap "^tc" [|\n f -> show f|] )
   >      expected @=? actual
   > 
   > tcInt :: Integer
   > tcInt = 45
   > 
   > tcDouble :: Double
   > tcDouble = 88.8
   > 
   > tcString :: String
   > tcString = "hej"
category: Template Haskell
author: Oscar Finnsson & Emil Nordling
 
library
  hs-source-dirs: src
  exposed-modules: Language.Haskell.Extract
  build-depends: base >= 4 && < 5, regex-posix, haskell-src-exts >= 1.8.0, template-haskell

source-repository head
  type:     git
  location: https://github.com/finnsson/language-haskell-extract/
