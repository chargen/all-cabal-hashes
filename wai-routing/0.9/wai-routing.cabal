-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:c194e7c52c10801656f66024b86507db
    SHA1:3e03548dfbd00ff4d8d49de58a050fff09d69621
    SHA256:f8d63a0647279c65a20f5010571565fd69cdbbc8a3f16d0905e0405cb655977d
    SHA512:7620c6442913fca1ebbfde7d9fd4a6c3a3588c6df622632cffd152727549e643b4d7e29c57d82833af8221202de1fb55d1be52ce08e147d6c99acd519fe26300
    Skein512_512:e5d3b073f373624d9d493f81d47331a7b360182290c94e83aeba5136d7deff4074aff04e8a7458bf0358ceab2a24b3c2e9aecb42e3cd33fa75c7b246865e73cc

package-locations:
    https://hackage.haskell.org/package/wai-routing-0.9/wai-routing-0.9.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/wai-routing-0.9.tar.gz

package-size: 14779
-- END Added by all-cabal-hashes-tool

name:                wai-routing
version:             0.9
synopsis:            Declarative routing for WAI.
license:             OtherLicense
license-file:        LICENSE
author:              Toralf Wittner
maintainer:          Toralf Wittner <tw@dtex.org>
copyright:           (c) 2014 Toralf Wittner
homepage:            https://github.com/twittner/wai-routing/
bug-reports:         https://github.com/twittner/wai-routing/issues
stability:           experimental
category:            Web
build-type:          Simple
cabal-version:       >= 1.10

extra-source-files:
    README.md
    CHANGELOG.md
    examples/*.hs

description:
    Enables the declaration of \"routes\" which handle requests to a
    specific URL.
    .
    The set of possible handlers can be restricted by \"predicates\",
    which operate on WAI requests and have to be true or else the
    handler will not be called.
    .
    Example:
    .
    >import Data.ByteString (ByteString)
    >import Data.Text (Text)
    >import Network.Wai
    >import Network.Wai.Predicate
    >import Network.Wai.Routing
    >import Network.Wai.Handler.Warp
    >
    >main :: IO ()
    >main = run 8080 (route (prepare start))
    >
    >start :: Monad m => Routes a m ()
    >start = do
    >    get "/user/:name" (continue fetchUser) $
    >        capture "name"
    >
    >    get "/user/find" (continue findUser) $
    >        query "byName" ||| query "byId"
    >
    >    delete "/user/:name" rmUser $
    >        capture "name" .&. opt (cookie "foo")
    >
    >fetchUser :: Monad m => Text -> m Response
    >fetchUser name = ...
    >
    >findUser :: Monad m => Either ByteString Word64 -> m Response
    >findUser (Left  name)  = ...
    >findUser (Right ident) = ...
    >
    >rmUser :: Monad m => Text ::: Maybe Int -> Continue m -> m ResponseReceived
    >rmUser (name ::: foo) k = k $ ...

source-repository head
    type:             git
    location:         git://github.com/twittner/wai-routing.git

library
    default-language: Haskell2010
    hs-source-dirs:   src
    ghc-options:      -Wall -O2 -fwarn-tabs -funbox-strict-fields
    ghc-prof-options: -prof -auto-all

    exposed-modules:
        Network.Wai.Routing
        Network.Wai.Routing.Request
        Network.Wai.Routing.Route
        Network.Wai.Routing.Predicate

    build-depends:
        attoparsec       >= 0.10  && < 0.13
      , base             == 4.*
      , bytestring       >= 0.9   && < 0.11
      , bytestring-from  >= 0.2   && < 0.4
      , cookie           == 0.4.*
      , case-insensitive >= 1.1   && < 1.3
      , http-types       == 0.8.*
      , transformers     >= 0.3   && < 0.5
      , wai              == 3.0.*
      , wai-predicates   == 0.7.*
      , wai-route        == 0.2.*

test-suite wai-routing-tests
    type:             exitcode-stdio-1.0
    default-language: Haskell2010
    hs-source-dirs:   test
    main-is:          TestSuite.hs
    ghc-options:      -Wall -O2 -fwarn-tabs
    ghc-prof-options: -prof -auto-all

    other-modules:
        Tests.Wai.Route
        Tests.Wai.Util

    build-depends:
        base             == 4.*
      , blaze-builder    == 0.3.*
      , bytestring
      , case-insensitive
      , http-types
      , HUnit
      , QuickCheck
      , tasty            >= 0.8
      , tasty-hunit      >= 0.8
      , tasty-quickcheck >= 0.8
      , wai
      , wai-predicates
      , wai-routing

benchmark wai-routing-bench
    type:             exitcode-stdio-1.0
    default-language: Haskell2010
    main-is:          Bench.hs
    hs-source-dirs:   bench
    ghc-options:      -Wall -O2 -fwarn-tabs
    build-depends:
        base          == 4.*
      , criterion     == 0.8.*
      , http-types
      , wai
      , wai-predicates
      , wai-routing

