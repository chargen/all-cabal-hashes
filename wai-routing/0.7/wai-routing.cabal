-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:e895a94547f4a0cd867cf8e4efa897e9
    SHA1:da1fa01b3cca97d406f072744f5d3d64c95eeb7a
    SHA256:bbb8ed25f1427ae1afc13e8676f1f1cf6832b3157bddd753774c61ebef1fa562
    SHA512:0983ab352c14d6e4810843348b8e0104f4b3988c02f1e62aae523a26399185a53f6709d7a8863dddc52a05e8c09aa8f5f71592aa5a5dbdeea4c6ccaf00c0bfcd
    Skein512_512:ff5b51d7fbc05f2c1f04df3b38c57972ef1288b951fb82d78acfee21332e1443f2acf04d2b6a2a415240ab762265a708d70b22eec418b5c92f3dc3943d84292a

x-package-locations:
    https://hackage.haskell.org/package/wai-routing-0.7/wai-routing-0.7.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/wai-routing-0.7.tar.gz

x-package-size: 13138
-- END Added by all-cabal-hashes-tool

name:                wai-routing
version:             0.7
synopsis:            Declarative routing for WAI.
license:             OtherLicense
license-file:        LICENSE
author:              Toralf Wittner
maintainer:          Toralf Wittner <tw@dtex.org>
copyright:           (c) 2014 Toralf Wittner
homepage:            https://github.com/twittner/wai-routing/
bug-reports:         https://github.com/twittner/wai-routing/issues
stability:           experimental
category:            Web
build-type:          Simple
cabal-version:       >= 1.10

extra-source-files:
    README.md
    CHANGELOG.md
    examples/*.hs

description:
    Enables the declaration of \"routes\" which handle requests to a
    specific URL.
    .
    The set of possible handlers can be restricted by \"predicates\",
    which operate on WAI requests and have to be true or else the
    handler will not be called.
    .
    Example:
    .
    >import Data.ByteString (ByteString)
    >import Data.Text (Text)
    >import Network.Wai
    >import Network.Wai.Predicate
    >import Network.Wai.Routing
    >import Network.Wai.Handler.Warp
    >
    >main :: IO ()
    >main = run 8080 (route (prepare start))
    >
    >start :: Monad m => Routes a m ()
    >start = do
    >    get "/user/:name" fetchUser $
    >        capture "name"
    >
    >    get "/user/find" findUser $
    >        query "byName" ||| query "byId"
    >
    >    delete "/user/:name" rmUser $
    >        capture "name" .&. opt (cookie "foo")
    >
    >fetchUser :: Monad m => Text -> m Response
    >fetchUser name = ...
    >
    >findUser :: Monad m => Either ByteString Word64 -> m Response
    >findUser (Left  name)  = ...
    >findUser (Right ident) = ...
    >
    >rmUser :: Monad m => Text ::: Maybe Int -> m Response
    >rmUser (name ::: foo)  = ...

source-repository head
    type:             git
    location:         git://github.com/twittner/wai-routing.git

library
    default-language: Haskell2010
    hs-source-dirs:   src
    ghc-options:      -Wall -O2 -fwarn-tabs -funbox-strict-fields
    ghc-prof-options: -prof -auto-all

    exposed-modules:
        Network.Wai.Routing
        Network.Wai.Routing.Request
        Network.Wai.Routing.Route
        Network.Wai.Routing.Predicate

    build-depends:
        attoparsec       >= 0.10  && < 0.12
      , base             == 4.*
      , bytestring       >= 0.9   && < 0.11
      , bytestring-from  == 0.2.*
      , cookie           == 0.4.*
      , case-insensitive >= 1.1   && < 1.3
      , http-types       == 0.8.*
      , transformers     >= 0.3   && < 0.5
      , wai              >= 2.0   && < 2.2
      , wai-predicates   >= 0.3.1 && < 0.6
      , wai-route        == 0.1.*

test-suite wai-routing-tests
    type:             exitcode-stdio-1.0
    default-language: Haskell2010
    hs-source-dirs:   test
    main-is:          TestSuite.hs
    ghc-options:      -Wall -O2 -fwarn-tabs
    ghc-prof-options: -prof -auto-all

    other-modules:
        Tests.Wai.Route
        Tests.Wai.Util

    build-depends:
        base             == 4.*
      , blaze-builder    == 0.3.*
      , bytestring
      , case-insensitive
      , http-types
      , HUnit
      , QuickCheck
      , tasty            >= 0.8
      , tasty-hunit      >= 0.8
      , tasty-quickcheck >= 0.8
      , wai
      , wai-predicates
      , wai-routing

