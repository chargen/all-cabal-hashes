-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:993e07866c6c5ae24fbb953a5ed716fc
    SHA1:693118314769ca4a592a408fcea33762e0feafe3
    SHA256:1f78baf32da8a3c5b29464709b0ad37a9bc56f817692f699bab526cd2f73b57e
    SHA512:fae55ca0ad040d4da6b45e46de3ca66bc2f01a1c5b76c03016809095102d45471369d48928ec276b33ba5af0ab0d6258e96288267071a63919d381162a894ae6
    Skein512_512:4e63abc49577d916eda4bd149f656f9c2d0bc862d9458977f149497a5211b468e8e1b2c3513039df71af66220316d8f7973d6f1f09e827de8c33c5b4ede71c78

package-locations:
    https://hackage.haskell.org/package/equivalence-0.1/equivalence-0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/equivalence-0.1.tar.gz

package-size: 5076
-- END Added by all-cabal-hashes-tool

Name:            equivalence
Version:         0.1
License:         BSD3
License-File:    LICENSE
Author:          Patrick Bahr <paba@diku.dk>
Maintainer:      Patrick Bahr <paba@diku.dk>
Synopsis:        Maintaining an equivalence relation implemented as union-find using STT.
Description:	 
  This is an implementation of Tarjan's Union-Find algorithm (Robert
  E. Tarjan. "Efficiency of a Good But Not Linear Set Union
  Algorithm", JACM 22(2), 1975) in order to maintain an equivalence
  relation. 
  
  This implementation is a port of the /union-find/ package using the
  ST monad transformer (instead of the IO monad).
Category:        Algorithms, Data
Stability:       provisional
Build-Type:      Simple
Cabal-Version:   >= 1.6

Library
  Build-Depends:
    base >= 4 && < 5, containers, mtl, STMonadTrans
  Exposed-Modules:
    Data.Equivalence.STT,
    Data.Equivalence.Monad
  Hs-Source-Dirs: src

