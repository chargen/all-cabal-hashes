-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:ecb9583f8538bb3f8fc047f85696c3c4
    SHA1:15610b6403a18b3db3bc71bcdddca09e07b67b05
    SHA256:f1ecc4d5d5b12af55cd4f64d1c9c3575b7a1a4881ed15599bb01d78962517022
    SHA512:66b505b6a39e5a4552b505a352d747969111239eccdee8c56620841d5280f9e7fe0e78335549321142017d89352142cd8ae6958be15050d6bf47a8fb76085aa0
    Skein512_512:b94bb8a2cd8cf5c0ae6c75e6093d7d8d54b110579e1eb62b1b2b1d2dbcd288b4acae3ebb086ced75573d8f628532a2df9cf073547a952d6cc97dbe156dc3f339

package-locations:
    https://hackage.haskell.org/package/loops-0.1.0.1/loops-0.1.0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/loops-0.1.0.1.tar.gz

package-size: 6802
-- END Added by all-cabal-hashes-tool

name:                loops
version:             0.1.0.1
synopsis:            Fast imperative-style loops
description:
  @loops@ is a library for fast, imperative-style loops in Haskell. Performance
  is robust because there is no reliance on fusion. @do@-notation nests loops,
  providing syntax cleaner than manual recursion. A class @ForEach@ is provided
  enabling iteration over common container types.
  .
  For best performance, please compile your code with @-O2@. You should also
  use GHC's LLVM backend if possible; it generally produces faster executables.
license:             BSD3
license-file:        LICENSE
author:              Thomas Tuegel
maintainer:          ttuegel@gmail.com
bug-reports:         https://github.com/ttuegel/loops/issues
copyright:           (c) Thomas Tuegel 2014
category:            Control
build-type:          Simple
extra-source-files:  README.md, README.lhs
cabal-version:       >=1.10
tested-with:         GHC == 7.6.3, GHC == 7.8.2

source-repository head
  type: git
  location: https://github.com/ttuegel/loops.git

library
  exposed-modules:
    Control.Monad.Loop
    Control.Monad.Loop.ForEach
    Control.Monad.Loop.Internal
  build-depends:
    base >=4.6 && <5,
    primitive >=0.5 && <1,
    transformers >=0.3 && <1,
    vector >=0.10 && <1
  ghc-options: -Wall
  hs-source-dirs: src
  default-language: Haskell2010

test-suite tests
  type: exitcode-stdio-1.0
  hs-source-dirs:
    test
  main-is:
    Test.hs
  other-modules:
    Test.Sum
  build-depends:
    base >=4.6 && <5,
    loops,
    tasty >=0.8 && <1,
    tasty-quickcheck >=0.8 && <1
  ghc-options: -Wall
  default-language: Haskell2010

benchmark benchs
  type: exitcode-stdio-1.0
  hs-source-dirs:
    bench
  main-is:
    Bench.hs
  other-modules:
    Bench.Sum
  build-depends:
    base >=4.6 && <5,
    criterion >=0.8 && <1,
    loops,
    transformers >=0.3 && <1,
    vector >=0.10 && <1
  ghc-options: -Wall
  default-language: Haskell2010
