-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:db58ce48388aa2833d17959a9daff93d
    SHA1:f11f3567215549102bc910d5a511665a511ba87f
    SHA256:0473f3e47ba1d5c4c94e1e7b3d148ef3a80cc116a1ed3e2ba7e30960a90ef793
    SHA512:506a85049f9c3c154e5953d5751416a8e6452e2dfe9a935a85cf196ded918ce0046c21bb40add6a4aeedca964c6fbcc8063537b0ac494ae4e4d632e4793be8c1
    Skein512_512:7f15778dceacd6df88a8dd269d9539a23b2cd12ed49ad94ff8c40e81edac23f95a037793e005720f34a183a4b59530de0b0b1d6c8d7abb0455a65bbe6cd80ec3

x-package-locations:
    https://hackage.haskell.org/package/NoSlow-0.1/NoSlow-0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/NoSlow-0.1.tar.gz

x-package-size: 13038
-- END Added by all-cabal-hashes-tool

Name:           NoSlow
Version:        0.1
License:        BSD3
License-File:   LICENSE
Author:         Roman Leshchinskiy <rl@cse.unsw.edu.au>
Maintainer:     Roman Leshchinskiy <rl@cse.unsw.edu.au>
Copyright:      Roman Leshchinskiy 2009
Homepage:       http://www.cse.unsw.edu.au/~rl/code/darcs/NoSlow
Category:       Development, Profiling
Synopsis:       Microbenchmarks for various array libraries
Description:
        .
        NoSlow is a benchmark suite for several Haskell array libraries:
        standard lists, primitive sequential arrays from the DPH project,
        uvector, vector (primitive, storable and boxed arrays) and
        storablevector. At the moment, it implements a bunch of fairly random
        loop micro-kernels but will include many more benchmarks in the future.
        .
        In its present state, NoSlow /cannot/ be used to reliably compare the
        performance of the benchmarked libraries. It can be quite helpful for
        identifying cases where a closer inspection of the generated code
        might be warranted, however.
        .
        The package builds two binaries.
        .
        [@noslow -u log@] runs the benchmarks and writes the results to 'log'
        .
        [@noslow-table log > table.html@] outputs the results as a HTML table.
        It also supports the following options.
        .
        [@noslow-table log --type=Double@] only outputs the results of 'Double'
        benchmarks.
        .
        [@noslow-table --diff log1 log2@] produces a table comparing the
        results from 'log1' and 'log2' (2 means the first run was 2x slower
        than the second; 0.5 means 2x faster).
        .
        NoSlow is described in more detail here:
        <http://unlines.wordpress.com/2009/11/27/noslow/>.
        .

Build-Type:     Simple
Cabal-Version:  >= 1.2

Flag dph-prim-seq
Flag vector
Flag uvector
Flag storablevector

Executable noslow
  Main-Is: NoSlow/Main.hs

  Build-Depends:
    base >= 3 && < 5,
    template-haskell,
    criterion >= 0.2

  if flag(dph-prim-seq)
    build-depends: dph-prim-seq, dph-base
    cpp-options: -DUSE_DPH_PRIM_SEQ

  if flag(vector)
    build-depends: vector
    cpp-options: -DUSE_VECTOR

  if flag(uvector)
    build-depends: uvector
    cpp-options: -DUSE_UVECTOR

  if flag(storablevector)
    build-depends: storablevector
    cpp-options: -DUSE_STORABLEVECTOR

  Ghc-Options:
    -O2

  Other-Modules:
        NoSlow.Backend.DPH.Prim.Seq
        NoSlow.Backend.Interface
        NoSlow.Backend.List
        NoSlow.Backend.StorableVector
        NoSlow.Backend.TH
        NoSlow.Backend.Uvector
        NoSlow.Backend.Vector.Primitive
        NoSlow.Backend.Vector.Storable
        NoSlow.Backend.Vector
        NoSlow.Main.TH
        NoSlow.Main.Tree
        NoSlow.Main.Util
        NoSlow.Micro.DPH.Prim.Seq.Double
        NoSlow.Micro.DPH.Prim.Seq
        NoSlow.Micro.Kernels
        NoSlow.Micro.List.Double
        NoSlow.Micro.List
        NoSlow.Micro.StorableVector.Double
        NoSlow.Micro.StorableVector
        NoSlow.Micro.Uvector.Double
        NoSlow.Micro.Uvector
        NoSlow.Micro.Vector.Boxed.Double
        NoSlow.Micro.Vector.Boxed
        NoSlow.Micro.Vector.Primitive.Double
        NoSlow.Micro.Vector.Primitive
        NoSlow.Micro.Vector.Storable.Double
        NoSlow.Micro.Vector.Storable
        NoSlow.Util.Base
        NoSlow.Util.Computation
        

Executable noslow-table
  Main-Is: Table.hs

  Build-Depends:
    base >= 3 && < 5,
    containers,
    criterion >=0.2

