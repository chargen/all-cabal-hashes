-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:e479dc3add14c8678bb808a8bd5517ae
    SHA1:9adb3881a3aba913d1a8ded6389dc0873015f881
    SHA256:da09ad29ed310793a11821c44cfe717e403dd3e1190176887d098c71c5fcac6b
    SHA512:e756db79da1eb7d5cc731a180d83d012ae910f075ddfe514de0741941ccac113bddb4132d4db9415916367f5e67f27ccc14fd2680531efe8d135bdbbb5cdeb6e
    Skein512_512:520130fb5e5a79f06be2faf102085acde31dd814967821ad8c7f8c54b74fc5ecfd9fe7ecba42dc14eb0c50cd4c015d3bc673d1ee2dc978590a5a16542af81fc0

package-locations:
    https://hackage.haskell.org/package/cabal-install-0.5.2/cabal-install-0.5.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/cabal-install-0.5.2.tar.gz

package-size: 71905
-- END Added by all-cabal-hashes-tool

Name:               cabal-install
Version:            0.5.2
Synopsis:           The command-line interface for Cabal and Hackage.
Description:
    The \'cabal\' command-line program simplifies the process of managing
    Haskell software by automating the fetching, configuration, compilation
    and installation of Haskell libraries and programs.
License:            BSD3
License-File:       LICENSE
Author:             Lemmih <lemmih@gmail.com>
                    Paolo Martini <paolo@nemail.it>
                    Bjorn Bringert <bjorn@bringert.net>
                    Isaac Potoczny-Jones <ijones@syntaxpolice.org>
                    Duncan Coutts <duncan@haskell.org>
Maintainer:         cabal-devel@haskell.org
Copyright:          2005 Lemmih <lemmih@gmail.com>
                    2006 Paolo Martini <paolo@nemail.it>
                    2007 Bjorn Bringert <bjorn@bringert.net>
                    2007 Isaac Potoczny-Jones <ijones@syntaxpolice.org>
                    2008 Duncan Coutts <duncan@haskell.org>
Stability:          Experimental
Category:           Distribution
Build-type:         Simple
Extra-Source-Files: README bash-completion/cabal bootstrap.sh
Cabal-Version:      >= 1.2

flag old-base
  description: Old, monolithic base
  default: False

flag bytestring-in-base

Executable cabal
    Main-Is:            Main.hs
    -- We want assertion checking on even if people build with -O
    -- although it is expensive, we want to catch problems early:
    Ghc-Options:        -Wall -fno-ignore-asserts
    Other-Modules:
        Distribution.Client.BuildReports.Anonymous
        Distribution.Client.BuildReports.Storage
        Distribution.Client.BuildReports.Upload
        Distribution.Client.Check
        Distribution.Client.Config
        Distribution.Client.Dependency
        Distribution.Client.Dependency.Bogus
        Distribution.Client.Dependency.TopDown
        Distribution.Client.Dependency.TopDown.Constraints
        Distribution.Client.Dependency.TopDown.Types
        Distribution.Client.Dependency.Types
        Distribution.Client.Fetch
        Distribution.Client.HttpUtils
        Distribution.Client.IndexUtils
        Distribution.Client.Install
        Distribution.Client.InstallPlan
        Distribution.Client.InstallSymlink
        Distribution.Client.List
        Distribution.Client.Setup
        Distribution.Client.SetupWrapper
        Distribution.Client.SrcDist
        Distribution.Client.Tar
        Distribution.Client.Types
        Distribution.Client.Update
        Distribution.Client.Upload
        Distribution.Client.Utils
        Distribution.Client.Win32SelfUpgrade

    build-depends: Cabal >= 1.4 && < 1.5,
                   filepath >= 1.0,
                   network >= 1 && < 3,
                   HTTP >= 3000 && < 3002,
                   zlib >= 0.4

    if flag(old-base)
      build-depends: base < 3
    else
      build-depends: base       >= 3   && < 4,
                     process    >= 1   && < 1.1,
                     directory  >= 1   && < 1.1,
                     pretty     >= 1   && < 1.1,
                     random     >= 1   && < 1.1,
                     containers >= 0.1 && < 0.2,
                     array      >= 0.1 && < 0.2,
                     old-time   >= 1   && < 1.1

    if flag(bytestring-in-base)
      build-depends: base >= 2.0 && < 2.2
    else
      build-depends: base < 2.0 || >= 3.0, bytestring >= 0.9

    if os(windows)
      build-depends: Win32 >= 2 && < 3
      cpp-options: -DWIN32
    else
      build-depends: unix >= 2.2 && < 2.4
    extensions: CPP
