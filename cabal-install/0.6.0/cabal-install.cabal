-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:ddce0bda54a99d816091e77ab6e4b39f
    SHA1:13b9591bb6c270cc995903ebf4089b07d18a49e6
    SHA256:16943080e3e450a910b96e1ff84864ea0817adcf1c343213519919928dbef563
    SHA512:11b79bfa0d1d6efd7294c5842f06d8531e19dd309740ce3903e8234b48d69f2688c24667507bb274bf81b922294b1d3c43ff1f8da9c931d82ecea36400131390
    Skein512_512:d4b81eae4435eb77fda583475a61e73a3c4d88a27acad1597e3fc79ab9480e753e49ea4d9671b2311374976f283ebada0421af3e18c83025bd0b17026240fe22

x-package-locations:
    https://hackage.haskell.org/package/cabal-install-0.6.0/cabal-install-0.6.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/cabal-install-0.6.0.tar.gz

x-package-size: 76464
-- END Added by all-cabal-hashes-tool

Name:               cabal-install
Version:            0.6.0
Synopsis:           The command-line interface for Cabal and Hackage.
Description:
    The \'cabal\' command-line program simplifies the process of managing
    Haskell software by automating the fetching, configuration, compilation
    and installation of Haskell libraries and programs.
License:            BSD3
License-File:       LICENSE
Author:             Lemmih <lemmih@gmail.com>
                    Paolo Martini <paolo@nemail.it>
                    Bjorn Bringert <bjorn@bringert.net>
                    Isaac Potoczny-Jones <ijones@syntaxpolice.org>
                    Duncan Coutts <duncan@haskell.org>
Maintainer:         cabal-devel@haskell.org
Copyright:          2005 Lemmih <lemmih@gmail.com>
                    2006 Paolo Martini <paolo@nemail.it>
                    2007 Bjorn Bringert <bjorn@bringert.net>
                    2007 Isaac Potoczny-Jones <ijones@syntaxpolice.org>
                    2008 Duncan Coutts <duncan@haskell.org>
Stability:          Experimental
Category:           Distribution
Build-type:         Simple
Extra-Source-Files: README bash-completion/cabal bootstrap.sh
Cabal-Version:      >= 1.4

flag old-base
  description: Old, monolithic base
  default: False

flag bytestring-in-base

Executable cabal
    Main-Is:            Main.hs
    -- We want assertion checking on even if people build with -O
    -- although it is expensive, we want to catch problems early:
    Ghc-Options:        -Wall -fno-ignore-asserts
    Other-Modules:
        Distribution.Client.BuildReports.Anonymous
        Distribution.Client.BuildReports.Storage
        Distribution.Client.BuildReports.Upload
        Distribution.Client.Check
        Distribution.Client.Config
        Distribution.Client.Dependency
        Distribution.Client.Dependency.Bogus
        Distribution.Client.Dependency.TopDown
        Distribution.Client.Dependency.TopDown.Constraints
        Distribution.Client.Dependency.TopDown.Types
        Distribution.Client.Dependency.Types
        Distribution.Client.Fetch
        Distribution.Client.HttpUtils
        Distribution.Client.IndexUtils
        Distribution.Client.Install
        Distribution.Client.InstallPlan
        Distribution.Client.InstallSymlink
        Distribution.Client.List
        Distribution.Client.Setup
        Distribution.Client.SetupWrapper
        Distribution.Client.SrcDist
        Distribution.Client.Tar
        Distribution.Client.Types
        Distribution.Client.Update
        Distribution.Client.Upload
        Distribution.Client.Utils
        Distribution.Client.Win32SelfUpgrade
        Paths_cabal_install

    build-depends: Cabal >= 1.6 && < 1.7,
                   filepath >= 1.0,
                   network >= 1 && < 3,
                   HTTP >= 3000 && < 3002,
                   zlib >= 0.4 && < 0.6

    if flag(old-base)
      build-depends: base < 3
    else
      build-depends: base       >= 3   && < 4,
                     process    >= 1   && < 1.1,
                     directory  >= 1   && < 1.1,
                     pretty     >= 1   && < 1.1,
                     random     >= 1   && < 1.1,
                     containers >= 0.1 && < 0.3,
                     array      >= 0.1 && < 0.3,
                     old-time   >= 1   && < 1.1

    if flag(bytestring-in-base)
      build-depends: base >= 2.0 && < 2.2
    else
      build-depends: base < 2.0 || >= 3.0, bytestring >= 0.9

    if os(windows)
      build-depends: Win32 >= 2 && < 3
      cpp-options: -DWIN32
    else
      build-depends: unix >= 2.0 && < 2.4
    extensions: CPP
