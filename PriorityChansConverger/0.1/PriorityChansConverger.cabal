-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:c8f9d8803b786e3fddef7396ae386ffc
    SHA1:bc733c2e8e27652b27cdfc654077e7cc9afbe824
    SHA256:410971d9e48f7d9ddd722d1a785e2d0fb62c384f9f12cf7b9f651a9b95f6a808
    SHA512:ba44468156e9eddfcd47fce9cb3a8d5130949876635355172d6f42c83e6c2cae790be748f1ec95ae45a14b7cc88c923d467a977eb94a4fb7935dd674b7882347
    Skein512_512:f6bf83d37f76753c30a9692a55fe842925151c2c0cd65813c239b91f73e9368bf2cc08db12708dcfdb47eff5692b88b0cf03360ee72c774e3bf2a34395000eaf

x-package-locations:
    https://hackage.haskell.org/package/PriorityChansConverger-0.1/PriorityChansConverger-0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/PriorityChansConverger-0.1.tar.gz

x-package-size: 29638
-- END Added by all-cabal-hashes-tool

Name: PriorityChansConverger
Synopsis: 
        Read single output from an array of inputs - channels with priorities
Description: 
        Abbreviation for the @PriorityChansConverger@ is PCC.
        .
        Based on @STM.TChan@, extended with capacity control. 
        Wrapped into IO version is also available. 
        .
        When user reads from the PCC, the choice is made - from which channel 
        to read. System selects a nonempty channel, whose (CurrentPriority, 
        StartPriority) tuple is max. The side effect of the channel selection 
        is it's /CurrentPriority/ decrease by one, if it's value becomes 
        less than one, then the /CurrentPriority/ is set to /StartPriority/.
        .
        For the main API interface:
        .
        @import Control.Concurrent.PriorityChansConverger@
        .
        The realization probably isn't 
        very fast and isn't good at memory economy, since it uses fresh high 
        level primitive - STM. It wasn't intended to be used 
        with millions of channels. But it's max throughput comparing to the 
        ordinary @Chan@ throughput is to be estimated (will do it in some 
        future version).
Version: 0.1
category: Concurrency
Author:     Andrejs Sisojevs <andrejs.sisojevs@nextmail.ru>
Maintainer: Andrejs Sisojevs <andrejs.sisojevs@nextmail.ru>
Copyright:  Copyright (c) 2009-2010 Andrejs Sisojevs
License: LGPL
License-file: COPYRIGHT
Stability: experimental
Tested-with: GHC ==6.10.4
Cabal-version: >=1.6
Build-type: Simple
Extra-source-files: 
        COPYING 
        COPYRIGHT 
        doinst.sh
        examples/SimplePCCTestEnvironment/SimplePCCTestEnvironment.hs
Build-depends: base ==4.*, containers -any, stm -any
Exposed-modules: 
        Control.Concurrent.ConcurrentUISupport
        Control.Concurrent.STM.TChan.ExtsCommons
        Control.Concurrent.STM.TChan.TChanL
        Control.Concurrent.STM.TChan.TChanL_
        Control.Concurrent.STM.TChan.TChanB
        Control.Concurrent.STM.TChan.TChanB_
        Control.Concurrent.PriorityChansConverger
        Control.Concurrent.PriorityChansConverger.Commons
        Control.Concurrent.PriorityChansConverger.PriorityChansConverger
        Control.Concurrent.PriorityChansConverger.PriorityChansConvergerSTM
Other-modules: 
        Data.MyHelpers
        Data.MyHelpers_