-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:f2a445ef5bde84efb878fdddbcff777f
    SHA1:3751a3b62dfe9b04d924c908b597cb9c2d7f8854
    SHA256:db6de6dcaf3fc056645d1f0ec37d1cb280de5da40cc333113be138e529af5ea8
    SHA512:6f303e3096f18a85c2723e05e2fff7f54390f3e193815bfb51f9e07c30cb3c3728f4f4f8027ca26a58a17fd3eea9876fc6be11bf53416a1ccb748dc5c8b911b2
    Skein512_512:c136762e78bf77427f3eee133df42876a2e50139ed83fce07dcc28c6be5aee4dfdba572a64150deaad4cbeed4b800b789810edcf4dcd187894349616fb603f00

package-locations:
    https://hackage.haskell.org/package/special-keys-0.1.0.2/special-keys-0.1.0.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/special-keys-0.1.0.2.tar.gz

package-size: 3947
-- END Added by all-cabal-hashes-tool

name:                special-keys
version:             0.1.0.2
synopsis:            Simple data types that help me here and there. 
description:         Datatypes that I use as keys to index other data types. Here you will find a wrap of UUID and also constraints on Text so that it never exceeds a given number of characters.
license:             BSD3
license-file:        LICENSE
author:              Hugo Gomes
maintainer:          mr.hugo.gomes@gmail.com
-- copyright:           
category:            Data
build-type:          Simple
cabal-version:       >=1.8

library
  exposed-modules:  Keys.UUID,
                    Keys.Constraints,
                    Keys.Random

  -- other-modules:       
  build-depends:    base >= 4 && < 5,
                    hashable >= 1.2,
                    text >= 0.11,
                    safecopy >= 0.8,
                    cereal >= 0.3,
                    path-pieces >= 0.1,
                    blaze-markup >= 0.5,
                    deepseq >= 1.3,
                    primitive >= 0.5,
                    bytestring >= 0.10,
                    uuid >= 1.2,
                    mwc-random >= 0.12,
                    aeson >= 0.6.1.0
