-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:acecabbada86bb5d880deda13dc05444
    SHA1:d69b8991edc3be9924c36fea0da14f84193ef37a
    SHA256:2a4e9f479c217700b7b238fd55e754d99f2b848f8266c227aa33be1b9adce330
    SHA512:27b0161b28f03d0d46573bef978681d8409fe63a0128a23f0a6a1eda3ff28dc19a8bd5c5b365a3cd2a49699dfdcf193c98940f4f953e0e6b436155e3c8478571
    Skein512_512:cd70cad45419d547a1f7df3fb4538eb5fec06ec111057f6110d65b6b0c17b0ed7622bfecc2985a8dc5904d65466532d0754a79ad31de9bdb82d0e7af1fac2ec9

package-locations:
    https://hackage.haskell.org/package/meta-par-accelerate-0.3/meta-par-accelerate-0.3.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/meta-par-accelerate-0.3.tar.gz

package-size: 4699
-- END Added by all-cabal-hashes-tool

Name:                meta-par-accelerate
Version:             0.3
Synopsis:            Support for integrated Accelerate computations within Meta-par.

-- Version history:
-- 
-- 0.3: Initial release.

Description:        
  This package provides a 'Control.Monad.Par.Meta.Resource' for building meta-par
  (<hackage.haskell.org/package/meta-par>) schedulers with GPU support.  
  
  This package also provides a complete scheduler for CPU plus GPU
  execution.  It supports the 'Control.Monad.Par.Par' monad
  programming model with additional support for GPUs.


Homepage:            https://github.com/simonmar/monad-par
License:             BSD3
License-file:        LICENSE
Author:              Ryan Newton, Adam Foltzer 2011-2012
Maintainer:          Ryan Newton <rrnewton@gmail.com>
Copyright:           (c) Adam Foltzer 2011-2012
Stability:           Experimental
Category:            Parallelism
Build-type:          Simple
Cabal-version:       >=1.8

Library
  Exposed-modules: 
                 -- This is a complete scheduler for shared-memory
                 -- (parallel) and GPU computation:
                 Control.Monad.Par.Meta.AccSMP,

                 -- This is a resource used to build schedulers:
                 Control.Monad.Par.Meta.Resources.Accelerate

  Build-depends:  
                  base >= 4 && < 5
                , abstract-par
                , meta-par
                , abstract-deque
                , accelerate >= 0.12
                , accelerate-io
                -- TEMPORARY, until Async can be factored out:
--                , accelerate-cuda
                , abstract-par-accelerate 
                , abstract-par-offchip
                , QuickCheck 
                , transformers
                , vector
                , array

  ghc-options:    -Wall 

  if flag(cuda)
     cpp-options: -DACCELERATE_CUDA_BACKEND
     Build-depends: accelerate-cuda

  if flag(debug)
     cpp-options: -DDEBUG

flag cuda
  default:           False

flag debug
  default:           False
