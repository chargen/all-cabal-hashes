-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:32d3957ebba0011658ee421b93ecd8f9
    SHA1:8bc8c96d179da283c7a16f468e53b2937156e4b5
    SHA256:c97e44c7c6b557755cac0c46cf4de463989f70b7176e432676c80ea7240fbf89
    SHA512:0842d0fb1457d27b6aba7ade5ed428f878394ebc9901abad1f0c349c94074a64277d5efa0cdb29f16589e6784f639190c328c7388058fb99819816508fbb664d
    Skein512_512:508b7ddc07037b7d0b800269c423bf1edf2b2961408b33c9efe13820c0a4ded97fb974f368d9f923cdefa11a6f9c5f1c6eb7322f318ff75156d302287fd2f1f3

x-package-locations:
    https://hackage.haskell.org/package/epic-0.1.11/epic-0.1.11.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/epic-0.1.11.tar.gz

x-package-size: 74685
-- END Added by all-cabal-hashes-tool

Name:		epic
Version:	0.1.11
Author:		Edwin Brady
License:	BSD3
License-file:	LICENSE
Maintainer:	eb@dcs.st-and.ac.uk
Homepage:	http://www.dcs.st-and.ac.uk/~eb/epic.php
Stability:	experimental
Category:       Compilers/Interpreters
Synopsis:	Compiler for a simple functional language
Description:    Epic is a simple functional language which compiles to
                reasonably efficient C code, using the Boehm-Demers-Weiser 
	        garbage collector (<http://www.hpl.hp.com/personal/Hans_Boehm/gc/>). 
                It is intended as a compiler back end, and is currently used 
                as a back end for Epigram (<http://www.e-pig.org>) and Idris 
                (<http://idris-lang.org/>).
	        It can be invoked either as a library or an application.

Data-files:    evm/libevm.a evm/closure.h evm/stdfuns.h evm/stdfuns.c evm/mainprog.c evm/emalloc.h evm/gc_header.h
Extra-source-files: evm/closure.c evm/closure.h evm/stdfuns.h evm/mainprog.c evm/stdfuns.c evm/Makefile evm/emalloc.c evm/emalloc.h evm/gc_header.h

Cabal-Version:  >= 1.8.0.4
Build-type:     Custom

Library
        Exposed-modules: Epic.Compiler Epic.Epic
        Other-modules: Epic.Bytecode Epic.Parser Epic.Scopecheck
                       Epic.Language Epic.Lexer Epic.CodegenC
                       Epic.OTTLang Epic.Simplify Paths_epic
        Build-depends:	base >=4 && <5 , haskell98, mtl, Cabal, array, directory


Executable     epic
               Main-is: Main.lhs
               Other-modules: Epic.Bytecode Epic.Parser Epic.Scopecheck
                       Epic.Language Epic.Lexer Epic.CodegenC
                       Epic.OTTLang Epic.Simplify Paths_epic
               Build-depends: base >=4 && <5, mtl, array, haskell98, Cabal, directory

