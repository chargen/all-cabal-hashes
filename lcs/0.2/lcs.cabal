Name:               lcs
Version:            0.2
License:            OtherLicense
License-File:       COPYING
Extra-source-files: "BSD3", "GPL-2"
Copyright:          Ian Lynagh, 2005
Author:             Ian Lynagh
Maintainer:         igloo@earth.li
Stability:          provisional
Homepage:           http://urchin.earth.li/~ian/cabal/lcs/
Synopsis:           Find longest common sublist of two lists
Description:
    Provides a function lcs that takes two lists and returns a longest
    common sublist. For example, lcs "abcd" "acbd" is either "abd" or
    "acd".
    .
    The package provides a simple, stupid and (most of all) slow
    implementation that needs, for inputs of length m and n, O(m+n)
    space and O((m+n)!) time in the worst case.
    .
    It also provides an implementation of the Hunt-Szymanski LCS
    algorithm, based on that in "String searching algorithms" by
    Graham A Stephen, ISBN 981021829X.
    .
    Given inputs xs and ys of length m and n respectively, where there
    are r pairs (x, y) where x is in xs, y is in ys and x == y,
    Hunt-Szymanski needs O(r+m+n) space and O((r+m+n)*log(m+n)) time.
    Thus this is O((m+n)^2) space and O((m+n)^2*log(m+n)) time in the
    worst case.
Category:           List
Tested-With:        GHC==6.8.2
Build-Depends:      base, array
Exposed-modules:
    Data.List.LCS, Data.List.LCS.Simple, Data.List.LCS.HuntSzymanski



package-hashes:
    MD5:2ef97e00291dde72248811581f997b66
    SHA1:94d52307677f2668d64d789eb56823cdaf0f8a3d
    SHA256:b4db67ead4e2f58c4d462d4c1006d2158744ef3ca8597295a1dfa08537401ff1
    SHA512:ac5ac6d9a151be46054f2f56a5927182fe6942e518a04a8c484b02c8caec0506ddaf846f51f5575f1f30d6f0fca9b7b26f16e32675b322d014f8b68db76d5f5e
    Skein512_512:9691411c2663aa231fddd7285952a733cf8a330b1eedbadc04902ba3de45ec3da42966f36408145e2f6f8259c6ea225ac8f8de58ffaef61ba24f36242947032e

package-locations:
    https://hackage.haskell.org/package/lcs-0.2/lcs-0.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/lcs-0.2.tar.gz

package-size: 11638
