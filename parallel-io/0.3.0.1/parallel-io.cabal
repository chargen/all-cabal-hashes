-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:66612f99b08798e9030812bfad1ce56f
    SHA1:f0ed628018c13c527f6e2f5bdcc612118f119ddc
    SHA256:3a4b76ca598595f554378be6d5db885433cae562c66b0eb3e947cb70eb69940b
    SHA512:18e7ac66bb41b65cb08250efcbe5d5d65fed80ba236ae93e4943e85a8fef823a885607a3527f643ddc887bfee4f1af28de3aa646f9c1f37f5fb7fc00b7151e9b
    Skein512_512:82b4263f78a5f98eb5793f0adb36db963c9b5e136253bdec37af0bcf661e928c44b0f0f9e6fef8b1f52e73d0a13873ece80bf878b01952e702e5d1c1a92934f7

package-locations:
    https://hackage.haskell.org/package/parallel-io-0.3.0.1/parallel-io-0.3.0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/parallel-io-0.3.0.1.tar.gz

package-size: 9485
-- END Added by all-cabal-hashes-tool

Name:               parallel-io
Version:            0.3.0.1
Cabal-Version:      >= 1.2
Category:           Concurrency
Synopsis:           Combinators for executing IO actions in parallel on a thread pool.
Description:        This package provides combinators for sequencing IO actions onto a thread pool. The
                    thread pool is guaranteed to contain no more unblocked threads than a user-specified upper limit, thus
                    minimizing contention.
                    .
                    Furthermore, the parallel combinators can be used reentrantly - your parallel
                    actions can spawn more parallel actions - without violating this property of the thread pool.
                    .
                    The package is heavily inspired by the thread <http://thread.gmane.org/gmane.comp.lang.haskell.cafe/56499/focus=56521>.
                    Thanks to Neil Mitchell and Bulat Ziganshin for the code this package is based on.
License:            BSD3
License-File:       LICENSE
Homepage:           http://batterseapower.github.com/parallel-io
Author:             Max Bolingbroke <batterseapower@hotmail.com>,
                    Neil Mitchell <ndmitchell@gmail.com>,
                    Bulat Ziganshin <bulat.ziganshin@gmail.com>
Maintainer:         Max Bolingbroke <batterseapower@hotmail.com>
Build-Type:         Simple


Flag Benchmark
    Description:    Build the benchmarking tool
    Default:        False

Flag Tests
    Description:    Build the test runner
    Default:        False

Library
    Exposed-Modules:
        Control.Concurrent.ParallelIO
        Control.Concurrent.ParallelIO.Global
        Control.Concurrent.ParallelIO.Local
    Other-Modules:
        Control.Concurrent.ParallelIO.ConcurrentSet
    
    Build-Depends:  base >= 4 && < 5, extensible-exceptions > 0.1.0.1, containers >= 0.2 && < 0.5, random >= 1.0 && < 1.1

Executable benchmark
    Main-Is:        Control/Concurrent/ParallelIO/Benchmark.hs
    
    if !flag(benchmark)
        Buildable:  False
    else
        Build-Depends:  base >= 4 && < 5, extensible-exceptions > 0.1.0.1, containers >= 0.2 && < 0.4, random >= 1.0 && < 1.1,
                        time >= 1
    
        Ghc-Options:    -threaded

Executable tests
    Main-Is:        Control/Concurrent/ParallelIO/Tests.hs
    
    if !flag(tests)
        Buildable:  False
    else
        Build-Depends:  base >= 4 && < 5, extensible-exceptions > 0.1.0.1, containers >= 0.2 && < 0.4, random >= 1.0 && < 1.1,
                        test-framework >= 0.1.1, test-framework-hunit >= 0.1.1, HUnit >= 1.2 && < 2
    
        Ghc-Options:    -threaded
