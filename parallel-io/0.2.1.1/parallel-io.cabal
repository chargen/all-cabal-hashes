-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:fa347b43bbd66a174f620cf32e59789f
    SHA1:b174b737e7aa018f7c36c7e09b9c2ca41aa48f87
    SHA256:4430c83a9a074e9c0b560d52163c6071b82bc3f763b29bd09e141d5f45ca6e42
    SHA512:4f9dd0ebf7b860e0872ee529ccc66ba41ebb830aeb3dcbb8dcc0c796ddc53003cf9090a3dda1a742d32120f7cb8fc1eb785c3e51f5971bc6ec97399893551883
    Skein512_512:e0ec8ec8fd0324904dc7f5a463385a0ec84a3fc04d09b7438057e23a110fad831e08f3575eb081819e7ee37cbae26140f1cf7a0d76c2949a147740b534f45bac

x-package-locations:
    https://hackage.haskell.org/package/parallel-io-0.2.1.1/parallel-io-0.2.1.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/parallel-io-0.2.1.1.tar.gz

x-package-size: 8567
-- END Added by all-cabal-hashes-tool

Name:               parallel-io
Version:            0.2.1.1
Cabal-Version:      >= 1.2
Category:           Concurrency
Synopsis:           Combinators for executing IO actions in parallel on a thread pool.
Description:        This package provides combinators for sequencing IO actions onto a thread pool. The
                    thread pool is guaranteed to contain a fixed number of unblocked threads, minimizing
                    contention. Furthermore, the parallel combinators can be used re-entrently - your parallel
                    actions can spawn more parallel actions - without violating this property.
                    .
                    The package is heavily inspired by the thread <http://thread.gmane.org/gmane.comp.lang.haskell.cafe/56499/focus=56521>.
                    Thanks to Neil Mitchell and Bulat Ziganshin for the code this package is based on.
License:            BSD3
License-File:       LICENSE
Homepage:           http://batterseapower.github.com/parallel-io
Author:             Max Bolingbroke <batterseapower@hotmail.com>,
                    Neil Mitchell <ndmitchell@gmail.com>,
                    Bulat Ziganshin <bulat.ziganshin@gmail.com>
Maintainer:         Max Bolingbroke <batterseapower@hotmail.com>
Build-Type:         Simple


Flag Benchmark
    Description:    Build the benchmarking tool
    Default:        False

Flag Tests
    Description:    Build the test runner
    Default:        False

Library
    Exposed-Modules:
        Control.Concurrent.ParallelIO
        Control.Concurrent.ParallelIO.Global
        Control.Concurrent.ParallelIO.Local
    Other-Modules:
        Control.Concurrent.ParallelIO.ConcurrentSet
    
    Build-Depends:  base >= 3 && < 5, extensible-exceptions > 0.1.0.1, containers >= 0.3 && < 0.4, random >= 1.0 && < 1.1

Executable benchmark
    Main-Is:        Control/Concurrent/ParallelIO/Benchmark.hs
    
    if !flag(benchmark)
        Buildable:  False
    else
        Build-Depends:  base >= 3 && < 5, extensible-exceptions > 0.1.0.1, containers >= 0.3 && < 0.4, random >= 1.0 && < 1.1,
                        time >= 1
    
        Ghc-Options:    -threaded

Executable tests
    Main-Is:        Control/Concurrent/ParallelIO/Tests.hs
    
    if !flag(tests)
        Buildable:  False
    else
        Build-Depends:  base >= 3 && < 5, extensible-exceptions > 0.1.0.1, containers >= 0.3 && < 0.4, random >= 1.0 && < 1.1,
                        test-framework >= 0.1.1, test-framework-hunit >= 0.1.1, HUnit >= 1.2 && < 2
    
        Ghc-Options:    -threaded
