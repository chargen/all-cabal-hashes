-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:f4d27c0599c4fdb27c27e98c80d4a044
    SHA1:c1d0245a4442b21a2674f4cd69731295093ab42b
    SHA256:77ef3f0aee845f3c8d9d27cb517950351b062c4baf02823bb6a3a260d5a84998
    SHA512:93b31f477ba6c17a07e3165eabf8c1edd57c8c261981c913ed7c8f1c4c55af902822fbcc14a58fb723863f00f1145c27941e66d791ea422832d98bbf26d3b761
    Skein512_512:7b9888f459c169abd9d765f37131874f2fa4aa0c59b59a639b937d9bf3213f29e296dfcf3e006b8bc93018062af50a086827e41a7342c1ea847c2d9d308972a4

package-locations:
    https://hackage.haskell.org/package/intern-0.9.1.3/intern-0.9.1.3.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/intern-0.9.1.3.tar.gz

package-size: 12932
-- END Added by all-cabal-hashes-tool

name:          intern
category:      Data, Data Structures
version:       0.9.1.3
license:       BSD3
cabal-version: >= 1.6
license-file:  LICENSE
author:        Edward A. Kmett
maintainer:    Edward A. Kmett <ekmett@gmail.com>
stability:     experimental
homepage:      http://github.com/ekmett/intern/
bug-reports:   http://github.com/ekmett/intern/issues
copyright:     Copyright (C) 2011-2014 Edward A. Kmett
build-type:    Simple
synopsis:      Efficient hash-consing for arbitrary data types
description:
    Changes from 0.8 to 0.9
    .
    * Removed 'identity' from the Interned class, to support applications where the identity is obtained by other means (e.g. a unique Ptr value)
    .
    Changes from 0.7 to 0.8
    .
    * Disabled cache removal as it was causing problems on large data sets. There is no good way to ensure that both references remain alive long enough to finish comparisons.
    * Switched to IORef from MVar
    .
    Changes from 0.6 to 0.7
    .
    * Fixed problem where comparisons could happen between data structures while one was still a thunk, leading to equal structures comparing as inequal in limited circumstances, by appropriately using strictness annotations.
    .
    Efficient hash-consing for arbitrary data types
    .
    Changes from 0.5.2 to 0.6
    .
    * Widened the caches so they don't go through a single MVar per type. This has made a dramatic impact on performance. However, this broke the previous invariant that newer entries always had higher Ids than older entries.
    .
    Changes from 0.5.1 to 0.5.2
    .
    * Added Data.Interned.IntSet

extra-source-files: examples/Term.hs .travis.yml

source-repository head
  type: git
  location: git://github.com/ekmett/intern.git

library
  build-depends:
    base                 >= 4     && < 5,
    bytestring           >= 0.9   && < 0.11,
    text                 >= 0.11  && < 1.2,
    hashable             >= 1.1   && < 1.3,
    unordered-containers >= 0.2.1 && < 0.3,
    array                >= 0.3   && < 0.6

  exposed-modules:
    Data.Interned
    Data.Interned.ByteString
    Data.Interned.String
    Data.Interned.Text
    Data.Interned.IntSet
    Data.Interned.Internal
    Data.Interned.Internal.ByteString
    Data.Interned.Internal.String
    Data.Interned.Internal.Text

  ghc-options: -Wall
