-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:389cd01caee29daf36b1dd2fd1f180f7
    SHA1:74b0aaa3fbba79821b66bf1d2b87b242d32b4929
    SHA256:1538cd150b7e377279a72cc0a24e914516fee576b28fcbebe2d9d8c68e2cbded
    SHA512:1ce8cb39e97adb521a93c2ede1369776dd46a0eff47ee835a650c727046f601de2b6568d5fac241a79cf240beab677ca1efbaf79b90fb0f9df05c40a5f06b4d0
    Skein512_512:554e4ec65bbff0c83fa025d8da98fbb87ccb47987e1187807b9ae4d2fce3f8a84c26843e4a8b348986320b780ebdba39b94dcca5897a75f3e7b5ac540d3302bc

package-locations:
    https://hackage.haskell.org/package/intern-0.9.0.1/intern-0.9.0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/intern-0.9.0.1.tar.gz

package-size: 12890
-- END Added by all-cabal-hashes-tool

name:          intern
category:      Data, Data Structures
version:       0.9.0.1
license:       BSD3
cabal-version: >= 1.6
license-file:  LICENSE
author:        Edward A. Kmett
maintainer:    Edward A. Kmett <ekmett@gmail.com>
stability:     experimental
homepage:      http://github.com/ekmett/intern/
bug-reports:   http://github.com/ekmett/intern/issues
copyright:     Copyright (C) 2011 Edward A. Kmett
synopsis:      Efficient hash-consing for arbitrary data types
description:
    Changes from 0.8 to 0.9
    .
    * Removed 'identity' from the Interned class, to support applications where the identity is obtained by other means (e.g. a unique Ptr value)
    .
    Changes from 0.7 to 0.8
    .
    * Disabled cache removal as it was causing problems on large data sets. There is no good way to ensure that both references remain alive long enough to finish comparisons.
    * Switched to IORef from MVar
    .
    Changes from 0.6 to 0.7
    .
    * Fixed problem where comparisons could happen between data structures while one was still a thunk, leading to equal structures comparing as inequal in limited circumstances, by appropriately using strictness annotations.
    .
    Efficient hash-consing for arbitrary data types
    .
    Changes from 0.5.2 to 0.6
    .
    * Widened the caches so they don't go through a single MVar per type. This has made a dramatic impact on performance. However, this broke the previous invariant that newer entries always had higher Ids than older entries.
    .
    Changes from 0.5.1 to 0.5.2
    .
    * Added Data.Interned.IntSet

build-type:    Simple
extra-source-files: examples/Term.hs .travis.yml

source-repository head
  type: git
  location: git://github.com/ekmett/intern.git

library
  build-depends:
    base                 >= 4 && < 5,
    bytestring           == 0.9.*,
    text                 == 0.11.*,
    hashable             == 1.1.*,
    unordered-containers >= 0.2.1 && < 0.3,
    array                >= 0.4 && < 0.5

  exposed-modules:
    Data.Interned
    Data.Interned.ByteString
    Data.Interned.String
    Data.Interned.Text
    Data.Interned.IntSet
    Data.Interned.Internal
    Data.Interned.Internal.ByteString
    Data.Interned.Internal.String
    Data.Interned.Internal.Text

  ghc-options: -Wall
