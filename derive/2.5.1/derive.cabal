-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:9d1d87c12ae2e6cff0ba696dfcc54e6d
    SHA1:e20d6810383b30319aa061e8f32465d9db4a5a06
    SHA256:8b6c79f94f8aa94a0fcdc5566bbdb6f15e90e2c9496d2f5134135af2348003db
    SHA512:66834d88faae4076d6820635ac131604fa2cbd7fd1bc3547f1a3298bda051367484c9a47973010085401aa569f79dc7a81906fd5793a829eb228d7ed5eb77056
    Skein512_512:5cebd9b5f456590061e1ead17761da851ac2f707e75dfe49d9488261badc1de3cc42c044f569959697040876915072b7f7104b04fc696370038ed06c08cfe3b2

package-locations:
    https://hackage.haskell.org/package/derive-2.5.1/derive-2.5.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/derive-2.5.1.tar.gz

package-size: 60448
-- END Added by all-cabal-hashes-tool

Cabal-Version:  >= 1.6
Build-Type:     Default
Name:           derive
Version:        2.5.1
build-type:     Simple
Copyright:      2006-2011, Neil Mitchell
Maintainer:     ndmitchell@gmail.com
Homepage:       http://community.haskell.org/~ndm/derive/
License:        BSD3
License-File:   LICENSE
Author:         Neil Mitchell & Stefan O'Rear
Synopsis:       A program and library to derive instances for data types
Category:       Development
Description:
    Data.Derive is a library and a tool for deriving instances for Haskell programs.
    It is designed to work with custom derivations, SYB and Template Haskell mechanisms.
    The tool requires GHC, but the generated code is portable to all compilers.
    We see this tool as a competitor to DrIFT.

Extra-Source-Files:
    derive.htm

Executable derive
    Main-Is: Main.hs

Library
    Build-Depends:
        base == 4.*,
        filepath, syb, template-haskell, containers, pretty,
        directory, process, bytestring,
        haskell-src-exts >= 1.9 && < 1.11,
        transformers == 0.2.*,
        uniplate >= 1.5 && < 1.7

    Exposed-Modules:
        Data.DeriveMain
        Data.DeriveTH
        Data.DeriveDSL
        Data.Derive.All
        Data.Derive.DSL.Apply
        Data.Derive.DSL.Derive
        Data.Derive.DSL.DSL
        Data.Derive.DSL.HSE
        Data.Derive.DSL.SYB
        Data.Derive.Instance.Arities
        Data.Derive.Class.Arities
        Data.Derive.Class.Default
        Language.Haskell
        Language.Haskell.Convert
        Language.Haskell.TH.All
        Language.Haskell.TH.Compat
        Language.Haskell.TH.Data
        Language.Haskell.TH.ExpandSynonym
        Language.Haskell.TH.FixedPpr
        Language.Haskell.TH.Helper
        Language.Haskell.TH.Peephole
-- GENERATED START
        Data.Derive.Arbitrary
        Data.Derive.ArbitraryOld
        Data.Derive.Arities
        Data.Derive.Binary
        Data.Derive.BinaryDefer
        Data.Derive.Bounded
        Data.Derive.Data
        Data.Derive.DataAbstract
        Data.Derive.Default
        Data.Derive.Enum
        Data.Derive.EnumCyclic
        Data.Derive.Eq
        Data.Derive.Fold
        Data.Derive.Foldable
        Data.Derive.From
        Data.Derive.Functor
        Data.Derive.Has
        Data.Derive.Is
        Data.Derive.JSON
        Data.Derive.LazySet
        Data.Derive.Monoid
        Data.Derive.NFData
        Data.Derive.Ord
        Data.Derive.Read
        Data.Derive.Ref
        Data.Derive.Serial
        Data.Derive.Serialize
        Data.Derive.Set
        Data.Derive.Show
        Data.Derive.Traversable
        Data.Derive.Typeable
        Data.Derive.UniplateDirect
        Data.Derive.UniplateTypeable
        Data.Derive.Update
-- GENERATED STOP

        -- Mainly internal but some still people use them
        -- to implement derivations outside
        Data.Derive.Internal.Derivation
    Other-Modules:
        Data.Derive.Internal.Instance
        Data.Derive.Internal.Traversal
        Derive.Main
        Derive.Derivation
        Derive.Flags
        Derive.Generate
        Derive.Test
        Derive.Utils
