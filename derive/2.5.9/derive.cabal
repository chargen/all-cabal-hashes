-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:50348043bed6e67836cab1aab52ec609
    SHA1:dc1804cef9cb22ca745e89ce383cc50adee273dd
    SHA256:657a0f3285c3d916f7eeda054ec138761b900d8169bb2e133b93b5db02209ae7
    SHA512:c7a7319c45a625e024505d340bc0da3d6f038d7919d7a23b335a1cec3ad2e4986732b10d815884dcda7fe0015eb5f1dfc175ea9a95a4ed15c0559eda7d0c48d5
    Skein512_512:284675b5f2a475cd33f793e49976719f229e9851d573021ba39716a235e2a7135617fd008a08e1cc26c7068fbf046ef176a6a3fa1ae696c250c6a127e49b9d06

package-locations:
    https://hackage.haskell.org/package/derive-2.5.9/derive-2.5.9.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/derive-2.5.9.tar.gz

package-size: 60886
-- END Added by all-cabal-hashes-tool

cabal-version:  >= 1.6
build-type:     Default
name:           derive
version:        2.5.9
build-type:     Simple
copyright:      Neil Mitchell 2006-2012
author:         Neil Mitchell <ndmitchell@gmail.com>
maintainer:     Neil Mitchell <ndmitchell@gmail.com>
homepage:       http://community.haskell.org/~ndm/derive/
license:        BSD3
license-file:   LICENSE
synopsis:       A program and library to derive instances for data types
category:       Development
description:
    Data.Derive is a library and a tool for deriving instances for Haskell programs.
    It is designed to work with custom derivations, SYB and Template Haskell mechanisms.
    The tool requires GHC, but the generated code is portable to all compilers.
    We see this tool as a competitor to DrIFT.

extra-source-files:
    derive.htm

source-repository head
    type:     darcs
    location: http://community.haskell.org/~ndm/darcs/derive/

executable derive
    Main-Is: Main.hs

library
    build-depends:
        base == 4.*,
        filepath, syb, template-haskell, containers, pretty,
        directory, process, bytestring,
        haskell-src-exts >= 1.9 && < 1.14,
        transformers >= 0.2 && < 0.4,
        uniplate >= 1.5 && < 1.7

    exposed-modules:
        Data.DeriveMain
        Data.DeriveTH
        Data.DeriveDSL
        Data.Derive.All
        Data.Derive.DSL.Apply
        Data.Derive.DSL.Derive
        Data.Derive.DSL.DSL
        Data.Derive.DSL.HSE
        Data.Derive.DSL.SYB
        Data.Derive.Instance.Arities
        Data.Derive.Class.Arities
        Data.Derive.Class.Default
        Language.Haskell
        Language.Haskell.Convert
        Language.Haskell.TH.All
        Language.Haskell.TH.Compat
        Language.Haskell.TH.Data
        Language.Haskell.TH.ExpandSynonym
        Language.Haskell.TH.FixedPpr
        Language.Haskell.TH.Helper
        Language.Haskell.TH.Peephole
-- GENERATED START
        Data.Derive.Arbitrary
        Data.Derive.ArbitraryOld
        Data.Derive.Arities
        Data.Derive.Binary
        Data.Derive.BinaryDefer
        Data.Derive.Bounded
        Data.Derive.Data
        Data.Derive.DataAbstract
        Data.Derive.Default
        Data.Derive.Enum
        Data.Derive.EnumCyclic
        Data.Derive.Eq
        Data.Derive.Fold
        Data.Derive.Foldable
        Data.Derive.From
        Data.Derive.Functor
        Data.Derive.Has
        Data.Derive.Is
        Data.Derive.JSON
        Data.Derive.LazySet
        Data.Derive.Monoid
        Data.Derive.NFData
        Data.Derive.Ord
        Data.Derive.Read
        Data.Derive.Ref
        Data.Derive.Serial
        Data.Derive.Serialize
        Data.Derive.Set
        Data.Derive.Show
        Data.Derive.Traversable
        Data.Derive.Typeable
        Data.Derive.UniplateDirect
        Data.Derive.UniplateTypeable
        Data.Derive.Update
-- GENERATED STOP

        -- Mainly internal but some still people use them
        -- to implement derivations outside
        Data.Derive.Internal.Derivation
    other-modules:
        Data.Derive.Internal.Instance
        Data.Derive.Internal.Traversal
        Derive.Main
        Derive.Derivation
        Derive.Flags
        Derive.Generate
        Derive.Test
        Derive.Utils
