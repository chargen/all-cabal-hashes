-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:b51c1f79a25d20173520e283e10c7937
    SHA1:b0ee6f2798746ce7a7139bef1c934cded30270a4
    SHA256:79291c6443a4b9a4a8bd44e156ccf9d235444677f6397201f7bdc7e48827314b
    SHA512:4897ffec0c6f65a5148f6b0ea9fce52451328aef2670f33bd7a70df25d3d9cb4eecad7498f5f622f61c0ca3e5ff167f0dd2dc5fde8ed9151f25b2ab277c2ce78
    Skein512_512:8bddc900913113e0f5d96e9d2751a31bfd0e5654e3ef593bb58e6c78fc2d75790d6aa06f530436ab072077749e6e72985e13953b6818f3f511d5ed6ab9b9979b

package-locations:
    https://hackage.haskell.org/package/derive-2.4.2/derive-2.4.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/derive-2.4.2.tar.gz

package-size: 60275
-- END Added by all-cabal-hashes-tool

Cabal-Version:  >= 1.6
Build-Type:     Default
Name:           derive
Version:        2.4.2
build-type:     Simple
Copyright:      2006-2011, Neil Mitchell
Maintainer:     ndmitchell@gmail.com
Homepage:       http://community.haskell.org/~ndm/derive/
License:        BSD3
License-File:   LICENSE
Author:         Neil Mitchell & Stefan O'Rear
Synopsis:       A program and library to derive instances for data types
Category:       Development
Description:
    Data.Derive is a library and a tool for deriving instances for Haskell programs.
    It is designed to work with custom derivations, SYB and Template Haskell mechanisms.
    The tool requires GHC, but the generated code is portable to all compilers.
    We see this tool as a competitor to DrIFT.

Extra-Source-Files:
    derive.htm

Executable derive
    Main-Is: Main.hs

    Other-Modules:
        Derive.Derivation
        Derive.Flags
        Derive.Generate
        Derive.Test
        Derive.Utils

    Build-Depends:
        directory, process, bytestring

Library
    Build-Depends:
        base == 4.*,
        filepath, syb, template-haskell, containers, pretty,
        haskell-src-exts >= 1.9 && < 1.11,
        transformers == 0.2.*,
        uniplate >= 1.5 && < 1.7

    Exposed-Modules:
        Data.DeriveTH
        Data.DeriveDSL
        Data.Derive.All
        Data.Derive.DSL.Apply
        Data.Derive.DSL.Derive
        Data.Derive.DSL.DSL
        Data.Derive.DSL.HSE
        Data.Derive.DSL.SYB
        Data.Derive.Instance.Arities
        Data.Derive.Class.Arities
        Data.Derive.Class.Default
        Language.Haskell
        Language.Haskell.Convert
        Language.Haskell.TH.All
        Language.Haskell.TH.Compat
        Language.Haskell.TH.Data
        Language.Haskell.TH.ExpandSynonym
        Language.Haskell.TH.FixedPpr
        Language.Haskell.TH.Helper
        Language.Haskell.TH.Peephole
-- GENERATED START
        Data.Derive.Arbitrary
        Data.Derive.ArbitraryOld
        Data.Derive.Arities
        Data.Derive.Binary
        Data.Derive.BinaryDefer
        Data.Derive.Bounded
        Data.Derive.Data
        Data.Derive.DataAbstract
        Data.Derive.Default
        Data.Derive.Enum
        Data.Derive.EnumCyclic
        Data.Derive.Eq
        Data.Derive.Fold
        Data.Derive.Foldable
        Data.Derive.From
        Data.Derive.Functor
        Data.Derive.Has
        Data.Derive.Is
        Data.Derive.JSON
        Data.Derive.LazySet
        Data.Derive.Monoid
        Data.Derive.NFData
        Data.Derive.Ord
        Data.Derive.Read
        Data.Derive.Ref
        Data.Derive.Serial
        Data.Derive.Serialize
        Data.Derive.Set
        Data.Derive.Show
        Data.Derive.Traversable
        Data.Derive.Typeable
        Data.Derive.UniplateDirect
        Data.Derive.UniplateTypeable
        Data.Derive.Update
-- GENERATED STOP

        -- Mainly internal but some still people use them
        -- to implement derivations outside
        Data.Derive.Internal.Derivation
    Other-Modules:
        Data.Derive.Internal.Instance
        Data.Derive.Internal.Traversal
