-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:2580925e30512bd9174a606f602902da
    SHA1:18f2c9f2fd7d00474436a6a0af4abe7e767bea9a
    SHA256:438bb0bec6f001cb85625a0a410dccb968712ff80dd7836febf42ba0dc8f7496
    SHA512:a270608f4e1cc530c30c9486bab4196ae3b6d7d4f71e7eb47656a1571b724af3e42be4640c85ad275583a97432ad2c667e035db26c6ffef82e2998a52b3cfdb7
    Skein512_512:4b4c2a14dc83cfbc0e9e117c17840146d1484463e0b205417aa7fa5a24d4ed76d1984750ea2d02abff614c57acf045a57723a0843ec9e49d534cebb9160d7a04

x-package-locations:
    https://hackage.haskell.org/package/derive-2.1.0/derive-2.1.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/derive-2.1.0.tar.gz

x-package-size: 58582
-- END Added by all-cabal-hashes-tool

Cabal-Version:  >= 1.6
Build-Type:     Default
Name:           derive
Version:        2.1.0
build-type:     Simple
Copyright:      2006-2010, Neil Mitchell
Maintainer:     ndmitchell@gmail.com
Homepage:       http://community.haskell.org/~ndm/derive/
License:        BSD3
License-File:   LICENSE
Author:         Neil Mitchell & Stefan O'Rear
Synopsis:       A program and library to derive instances for data types
Category:       Development
Description:
    Data.Derive is a library and a tool for deriving instances for Haskell programs.
    It is designed to work with custom derivations, SYB and Template Haskell mechanisms.
    The tool requires GHC, but the generated code is portable to all compilers.
    We see this tool as a competitor to DrIFT.

Extra-Source-Files:
    derive.htm

Executable derive
    Main-Is: Main.hs

    Other-Modules:
        Derive.Derivation
        Derive.Flags
        Derive.Generate
        Derive.Test
        Derive.Utils

    Build-Depends:
        directory, process, bytestring

Library
    Build-Depends:
        haskell-src-exts == 1.3.* && >= 1.3.2, filepath, mtl,
        base == 4.*, syb, template-haskell, uniplate == 1.3.*, containers,
        pretty

    Exposed-Modules:
        Data.DeriveTH
        Data.DeriveDSL
        Data.Derive.All
        Data.Derive.DSL.Apply
        Data.Derive.DSL.Derive
        Data.Derive.DSL.DSL
        Data.Derive.DSL.HSE
        Data.Derive.DSL.SYB
        Data.Derive.Instance.Arities
        Data.Derive.Class.Arities
        Data.Derive.Class.Default
        Language.Haskell
        Language.Haskell.Convert
        Language.Haskell.TH.All
        Language.Haskell.TH.Compat
        Language.Haskell.TH.Data
        Language.Haskell.TH.ExpandSynonym
        Language.Haskell.TH.FixedPpr
        Language.Haskell.TH.Helper
        Language.Haskell.TH.Peephole
        Language.Haskell.TH.SYB
-- GENERATED START
        Data.Derive.Arbitrary
        Data.Derive.ArbitraryOld
        Data.Derive.Arities
        Data.Derive.Binary
        Data.Derive.BinaryDefer
        Data.Derive.Bounded
        Data.Derive.Data
        Data.Derive.DataAbstract
        Data.Derive.Default
        Data.Derive.Enum
        Data.Derive.EnumCyclic
        Data.Derive.Eq
        Data.Derive.Fold
        Data.Derive.Foldable
        Data.Derive.From
        Data.Derive.Functor
        Data.Derive.Has
        Data.Derive.Is
        Data.Derive.LazySet
        Data.Derive.Monoid
        Data.Derive.NFData
        Data.Derive.Ord
        Data.Derive.Read
        Data.Derive.Ref
        Data.Derive.Serial
        Data.Derive.Set
        Data.Derive.Show
        Data.Derive.Traversable
        Data.Derive.Typeable
        Data.Derive.UniplateDirect
        Data.Derive.UniplateTypeable
        Data.Derive.Update
-- GENERATED STOP

    Other-Modules:
        Data.Derive.Internal.Derivation
        Data.Derive.Internal.Instance
        Data.Derive.Internal.Traversal
