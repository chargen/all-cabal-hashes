-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:a07e5026a67cd77eecd3987adc208b5f
    SHA1:5fa0f012276c2ba1716ea0ccc07bc47b68014b1e
    SHA256:2e2a48ab09d94883db672822d70cc0bdd474d03c63bac991d6a33be98c196080
    SHA512:b77ebca4c1429bdb5adea34803c6a22b47e29e2532ede226771a2f95d9b37d1e10fb58454110b32e83144a43664aaabafb75bc6bf3bf3966f15a47d486f78915
    Skein512_512:8728571418c645ca1a8f10cf4f2ec99797978bb85b964e86e431da99b7fdba22593fe9b1e733708ca3e48d346b88242e8ebdcf15ed8e6ab595ca97f91f723fd5

x-package-locations:
    https://hackage.haskell.org/package/derive-2.5.3/derive-2.5.3.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/derive-2.5.3.tar.gz

x-package-size: 60486
-- END Added by all-cabal-hashes-tool

cabal-version:  >= 1.6
build-type:     Default
name:           derive
version:        2.5.3
build-type:     Simple
copyright:      Neil Mitchell 2006-2011
author:         Neil Mitchell <ndmitchell@gmail.com>
maintainer:     Neil Mitchell <ndmitchell@gmail.com>
homepage:       http://community.haskell.org/~ndm/derive/
license:        BSD3
license-file:   LICENSE
synopsis:       A program and library to derive instances for data types
category:       Development
description:
    Data.Derive is a library and a tool for deriving instances for Haskell programs.
    It is designed to work with custom derivations, SYB and Template Haskell mechanisms.
    The tool requires GHC, but the generated code is portable to all compilers.
    We see this tool as a competitor to DrIFT.

extra-source-files:
    derive.htm

source-repository head
    type:     darcs
    location: http://community.haskell.org/~ndm/darcs/derive/

executable derive
    Main-Is: Main.hs

library
    build-depends:
        base == 4.*,
        filepath, syb, template-haskell, containers, pretty,
        directory, process, bytestring,
        haskell-src-exts >= 1.9 && < 1.12,
        transformers == 0.2.*,
        uniplate >= 1.5 && < 1.7

    exposed-modules:
        Data.DeriveMain
        Data.DeriveTH
        Data.DeriveDSL
        Data.Derive.All
        Data.Derive.DSL.Apply
        Data.Derive.DSL.Derive
        Data.Derive.DSL.DSL
        Data.Derive.DSL.HSE
        Data.Derive.DSL.SYB
        Data.Derive.Instance.Arities
        Data.Derive.Class.Arities
        Data.Derive.Class.Default
        Language.Haskell
        Language.Haskell.Convert
        Language.Haskell.TH.All
        Language.Haskell.TH.Compat
        Language.Haskell.TH.Data
        Language.Haskell.TH.ExpandSynonym
        Language.Haskell.TH.FixedPpr
        Language.Haskell.TH.Helper
        Language.Haskell.TH.Peephole
-- GENERATED START
        Data.Derive.Arbitrary
        Data.Derive.ArbitraryOld
        Data.Derive.Arities
        Data.Derive.Binary
        Data.Derive.BinaryDefer
        Data.Derive.Bounded
        Data.Derive.Data
        Data.Derive.DataAbstract
        Data.Derive.Default
        Data.Derive.Enum
        Data.Derive.EnumCyclic
        Data.Derive.Eq
        Data.Derive.Fold
        Data.Derive.Foldable
        Data.Derive.From
        Data.Derive.Functor
        Data.Derive.Has
        Data.Derive.Is
        Data.Derive.JSON
        Data.Derive.LazySet
        Data.Derive.Monoid
        Data.Derive.NFData
        Data.Derive.Ord
        Data.Derive.Read
        Data.Derive.Ref
        Data.Derive.Serial
        Data.Derive.Serialize
        Data.Derive.Set
        Data.Derive.Show
        Data.Derive.Traversable
        Data.Derive.Typeable
        Data.Derive.UniplateDirect
        Data.Derive.UniplateTypeable
        Data.Derive.Update
-- GENERATED STOP

        -- Mainly internal but some still people use them
        -- to implement derivations outside
        Data.Derive.Internal.Derivation
    other-modules:
        Data.Derive.Internal.Instance
        Data.Derive.Internal.Traversal
        Derive.Main
        Derive.Derivation
        Derive.Flags
        Derive.Generate
        Derive.Test
        Derive.Utils
