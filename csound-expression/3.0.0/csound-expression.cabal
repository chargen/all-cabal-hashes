Name:          csound-expression
Version:       3.0.0
Cabal-Version: >= 1.6
License:       BSD3
License-file:  LICENSE
Author:	       Anton Kholomiov
Synopsis:      library to make electronic music
Stability:     Experimental
Tested-With:   GHC==7.6
Build-Type:    Simple
Category:      Music, Sound
Maintainer:    <anton.kholomiov@gmail.com>

Description:   
    Let's make music with text! We can use Csound to describe our music. Csound has so many fantastic sound generators.
    It's very efficient. But sometimes Csound is too low level. So many details: integer identifiers for instruments 
    and arrays, should I use control rate or audio rate signals, lack of abstractions, no nested expressions and it has limited set of types. 
    This library embeds Csound in Haskell. We can use powerful Csound's primitives and glue them
    together with Haskell abstractions. The module "Csound.Base" exports all types and functions.
    .
    Tutorials:
    .
    * Quickstart guide <http://github.com/anton-k/csound-expression/blob/master/tutorial/QuickStart.markdown>
    .
    * Overview of the library <http://github.com/anton-k/csound-expression/blob/master/tutorial/Overview.markdown>
    .
    * Introduction to Csound and library for Haskell users <http://github.com/anton-k/csound-expression/blob/master/tutorial/CsoundInstro.markdown>
    .
    * There are examples in the source code archive <http://github.com/anton-k/csound-expression/tree/master/examples>. 
    .
    Key principles
    .
    * Keep it simple and compact (as functional as possible).
    .
    * Make it open (No dependency on Score-generation libraries. Score (or list of events) 
    is represented with type class. You can use your favorite Score-generation library 
    if you provide an instance for the CsdSco type class. 
    Currently there is support for temporal-music-notation library (see temporal-csound package). 
    .
    How to install (for Csound and Haskell users)
    .
    To use the library we need:
    .
    *   GHC - haskell compiler. This library uses GHC-specific features (<www.haskell.org/ghc>).
    .
    *   cabal-install to install haskell packages (<www.haskell.org/cabal>).
    .
    *   Csound compiler (version 5.13 or higher). You must get it installed on your system.
    Since we are going to generate the csound code we need to compile it to sound somehow.
    We can find out how to install the Csound on <www.csounds.com>. 
    To test whether csound is installed open the command line and type:
    .
    > csound
    .
    It should print a long message with version and available flags and libraries.
    .
    If everything is installed to install the library we can open the command line terminal and type:
    .
    > cabal install csound-expression
    .
    Acknowledgements (I'd like to mention those who supported me a lot with their music and ideas):
    .
    * music: entertainment for the braindead, ann's'annat & alizbar, toe, iamthemorning, atoms for piece / radiohead, loscil, boards of canada,
    Hozan Yamamoto, Tony Scott and Shinichi Yuize. 
    .
    * ideas: Conal Elliott, Oleg Kiselyov, Paul Hudak, Gabriel Gonzalez, Rich Hickey and Csound's community.
    .
   
Extra-Source-Files : 
    examples/README.txt
    
    examples/Test.hs
    examples/Heartbeat.hs
    
    examples/Color.hs
    examples/Gm.hs
    examples/Tibetan.hs
    examples/Wind.hs

    examples/Midi.hs
    examples/Events.hs
    examples/Guis.hs

Homepage:        https://github.com/anton-k/csound-expression
Bug-Reports:     https://github.com/anton-k/csound-expression/issues

Source-repository head
    Type: git
    Location: https://github.com/anton-k/csound-expression


Library
  Ghc-Options:    -Wall
  Build-Depends:
        base >= 4, base < 5, process, data-default, Boolean >= 0.1.0,
        csound-expression-typed, csound-expression-opcodes
  Hs-Source-Dirs:      src/
  Exposed-Modules:
        Csound.Base

        Csound.Air

        Csound.Types
        Csound.Tab
        Csound.SigSpace
        Csound.IO
        Csound.Options

        Csound.Control
        Csound.Control.Evt
        Csound.Control.Instr
        Csound.Control.SE


--        Csound.Gui
--        Csound.Gui.Widget
--        Csound.Gui.Props
--        Csound.Gui.Layout

--        Csound.LowLevel
  Other-Modules:
        Csound.Control.Overload
        Csound.Control.Overload.Instr
        Csound.Control.Overload.MidiInstr
        Csound.Control.Overload.SpecInstr



package-hashes:
    MD5:eb05f0aaf4384475e3cb91fe1a12b5de
    SHA1:903b5bc4e84a825b84e9cd3f12caa00ad37e407d
    SHA256:59a82afc1a4934aee6589258427099f1bb2e831ad25eb340174987f6a01eb5d5
    SHA512:64901519f138aab43257581072f3b04e2a1b2c0a43f02c3af3e5ca21f8713962b773942237cd848781bd963a91c69b3636a1788ad082cb0742998447e218716d
    Skein512_512:839cfb34bfe7cf7916686f212d4b0fdfb201b7820941ffed429aa3d0d0bb9d7efb5ed11b33927e8bc1e5ffdf8b4c4bba613f0e42acaf634d52f70fe06e687efb

package-locations:
    https://hackage.haskell.org/package/csound-expression-3.0.0/csound-expression-3.0.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/csound-expression-3.0.0.tar.gz

