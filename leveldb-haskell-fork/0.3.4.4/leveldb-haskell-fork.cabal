name:                leveldb-haskell-fork
version:             0.3.4.4
synopsis:            Haskell bindings to LevelDB
homepage:            http://github.com/kim/leveldb-haskell
bug-reports:         http://github.com/kim/leveldb-haskell/issues
license:             BSD3
license-file:        LICENSE
author:              Kim Altintop et.al. (see AUTHORS file)
maintainer:          kim.altintop@gmail.com
copyright:           Copyright (c) 2012-2014 The leveldb-haskell Authors
category:            Database, FFI
stability:           Experimental
build-type:          Simple
cabal-version:       >=1.10
tested-with:         GHC == 7.2.2, GHC == 7.4.1
description:
    From <http://leveldb.googlecode.com>:
    .
    LevelDB is a fast key-value storage library written at Google that provides
    an ordered mapping from string keys to string values.
    .
    .
    This library provides a Haskell language binding to LeveldDB. It is in very
    early stage and has seen very limited testing.
    .
    Note: as of v1.3, LevelDB can be built as a shared library. Thus, as of
    v0.1.0 of this library, LevelDB is no longer bundled and must be installed
    on the target system (version 1.7 or greater is required).

extra-source-files:  Readme.md, AUTHORS, CHANGELOG examples/*.hs

source-repository head
  type:     git
  location: git://github.com/kim/leveldb-haskell.git

Flag Examples
  description:      Build examples
  default:          False
  manual:           True

library
  exposed-modules:  Database.LevelDB
                  , Database.LevelDB.Base
                  , Database.LevelDB.C
                  , Database.LevelDB.Internal
                  , Database.LevelDB.Iterator
                  , Database.LevelDB.MonadResource
                  , Database.LevelDB.Types

  default-language: Haskell2010
  other-extensions: CPP
                  , ForeignFunctionInterface
                  , EmptyDataDecls
                  , RecordWildCards

  build-depends:    base >= 3 && < 5
                  , bytestring
                  , data-default
                  , filepath
                  , resourcet > 0.3.2
                  , transformers

  ghc-options:      -Wall -rtsopts -funbox-strict-fields
  ghc-prof-options: -prof -auto-all

  hs-source-dirs:   src

  extra-libraries:  leveldb

executable leveldb-example-comparator
  main-is:          comparator.hs

  default-language: Haskell2010

  build-depends:    base >= 3 && < 5
                  , transformers
                  , data-default
                  , leveldb-haskell-fork

  ghc-options:      -Wall -Werror -O -rtsopts
  ghc-prof-options: -prof -auto-all

  hs-source-dirs:   examples

  if flag(Examples)
    buildable:      True
  else
    buildable:      False

executable leveldb-example-features
  main-is:          features.hs

  default-language: Haskell2010

  build-depends:    base >= 3 && < 5
                  , bytestring
                  , transformers
                  , resourcet > 0.3.2
                  , data-default
                  , leveldb-haskell-fork

  ghc-options:      -Wall -Werror -O -rtsopts
  ghc-prof-options: -prof -auto-all

  hs-source-dirs:   examples

  if flag(Examples)
    buildable:      True
  else
    buildable:      False

executable leveldb-example-filterpolicy
  main-is:          filterpolicy.hs

  default-language: Haskell2010

  build-depends:    base >= 3 && < 5
                  , transformers
                  , data-default
                  , leveldb-haskell-fork

  ghc-options:      -Wall -Werror -O -rtsopts
  ghc-prof-options: -prof -auto-all

  hs-source-dirs:   examples

  if flag(Examples)
    buildable:      True
  else
    buildable:      False

executable leveldb-example-iterforkio
  main-is:          iterforkio.hs

  default-language: Haskell2010

  build-depends:    base >= 3 && < 5
                  , async
                  , bytestring >= 0.10.4.0
                  , data-default
                  , leveldb-haskell-fork

  ghc-options:      -Wall -Werror -O -rtsopts
  ghc-prof-options: -prof -auto-all

  hs-source-dirs:   examples

  if flag(Examples)
    buildable:      True
  else
    buildable:      False


test-suite tests
  ghc-options: -Wall
  main-is: tests.hs
  type: exitcode-stdio-1.0
  hs-source-dirs: tests
  build-depends:       base >= 3 && < 5,
                       leveldb-haskell-fork,
                       hspec                >= 1.8,
                       process >= 1.1.0.2,
                       bytestring >= 0.10.4.0,
                       data-default,
                       transformers,
                       hspec-expectations,
                       QuickCheck,
                       mtl
  default-language:    Haskell2010


package-hashes:
    MD5:a0fa8de8bd11166a320988e8c9d8e2bd
    SHA1:401d4d4f47ce5313a15e9716cd695312c21d8d0d
    SHA256:589935f658b432546ba3e82f1473c55365a2a3fd01e3751faa93f3c2a79f2c08
    SHA512:abfddd84cf3d228b59c3e80fa6ba77374d50e53da0a76e82221f58441bbf001669d20697d4d391cc56f508240259b275ed7974037e3bb4e35cb463c4721e0db2
    Skein512_512:1018ea38bcbceea593c7e13260e43a1cae8150968b565bb560e552719af0d423e7faf25e8cf904491789a34ffed54ecc46e95a30b0c9cf6f63fc0806f2579f22

package-locations:
    https://hackage.haskell.org/package/leveldb-haskell-fork-0.3.4.4/leveldb-haskell-fork-0.3.4.4.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/leveldb-haskell-fork-0.3.4.4.tar.gz

