name:                leveldb-haskell-fork
version:             0.3.4.2
synopsis:            Haskell bindings to LevelDB
homepage:            http://github.com/kim/leveldb-haskell
bug-reports:         http://github.com/kim/leveldb-haskell/issues
license:             BSD3
license-file:        LICENSE
author:              Kim Altintop et.al. (see AUTHORS file)
maintainer:          kim.altintop@gmail.com
copyright:           Copyright (c) 2012-2014 The leveldb-haskell Authors
category:            Database, FFI
stability:           Experimental
build-type:          Simple
cabal-version:       >=1.10
tested-with:         GHC == 7.2.2, GHC == 7.4.1
description:
    From <http://leveldb.googlecode.com>:
    .
    LevelDB is a fast key-value storage library written at Google that provides
    an ordered mapping from string keys to string values.
    .
    .
    This library provides a Haskell language binding to LeveldDB. It is in very
    early stage and has seen very limited testing.
    .
    Note: as of v1.3, LevelDB can be built as a shared library. Thus, as of
    v0.1.0 of this library, LevelDB is no longer bundled and must be installed
    on the target system (version 1.7 or greater is required).

extra-source-files:  Readme.md, AUTHORS, CHANGELOG examples/*.hs

source-repository head
  type:     git
  location: git://github.com/kim/leveldb-haskell.git

Flag Examples
  description:      Build examples
  default:          False
  manual:           True

library
  exposed-modules:  Database.LevelDB
                  , Database.LevelDB.Base
                  , Database.LevelDB.C
                  , Database.LevelDB.Internal
                  , Database.LevelDB.Iterator
                  , Database.LevelDB.MonadResource
                  , Database.LevelDB.Types

  default-language: Haskell2010
  other-extensions: CPP
                  , ForeignFunctionInterface
                  , EmptyDataDecls
                  , RecordWildCards

  build-depends:    base >= 3 && < 5
                  , bytestring
                  , data-default
                  , filepath
                  , resourcet > 0.3.2
                  , transformers

  ghc-options:      -Wall -rtsopts -funbox-strict-fields
  ghc-prof-options: -prof -auto-all

  hs-source-dirs:   src

  extra-libraries:  leveldb

executable leveldb-example-comparator
  main-is:          comparator.hs

  default-language: Haskell2010

  build-depends:    base >= 3 && < 5
                  , transformers
                  , data-default
                  , leveldb-haskell-fork

  ghc-options:      -Wall -Werror -O -rtsopts
  ghc-prof-options: -prof -auto-all

  hs-source-dirs:   examples

  if flag(Examples)
    buildable:      True
  else
    buildable:      False

executable leveldb-example-features
  main-is:          features.hs

  default-language: Haskell2010

  build-depends:    base >= 3 && < 5
                  , bytestring
                  , transformers
                  , resourcet > 0.3.2
                  , data-default
                  , leveldb-haskell-fork

  ghc-options:      -Wall -Werror -O -rtsopts
  ghc-prof-options: -prof -auto-all

  hs-source-dirs:   examples

  if flag(Examples)
    buildable:      True
  else
    buildable:      False

executable leveldb-example-filterpolicy
  main-is:          filterpolicy.hs

  default-language: Haskell2010

  build-depends:    base >= 3 && < 5
                  , transformers
                  , data-default
                  , leveldb-haskell-fork

  ghc-options:      -Wall -Werror -O -rtsopts
  ghc-prof-options: -prof -auto-all

  hs-source-dirs:   examples

  if flag(Examples)
    buildable:      True
  else
    buildable:      False

executable leveldb-example-iterforkio
  main-is:          iterforkio.hs

  default-language: Haskell2010

  build-depends:    base >= 3 && < 5
                  , async
                  , bytestring >= 0.10.4.0
                  , data-default
                  , leveldb-haskell-fork

  ghc-options:      -Wall -Werror -O -rtsopts
  ghc-prof-options: -prof -auto-all

  hs-source-dirs:   examples

  if flag(Examples)
    buildable:      True
  else
    buildable:      False


test-suite tests
  ghc-options: -Wall
  main-is: tests.hs
  type: exitcode-stdio-1.0
  hs-source-dirs: tests
  build-depends:       base >= 3 && < 5,
                       leveldb-haskell-fork,
                       hspec                >= 1.8,
                       process >= 1.1.0.2,
                       bytestring >= 0.10.4.0,
                       data-default,
                       transformers,
                       hspec-expectations,
                       QuickCheck,
                       mtl
  default-language:    Haskell2010


package-hashes:
    MD5:3fdf6155fb751ef60cb9b3e5126ec3e6
    SHA1:f1121cb992157892e65598a5cfdd279afe3d5bda
    SHA256:94d6aa826fc6102d30c62b71723588755b49dec19bdf0498681079d879160ab3
    SHA512:2a6f38982afe75185afd0868853ac3905692fd87f19f95c0a58c1203f24f62ee8fbcef99ee109f708ba7825b301ead5a47ab86b32a2910fa4e80c302dda9d0f6
    Skein512_512:9fdb0fb2084ce2cba063be6a390f6cf805db1a3765bab1fdefa82039250b7218abca8f5836bf4140ec720397a52dd8e5b13aa055acb6f0e232ba951a8bfc36fc

package-locations:
    https://hackage.haskell.org/package/leveldb-haskell-fork-0.3.4.2/leveldb-haskell-fork-0.3.4.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/leveldb-haskell-fork-0.3.4.2.tar.gz

