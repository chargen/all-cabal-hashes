-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:748a2a4df4097dcc8a9d9082afd5ca00
    SHA1:1bfe2568794f6a205bd203410cba4a30704d5ce7
    SHA256:429e8041cf0198494f283208536c081da4cef7f48d5bc428a2fa715c2d414248
    SHA512:6d30116150b7ba6e117ad6ff8c770702ac155c53e8baef0120b3ed4de4148dab016df7f8132f4413c8a9826c3d591898a24b6418783001cf0adea6b14817ef8d
    Skein512_512:a50d70922cddacbb2db6f02ebdeb26cfdb98a047cbd354e5402c2deba44dd890c93a8adccbf6f813c48a69dec8fbb57c50f0092503081ab3ac56a24e82e6952e

x-package-locations:
    https://hackage.haskell.org/package/json-autotype-0.2.2.0/json-autotype-0.2.2.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/json-autotype-0.2.2.0.tar.gz

x-package-size: 10856
-- END Added by all-cabal-hashes-tool

-- Build information for the package.
name:                json-autotype
version:             0.2.2.0
synopsis:            Automatic type declaration for JSON input data
description:         Generates datatype declarations with Aeson's "FromJSON" instances
                     from a set of example ".json" files.
                     .
                     To get started you need to install the package,
                     and run "json-autotype" binary on an input ".json" file.
                     That will generate a new Aeson-based JSON parser.
                     .
                     "$ json-autotype input.json -o JSONTypes.hs"
                     .
                     Feel free to tweak the by changing types of the fields
                      - any field type that is instance of "FromJSON" should work.
                     .
                     You may immediately test the parser by calling it as a script:
                     .
                     "$ runghc JSONTypes.hs input.json"
                     .
                     See introduction on  <https://github.com/mgajda/json-autotype>
                     for details.
homepage:            https://github.com/mgajda/json-autotype
license:             BSD3
license-file:        LICENSE
stability:           beta
author:              Michal J. Gajda
maintainer:          mjgajda@gmail.com
copyright:           Copyright by Michal J. Gajda '2014
category:            Web
build-type:          Simple
extra-source-files:  README.md changelog.md
cabal-version:       >=1.10
bug-reports:         https://github.com/mgajda/json-autotype/issues
tested-with:         GHC==7.8.2

source-repository head
  type:     git
  location: https://github.com/mgajda/json-autotype.git

executable json-autotype
  main-is:             GenerateJSONParser.hs
  other-modules:       Data.Aeson.AutoType.Type
                       Data.Aeson.AutoType.Extract
                       Data.Aeson.AutoType.Format
                       -- internal module
                       Data.Aeson.AutoType.Util
  other-extensions:    TemplateHaskell,
                       ScopedTypeVariables,
                       OverloadedStrings,
                       FlexibleInstances,
                       MultiParamTypeClasses,
                       DeriveDataTypeable
  build-depends:       base                 >=4.3  && <4.8,
                       lens                 >=4.1  && <4.5,
                       bytestring           >=0.9  && <0.11,
                       unordered-containers >=0.2  && <0.3,
                       containers           >=0.3  && <0.6,
                       vector               >=0.9  && <0.11,
                       aeson                >=0.7  && <0.9,
                       pretty               >=1.1  && <1.3,
                       GenericPretty        >=1.2  && <1.3,
                       scientific           >=0.3  && <0.5,
                       text                 >=1.1  && <1.3,
                       hashable             >=1.2  && <1.3,
                       uniplate             >=1.6  && <1.7,
                       MissingH             >=1.2  && <1.3,
                       hflags               >=0.4  && <0.5,
                       filepath             >=1.3  && <1.4,
                       mtl                  >=2.1  && <2.2
  -- hs-source-dirs:      
  default-language:    Haskell2010

