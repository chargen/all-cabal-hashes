-- Initial optimal-blocks.cabal generated by cabal init.  For further 
-- documentation, see http://haskell.org/cabal/users-guide/

name:                optimal-blocks
version:             0.0.1
synopsis:            Optimal Block boundary determination for rsync-like behaviours
-- description:         
homepage:            https://github.com/tsuraan/optimal-blocks
license:             BSD3
license-file:        LICENSE
author:              Jay Groven
maintainer:          tsuraan@gmail.com
-- copyright:           
category:            Data
build-type:          Simple
-- extra-source-files:  
cabal-version:       >=1.10

executable chunk
  main-is:             Main.hs
  build-depends:       base >=4.6 && <4.8
                     , bytestring >=0.10 && <0.12
                     , cryptohash
                     , deepseq
                     , hex
                     , vector
  hs-source-dirs:      src
  default-language:    Haskell2010
  ghc-options:         -O2 -fllvm -Wall -fprof-auto

library
  exposed-modules:     Algorithm.OptimalBlocks
                     , Algorithm.OptimalBlocks.SipHash
                     , Algorithm.OptimalBlocks.BuzzHash
  -- other-modules:       
  other-extensions:    BangPatterns, CPP, GeneralizedNewtypeDeriving, RecordWildCards
  build-depends:       base >=4.6 && <4.8
                     , bytestring >=0.10 && <0.12
                     , deepseq
                     , vector
  hs-source-dirs:      src
  default-language:    Haskell2010
  ghc-options:         -O2 -fllvm -Wall -fprof-auto

benchmark benchmark-all
  type:                exitcode-stdio-1.0
  hs-source-dirs:      benches
  main-is:             BenchAll.hs
  build-depends:       base
                     , bytestring
                     , criterion
                     , deepseq
                     , optimal-blocks
                     , vector
  default-language:    Haskell2010
  ghc-options:         -O2 -fllvm -Wall -fprof-auto

Test-Suite test-all
  type:                exitcode-stdio-1.0
  hs-source-dirs:      tests
  main-is:             TestAll.hs
  build-depends:       base
                     , bytestring
                     , bytestring-arbitrary
                     , deepseq
                     , optimal-blocks
                     , QuickCheck
                     , vector
  default-language:    Haskell2010
  ghc-options:         -O2 -fllvm -Wall -fprof-auto



package-hashes:
    MD5:47f857d00d81f4d2eb8890a9d4ead7e4
    SHA1:e6e1a59d3b8b0a653d50c465a7ea7843279689ea
    SHA256:9ec38576a4faec21da9862c24462c4f700c87690c09af2600bb3d17a9503c642
    SHA512:96765b4ac5ad12210266582a28a4ed7969c40154b6ae0f9d39f1c37998834658674785fece2e13a0519a692213fd7eaba3ad298077e1ac1f4f16c80df11e7a61
    Skein512_512:f6e02339756789bcd1e66b8f0ed7b927f8ebedfe70690a4f8a4ae2cb6a9766cd0657aacc4c14d2129f19c448cf510a4018979ef58502cc2f5a2e1dfef0d0e8f0

package-locations:
    https://hackage.haskell.org/package/optimal-blocks-0.0.1/optimal-blocks-0.0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/optimal-blocks-0.0.1.tar.gz

