-- Initial optimal-blocks.cabal generated by cabal init.  For further 
-- documentation, see http://haskell.org/cabal/users-guide/

name:                optimal-blocks
version:             0.1.0
synopsis:            Optimal Block boundary determination for rsync-like behaviours
-- description:         
homepage:            https://github.com/tsuraan/optimal-blocks
license:             BSD3
license-file:        LICENSE
author:              Jay Groven
maintainer:          tsuraan@gmail.com
-- copyright:           
category:            Data
build-type:          Simple
-- extra-source-files:  
cabal-version:       >=1.10

executable chunk
  main-is:             Main.hs
  build-depends:       base >=4.6 && <4.8
                     , bytestring >=0.10 && <0.12
                     , cryptohash
                     , deepseq
                     , hex
                     , vector
  hs-source-dirs:      src
  default-language:    Haskell2010
  ghc-options:         -O2 -fllvm -Wall -fprof-auto

library
  exposed-modules:     Algorithm.OptimalBlocks
                     , Algorithm.OptimalBlocks.SipHash
                     , Algorithm.OptimalBlocks.BuzzHash
  -- other-modules:       
  other-extensions:    BangPatterns, CPP, GeneralizedNewtypeDeriving, RecordWildCards
  build-depends:       base >=4.6 && <4.8
                     , bytestring >=0.10 && <0.12
                     , deepseq
                     , vector
  hs-source-dirs:      src
  default-language:    Haskell2010
  ghc-options:         -O2 -fllvm -Wall -fprof-auto

benchmark benchmark-all
  type:                exitcode-stdio-1.0
  hs-source-dirs:      benches
  main-is:             BenchAll.hs
  build-depends:       base
                     , bytestring
                     , criterion
                     , deepseq
                     , optimal-blocks
                     , vector
  default-language:    Haskell2010
  ghc-options:         -O2 -fllvm -Wall -fprof-auto

Test-Suite test-all
  type:                exitcode-stdio-1.0
  hs-source-dirs:      tests
  main-is:             TestAll.hs
  build-depends:       base
                     , bytestring
                     , bytestring-arbitrary
                     , deepseq
                     , optimal-blocks
                     , QuickCheck
                     , vector
  default-language:    Haskell2010
  ghc-options:         -O2 -fllvm -Wall -fprof-auto



package-hashes:
    MD5:4bef8275e6262b8c27e0f5d99fd9b33f
    SHA1:f93b57d132a44c42c518b3478a5623d46f12a28c
    SHA256:2b59a43b888c653c44c9430a0ff93e4d76b5fe1a574bbc6289c73b2f04d4c3a0
    SHA512:90081f1c6fc095d54894c5cae0aa1fc4f14094f80cc5cced389ed66854d5fd883d13b104104883054e99be8cec322dfd8d149b40400103b3c7dbe5754fd1abc8
    Skein512_512:5db27dad16eb2b41ab40b88c6c9705e7ff5664afe5a28898f85be23beb474a768cd97717cb5ffd17a66b86da9c568556f373256f0be7cc4a215c911b38b225a3

package-locations:
    https://hackage.haskell.org/package/optimal-blocks-0.1.0/optimal-blocks-0.1.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/optimal-blocks-0.1.0.tar.gz

package-size: 9475
