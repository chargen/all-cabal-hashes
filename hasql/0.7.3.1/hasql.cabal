-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:e08cd1249dda064fe6608ad74e28b922
    SHA1:2a32d39784eeb74d5e13ae7fc2360ff7b698121f
    SHA256:84a1b2c64568cc6386c57ce0c7446db5bab25341f421707d352f47b1cd1c2daf
    SHA512:cd710406fbd2741a0f44e8f0f8063b2193afa51757dcebd397ea3d8f54677e47b3d883cfba8b8e5758ff4c5da2319726cff00f4639169d23bc26bcb36b14eaa0
    Skein512_512:319b8d935ac951e343c4dfb26428a47bb23aea55c618588101181c6b83fe87ab9325ba9b8d1cde5a4f990ca3c7fc4b97b276dc432a1bd6f82fef94ec6909e45b

x-package-locations:
    https://hackage.haskell.org/package/hasql-0.7.3.1/hasql-0.7.3.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/hasql-0.7.3.1.tar.gz

x-package-size: 13017
-- END Added by all-cabal-hashes-tool

name:
  hasql
version:
  0.7.3.1
synopsis:
  A minimalistic general high level API for relational databases
description:
  A robust and concise yet powerful API for communication with arbitrary
  relational databases using SQL.
  .
  Features:
  .
  * Concise and crisp API. Just a few functions and two monads doing all the
  boilerplate job for you.
  .
  * A powerful transaction abstraction, which provides 
  an automated resolution of conflicts.
  The API ensures that you're only able to perform a specific
  set of actions in the transaction context,
  which allows Hasql to safely resolve conflicting transactions 
  by automatically retrying them.
  This is much inspired by STM and ST.
  .
  * Support for cursors. Allows to fetch virtually limitless result sets in a
  constant memory using streaming.
  .
  * Employment of prepared statements. 
  Every statement you emit gets prepared and cached. 
  This raises the performance of the backend.
  .
  * Automated management of resources related to connections, transactions and
  cursors.
  .
  * A built-in connection pool.
  .
  * Compile-time generation of templates. You just can't write a statement with an
  incorrect number of placeholders.
  .
  * Ability to map to any types actually supported by the backend.
  .
  Links:
  .
  * <http://nikita-volkov.github.io/hasql-benchmarks/ Benchmarks analysis>.
  .
  * <https://github.com/nikita-volkov/hasql/blob/master/demo/Main.hs Basic tutorial-demo>.
  .
  * <http://hackage.haskell.org/package/hasql-postgres PostgreSQL backend>.
  .
category:
  Database
homepage:
  https://github.com/nikita-volkov/hasql 
bug-reports:
  https://github.com/nikita-volkov/hasql/issues 
author:
  Nikita Volkov <nikita.y.volkov@mail.ru>
maintainer:
  Nikita Volkov <nikita.y.volkov@mail.ru>
copyright:
  (c) 2014, Nikita Volkov
license:
  MIT
license-file:
  LICENSE
build-type:
  Simple
cabal-version:
  >=1.10
extra-source-files:
  CHANGELOG.md


source-repository head
  type:
    git
  location:
    git://github.com/nikita-volkov/hasql.git


library
  hs-source-dirs:
    library
  ghc-options:
    -funbox-strict-fields
  default-extensions:
    Arrows, BangPatterns, ConstraintKinds, DataKinds, DefaultSignatures, DeriveDataTypeable, DeriveFunctor, DeriveGeneric, EmptyDataDecls, FlexibleContexts, FlexibleInstances, FunctionalDependencies, GADTs, GeneralizedNewtypeDeriving, ImpredicativeTypes, LambdaCase, LiberalTypeSynonyms, MagicHash, MultiParamTypeClasses, MultiWayIf, NoImplicitPrelude, NoMonomorphismRestriction, OverloadedStrings, PatternGuards, ParallelListComp, QuasiQuotes, RankNTypes, RecordWildCards, ScopedTypeVariables, StandaloneDeriving, TemplateHaskell, TupleSections, TypeFamilies, TypeOperators, UnboxedTuples
  default-language:
    Haskell2010
  other-modules:
    Hasql.Prelude
    Hasql.QQ.Parser
    Hasql.CxRow
    Hasql.TH
    Hasql.QQ
  exposed-modules:
    Hasql
  build-depends:
    -- 
    resource-pool == 0.2.*,
    hasql-backend == 0.4.*,
    -- 
    template-haskell >= 2.8 && < 2.11,
    -- 
    attoparsec >= 0.10 && < 0.14,
    -- 
    vector < 0.11,
    text >= 1.0 && < 1.3,
    -- 
    either >= 4.3 && < 4.4,
    list-t >= 0.3.1 && < 0.5,
    mmorph == 1.0.*,
    mtl >= 2.1 && < 2.3,
    monad-control >= 0.3 && < 1.1,
    transformers-base == 0.4.*,
    transformers >= 0.3 && < 0.5,
    base-prelude >= 0.1.3 && < 0.2,
    base >= 4.6 && < 4.9


test-suite hspec
  type:             
    exitcode-stdio-1.0
  hs-source-dirs:   
    hspec
  main-is:          
    Main.hs
  ghc-options:
    -threaded
    "-with-rtsopts=-N"
    -funbox-strict-fields
  default-extensions:
    Arrows, BangPatterns, ConstraintKinds, DataKinds, DefaultSignatures, DeriveDataTypeable, DeriveFunctor, DeriveGeneric, EmptyDataDecls, FlexibleContexts, FlexibleInstances, FunctionalDependencies, GADTs, GeneralizedNewtypeDeriving, ImpredicativeTypes, LambdaCase, LiberalTypeSynonyms, MagicHash, MultiParamTypeClasses, MultiWayIf, NoImplicitPrelude, NoMonomorphismRestriction, OverloadedStrings, PatternGuards, ParallelListComp, QuasiQuotes, RankNTypes, RecordWildCards, ScopedTypeVariables, StandaloneDeriving, TemplateHaskell, TupleSections, TypeFamilies, TypeOperators, UnboxedTuples
  default-language:
    Haskell2010
  build-depends:
    -- 
    hasql,
    hasql-backend,
    -- 
    hspec == 2.1.*,
    -- 
    vector,
    -- 
    mtl-prelude < 3,
    base-prelude


test-suite hspec-postgres
  type:
    exitcode-stdio-1.0
  hs-source-dirs:
    hspec-postgres
  main-is:
    Main.hs
  ghc-options:
    -threaded
    "-with-rtsopts=-N"
    -funbox-strict-fields
  default-extensions:
    Arrows, BangPatterns, ConstraintKinds, DataKinds, DefaultSignatures, DeriveDataTypeable, DeriveFunctor, DeriveGeneric, EmptyDataDecls, FlexibleContexts, FlexibleInstances, FunctionalDependencies, GADTs, GeneralizedNewtypeDeriving, ImpredicativeTypes, LambdaCase, LiberalTypeSynonyms, MagicHash, MultiParamTypeClasses, MultiWayIf, NoImplicitPrelude, NoMonomorphismRestriction, OverloadedStrings, PatternGuards, ParallelListComp, QuasiQuotes, RankNTypes, RecordWildCards, ScopedTypeVariables, StandaloneDeriving, TemplateHaskell, TupleSections, TypeFamilies, TypeOperators, UnboxedTuples
  default-language:
    Haskell2010
  build-depends:
    -- 
    hasql,
    hasql-postgres == 0.10.*,
    -- 
    slave-thread == 0.1.*,
    -- 
    hspec == 2.1.*,
    -- 
    text,
    -- 
    monad-control,
    either,
    mtl-prelude < 3,
    base-prelude


-- Well, it's not a benchmark actually, 
-- but in Cabal there's no better way to specify an executable, 
-- which is not intended for distribution.
benchmark demo
  type: 
    exitcode-stdio-1.0
  hs-source-dirs:
    demo
  main-is:
    Main.hs
  ghc-options:
    -O2
    -threaded
    "-with-rtsopts=-N"
    -funbox-strict-fields
  default-language:
    Haskell2010
  build-depends:
    hasql,
    hasql-postgres == 0.10.*,
    transformers >= 0.3 && < 0.5,
    base


