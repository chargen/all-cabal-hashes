-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:cf0229d8ebe7a5ced43369e9bd37c28f
    SHA1:cf946ea1c2eada15035698da478c128e0e1ac3df
    SHA256:0fb73522c8456ae289a585996dbd16924e0bf0adcce17922b29c638d6f232423
    SHA512:126abdd524dff640677df7179842a4d3f93906cec13bac5b0d7a775408c755ffd1356218baff35fb0f3d49f6b216205c52732b5d0d38d0c5408692e9bf070828
    Skein512_512:f8da55a7802b4fdcc61d682d51fc27c18d9fe0d401f346d6a89fd8e976fb3dca93d9492949b7d1aea59b60847c7be1c8e1375fda4c38b495e5abfefbd5878a39

package-locations:
    https://hackage.haskell.org/package/husk-scheme-1.2/husk-scheme-1.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/husk-scheme-1.2.tar.gz

package-size: 28031
-- END Added by all-cabal-hashes-tool

Name:                husk-scheme
Version:             1.2
Synopsis:            R5RS Scheme interpreter program and library.
Description:         Husk is a dialect of Scheme written in Haskell that implements 
                     a subset of the R5RS standard. Husk is not intended to be a 
                     highly optimized version of Scheme. Rather, the goal of the 
                     project is to provide a tight integration between Haskell and 
                     Scheme while at the same time providing a great opportunity for 
                     deeper understanding of both languages. In addition, by closely 
                     following the R5RS standard the intent is to develop a Scheme 
                     that is as compatible as possible with other R5RS Schemes.

                     This package includes a stand-alone executable as well as
                     a library that allows an interpreter to be embedded within an 
                     existing Haskell application.

License:             MIT
License-file:        LICENSE
Author:              Justin Ethier
Maintainer:          Justin Ethier <github.com/justinethier>
Homepage:            https://github.com/justinethier/husk-scheme
Cabal-Version:       >= 1.4
Build-Type:          Simple
Category:            Compilers/Interpreters, Language

Extra-Source-Files:  README.markdown
                     LICENSE
Data-Files:          stdlib.scm

Library
  Build-Depends:   base >= 2.0 && < 5, array, containers, haskeline, haskell98, mtl, parsec
  Extensions:      ExistentialQuantification
  Hs-Source-Dirs:  hs-src
  Exposed-Modules: Scheme.Core
                   Scheme.Types
                   Scheme.Variables
  Other-Modules:   Scheme.Macro
                   Scheme.Numerical
                   Scheme.Parser

Executable         huski
  Build-Depends:   base >= 2.0 && < 5, array, containers, haskeline, haskell98, mtl, parsec
  Extensions:      ExistentialQuantification
  Main-is:         shell.hs
  Hs-Source-Dirs:  hs-src
  Other-Modules:   Scheme.Core
                   Scheme.Types
                   Scheme.Variables
                   Scheme.Macro
                   Scheme.Numerical
                   Scheme.Parser
