-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:102636f467408fb372b0a9f2a9ad3ea3
    SHA1:fac18dfb1840a33b6731a54062609995825c970d
    SHA256:63b805ee60fd2497a1286ef465855c7157542751bce939022b072c9302a509e8
    SHA512:b5f5169bb361e21b6ebc125678040481d1c9ada636a1226e5f4bd882ac6e0aa6f4072a239398e4d66c6fbbeec5831b9a4763e7a408a45a89f1262648c19bb780
    Skein512_512:ba049207dcdfa63153147357850de522b3896f3bd35abe3e84180648373d4691066e3b997b4eaed3208b2873c2c7bcb5752e7d68236eff2234bb1d92737c0a24

x-package-locations:
    https://hackage.haskell.org/package/OpenCL-1.0.3.0/OpenCL-1.0.3.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/OpenCL-1.0.3.0.tar.gz

x-package-size: 89384
-- END Added by all-cabal-hashes-tool

Name: OpenCL
Version: 1.0.3.0
License: BSD3
License-File: LICENSE
Author: Luis Cabellos
Copyright: (c) 2011 Luis Cabellos, at The Institute of Physics of Cantabria (IFCA)
Category: GPU, FFI, Graphics
Build-Type: Simple
Stability: Experimental
Maintainer: Luis Cabellos
Homepage: https://github.com/zhensydow/opencl
Synopsis: Haskell high-level wrapper for OpenCL
bug-reports: https://github.com/zhensydow/opencl/issues
Cabal-Version: >=1.8
Tested-With: GHC
Description: 
    Haskell FFI binding to OpenCL library. It includes high-level wrappers to
    help development. Based on the OpenCLRaw package.
    .
    Most of the functions can throw a 'CLError' exception. Using the module
    'Control.Exception' helps to work with this package's exceptions.

Extra-source-files:
  README.org
  examples/example01.hs
  examples/example02.hs
  examples/example03.hs
  examples/example04.hs
  include/CL/*.h
  include/CL/*.hpp
  src/test/*.hs  

Library
  Build-tools: c2hs
  hs-Source-Dirs: src
  ghc-options: -Wall
  Build-Depends: base >=4.0 && < 5, bytestring -any, mtl==2.0.*
  Exposed-Modules: 
    Control.Parallel.OpenCL
    Control.Parallel.OpenCL.Query
    Control.Parallel.OpenCL.Context
    Control.Parallel.OpenCL.CommandQueue
    Control.Parallel.OpenCL.Memory
    Control.Parallel.OpenCL.Event
    Control.Parallel.OpenCL.Program
  Other-Modules: 
    Control.Parallel.OpenCL.Types

  if os(linux)
    cpp-options: -DCALLCONV=ccall -Iinclude
    Frameworks:  OpenCL

  if os(darwin)
    cpp-options: -DCALLCONV=ccall
    cc-options: "-U__BLOCKS__"
    Frameworks:  OpenCL

  if os(windows)
    cpp-options: -DCALLCONV=stdcall

Test-suite tests
  type:         exitcode-stdio-1.0
  main-is:      test-opencl.hs
  hs-Source-Dirs: src/test
  ghc-options:    -Wall
  -- Uncomment the following line to build tests on Linux or Windows:
  -- extra-libraries: OpenCL
  build-depends: base >=4.0 && < 5, QuickCheck==2.4.*, OpenCL

source-repository this
  type: git
  location: https://zhensydow@github.com/zhensydow/opencl.git
  tag: 1.0.3.0
  branch: master

source-repository head
  type: git
  location: https://zhensydow@github.com/zhensydow/opencl.git
  branch: develop
