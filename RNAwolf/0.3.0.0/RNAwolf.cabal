-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:35a4e556c36f2a6cbd743a7220e00024
    SHA1:4711fc915ae8ce1e340ef6a2e556908e539af564
    SHA256:90ccd2e447d1c12ad72f57a798b7c2d05061bb0e64f7f517e93130630500b52a
    SHA512:9ee5eae7836d88a42fb52132453e326f4d70c7e1db9d6546c103abfcd01a0da7230fff0c988daf8007a8490955513c84bc8d8c14e6449042761c2dd56bb8b3ea
    Skein512_512:d8a580f77d0cb71cfbd9106a943044a5eb375a9728b8bb3f6b533ac0e03198ec95737a663f2351e00c1d5278378079c34f85e41e4a2e7b82f08e8591caf32bf7

x-package-locations:
    https://hackage.haskell.org/package/RNAwolf-0.3.0.0/RNAwolf-0.3.0.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/RNAwolf-0.3.0.0.tar.gz

x-package-size: 25992
-- END Added by all-cabal-hashes-tool

name:           RNAwolf
version:        0.3.0.0
author:         Christian Hoener zu Siederdissen, Stephan H Bernhart, Peter F Stadler, Ivo L Hofacker
copyright:      Christian Hoener zu Siederdissen, 2010-2011
homepage:       http://www.tbi.univie.ac.at/software/rnawolf/
maintainer:     choener@tbi.univie.ac.at
category:       Bioinformatics
license:        GPL-3
license-file:   LICENSE
build-type:     Simple
stability:      experimental
cabal-version:  >= 1.6.0
synopsis:
                RNA folding with non-canonical basepairs and base-triplets.
description:
                The algorithm implemented here-in provides extended RNA
                secondary structure prediction. Each predicted nucleotide
                pairing is extended with an annotation describing which of
                three nucleotide edges is engaged in the pairing. In addition,
                each nucleotide may be engaged in more than one pairing.
                .
                .
                The algorithm is described in
                .
                Hoener zu Siederdissen C, Bernhart SH, Stadler PF, Hofacker IL,
                .
                "A Folding Algorithm for Extended RNA Secondary Structures",
                .
                Bioinformatics (2011) 27 (13), i129-136
                .
                <http://www.tbi.univie.ac.at/software/rnawolf/>
                .
                .
                Please note that "experimental" does mean experimental. We are
                mostly concerned with determining a good set of (heuristic)
                rules for run-time reduction currently. This version does
                include stacking and is able to fold sequences of a few hundred
                nucleotides in seconds.
                .
                Triplet calculations will come back with the next version (in a
                few days). The recursions require a number of changes to keep
                the runtimes down (as has been done for the extended loops
                without triplets).
                .
                /We have recently split the Biohaskell libraries into smaller
                individual libraries. In addition, stacking, intermediate
                arrays, fusion and newtype-wrapping did require a number of
                changes. Please send a mail, if you encounter strange behaviour
                or bugs./

Flag llvm
  description: build using llvm backend
  default: False

library
  build-depends:
    base >= 4 && < 5,
    bytestring,
    containers,
    deepseq,
    directory,
    parallel,
    random,
    vector,
    PrimitiveArray,
    BiobaseXNA,
    BiobaseTrainingData == 0.1.*,
    StatisticalMethods
  exposed-modules:
    BioInf.Keys
    BioInf.Params
    BioInf.Params.Export
    BioInf.Params.Import
    BioInf.PassiveAggressive
    BioInf.RNAwolf
  ghc-options:
    -O2
  if flag(llvm)
    ghc-options:
      -fllvm

executable RNAwolfTrain
  build-depends:
    cmdargs == 0.7.*
  main-is:
    RNAwolfTrain.hs
  ghc-options:
    -O2 -rtsopts
  if flag(llvm)
    ghc-options:
      -fllvm

executable RNAwolf
  build-depends:
    cmdargs == 0.7.*
  main-is:
    RNAwolf.hs
  ghc-options:
    -O2 -rtsopts
  if flag(llvm)
    ghc-options:
      -fllvm

