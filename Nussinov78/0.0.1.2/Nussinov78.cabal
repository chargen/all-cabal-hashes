-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:0da315e7b3fa9c2f3880f4938d703d5f
    SHA1:fd90eb1921fc017ba9c3e0c18b5fc489f4fb3883
    SHA256:59608808a4737e3ee418efb205bebf16997506fa5c34b688f7aa80f7e7ca40fc
    SHA512:05f5e1c57a100d37692c959dd2fc29c748993118cda46246ee9f1e36a171fb53ba05049d749c92b40fbd85c4efd4365e5724183876cded0a4315655f55496702
    Skein512_512:c18fe68b86a51792496a8a1819e69748b64f1dbd361dab740a55430f8befa93afdbead7877c2128d1ba1ab22c2d429223332ad4ae5fbfcba89c2f91f5f68098f

x-package-locations:
    https://hackage.haskell.org/package/Nussinov78-0.0.1.2/Nussinov78-0.0.1.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/Nussinov78-0.0.1.2.tar.gz

x-package-size: 16069
-- END Added by all-cabal-hashes-tool

name:           Nussinov78
version:        0.0.1.2
author:         Christian Hoener zu Siederdissen, 2011-2012
copyright:      Christian Hoener zu Siederdissen, 2011-2012
homepage:       http://www.tbi.univie.ac.at/~choener/adpfusion
maintainer:     choener@tbi.univie.ac.at
category:       Bioinformatics
license:        GPL-3
license-file:   LICENSE
build-type:     Simple
stability:      experimental
cabal-version:  >= 1.6.0
synopsis:
                Nussinov78 using the ADPfusion library.
description:
                The Nussinov78 RNA secondary structure prediction algorithm
                using the ADPfusion framework.
                .
                This algorithm is simple enough to be used as a tutorial-type
                example. It also shows that efficient code is possible. The
                ADPfusion code compared to C is slower by a factor of only 1.8.
                We plan to improve upon this.
                .
                A number of helper functions currently present in
                BioInf.Nussinov78 will later move in their own library.
                .
                If possible, build using the GHC llvm backend, and GHC-7.2.2.
                GHC-7.4.x produces very bad code on my system, please benchmark
                using 7.2.2.
                .
                For comparison, a version of the algorithm written in C is
                available under C/nussinov.c. Use at least
                "gcc -O3 nussinov.c".

Extra-Source-Files:
  C/nussinov.c

Flag llvm
  description: build using llvm backend
  default: True



library
  build-depends:
    base >= 4 && < 5,
    mtl            >= 2,
    primitive      == 0.4.*   ,
    vector         == 0.9.*   ,
    PrimitiveArray == 0.2.1.1 ,
    BiobaseXNA     == 0.6.2.4 ,
    ADPfusion      == 0.0.1.1
  exposed-modules:
    BioInf.Nussinov78
  ghc-options:
    -Odph
    -funbox-strict-fields
    -fspec-constr
    -funfolding-use-threshold100
    -funfolding-keeness-factor100
  if flag (llvm)
    ghc-options:
      -fllvm -optlo-O3 -optlo-inline -optlo-std-compile-opts



executable Nussinov78
  build-depends:
--    base >= 4 && < 5,
--    mtl,
--    primitive      == 0.4.*   ,
--    vector         == 0.9.*   ,
--    PrimitiveArray == 0.2.1.1 ,
--    BiobaseXNA     == 0.6.2.2 ,
--    ADPfusion      == 0.0.1.0
  main-is:
    Nussinov78.hs
  other-modules:
    BioInf.Nussinov78
  ghc-options:
    -rtsopts
    -Odph
    -funbox-strict-fields
    -fspec-constr
    -funfolding-use-threshold100
    -funfolding-keeness-factor100
  if flag (llvm)
    ghc-options:
      -fllvm -optlo-O3 -optlo-inline -optlo-std-compile-opts



source-repository head
  type: git
  location: git://github.com/choener/Nussinov78

