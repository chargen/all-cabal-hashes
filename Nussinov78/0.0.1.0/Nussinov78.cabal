-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:ed9d4edbbf1209b6c402ce29ed3c2e7f
    SHA1:99eb5ab267101b38247a379869cdae2a04873650
    SHA256:45d2e0674314a4bec3067589d211cec22d45d3dfc9add3b39d2ee81e350cac13
    SHA512:dd923b1e06b9ff8158b2e7122b64d13c83f6f33cf5f0d42ce593876daf53083e5a4a807d3fdeff3e4edba7a237fb9cb3d60af399357ae79e56de9766a48bb1dc
    Skein512_512:8bed518c7ad0e1c2dd779671a0ecdd3ec0e0374950281ac2409ee7ba80c4e51a2dc6b31731e7ad5bf3ed5986e72b9788b1f1ad05ca1a53611056cf5f56e94cec

x-package-locations:
    https://hackage.haskell.org/package/Nussinov78-0.0.1.0/Nussinov78-0.0.1.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/Nussinov78-0.0.1.0.tar.gz

x-package-size: 16032
-- END Added by all-cabal-hashes-tool

name:           Nussinov78
version:        0.0.1.0
author:         Christian Hoener zu Siederdissen, 2011-2012
copyright:      Christian Hoener zu Siederdissen, 2011-2012
homepage:       http://www.tbi.univie.ac.at/~choener/adpfusion
maintainer:     choener@tbi.univie.ac.at
category:       Bioinformatics
license:        GPL-3
license-file:   LICENSE
build-type:     Simple
stability:      experimental
cabal-version:  >= 1.6.0
synopsis:
                Nussinov78 using the ADPfusion library.
description:
                The Nussinov78 RNA secondary structure prediction algorithm
                using the ADPfusion framework.
                .
                This algorithm is simple enough to be used as a tutorial-type
                example. It also shows that efficient code is possible. The
                ADPfusion code compared to C is slower by a factor of only 1.8.
                We plan to improve upon this.
                .
                A number of helper functions currently present in
                BioInf.Nussinov78 will later move in their own library.
                .
                If possible, build using the GHC llvm backend, and GHC-7.2.2.
                GHC-7.4.x produces very bad code on my system, please benchmark
                using 7.2.2.
                .
                For comparison, a version of the algorithm written in C is
                available under C/nussinov.c. Use at least
                "gcc -O3 nussinov.c".

Extra-Source-Files:
  C/nussinov.c

Flag llvm
  description: build using llvm backend
  default: True



library
  build-depends:
    base >= 4 && < 5,
    mtl,
    primitive      == 0.4.*   ,
    vector         == 0.9.*   ,
    PrimitiveArray == 0.2.1.1 ,
    BiobaseXNA     == 0.6.2.2 ,
    ADPfusion      == 0.0.1.0
  exposed-modules:
    BioInf.Nussinov78
  ghc-options:
    -Odph
    -funbox-strict-fields
    -fspec-constr
    -funfolding-use-threshold100
    -funfolding-keeness-factor100
  if flag (llvm)
    ghc-options:
      -fllvm -optlo-O3 -optlo-inline -optlo-std-compile-opts



executable Nussinov78
  build-depends:
    base >= 4 && < 5,
    mtl,
    primitive      == 0.4.*   ,
    vector         == 0.9.*   ,
    PrimitiveArray == 0.2.1.1 ,
    BiobaseXNA     == 0.6.2.2 ,
    ADPfusion      == 0.0.1.0
  main-is:
    Nussinov78.hs
  other-modules:
    BioInf.Nussinov78
  ghc-options:
    -rtsopts
    -Odph
    -funbox-strict-fields
    -fspec-constr
    -funfolding-use-threshold100
    -funfolding-keeness-factor100
  if flag (llvm)
    ghc-options:
      -fllvm -optlo-O3 -optlo-inline -optlo-std-compile-opts



source-repository head
  type: git
  location: git://github.com/choener/Nussinov78

