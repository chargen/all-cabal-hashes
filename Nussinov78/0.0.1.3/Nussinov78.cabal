-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:16cb97bf3a9f8a036f75ce392e30acb1
    SHA1:f7593cbd166df89f8501ee3c5fc1c7e47867d3a9
    SHA256:a0041bd1b8f6c43a05621b4d1d1e0f9103451f3af646d648b6f37c1fbfebb950
    SHA512:657d3c94447b1127eb6670c0f79ce09e3c6ff804085b0433d6e1103aced5ed9a2b3ab29b353b09e18044cef79787bf322afa42ee22a0ec03ce1c75da1568f0f7
    Skein512_512:4ba683c81ae0670cd8d001e73f54615af0e7011f55a49eb8f01cf50ab2fa0c5b5e5e640812925ffd14fa9c5fe19cf3e957c82b25855f1a9680fa2ecbd37fe7a2

package-locations:
    https://hackage.haskell.org/package/Nussinov78-0.0.1.3/Nussinov78-0.0.1.3.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/Nussinov78-0.0.1.3.tar.gz

package-size: 16029
-- END Added by all-cabal-hashes-tool

name:           Nussinov78
version:        0.0.1.3
author:         Christian Hoener zu Siederdissen, 2011-2012
copyright:      Christian Hoener zu Siederdissen, 2011-2012
homepage:       http://www.tbi.univie.ac.at/~choener/adpfusion
maintainer:     choener@tbi.univie.ac.at
category:       Bioinformatics
license:        GPL-3
license-file:   LICENSE
build-type:     Simple
stability:      experimental
cabal-version:  >= 1.6.0
synopsis:
                Nussinov78 using the ADPfusion library.
description:
                The Nussinov78 RNA secondary structure prediction algorithm
                using the ADPfusion framework.
                .
                This algorithm is simple enough to be used as a tutorial-type
                example. It also shows that efficient code is possible. The
                ADPfusion code compared to C is slower by a factor of only 1.8.
                We plan to improve upon this.
                .
                A number of helper functions currently present in
                BioInf.Nussinov78 will later move in their own library.
                .
                If possible, build using the GHC llvm backend, and GHC-7.2.2.
                GHC-7.4.x produces very bad code on my system, please benchmark
                using 7.2.2.
                .
                For comparison, a version of the algorithm written in C is
                available under C/nussinov.c. Use at least
                "gcc -O3 nussinov.c".



Extra-Source-Files:
  C/nussinov.c

Flag llvm
  description: build using llvm backend
  default: True



library
  build-depends:
    base >= 4 && < 5,
    mtl            >= 2,
    primitive      == 0.4.*   ,
    vector         == 0.9.*   ,
    PrimitiveArray == 0.2.2.0 ,
    BiobaseXNA     == 0.6.2.5 ,
    ADPfusion      == 0.0.1.2
  exposed-modules:
    BioInf.Nussinov78
  ghc-options:
    -O2
    -funbox-strict-fields
    -funfolding-use-threshold100
    -funfolding-keeness-factor100
  if flag (llvm)
    ghc-options:
      -fllvm -optlo-O3 -optlo-inline -optlo-std-compile-opts



executable Nussinov78
  build-depends:
--    from above
  main-is:
    Nussinov78.hs
  other-modules:
    BioInf.Nussinov78
  ghc-options:
    -rtsopts
    -O2
    -funbox-strict-fields
    -funfolding-use-threshold100
    -funfolding-keeness-factor100
  if flag (llvm)
    ghc-options:
      -fllvm -optlo-O3 -optlo-inline -optlo-std-compile-opts



source-repository head
  type: git
  location: git://github.com/choener/Nussinov78

