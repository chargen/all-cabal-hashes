name:          functor-apply
category:      Control, Comonads
version:       0.10.0.1
license:       BSD3
cabal-version: >= 1.2
license-file:  LICENSE
author:        Edward A. Kmett
maintainer:    Edward A. Kmett <ekmett@gmail.com>
stability:     provisional
homepage:      http://comonad.com/reader/
copyright:     Copyright (C) 2011 Edward A. Kmett
synopsis:      Applicative sans pure, Monad sans return, Alternative sans empty
description:   
  Provides a wide array of semigroup based Functors.
  .
  When working with comonads you often have the @\<*\>@ portion of an @Applicative@, but
  not the @pure@. This was captured in Uustalu and Vene's \"Essence of Dataflow Programming\"
  in the form of the @ComonadZip@ class in the days before @Applicative@, manifested here
  as @ComonadApply@.
  .
  Logically:
  .
  > Functor ---> Apply --------> Bind
  >    |           |              |
  >    |           v              v
  >    |      Applicative ---> Monad
  >    |           |              |
  >    v           v              v
  >   Alt ->  Alternative -> MonadPlus
  . 
  This lets us remove many of the restrictions from various monad transformers
  as in many cases the binding operation or @\<*\>@ operation does not require them.
  .
  Finally, to work with these weaker structures it is beneficial to have containers
  that can provide stronger guarantees about their contents, so versions of 'Traversable'
  and 'Foldable' that can be folded with just a 'Semigroup' are added.

build-type:    Simple

library
  build-depends: 
    base >= 4 && < 4.4,
    transformers >= 0.2.0 && < 0.3,
    containers >= 0.4.0 && < 0.5,
    comonad >= 0.9.0 && < 1.0,
    semigroups >= 0.3.2 && < 0.4

  exposed-modules:
    Data.Functor.Alt,
    Data.Functor.Apply,
    Data.Functor.Bind,
    Data.Functor.Bind.Trans,
    Data.Functor.Plus,
    Data.Semigroup.Foldable,
    Data.Semigroup.Traversable

  ghc-options: -Wall 


package-hashes:
    MD5:0dc1a56e7cf01eaa365868c814de232e
    SHA1:f8aada185bbbfa2b3ee191818c4ed711f9b03806
    SHA256:912913dc49fed0750f487005f56af82d4685aaa0e8b17362a92832906450cde9
    SHA512:329235b5c2e95193f650e16f2c1b7fb0fb93f1ec51e94df748a2793acd1a08878b0bf0dc8b83008b456be0213baf9b64b1f98c9f6512f4df3a145147d055450e
    Skein512_512:7558ace601a712d29f4afbe4263517755744996ae256a4d29990860e2061a21d0c7930b25dbaf9cf547bf917705da383304d0638d208558e966b03f6e715df30

package-locations:
    https://hackage.haskell.org/package/functor-apply-0.10.0.1/functor-apply-0.10.0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/functor-apply-0.10.0.1.tar.gz

