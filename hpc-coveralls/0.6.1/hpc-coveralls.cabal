-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:2d99c46db426953de807f1046b6c66fb
    SHA1:4f8be8cc31255aa023aacc0fb8d5ff2a19ccef2c
    SHA256:e324653290ba30e54835fa3f4b05ae54a4f366d84dc121f87f225c802a6f4e75
    SHA512:c9087fd37ae6ea342d5a15fd27f99100cd926e8ee0db7082f8ede8375d3be6fd58e1b8beb55c87dcb02159611bdb218d3d46cef992c362ad877241dd69a255cf
    Skein512_512:7ba480ce1163300916badee69c5c1729469761e37d4e6b76299484d1a219e38b62379663db2a1a792748835f6914151566dbe6406ee28466a50a9ec8c39a39ea

package-locations:
    https://hackage.haskell.org/package/hpc-coveralls-0.6.1/hpc-coveralls-0.6.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/hpc-coveralls-0.6.1.tar.gz

package-size: 11003
-- END Added by all-cabal-hashes-tool

name:           hpc-coveralls
version:        0.6.1
synopsis:       Coveralls.io support for Haskell.
description:
  This utility converts and sends Haskell projects hpc code coverage to
  <http://coveralls.io/ coverall.io>.
  .
  /Usage/
  .
  Below is the simplest example of .travis.yml configuration to use with Travis CI:
  .
  > language: haskell
  > ghc: 7.8
  > script:
  >   - cabal configure --enable-tests --enable-library-coverage && cabal build && cabal test
  > after_script:
  >   - cabal install hpc-coveralls
  >   - hpc-coveralls [options] [test-suite-names]
  .
  Further information can be found in the <https://github.com/guillaume-nargeot/hpc-coveralls README>.

license:        BSD3
license-file:   LICENSE
author:         Guillaume Nargeot
maintainer:     Guillaume Nargeot <guillaume+hackage@nargeot.com>
copyright:      (c) 2014 Guillaume Nargeot
category:       Control
build-type:     Simple
stability:      experimental
cabal-version:  >= 1.8
tested-with:    GHC == 7.6, GHC == 7.8
homepage:       https://github.com/guillaume-nargeot/hpc-coveralls
bug-reports:    https://github.com/guillaume-nargeot/hpc-coveralls/issues

extra-source-files:
  README.md,
  CHANGELOG.md

source-repository head
  type: git
  location: https://github.com/guillaume-nargeot/hpc-coveralls.git

library
  hs-source-dirs: src
  exposed-modules:
    Trace.Hpc.Coveralls,
    Trace.Hpc.Coveralls.Lix,
    Trace.Hpc.Coveralls.Types,
    Trace.Hpc.Coveralls.Util
  other-modules:
    HpcCoverallsCmdLine,
    Trace.Hpc.Coveralls.Config,
    Trace.Hpc.Coveralls.Curl,
    Trace.Hpc.Coveralls.Paths
  build-depends:
    aeson,
    base >=4 && < 5,
    bytestring >= 0.10,
    containers >= 0.5,
    cmdargs >= 0.10,
    curl >= 1.3.8,
    hpc >= 0.6,
    safe >= 0.3,
    split

executable hpc-coveralls
  hs-source-dirs: src
  main-is:        HpcCoverallsMain.hs
  build-depends:
    aeson,
    base >= 4 && < 5,
    bytestring >= 0.10,
    containers >= 0.5,
    cmdargs >= 0.10,
    curl >= 1.3.8,
    hpc >= 0.6,
    safe >= 0.3,
    split
  ghc-options:    -Wall -fwarn-tabs -fwarn-incomplete-uni-patterns

executable run-cabal-test
  hs-source-dirs: src
  main-is:        RunCabalTestMain.hs
  build-depends:
    async >= 2.0,
    base >=4 && < 5,
    process,
    regex-posix,
    split
  ghc-options:    -Wall -fwarn-tabs -fwarn-incomplete-uni-patterns

test-suite test-all
  hs-source-dirs: test
  type:           exitcode-stdio-1.0
  main-is:        TestAll.hs
  build-depends:
    base,
    hpc-coveralls,
    HUnit
  ghc-options:    -Wall
