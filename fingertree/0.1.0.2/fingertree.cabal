-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:309a4ddf0349bd4cc9c9d3248dc72da6
    SHA1:505c7ebca62d2fb0ac93b315a8527b079f675561
    SHA256:e6232c5c77afbb8a70dcd898253fdb07f240f71144c8b12118df526376f53acf
    SHA512:ba948c6664b814be32c7360014a6ec0f30886204ce75d7e899457e3b16c57e4b7559b6c0de63d66433dab6e75aacb0d902ba079b3f224a577fb72a618c14282c
    Skein512_512:f666d6b513ab1dc674230403170d806f595966a8a4c7576e7ec705d95bf1fd2a8262940894eced3fbc9e50edee532df7e858ce48e8ac994cbf4168ed01a91f18

x-package-locations:
    https://hackage.haskell.org/package/fingertree-0.1.0.2/fingertree-0.1.0.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/fingertree-0.1.0.2.tar.gz

x-package-size: 14286
-- END Added by all-cabal-hashes-tool

Name:           fingertree
Version:        0.1.0.2
Cabal-Version:  >= 1.8
Copyright:      (c) 2006 Ross Paterson, Ralf Hinze
License:        BSD3
License-File:   LICENSE
Maintainer:     Ross Paterson <R.Paterson@city.ac.uk>
Category:       Data Structures
Synopsis:       Generic finger-tree structure, with example instances
Description:
                A general sequence representation with arbitrary
                annotations, for use as a base for implementations of
                various collection types, with examples, as described
                in section 4 of
                .
                 * Ralf Hinze and Ross Paterson,
                   \"Finger trees: a simple general-purpose data structure\",
                   /Journal of Functional Programming/ 16:2 (2006) pp 197-217.
                   <http://staff.city.ac.uk/~ross/papers/FingerTree.html>
                .
                For a tuned sequence type, see @Data.Sequence@ in the
                @containers@ package, which is a specialization of
                this structure.
Build-Type:     Simple

Source-Repository head
  Type: darcs
  Location: http://hub.darcs.net/ross/fingertree

Library
  Build-Depends: base < 6
  Extensions:   MultiParamTypeClasses
                FunctionalDependencies
                FlexibleInstances
                UndecidableInstances
  Exposed-Modules:
                Data.FingerTree
                Data.IntervalMap.FingerTree
                Data.PriorityQueue.FingerTree

Test-suite ft-properties
  type: exitcode-stdio-1.0
  main-is: tests/ft-properties.hs
  cpp-options: -DTESTING
  build-depends:
                base >= 4.2 && < 6,
                HUnit,
                QuickCheck,
                test-framework,
                test-framework-hunit,
                test-framework-quickcheck2
