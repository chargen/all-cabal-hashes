-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:edac999eecb54f888a25ec90bd24d68b
    SHA1:e00e4a0ad48e4d9f0738d121014b8a598a72f6b8
    SHA256:e85899211089a2878bbf126e2e9f11eea52125a0cf2a078a48a364b188c89402
    SHA512:f9cc4a1fb418185e9e4644139e7c39fb6a5fcc249f7c2ca6316e2c6144d9cd281e7f9f89b7f71a08da6304c2832687678fbd21a6fa00fb9b558dab213b760c15
    Skein512_512:67ab7384fa27e802eab3d7ed8363004f933c378a7439512ffb7702ff361730723f48667c44455a7c4e0311eef7539fd63e47209c11c58af52bfcb256453563d5

package-locations:
    https://hackage.haskell.org/package/fingertree-0.0.1.1/fingertree-0.0.1.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/fingertree-0.0.1.1.tar.gz

package-size: 11297
-- END Added by all-cabal-hashes-tool

Name:           fingertree
Version:        0.0.1.1
Cabal-Version:  >= 1.6
Copyright:      (c) 2006 Ross Paterson, Ralf Hinze
License:        BSD3
License-File:   LICENSE
Maintainer:     Ross Paterson <ross@soi.city.ac.uk>
Category:       Data Structures
Synopsis:       Generic finger-tree structure, with example instances
Description:
                A general sequence representation with arbitrary
                annotations, for use as a base for implementations of
                various collection types, with examples, as described
                in section 4 of
                .
                 * Ralf Hinze and Ross Paterson,
                   \"Finger trees: a simple general-purpose data structure\",
                   /Journal of Functional Programming/ 16:2 (2006) pp 197-217.
                   <http://www.soi.city.ac.uk/~ross/papers/FingerTree.html>
                .
                For a tuned sequence type, see @Data.Sequence@ in the
                @containers@ package, which is a specialization of
                this structure.
Build-Type:     Simple

Source-Repository head
  Type: darcs
  Location: http://code.haskell.org/~ross/fingertree

Library
  Build-Depends: base < 6
  Extensions:   MultiParamTypeClasses
                FunctionalDependencies
                FlexibleInstances
                UndecidableInstances
  Exposed-Modules:
                Data.FingerTree
                Data.IntervalMap.FingerTree
                Data.PriorityQueue.FingerTree
