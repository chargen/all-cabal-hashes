-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:3b8a0308517a6d7061041bc11b941fc2
    SHA1:59852b7007ecd6f7cff8499b25fabc9933044f78
    SHA256:7d4f85f2975b60ee6acda374387968a8ca5bca078027726c8cfd831f22478408
    SHA512:4f50e35fbec046fbefed59809590e7d982591f47053fd6f24dac7f9017b8e22cf891a365f114afaa8cbfd2410d972841ff39faaeb45134144890e00f06d52f6b
    Skein512_512:bcbb61eaf5de82f044b3a5ac241e561b0efd894875525bd5757674ba3fb02e8b8b08c7fa72db39f6dcc6704ce1d89c53aabddf9693ca1fd75d97a9593c465175

x-package-locations:
    https://hackage.haskell.org/package/fingertree-0.1.0.1/fingertree-0.1.0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/fingertree-0.1.0.1.tar.gz

x-package-size: 14292
-- END Added by all-cabal-hashes-tool

Name:           fingertree
Version:        0.1.0.1
Cabal-Version:  >= 1.8
Copyright:      (c) 2006 Ross Paterson, Ralf Hinze
License:        BSD3
License-File:   LICENSE
Maintainer:     Ross Paterson <ross@soi.city.ac.uk>
Category:       Data Structures
Synopsis:       Generic finger-tree structure, with example instances
Description:
                A general sequence representation with arbitrary
                annotations, for use as a base for implementations of
                various collection types, with examples, as described
                in section 4 of
                .
                 * Ralf Hinze and Ross Paterson,
                   \"Finger trees: a simple general-purpose data structure\",
                   /Journal of Functional Programming/ 16:2 (2006) pp 197-217.
                   <http://www.soi.city.ac.uk/~ross/papers/FingerTree.html>
                .
                For a tuned sequence type, see @Data.Sequence@ in the
                @containers@ package, which is a specialization of
                this structure.
Build-Type:     Simple

Source-Repository head
  Type: darcs
  Location: http://code.haskell.org/~ross/fingertree

Library
  Build-Depends: base < 6
  Extensions:   MultiParamTypeClasses
                FunctionalDependencies
                FlexibleInstances
                UndecidableInstances
  Exposed-Modules:
                Data.FingerTree
                Data.IntervalMap.FingerTree
                Data.PriorityQueue.FingerTree

Test-suite ft-properties
  type: exitcode-stdio-1.0
  main-is: tests/ft-properties.hs
  cpp-options: -DTESTING
  build-depends:
                base >= 4.2 && < 6,
                HUnit,
                QuickCheck,
                test-framework,
                test-framework-hunit,
                test-framework-quickcheck2
