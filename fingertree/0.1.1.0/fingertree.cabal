-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:a3f48a99dc6a7830dd4d59c941ea5a37
    SHA1:c4491e730e6e9b9920b2501214f88c05247552ac
    SHA256:160c5ba370d781dbf2920ddca870ce8596ab76729972535595bef835ee1cddf0
    SHA512:47d7387e11cf05a2df323c6af76a12e6cf02a857f7131203400cbc6ba9ee4c3c9e2c721a8423e6456a385f5ea0c4aedd0e9a2600d2d33609c0457cd259337016
    Skein512_512:9ec1f196b8e5bf2964f7b77f34919eabdc8aa70f5033f64e071d5f4b2e13109c9a35c20d17515660ff75610028964a96102afbcc45782ba45bb76ad44e546efa

x-package-locations:
    https://hackage.haskell.org/package/fingertree-0.1.1.0/fingertree-0.1.1.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/fingertree-0.1.1.0.tar.gz

x-package-size: 14415
-- END Added by all-cabal-hashes-tool

Name:           fingertree
Version:        0.1.1.0
Cabal-Version:  >= 1.8
Copyright:      (c) 2006 Ross Paterson, Ralf Hinze
License:        BSD3
License-File:   LICENSE
Maintainer:     Ross Paterson <R.Paterson@city.ac.uk>
bug-reports:    http://hub.darcs.net/ross/fingertree/issues
Category:       Data Structures
Synopsis:       Generic finger-tree structure, with example instances
Description:
                A general sequence representation with arbitrary
                annotations, for use as a base for implementations of
                various collection types, with examples, as described
                in section 4 of
                .
                 * Ralf Hinze and Ross Paterson,
                   \"Finger trees: a simple general-purpose data structure\",
                   /Journal of Functional Programming/ 16:2 (2006) pp 197-217.
                   <http://staff.city.ac.uk/~ross/papers/FingerTree.html>
                .
                For a tuned sequence type, see @Data.Sequence@ in the
                @containers@ package, which is a specialization of
                this structure.
Build-Type:     Simple

Source-Repository head
  Type: darcs
  Location: http://hub.darcs.net/ross/fingertree

Library
  Build-Depends: base < 6
  Extensions:   MultiParamTypeClasses
                FunctionalDependencies
                FlexibleInstances
                UndecidableInstances
  Exposed-Modules:
                Data.FingerTree
                Data.IntervalMap.FingerTree
                Data.PriorityQueue.FingerTree

Test-suite ft-properties
  type: exitcode-stdio-1.0
  main-is: tests/ft-properties.hs
  cpp-options: -DTESTING
  build-depends:
                base >= 4.2 && < 6,
                HUnit,
                QuickCheck,
                test-framework,
                test-framework-hunit,
                test-framework-quickcheck2
