-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:36079d45b73b45b539901804b7de7be9
    SHA1:56de64f8b051ec98ede141b49b011ad5fca4db34
    SHA256:2c1d05d1c79ae4bc419b4083d319ab4a9bf2545e282fd81d0a7ea130405a6f9a
    SHA512:814c53ee6b559577df892bcf0a740a4ec09a4ceb0c6ac6f82ac8847857af90e89765682fe6224e635721213bb3b6271ec51cdbd3a35da965c3951f907f10dbba
    Skein512_512:e7a7f10eb75bddeff462f4732b26f872895f7ad2bfd18bb88a0bd763b6c225ef2f5a0b65f5668aeb67edb7846f25da6396a1b34cb75737bbb26907a90eaba518

package-locations:
    https://hackage.haskell.org/package/semigroups-0.13/semigroups-0.13.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/semigroups-0.13.tar.gz

package-size: 10812
-- END Added by all-cabal-hashes-tool

name:          semigroups
category:      Algebra, Data, Data Structures, Math
version:       0.13
x-revision: 1
license:       BSD3
cabal-version: >= 1.10
license-file:  LICENSE
author:        Edward A. Kmett
maintainer:    Edward A. Kmett <ekmett@gmail.com>
stability:     provisional
homepage:      http://github.com/ekmett/semigroups/
bug-reports:   http://github.com/ekmett/semigroups/issues
copyright:     Copyright (C) 2011-2014 Edward A. Kmett
synopsis:      Anything that associates
description:
    In mathematics, a semigroup is an algebraic structure consisting of a set together with an associative binary operation. A semigroup generalizes a monoid in that there might not exist an identity element. It also (originally) generalized a group (a monoid with all inverses) to a type where every element did not have to have an inverse, thus the name semigroup.
build-type:    Simple
extra-source-files: .travis.yml README.markdown

source-repository head
  type: git
  location: git://github.com/ekmett/semigroups.git

flag base2
  default: False
  manual: False

library
  default-language: Haskell98
  other-extensions: CPP

  if !impl(hugs)
    other-extensions: DeriveDataTypeable
    cpp-options: -DLANGUAGE_DeriveDataTypeable

  if impl(ghc >= 7.4)
    cpp-options: -DLANGUAGE_DeriveGeneric

  if flag(base2)
    build-depends: base == 2.*
    cpp-options: -DBASE2
  else
    build-depends:
      base                 >= 3 && <4.5 || >=4.6 && <5,
      bytestring           >= 0.9  && < 1,
      containers           >= 0.3  && < 0.6,
      hashable             >= 1.1  && < 1.3,
      nats                 >= 0.1  && < 1,
      text                 >= 0.10 && < 2,
      unordered-containers >= 0.2  && < 0.3

  hs-source-dirs: src
  ghc-options:    -Wall

  exposed-modules:
    Data.Semigroup
    Data.List.NonEmpty
