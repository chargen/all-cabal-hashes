-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:329ae479e206f09b4256bcfaf3568b97
    SHA1:69058bd1b2a3bb3b642cdb0715b8967717489f4f
    SHA256:d2101ceade6f2f66894028391f9c5d9b84473f458d52ad1d67ef094c6d71d43c
    SHA512:7002e5de084eb94ce5503beefe71d63b2eb3550e21ad6293a0862ec52e6346c428a03464481ed4fe647cb76bb73249322582c72a78044df9b4a8c7d77a01d227
    Skein512_512:00512d5ae1d986a214acf18951af0a10923740438eeb36e347fc1f79389056c6a4da329d33a70657f757dff742349610e26ad2ce6d8146133e01f29aa8e0f54e

x-package-locations:
    https://hackage.haskell.org/package/adaptive-tuple-0.1.1/adaptive-tuple-0.1.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/adaptive-tuple-0.1.1.tar.gz

x-package-size: 6671
-- END Added by all-cabal-hashes-tool

name:		adaptive-tuple
version:        0.1.1
synopsis:       Self-optimizing tuple types
description:
  Self optimizing tuple types.
  .
  Adaptive tuples are tuple types in which the number of elements is
  determined at run-time.  These structures are designed to combine
  the space-efficiency of tuples with the size flexibility of lists.
  .
  Adaptive tuples provide lazy and strict, unpacked data structures 
  for all tuple sizes from 0 to 20 elements.  Adaptive tuples of more than
  20 elements are allowed, however they are stored in an ordinary list.

category:       Data
author:		John W. Lato, jwlato@gmail.com
maintainer:	John W. Lato, jwlato@gmail.com
license:	BSD3
license-file:	LICENSE
homepage:       http://inmachina.net/~jwlato/haskell/
tested-with:    GHC == 6.12.1, GHC == 6.10.4
stability:	experimental
cabal-version:  >= 1.6

build-type:     Simple
extra-source-files:
  LICENSE

flag splitBase
  description: Use the new split-up base package.

library
 hs-source-dirs:
   src

 if flag(splitBase)
   build-depends:
     base >= 3 && < 5
 else
   build-depends:
     base < 3

 build-depends:
   type-level >= 0.2 && < 0.3
   ,template-haskell >= 2.0 && < 3

 exposed-modules:
   Data.AdaptiveTuple
   Data.AdaptiveTuple.Reps.Strict
   Data.AdaptiveTuple.Reps.Lazy
 other-modules:
   Data.AdaptiveTuple.AdaptiveTuple
   Data.AdaptiveTuple.TH

 ghc-options: -Wall
 if impl(ghc >= 6.8)
   ghc-options: -fwarn-tabs

source-repository head
  type:     darcs
  location: http://tanimoto.us/~jwlato/haskell/AdaptiveTuple
