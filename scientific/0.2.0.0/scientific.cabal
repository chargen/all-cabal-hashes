-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:5560a1f64531758a50442e03e3a72e52
    SHA1:3e9eaa33363d6d714dfa11606de4e3fbd3592301
    SHA256:058b388f32bbb0042b66a77d1471b4a4da80c0099781401d44473b3cc81d6221
    SHA512:886eda9d47bf9cd558365247c100b33bdd628bc83cc770ae6edf535f75c0adb2b627899c93aca36b381580335116c04f529406b3ea25b3e4b678764180649347
    Skein512_512:034719870cae2df03b6c63060914c5a72031029b7815fdb2c4a7c0cff89cc8ca62de1b40997544052a84c956e668fd3d7c0c35af6dce2aa1a6670625bbd65b47

package-locations:
    https://hackage.haskell.org/package/scientific-0.2.0.0/scientific-0.2.0.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/scientific-0.2.0.0.tar.gz

package-size: 8489
-- END Added by all-cabal-hashes-tool

name:                scientific
version:             0.2.0.0
synopsis:            Arbitrary-precision floating-point numbers represented using scientific notation
description:         A @Scientific@ number is an arbitrary-precision floating-point number
                     represented using scientific notation.
                     .
                     A scientific number with 'coefficient' @c@ and
                     'base10Exponent' @e@ corresponds to the
                     'Fractional' number: @'fromInteger' c * 10 '^^' e@
                     .
                     Its primary use-case is to serve as the target of
                     parsing floating point numbers. Since the textual
                     representation of floating point numbers use
                     scientific notation they can be efficiently
                     parsed to a @Scientific@ number.
homepage:            https://github.com/basvandijk/scientific
bug-reports:         https://github.com/basvandijk/scientific/issues
license:             BSD3
license-file:        LICENSE
author:              Bas van Dijk
maintainer:          Bas van Dijk <v.dijk.bas@gmail.com>
category:            Data
build-type:          Simple
cabal-version:       >=1.10

source-repository head
  type:     git
  location: git://github.com/basvandijk/scientific.git

library
  exposed-modules:     Data.Scientific
  other-extensions:    DeriveDataTypeable, BangPatterns
  ghc-options:         -Wall
  build-depends:       base     >= 4.3   && < 4.8
                     , deepseq  >= 1.3   && < 1.4
                     , text     >= 0.8   && < 1.2
                     , hashable >= 1.1.2 && < 1.3
  hs-source-dirs:      src
  default-language:    Haskell2010

test-suite test-scientific
  type:             exitcode-stdio-1.0
  hs-source-dirs:   test
  main-is:          test.hs
  default-language: Haskell2010
  ghc-options:      -Wall

  build-depends: scientific
               , base             >= 4.3   && < 4.8
               , tasty            >= 0.3.1 && < 0.5
               , tasty-smallcheck >= 0.2   && < 0.3
               , smallcheck       >= 1.0   && < 1.1
               , text             >= 0.8   && < 1.2

benchmark bench-scientific
  type:             exitcode-stdio-1.0
  hs-source-dirs:   bench
  main-is:          bench.hs
  default-language: Haskell2010
  ghc-options:      -O2
  build-depends:    scientific
                  , base       >= 4.3 && < 4.8
                  , criterion  >= 0.5 && < 0.10
