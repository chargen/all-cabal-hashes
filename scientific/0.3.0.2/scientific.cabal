name:                scientific
version:             0.3.0.2
synopsis:            Numbers represented using scientific notation
description:
  @Data.Scientific@ provides a space efficient and arbitrary precision
  scientific number type.
  .
  'Scientific' numbers are represented using
  <http://en.wikipedia.org/wiki/Scientific_notation scientific notation>. It
  uses a coefficient @c :: 'Integer'@ and a base-10 exponent @e :: 'Int'@ (do
  note that since we're using an 'Int' to represent the exponent these numbers
  aren't truly arbitrary precision). A scientific number corresponds to the
  'Fractional' number: @'fromInteger' c * 10 '^^' e@.
  .
  The main application of 'Scientific' is to be used as the target of parsing
  arbitrary precision numbers coming from an untrusted source. The advantages
  over using 'Rational' for this are that:
  .
  * A 'Scientific' is more efficient to construct. Rational numbers need to be
  constructed using '%' which has to compute the 'gcd' of the 'numerator' and
  'denominator'. Scientific numbers only need to be normalized, i.e. @10000000@
  to @1e7@.
  .
  * 'Scientific' is safe against numbers with huge exponents. For example:
  @1e1000000000 :: 'Rational'@ will fill up all space and crash your
  program. Scientific works as expected:
  .
   > > read "1e1000000000" :: Scientific
   > 1.0e1000000000
  .
  * Also, the space usage of converting scientific numbers with huge exponents to
  @'Integral's@ (like: 'Int') or @'RealFloat's@ (like: 'Double' or 'Float')
  will always be bounded by the target type.

homepage:            https://github.com/basvandijk/scientific
bug-reports:         https://github.com/basvandijk/scientific/issues
license:             BSD3
license-file:        LICENSE
author:              Bas van Dijk
maintainer:          Bas van Dijk <v.dijk.bas@gmail.com>
category:            Data
build-type:          Simple
cabal-version:       >=1.10

source-repository head
  type:     git
  location: git://github.com/basvandijk/scientific.git

library
  exposed-modules:     Data.Scientific
                       Data.Text.Lazy.Builder.Scientific
                       Data.ByteString.Builder.Scientific
  other-extensions:    DeriveDataTypeable, BangPatterns
  ghc-options:         -Wall
  build-depends:       base       >= 4.3   && < 4.8
                     , deepseq    >= 1.3   && < 1.4
                     , text       >= 0.8   && < 1.3
                     , bytestring >= 0.10  && < 0.11
                     , hashable   >= 1.1.2 && < 1.3
                     , arithmoi   >= 0.4.1 && < 0.5
                     , array      >= 0.1   && < 0.6
  hs-source-dirs:      src
  default-language:    Haskell2010

test-suite test-scientific
  type:             exitcode-stdio-1.0
  hs-source-dirs:   test
  main-is:          test.hs
  default-language: Haskell2010
  ghc-options:      -Wall

  build-depends: scientific
               , base             >= 4.3   && < 4.8
               , tasty            >= 0.3.1 && < 0.9
               , tasty-smallcheck >= 0.2   && < 0.9
               , tasty-quickcheck >= 0.8   && < 0.9
               , smallcheck       >= 1.0   && < 1.2
               , QuickCheck       >= 2.5   && < 2.8
               , text             >= 0.8   && < 1.3
               , bytestring       >= 0.10  && < 0.11

benchmark bench-scientific
  type:             exitcode-stdio-1.0
  hs-source-dirs:   bench
  main-is:          bench.hs
  default-language: Haskell2010
  ghc-options:      -O2
  build-depends:    scientific
                  , base       >= 4.3 && < 4.8
                  , criterion  >= 0.5 && < 0.12


package-hashes:
    MD5:f35d5ee8596eea1a37bfcf34150063de
    SHA1:d5efdb74c1da33d06d1fb5249884d3f8cbb39055
    SHA256:3c3d9c0db871b80a9265e4c7cba41112e0ebda210de353bf897c9f5165fb115d
    SHA512:fd6bfcad323ac429b1320856fb79e79337ab406506b08b8128e4db50e7695f802df019b076adf0691e4216aee2d2243947aa61bf9a0184fc8b45d74fa96f1df7
    Skein512_512:77076a0736682e5404892a1fe99f56169e0e826eeeb40d9e66157f0c36e37f3cae35e8093e833fada2c3c5e11645c144ef22c7f213ab554ff5ecc88b00b6b344

package-locations:
    https://hackage.haskell.org/package/scientific-0.3.0.2/scientific-0.3.0.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/scientific-0.3.0.2.tar.gz

