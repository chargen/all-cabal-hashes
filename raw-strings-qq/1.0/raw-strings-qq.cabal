-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:315a0766830ab6bba2473853d5aba09c
    SHA1:3cbd5da43020e3fd3edc6d591f5d8a455cdb5b88
    SHA256:b15298ef06db88e7d462ee38a2af32a5f97dc6f376e1553d5123587844160d5f
    SHA512:cfdbf724567c4e48e96f15844d6be1dd821ec3e6fdbf703d29ba40422656bc7f9218be97e0fd82c00927d767123e1f141d451a19feacca04c501b05700eb0507
    Skein512_512:89fafd8781b5ee2312880eddf1303044df43497ac80bfdc52b49067cf1bd2cb7e26e33ca863030f3738233fd9f9af5b79548b6eee07de8294271d53a7812769a

x-package-locations:
    https://hackage.haskell.org/package/raw-strings-qq-1.0/raw-strings-qq-1.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/raw-strings-qq-1.0.tar.gz

x-package-size: 2857
-- END Added by all-cabal-hashes-tool

name:                raw-strings-qq
version:             1.0
synopsis:            Raw string literals for Haskell.
description:

    A quasiquoter for raw string literals - that is, string literals that don't
    recognise the standard escape sequences (such as '\n'). Basically, they make
    your code more readable by freeing you from the responsibility to escape
    backslashes. They are useful when working with regular expressions,
    DOS/Windows paths and markup languages (such as XML).
    .
    See @examples/RawRegex.hs@ for a usage example.

homepage:            https://github.com/23Skidoo/raw-strings-qq
bug-reports:         https://github.com/23Skidoo/raw-strings-qq/issues
license:             BSD3
license-file:        LICENSE
author:              Mikhail Glushenkov
maintainer:          mikhail.glushenkov@gmail.com
copyright:           (c) Mikhail Glushenkov 2013
category:            Text
build-type:          Simple
cabal-version:       >=1.8
extra-source-files:  examples/RawRegex.hs

source-repository head
  type:     git
  location: https://github.com/23Skidoo/raw-strings-qq.git

library
  exposed-modules:     Text.RawString.QQ
  build-depends:       base <= 10, template-haskell >= 2.5
