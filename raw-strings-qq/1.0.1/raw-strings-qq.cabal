-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:b021ca0e44bf05167509b69da187b135
    SHA1:88a457b066a694c96cd886009fe673aa1501a633
    SHA256:51de0c3e990ee689e25edc5eb553198583ee3214b2e15f378a2c302c0e6f739d
    SHA512:31f51823092eccffb98a54f57382fe97606abe16a7102170ca6861383766781cdb0a1ad9e70dca7975c755f7b1f4daeca0b94b38e88ba2409d20714d838da7c0
    Skein512_512:e9e2cc488fad45bbcd16cc6d65ad7ca3710de24d54bceb5a1a55b987cca101b24e3dd686960d11bf2744c67235d5c772c6d7c60609489e2b6a3043aca514ae29

package-locations:
    https://hackage.haskell.org/package/raw-strings-qq-1.0.1/raw-strings-qq-1.0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/raw-strings-qq-1.0.1.tar.gz

package-size: 2856
-- END Added by all-cabal-hashes-tool

name:                raw-strings-qq
version:             1.0.1
synopsis:            Raw string literals for Haskell.
description:

    A quasiquoter for raw string literals - that is, string literals that don't
    recognise the standard escape sequences (such as @\'\\n\'@). Basically, they
    make your code more readable by freeing you from the responsibility to
    escape backslashes. They are useful when working with regular expressions,
    DOS/Windows paths and markup languages (such as XML).
    .
    See @examples/RawRegex.hs@ for a usage example.

homepage:            https://github.com/23Skidoo/raw-strings-qq
bug-reports:         https://github.com/23Skidoo/raw-strings-qq/issues
license:             BSD3
license-file:        LICENSE
author:              Mikhail Glushenkov
maintainer:          mikhail.glushenkov@gmail.com
copyright:           (c) Mikhail Glushenkov 2013
category:            Text
build-type:          Simple
cabal-version:       >=1.8
extra-source-files:  examples/RawRegex.hs

source-repository head
  type:     git
  location: https://github.com/23Skidoo/raw-strings-qq.git

library
  exposed-modules:     Text.RawString.QQ
  build-depends:       base <= 10, template-haskell >= 2.5
