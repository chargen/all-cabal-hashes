name:		     TrieMap
version:             3.0.1
cabal-version:       >= 1.6
tested-with:	     GHC
category:            Algorithms
synopsis:	     Automatic type inference of generalized tries with Template Haskell.
description:	     Provides a efficient and compact implementation of generalized tries, and Template Haskell tools to generate
                     the necessary translation code.  This is meant as a drop-in replacement for Data.Map.
                     
                     The most recent release combines zipper-based ideas from recently proposed changes to Data.Map, as well
                     as heavily optimized ByteString and Vector instances based on the vector package.
                     
                     Since version 2, unit tests and benchmarks have been taken much more seriously, and major optimizations
                     have been made.
                     
                     Compared to Data.Map and Data.Set, on e.g. @ByteString@s, TrieMaps support 6-12x faster @union@, 
                     @intersection@, and @difference@ operations, 2x faster @lookup@, but 2x slower @toList@, and 4x slower @filter@.
                     Other operations are closely tied.  TrieMaps tend to use somewhat more memory, and frequently perform better
                     with increased heap space and allocation area.
license:             BSD3
license-file:	     LICENSE
author:              Louis Wasserman
maintainer:          wasserman.louis@gmail.com
build-type:	     Simple
extra-source-files:  Tests.hs

source-repository head
  type:              git
  location:          git@github.com:lowasser/TrieMap.git

Library{
build-Depends:       base < 5.0.0.0, containers, template-haskell, bytestring, th-expand-syns, vector, primitive
ghc-options:
  -Wall -fno-warn-name-shadowing -fno-warn-orphans -O2 -fno-spec-constr-count -fno-spec-constr-threshold
  -fno-liberate-case-threshold -fmax-worker-args=100
exposed-modules:  
  Data.TrieMap,
  Data.TrieSet,
  Data.TrieMap.Class,
  Data.TrieMap.Representation,
  Data.TrieMap.Modifiers
other-modules:
  Control.Monad.Ends,
  Data.TrieMap.TrieKey,
  Data.TrieMap.Utils,
  Data.TrieMap.Sized,
  Data.TrieMap.Representation.Class,
  Data.TrieMap.Representation.TH,
  Data.TrieMap.Representation.TH.Utils,
  Data.TrieMap.Representation.TH.Representation,
  Data.TrieMap.Representation.TH.Factorized,
  Data.TrieMap.Representation.TH.ReprMonad,
  Data.TrieMap.Representation.Instances,
  Data.TrieMap.Representation.Instances.Basic,
  Data.TrieMap.Representation.Instances.Prim,
  Data.TrieMap.Representation.Instances.Foreign,
  Data.TrieMap.Representation.Instances.Vectors,
  Data.TrieMap.Representation.Instances.ByteString
  Data.TrieMap.WordMap,
  Data.TrieMap.OrdMap,
  Data.TrieMap.UnitMap,
  Data.TrieMap.ProdMap,
  Data.TrieMap.UnionMap,
  Data.TrieMap.ReverseMap,
  Data.TrieMap.Key,
  Data.TrieMap.RadixTrie,
  Data.TrieMap.RadixTrie.Slice,
  Data.TrieMap.RadixTrie.Edge,
  Data.TrieMap.RadixTrie.Label,
  Data.TrieMap.Class.Instances
}


package-hashes:
    MD5:da5f035b28a5f06a9c9792257bc83cb6
    SHA1:fb7d4d9b6213d1688fd0caeff17b00337cf7303c
    SHA256:c78a50eccca65bba9384210be76a465f9d545a6b85cd0f3ba56d5d30c4d6604b
    SHA512:fbb439b69191a02ba3b6374e22c78e2f5edef94461dda5e358c73a20f29b2dfbba8f7a04e72644cee2897735ce5499834b5d755c7a07ec665947f81c3797816c
    Skein512_512:b8b2711ae3c9c80b3c93806a6d3ab37cc0f777794296c191ea65af346b6629d81b019160ff611bbe7d2b01f0895bdaa599b7757fe73bc30249851af6649ad96e

package-locations:
    https://hackage.haskell.org/package/TrieMap-3.0.1/TrieMap-3.0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/TrieMap-3.0.1.tar.gz

