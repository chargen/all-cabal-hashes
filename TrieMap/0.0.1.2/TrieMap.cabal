name:		TrieMap
version:	0.0.1.2
license:	BSD3
license-file:	LICENSE
maintainer:	wasserman.louis@gmail.com
category:	Data Structures
synopsis:	An implementation of generalized tries with sophisticated map type inference.
description:	Generalized trie implementation that automatically infers map types.  Keys must implement the class 'TrieMap.Algebraic.Algebraic', which 
			declares that they are isomorphic to an /algebraic type/,
			defined recursively as follows:
 .
 * () and 'Int' are algebraic types.
 .
 * If @'Ord' a@, then @'Ordered' a@ is an algebraic type.
 .
 * If @a,b@ are algebraic types, then so are @(a, b)@ and @Either a b@.
 .
 * If @a@ is algebraic, so is @[a]@.
 .
 This package exports almost the entire collection of methods available in Data.Map, and several new methods as well.  In addition, each method will automatically infer the correct map type.
 
build-type:	Simple
build-depends:
	base >= 4 && <= 5, containers == 0.2.0.1, bytestring
exposed-modules:
	TrieMap
	TrieMap.Algebraic
other-modules:
	TrieMap.TrieAlgebraic
	TrieMap.Applicative
	TrieMap.Reflection
	TrieMap.RadixTrie
	TrieMap.MapTypes


package-hashes:
    MD5:befeeb4c63c0d159c35d7efd8b9ffd9e
    SHA1:c643a02bcfe77fc478b75b7b402b91428440fea2
    SHA256:6fbb08c01b102146d8c6f942454c8075655e304a9f77cd80a949b4cae2f36ca9
    SHA512:36674064c835efc6db5c1b53342e467edbdd143da53e1a97835702e5fae174efb849319328b41e53ac1505473c95cae004d58afa3221129dca8a3a8ebb83e9f9
    Skein512_512:17edec74e80634ad45ac7ce1e43e432aeac50ed8fc9f2db6ea376ecd6b104d6cb01ad0fc4c46ae2d5b904df03f187c51e6152293a303f35b0a8e1f76d35f5f9b

package-locations:
    https://hackage.haskell.org/package/TrieMap-0.0.1.2/TrieMap-0.0.1.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/TrieMap-0.0.1.2.tar.gz

