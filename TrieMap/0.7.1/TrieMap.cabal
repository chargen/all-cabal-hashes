name:		     TrieMap
version:             0.7.1
tested-with:	     GHC
category:            Algorithms
synopsis:	     Automatic type inference of generalized tries.
description:	     Builds on the multirec library to create a system capable of automatic or simple generalized trie type inference.  Uses Template Haskell to automatically derive a TKey instance for almost any datatype.  Just splice @'Data.TrieMap.Representation.TH.genRepr' \'\'Foo@
			to derive a 'Data.TrieMap.Class.TKey' instance for @Foo@.  (It works if @Foo@ has type arguments, too!)
license:             BSD3
license-file:	     LICENSE
author:              Louis Wasserman
maintainer:          wasserman.louis@gmail.com
build-Depends:       base < 5.0.0.0, containers, multirec, template-haskell >= 2.5.0.0, bytestring, array, th-expand-syns >= 0.1.1.0
build-type:	     Simple
exposed-modules:  
	Data.TrieMap,
	Data.TrieSet,
	Data.TrieMap.Class,
	Data.TrieMap.Regular,
	Data.TrieMap.MultiRec,
	Data.TrieMap.Representation,
	Data.TrieMap.Representation.TH,
	Data.TrieMap.Modifiers
	-- Data.TrieMap.TrieKey
other-modules:
	Data.TrieMap.Class.Instances,
	Data.TrieMap.TrieKey,
	Data.TrieMap.Applicative,
	Data.TrieMap.CPair,
	Data.TrieMap.ProdMap,
	Data.TrieMap.RadixTrie,
	Data.TrieMap.UnionMap,
	Data.TrieMap.UnitMap,
	Data.TrieMap.Rep,
	Data.TrieMap.Rep.Instances,
	Data.TrieMap.Rep.TH,
	-- Data.TrieMap.MultiRec.TH,
	Data.TrieMap.MultiRec.FamMap,
	Data.TrieMap.MultiRec.Eq,
	Data.TrieMap.MultiRec.Ord,
	Data.TrieMap.MultiRec.Class,
	Data.TrieMap.MultiRec.ConstMap,
	Data.TrieMap.MultiRec.IMap,
	Data.TrieMap.MultiRec.Base,
	-- Data.TrieMap.MultiRec.XMap,
	-- Data.TrieMap.MultiRec.FixMap,
	-- Data.TrieMap.MultiRec.AppMap,
	Data.TrieMap.MultiRec.Instances,
	Data.TrieMap.MultiRec.ProdMap,
	Data.TrieMap.MultiRec.TagMap,
	Data.TrieMap.MultiRec.UnionMap,
	Data.TrieMap.MultiRec.UnitMap,
	Data.TrieMap.MultiRec.Sized,
	Data.TrieMap.Regular.Base,
	Data.TrieMap.Regular.Class,
	Data.TrieMap.Regular.ConstMap,
	Data.TrieMap.Regular.Eq,
	Data.TrieMap.Regular.IdMap,
	Data.TrieMap.Regular.Instances,
	Data.TrieMap.Regular.Ord,
	Data.TrieMap.Regular.ProdMap,
	Data.TrieMap.Regular.RadixTrie,
	Data.TrieMap.Regular.UnitMap,
	Data.TrieMap.Regular.RegMap,
	Data.TrieMap.Regular.CompMap,
	Data.TrieMap.Regular.UnionMap,
	Data.TrieMap.Regular.TH,
	Data.TrieMap.Regular.Sized,
	Data.TrieMap.Regular.Rep,
	Data.TrieMap.IntMap,
	Data.TrieMap.OrdMap,
	Data.TrieMap.ReverseMap,
	Data.TrieMap.Sized,
	Data.TrieMap.Applicative


package-hashes:
    MD5:8a3141bca9af91174bfa281573afdb13
    SHA1:84f7eca34414a47443ea4f6b4415172886c96822
    SHA256:a7d77dd91f4942ed6d4397418874e46e7036e3218eae3606096926d66c284c69
    SHA512:ba46ae6a12b672b4a9f20d7600f53f84a0a19ac003eb99f931673b178e7a68ff23ed7feb6148b95c306c095b3d783c592c263883f77103b955e5b5ded213803d
    Skein512_512:f14c8fc78585af04e7933fde101013389fe62603196dffd10ffcb72cf76ec57a6c0b6e02c1c1256d7859292387a56f5b404daa2117a65112a6e2236efcc9244c

package-locations:
    https://hackage.haskell.org/package/TrieMap-0.7.1/TrieMap-0.7.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/TrieMap-0.7.1.tar.gz

package-size: 52528
