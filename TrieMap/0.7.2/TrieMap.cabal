name:		     TrieMap
version:             0.7.2
tested-with:	     GHC
category:            Algorithms
synopsis:	     Automatic type inference of generalized tries.
description:	     Builds on the multirec library to create a system capable of automatic or simple generalized trie type inference.  Uses Template Haskell to automatically derive a TKey instance for almost any datatype.  Just splice @'Data.TrieMap.Representation.TH.genRepr' \'\'Foo@
			to derive a 'Data.TrieMap.Class.TKey' instance for @Foo@.  (It works if @Foo@ has type arguments, too!)
license:             BSD3
license-file:	     LICENSE
author:              Louis Wasserman
maintainer:          wasserman.louis@gmail.com
build-Depends:       base < 5.0.0.0, containers, multirec, template-haskell >= 2.5.0.0, bytestring, array, th-expand-syns >= 0.1.1.0
build-type:	     Simple
exposed-modules:  
	Data.TrieMap,
	Data.TrieSet,
	Data.TrieMap.Class,
	Data.TrieMap.Regular,
	Data.TrieMap.MultiRec,
	Data.TrieMap.Representation,
	Data.TrieMap.Representation.TH,
	Data.TrieMap.Modifiers
	-- Data.TrieMap.TrieKey
other-modules:
	Data.TrieMap.Key,
	Data.TrieMap.Class.Instances,
	Data.TrieMap.TrieKey,
	Data.TrieMap.Applicative,
	Data.TrieMap.CPair,
	Data.TrieMap.ProdMap,
	Data.TrieMap.RadixTrie,
	Data.TrieMap.UnionMap,
	Data.TrieMap.UnitMap,
	Data.TrieMap.Rep,
	Data.TrieMap.Rep.Instances,
	Data.TrieMap.Rep.TH,
	-- Data.TrieMap.MultiRec.TH,
	Data.TrieMap.MultiRec.FamMap,
	Data.TrieMap.MultiRec.Eq,
	Data.TrieMap.MultiRec.Ord,
	Data.TrieMap.MultiRec.Class,
	Data.TrieMap.MultiRec.ConstMap,
	Data.TrieMap.MultiRec.IMap,
	Data.TrieMap.MultiRec.Base,
	-- Data.TrieMap.MultiRec.XMap,
	-- Data.TrieMap.MultiRec.FixMap,
	-- Data.TrieMap.MultiRec.AppMap,
	Data.TrieMap.MultiRec.Instances,
	Data.TrieMap.MultiRec.ProdMap,
	Data.TrieMap.MultiRec.TagMap,
	Data.TrieMap.MultiRec.UnionMap,
	Data.TrieMap.MultiRec.UnitMap,
	Data.TrieMap.MultiRec.Sized,
	Data.TrieMap.Regular.Base,
	Data.TrieMap.Regular.Class,
	Data.TrieMap.Regular.ConstMap,
	Data.TrieMap.Regular.Eq,
	Data.TrieMap.Regular.IdMap,
	Data.TrieMap.Regular.Instances,
	Data.TrieMap.Regular.Ord,
	Data.TrieMap.Regular.ProdMap,
	Data.TrieMap.Regular.RadixTrie,
	Data.TrieMap.Regular.UnitMap,
	Data.TrieMap.Regular.RegMap,
	Data.TrieMap.Regular.CompMap,
	Data.TrieMap.Regular.UnionMap,
	Data.TrieMap.Regular.TH,
	Data.TrieMap.Regular.Sized,
	Data.TrieMap.Regular.Rep,
	Data.TrieMap.IntMap,
	Data.TrieMap.OrdMap,
	Data.TrieMap.ReverseMap,
	Data.TrieMap.Sized,
	Data.TrieMap.Applicative


package-hashes:
    MD5:abec9c3a14557ea1824508e5c95ecf99
    SHA1:65653ff3507edae855d7e2558fac75389de9a60d
    SHA256:c37e8a59dd2d955072129f52d7a5f7a78c5733bb97d2d6b2af3d654573b7bd98
    SHA512:867abed26b89d32eacf2b8b74035cd4fce37032755ebb703a7bb0da422e856fba8e14afe5992e4dc10bc1abf8e063a900b4eedccabd47c1da4d9fe5dc2539118
    Skein512_512:88b9ea2cc635d19b597fbc47033d3bb6ac556c8a4f6d46abc0e048b227f22edb34e5276faf8292928c1c861cf938d8d514b9f9f3061ddb191509965a8b28f515

package-locations:
    https://hackage.haskell.org/package/TrieMap-0.7.2/TrieMap-0.7.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/TrieMap-0.7.2.tar.gz

