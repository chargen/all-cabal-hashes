name:		TrieMap
version:	0.0.1.1
license:	BSD3
license-file:	LICENSE
maintainer:	wasserman.louis@gmail.com
category:	Data Structures
synopsis:	An implementation of generalized tries with sophisticated map type inference.
description:	Generalized trie implementation that automatically infers map types.  Keys must implement the class 'TrieMap.Algebraic.Algebraic', which 
			declares that they are isomorphic to an /algebraic type/,
			defined recursively as follows:
 .
 * () and 'Int' are algebraic types.
 .
 * If @'Ord' a@, then @'Ordered' a@ is an algebraic type.
 .
 * If @a,b@ are algebraic types, then so are @(a, b)@ and @Either a b@.
 .
 * If @a@ is algebraic, so is @[a]@.
 .
 This package exports almost the entire collection of methods available in Data.Map, and several new methods as well.  In addition, each method will automatically infer the correct map type.
 
build-type:	Simple
build-depends:
	base >= 4 && <= 5, containers == 0.2.0.1
exposed-modules:
	TrieMap
	TrieMap.Algebraic
other-modules:
	TrieMap.TrieAlgebraic
	TrieMap.Applicative
	TrieMap.Reflection
	TrieMap.RadixTrie
	TrieMap.MapTypes


package-hashes:
    MD5:6511be900fa6807e867e4838b40fe193
    SHA1:0ca0fa6dcb24fdc8748b5920132d1ccf911589d5
    SHA256:26f7730275a637b4d4d2a800c52dfde6089af1b160db92353dc706f2150183e2
    SHA512:311adb2144d873631173a1e69429c42d8fa5bd8c546eb2b8101b43cdcc61a59cc6fe7ef6654aa027a45f6d26d11e7a2db8cab7238eeec0d0e365be75e4ded8a3
    Skein512_512:1d1b067b32f4e05d551af7e2cfbf707ecc3c289f3e91551cf1f673afc4f99a6ccdb8ab9a064eb9def166f4f87acd2e3ab0922f05f957bff66e7fcee3b5c40088

package-locations:
    https://hackage.haskell.org/package/TrieMap-0.0.1.1/TrieMap-0.0.1.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/TrieMap-0.0.1.1.tar.gz

