-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:bf91fb7847c2e60e7a39d60febaeb884
    SHA1:38ab7e71c0bad6e221ae27faf221b97b8afa0980
    SHA256:df321cce33590fbaba1b8e4b135ff54949c97c7f6c6e05d8674ef666d3231d47
    SHA512:f73cf69e31cb7c456ebf867602ec66eb95ba169c2ac64c14545d865e6843741b86e4977c3e6e49b0b59ec29c185539b9c400a1879907f7502cecc52d48c393f2
    Skein512_512:24de1f8879bdff7c31bdf1276d28a7810bbc36ca08091078065afa5f32c640b4b1771dc926e6c68db0f4b09e5e269f1070dbcafb9c26424d581252021452bea7

package-locations:
    https://hackage.haskell.org/package/ottparse-pretty-0.1.2.2/ottparse-pretty-0.1.2.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/ottparse-pretty-0.1.2.2.tar.gz

package-size: 2624
-- END Added by all-cabal-hashes-tool

Name:                ottparse-pretty
Version:             0.1.2.2
Synopsis:            Pretty-printer for Ott parse trees
Description:         Ott (<http://www.cl.cam.ac.uk/~pes20/ott/>) is a tool for
		     writing formal definitions of programming
		     languages and calculi.  Often the Ott grammars
		     one defines end up being ambiguous, and Ott
		     signals its displeasure by spewing forth several
		     massive parse trees in a format requiring
		     formidable patience to read.  Finding the slight
		     differences between two such parse trees is an
		     exercise in seizure-inducing tedium.
                     .
		     To the rescue comes ottparse-pretty!  Simply
		     paste in each parse and it is shown to you in a
		     nicely formatted tree form with all the extra
		     meaningless cruft removed.
License:             BSD3
License-file:        LICENSE
Extra-source-files:  CHANGES
Author:              Brent Yorgey
Maintainer:          byorgey@cis.upenn.edu
Category:            Text
Build-type:          Simple
Cabal-version:       >=1.6

Source-repository head
  type:     darcs
  location: http://code.haskell.org/~byorgey/code/ottparse-pretty

Executable ottparse-pretty
  hs-source-dirs:    src
  Main-is:           ottparse-pretty.hs
  Build-depends:     base >= 4.0 && < 4.7,
                     split >= 0.1 && < 0.3,
                     parsec >= 3.0 && < 3.2,
                     containers >= 0.3 && < 0.6,
                     uniplate >= 1.6 && < 1.7