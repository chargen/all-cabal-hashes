-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:5e2869dc705731542389a9cf0f2ce828
    SHA1:7ff7a13afde52983271f00cb40400d951140749e
    SHA256:3a2e49642478948d359c6be90c3109e16f5be79b8da5b443abafea15942b2e81
    SHA512:2499ad6c864d2af78e50a7f834a73a6cb9a1d59b3b772343de8cfe1a81c0db842998e78de43dd0c92b355b6671c043ba500b2a91f26779aa301dc39be80a2dcc
    Skein512_512:97c7d4b95fd91b530f4f628a7f35e2a8f2eb7eb45ebb31a2c8193e2e28cc46282e6b641bef4f34fa0bb7fd2871b93f3aa8bb50bf7030f5f386ddf8fa3395a63f

package-locations:
    https://hackage.haskell.org/package/Chitra-0.1/Chitra-0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/Chitra-0.1.tar.gz

package-size: 5438
-- END Added by all-cabal-hashes-tool

Name:                Chitra
Version:             0.1
Synopsis:            Haskell library for platform independent graphics using VNC.
Homepage:            http://github.com/ckkashyap/Chitra
License:             BSD3
License-file:        LICENSE
Author:              C K Kashyap
Maintainer:          ckkashyap@gmail.com
synopsis:		Simple, VNC based graphics rendering system
description: Chitra in most Indian languages means "Image". This aim of this project is to build an VNC library that can be used to develop interactive graphical application. What I think will be the strength of Chitra would be its "platform independence". So, the idea is, the library would have a "putpixel" function which when called would render a pixel on an image buffer that would be rendered via the vnc server. For viewing and interactive with the aplication, one would use a standard VNC client. Eventually, I might chose to do this using the RDP protocol that even has support for sound.  

	To try out -

	Just do a make and you should have the executable *Main* created. 

	Run ./Main <width> <height> <port> 

	Now try connecting a vnc client to localhost:5900

Category:            Graphics

Build-type:          Simple

Cabal-version:       >=1.2

Library
  Exposed-modules:     Chitra.Canvas,
                       RFB.ClientToServer,
                       RFB.Handshake,
                       RFB.CommandLoop,
                       RFB.Server
  Hs-source-dirs:      ./
  Build-depends:       base >= 4.2 && < 4.3,
                       binary >= 0.5 && < 0.6,
                       bytestring >= 0.9 && < 1.0,
                       network >= 2.2 && < 2.3,
                       mtl >= 1.1 && < 1.2

Executable Chitra
  Main-is:             Main.hs
  Build-depends:       base >= 4.2 && < 4.3
