-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:b3cdfe0236097c6efa47c60e6ffcddc1
    SHA1:50f4edc52cfd2dd98357d93c73464a8085f76ab8
    SHA256:d11a262e0bc3f08da1aaf52613af31680cfcdd60287140b3a87d9e9416484215
    SHA512:86f35a8caedc1a7b70bd1ef4d1bb50115e0c78abeff5237bbf993488e706157b748ce04efc9c250e31974d7f53c455602592e0591f24160362352031c38bc058
    Skein512_512:330c8724773dc3e504affb31e193f8af47868c822b448009e4ccf94e06ab93413450bb47ecc6171a8793b45f0ffd94defdbd4023dbfcec4581a5720c9397ef7a

x-package-locations:
    https://hackage.haskell.org/package/alex-meta-0.3.0.7/alex-meta-0.3.0.7.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/alex-meta-0.3.0.7.tar.gz

x-package-size: 55104
-- END Added by all-cabal-hashes-tool

Name:                alex-meta
Version:             0.3.0.7
Synopsis:            Quasi-quoter for Alex lexers
-- Description:         
License:             BSD3
License-file:        LICENSE
Author:              Jonas Duregard
Maintainer:          jonas.duregard@gmail.com
Category:            Development
Build-type:          Custom
Description:         A Template-Haskell based version of the Alex lexer generator. It is used by BNFC-meta to generate lexers and currently this is the only feature known to be working.
Cabal-version:       >=1.8


Library
  hs-source-dirs: src .

  extensions: CPP

  Exposed-modules:     
    Text.Alex.Quote
    Text.Alex.AlexTemplate
  
  -- Packages needed in order to build this package.
  Build-depends:
      template-haskell >=2.5&&<2.10
    , haskell-src-meta >=0.5.1.2&&<1.0
    , base >= 4.2 && < 5
    , array, containers
    , QuickCheck >=2

  Build-tools: alex, happy
  
  other-modules:
        Text.Alex
--        Text.Alex.Verbatim
        AbsSyn
        CharSet
        DFA
        DFS
        Info
        Map
        NFA
        Output
        Parser
        ParseMonad
        Scan
        Set
        Sort
        Util
        UTF8
        DFAMin
        Data.Ranged
        Data.Ranged.Boundaries
        Data.Ranged.RangedSet
        Data.Ranged.Ranges
