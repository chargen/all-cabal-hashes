-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:18bb520f26be8223a51555be19a9752f
    SHA1:7f16eaf8104e57d2b67023c3bc10177193ad4aba
    SHA256:a1fbf0f67fc9949267ee4b791c3c99eae1a37401ce2f5e90b061b1b59a5eb008
    SHA512:d25bb082873314c25f0553c81b93d7f2d64b23e0efe6117270a91647edd9446301eb7ff281653e32dd1abc54a9623ea7e550983d36b6070149627d1ad81bf759
    Skein512_512:ed7b9f3f05ce760c07041979bd8c317ba2aabec5ee16fbad04d32a8652f030266a6282015909cf0e4ec9102e6a17a62366891b1a24fe67acce530e14b19cac24

x-package-locations:
    https://hackage.haskell.org/package/hsx2hs-0.11.0/hsx2hs-0.11.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/hsx2hs-0.11.0.tar.gz

x-package-size: 25570
-- END Added by all-cabal-hashes-tool

Name:                   hsx2hs
Version:                0.11.0
License:                BSD3
License-File:           LICENSE
Author:                 Niklas Broberg, Joel Bjornson
Maintainer:             Niklas Broberg <niklas.broberg@gmail.com>

Stability:              Experimental
Category:               Language
Synopsis:               HSX (Haskell Source with XML) allows literal XML syntax in Haskell source code.
Description:            HSX (Haskell Source with XML) allows literal XML syntax in Haskell source code.
                        
                        The trhsx preprocessor translates .hsx source files into ordinary .hs files. Literal
                        XML syntax is translated into function calls for creating XML values of the appropriate
                        forms.
                        
                        trhsx transforms literal XML syntax into a series of function calls. Any project
                        can make use of the syntax by providing definitions for those functions, and the
                        XML values produced will be of the types specified. This works for any types, since
                        trhsx doesn't make any assumptions, or inserts any information depending on types.
                        
                        XMLGenerator defines a few typeclasses that together cover the functions injected by the
                        preprocessor. A project that uses these classes to provide the semantics for the injected
                        syntax will be able to use any functions written in terms of these, allowing better code 
                        reusability than if each project defines its own semantics for the XML syntax. Also, the classes
                        makes it possible to use the literal syntax at different types within the same module.
                        Achieving that is not as simple as it may seem, but the XMLGenerator module provides all the
                        necessary machinery.
                        
Homepage:               http://patch-tag.com/r/nibro/hsx

Tested-With:            GHC==6.8.3, GHC==6.10.1
Cabal-Version: 		>= 1.6
Build-Type:             Simple

source-repository head
    type:     darcs
    location: http://patch-tag.com/r/nibro/hsx


Flag base4

Library
  Build-depends:	mtl              >= 2.0 && < 2.2,
                        haskell-src-exts >= 1.13,
                        haskell-src-meta >= 0.6 && < 0.7,
                        template-haskell == 2.7.*,
                        utf8-string      == 0.3.*

  if flag(base4)
    Build-depends:      base >= 4 && < 5
    cpp-options:        -DBASE4
  else
    Build-depends:      base >= 3 && < 4
  Hs-Source-Dirs: 	src
  Exposed-Modules:      Language.Haskell.HSX.Transform
                        Language.Haskell.HSX.QQ

  Extensions:           MultiParamTypeClasses,
                        FunctionalDependencies,
                        OverlappingInstances,
                        UndecidableInstances,
                        FlexibleInstances,
                        GeneralizedNewtypeDeriving,
                        TypeFamilies,
                        TypeSynonymInstances,
                        FlexibleContexts,
                        TypeOperators,
                        CPP

Executable hsx2hs
  Main-Is:                hsx2hs.hs
  Hs-Source-Dirs:         src
