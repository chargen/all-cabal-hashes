-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:a2fc32fce4ca4121a3c64be31072ef83
    SHA1:2205cb0f897406e4e13014e1503d7d7a301802e3
    SHA256:c5800c9da757453d4cce966585cc589615113e48c64d77f6bdb99e937e84388d
    SHA512:8c272a566ab148e6f5f5cc04ec6fa04175055127a0814beaf8762da5d340dcbbe4ee6def5e3e10403e79d24ffda52bf9930872142e75debab301f833be032e32
    Skein512_512:62793c878c24e586b6ae354240fe1b0dda9a1be1b3973e366a7eaa5141b17579220f8d490f78be13e94e596992e12e2b7bc5e8098315492f16f060a1c16bcbe6

x-package-locations:
    https://hackage.haskell.org/package/synthesizer-dimensional-0.7/synthesizer-dimensional-0.7.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/synthesizer-dimensional-0.7.tar.gz

x-package-size: 84822
-- END Added by all-cabal-hashes-tool

Name:           synthesizer-dimensional
Version:        0.7
License:        GPL
License-File:   LICENSE
Author:         Henning Thielemann <haskell@henning-thielemann.de>
Maintainer:     Henning Thielemann <haskell@henning-thielemann.de>
Homepage:       http://www.haskell.org/haskellwiki/Synthesizer
Category:       Sound
Synopsis:       Audio signal processing with static physical dimensions
Description:
   High-level functions that use physical units and
   abstract from the sample rate in statically type safe way.
Stability:      Experimental
Tested-With:    GHC==6.10.4, GHC==6.12.1, GHC==7.0.4, GHC==7.2.1
Cabal-Version:  >=1.14
Build-Type:     Simple

Extra-Source-Files:
  Makefile

Flag optimizeAdvanced
  description: Enable advanced optimizations. They slow down compilation considerably.
  default:     True

Flag buildExamples
  description: Build example executables
  default:     False


Source-Repository head
  Type:        darcs
  Location:    http://code.haskell.org/synthesizer/dimensional/

Source-Repository this
  Tag:         0.7
  Type:        darcs
  Location:    http://code.haskell.org/synthesizer/dimensional/

Library
  Build-Depends:
    synthesizer-core >=0.6 && <0.7,
    transformers >=0.2 && <0.4,
    event-list >=0.1 && <0.2,
    non-negative >=0.1 && <0.2,
    numeric-prelude >=0.3 && <0.5,
    storable-record >=0.0.1 && <0.1,
    sox >=0.2 && <0.3,
    storablevector >=0.2.3 && <0.3,
    bytestring >= 0.9 && <0.11,
    random >=1.0 && <2.0,
    utility-ht >=0.0.5 && <0.1,
    base >= 4 && <5

  If impl(ghc>=7.0)
    GHC-Options: -fwarn-unused-do-bind
    CPP-Options: -DNoImplicitPrelude=RebindableSyntax
    Default-Extensions: CPP

  Default-Language: Haskell2010
  GHC-Options:    -Wall
  Hs-source-dirs: src
  Exposed-modules:
    Synthesizer.Dimensional.Signal
    Synthesizer.Dimensional.Amplitude
    Synthesizer.Dimensional.Sample
    Synthesizer.Dimensional.Rate
    Synthesizer.Dimensional.Arrow
    Synthesizer.Dimensional.Map
    Synthesizer.Dimensional.Map.Displacement
    Synthesizer.Dimensional.Map.Filter
    Synthesizer.Dimensional.Process
    Synthesizer.Dimensional.Causal.Process

    Synthesizer.Dimensional.Amplitude.Flat
    Synthesizer.Dimensional.Amplitude.Analysis
    Synthesizer.Dimensional.Amplitude.Cut
    Synthesizer.Dimensional.Amplitude.Control
    Synthesizer.Dimensional.Amplitude.Displacement
    Synthesizer.Dimensional.Amplitude.Filter
    Synthesizer.Dimensional.Causal.Analysis
    Synthesizer.Dimensional.Causal.ControlledProcess
    Synthesizer.Dimensional.Causal.Displacement
    Synthesizer.Dimensional.Causal.Filter
    Synthesizer.Dimensional.Causal.FilterParameter
    Synthesizer.Dimensional.Causal.Oscillator
    Synthesizer.Dimensional.Causal.Oscillator.Core
    Synthesizer.Dimensional.Rate.Analysis
    Synthesizer.Dimensional.Rate.Control
    Synthesizer.Dimensional.Rate.Cut
    Synthesizer.Dimensional.Rate.Dirac
    Synthesizer.Dimensional.Rate.Filter
    Synthesizer.Dimensional.Rate.Oscillator
    Synthesizer.Dimensional.RateAmplitude.Analysis
    Synthesizer.Dimensional.RateAmplitude.Cut
    Synthesizer.Dimensional.RateAmplitude.Control
    Synthesizer.Dimensional.RateAmplitude.Displacement
    Synthesizer.Dimensional.RateAmplitude.File
    Synthesizer.Dimensional.RateAmplitude.Filter
    Synthesizer.Dimensional.RateAmplitude.Instrument
    Synthesizer.Dimensional.RateAmplitude.Noise
    Synthesizer.Dimensional.RateAmplitude.Piece
    Synthesizer.Dimensional.RateAmplitude.Play
    Synthesizer.Dimensional.ChunkySize.Cut
    Synthesizer.Dimensional.ChunkySize.Signal
    Synthesizer.Dimensional.Cyclic.Signal
    Synthesizer.Dimensional.Cyclic.Analysis
    Synthesizer.Dimensional.Wave
    Synthesizer.Dimensional.Wave.Controlled

--  Other-Modules:
-- we need this in synthesizer-alsa and noisegenerator for implementation of low-level functions
    Synthesizer.Dimensional.Signal.Private
--    Synthesizer.Dimensional.Utility


Executable rain
  If flag(buildExamples)
    Build-Depends:
      synthesizer-dimensional,
      synthesizer-core,
      numeric-prelude,
      event-list,
      utility-ht,
      random,
      base
  Else
    Buildable: False
  Default-Language: Haskell2010
  GHC-Options: -Wall -fexcess-precision
  If flag(optimizeAdvanced)
    GHC-Options: -O2 -fllvm
  If impl(ghc>=7.0)
    GHC-Options: -fwarn-unused-do-bind
    CPP-Options: -DNoImplicitPrelude=RebindableSyntax
    Default-Extensions: CPP

  Main-Is: src/Synthesizer/Dimensional/RateAmplitude/Rain.hs

Executable demonstration
  If flag(buildExamples)
    Build-Depends:
      explicit-exception >=0.1.6 && <0.2,
      old-time >=1.0 && <2,

      synthesizer-dimensional,
      synthesizer-core,
      sox,
      storablevector,
      storable-record,
      numeric-prelude,
      event-list,
      non-negative,
      transformers,
      utility-ht,
      random,
      base
  Else
    Buildable: False
  If impl(ghc>=7.0)
    GHC-Options: -fwarn-unused-do-bind
    CPP-Options: -DNoImplicitPrelude=RebindableSyntax
    Default-Extensions: CPP

  Default-Language: Haskell2010
  GHC-Options: -Wall -fexcess-precision
  If flag(optimizeAdvanced)
    GHC-Options: -O2 -fllvm
-- -ddump-simpl-stats
  Hs-Source-Dirs: src
  Main-Is:
    Demonstration.hs
  Other-Modules:
    Synthesizer.Dimensional.RateAmplitude.Demonstration

Executable traumzauberbaum
  If flag(buildExamples)
    Build-Depends:
      synthesizer-dimensional,
      synthesizer-core,
      numeric-prelude,
      utility-ht,
      storablevector,
      base
  Else
    Buildable: False

  Default-Language: Haskell2010
  GHC-Options: -Wall -fexcess-precision
  If impl(ghc>=7.0)
    GHC-Options: -fwarn-unused-do-bind
    CPP-Options: -DNoImplicitPrelude=RebindableSyntax
    Default-Extensions: CPP

  If flag(optimizeAdvanced)
    GHC-Options: -O2 -fllvm
  Main-Is: src/Synthesizer/Dimensional/RateAmplitude/Traumzauberbaum.hs
