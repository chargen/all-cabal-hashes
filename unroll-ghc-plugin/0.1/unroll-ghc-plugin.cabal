-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:ec34032e8927b65a78bc2a81db946b46
    SHA1:c9a1d89888cd0411e1a04e9b7d23e80c9ce78b8f
    SHA256:c729fdbb8f3a1baadbc7b67da9f9602a10d40fc96e3be62d71ba70735155ceef
    SHA512:5f508935e826acf660c090ddb481fd0a93d3adfa0557c848a54b7d4681ee1f6b3aa14be1f812704c022f9c78fb900aed0117d86a39f5a5fd205cc71e02c60a80
    Skein512_512:80e7e7175de3eba52a25b18d9c8be9f13c296b726bbe9f6d107a3bcb4951112f80899e21e82feabf2ac04f827eec0c5de2ea0af5b062cf1ed0abdb8609d953a2

package-locations:
    https://hackage.haskell.org/package/unroll-ghc-plugin-0.1/unroll-ghc-plugin-0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/unroll-ghc-plugin-0.1.tar.gz

package-size: 6278
-- END Added by all-cabal-hashes-tool

name:                unroll-ghc-plugin
version:             0.1
synopsis:            Compiler plugin for loop unrolling
description:
  This plugin gives an example of defining a compiler plugin for
  GHC. You mark functions with the `Strictify` annotation and GHC
  makes the function strict (by recursively expanding non-recursive
  let bindings into case bindings.)
homepage:            http://thoughtpolice.github.com/unroll-ghc-plugin
bug-reports:         http://github.com/thoughtpolice/unroll-ghc-plugin/issues
license:             BSD3
license-file:        LICENSE.txt
copyright:           Copyright (c) the GHC authors
author:              The GHC authors
maintainer:          Austin Seipp <mad.one@gmail.com>
category:            Compiler Plugin
build-type:          Simple
cabal-version:       >=1.10
tested-with:         GHC == 7.4.1

extra-source-files:
  AUTHORS.txt README.md
  tests/*.hs tests/Makefile

source-repository head
  type: git
  location: https://github.com/thoughtpolice/unroll-ghc-plugin.git

library
  exposed-modules:
    LoopUnrolling.Plugin
    LoopUnrolling.Annotations
  other-modules:
    LoopUnrolling.Pass
    LoopUnrolling.Utilities
  build-depends:
    base < 5,
    ghc >= 7.4

  ghc-options:        -Wall -O2 -funbox-strict-fields
                      -fwarn-tabs
  default-extensions: CPP
  default-language:   Haskell2010
