-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:50c7aa039d96ed6b180fbede1c5f8c4a
    SHA1:2596cd84699cb0f908cf3c501512556b8ea1b80c
    SHA256:82ec2a7edf3fa52eba2ed4821306859a75186e6df2a564943e9f9d758205ea26
    SHA512:9158e201547b43e97d13112d87ab27b7dddff90fff11727c880bbd03e50faf2755ff27c03710e7bd634325a2c31f07e70dae61e62d925fa1f31b0b66e3927c48
    Skein512_512:4e0d589eb1519a8afa1c3901ad92c2d088fc63d44ec8e439061128926311df51578befc7028f252d2ef2e8a3415b9dbbea50b94364b76b0a90fcab238a0ae2d3

package-locations:
    https://hackage.haskell.org/package/void-0.6.1/void-0.6.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/void-0.6.1.tar.gz

package-size: 3807
-- END Added by all-cabal-hashes-tool

name:          void
category:      Data Structures
version:       0.6.1
x-revision: 1
license:       BSD3
cabal-version: >= 1.6
license-file:  LICENSE
author:        Edward A. Kmett
maintainer:    Edward A. Kmett <ekmett@gmail.com>
stability:     portable
homepage:      http://github.com/ekmett/void
bug-reports:   http://github.com/ekmett/void/issues
copyright:     Copyright (C) 2008-2013 Edward A. Kmett
synopsis:      A Haskell 98 logically uninhabited data type
description:   A Haskell 98 logically uninhabited data type, used to indicate that a given term should not exist.
build-type:    Simple

extra-source-files:
  .ghci
  .gitignore
  .travis.yml
  .vim.custom
  CHANGELOG.markdown
  README.markdown

source-repository head
  type: git
  location: git://github.com/ekmett/void.git

flag safe
  manual: True
  default: False

library
  hs-source-dirs: src
  exposed-modules:
    Data.Void
    Data.Void.Unsafe

  build-depends:
    base       >= 3 && < 4.8,
    hashable   >= 1.1,
    semigroups >= 0.8.2

  ghc-options: -Wall

  if flag(safe)
    cpp-options: -DSAFE

  if impl(ghc)
    other-extensions: DeriveDataTypeable
    cpp-options: -DLANGUAGE_DeriveDataTypeable

  if impl(ghc >= 7.2)
    other-extensions: StandaloneDeriving
    -- other-extensions: DeriveGeneric isn't known to cabal yet
    cpp-options: -DLANGUAGE_DeriveGeneric
    build-depends: ghc-prim
