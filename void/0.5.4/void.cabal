-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:7e5565af12e275d944cc46f7cc628ea2
    SHA1:de42cc6cded9e4126fabe102a5b8d653e571bccb
    SHA256:27e09fb41eb873b2261f49de562f3b2b9486cc4a768381539357c9cd22db025e
    SHA512:f492dec2eb4d9ed271b46eab31bca03819e48ff9c92286cec1b0863b8123e2bcd5fc7b639e99879de8cb3761266218bf77a969135949bb2f47c64a2dd67719b1
    Skein512_512:5fcc67e8c344e1c6b3dcabf73d87632cd16803aba0cd834e1c8cf8f8691c4ba4aa83899f11270c1b7d978862922171bf883d2171d1abd805cfe7552622bd6b73

x-package-locations:
    https://hackage.haskell.org/package/void-0.5.4/void-0.5.4.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/void-0.5.4.tar.gz

x-package-size: 2037
-- END Added by all-cabal-hashes-tool

name:          void
category:      Data Structures
version:       0.5.4
x-revision: 1
license:       BSD3
cabal-version: >= 1.6
license-file:  LICENSE
author:        Edward A. Kmett
maintainer:    Edward A. Kmett <ekmett@gmail.com>
stability:     portable
homepage:      http://github.com/ekmett/void
copyright:     Copyright (C) 2008-2011 Edward A. Kmett
synopsis:      A Haskell 98 logically uninhabited data type
description:   A Haskell 98 logically uninhabited data type. Used to indicate that a given term should not exist.
build-type:    Simple

source-repository head
  type: git
  location: git://github.com/ekmett/void.git

flag DeriveDataTypeable
  manual: False
  default: True

library
  build-depends: base >= 3 && < 4.8, semigroups >= 0.5 && < 0.6
  exposed-modules: Data.Void
  ghc-options: -Wall 
  if flag(DeriveDataTypeable)
    extensions: DeriveDataTypeable
    cpp-options: -DLANGUAGE_DeriveDataTypeable
