-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:44846f00aa359ac6a403c7f0234adf16
    SHA1:ffd8129071261edbc50377d8c780cb480e8a2dc8
    SHA256:e33b7d4b26c1ced1e3d8e58be5edc92160f5de9f1f606ddaceddb8d2ce883204
    SHA512:fad4f765bb5b1711534d3d8d4c1c5840d3674bbbf7a663fbbd57509768ff01c54b475bce77dd61d85d8e7f511f55d33aa8ba70dee16ac3bd6e1ab36cd9f9d4c7
    Skein512_512:15a9469d16ed240281856874c3032669a5e0f38181703e3088e040f144f65207140056149d3c099b0dcdc1854ee8e56f622e4656b67ad54276c0d434a83ab7e3

package-locations:
    https://hackage.haskell.org/package/void-0.5.5/void-0.5.5.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/void-0.5.5.tar.gz

package-size: 2049
-- END Added by all-cabal-hashes-tool

name:          void
category:      Data Structures
version:       0.5.5
x-revision: 1
license:       BSD3
cabal-version: >= 1.6
license-file:  LICENSE
author:        Edward A. Kmett
maintainer:    Edward A. Kmett <ekmett@gmail.com>
stability:     portable
homepage:      http://github.com/ekmett/void
copyright:     Copyright (C) 2008-2011 Edward A. Kmett
synopsis:      A Haskell 98 logically uninhabited data type
description:   A Haskell 98 logically uninhabited data type. Used to indicate that a given term should not exist.
build-type:    Simple

source-repository head
  type: git
  location: git://github.com/ekmett/void.git

flag DeriveDataTypeable
  manual: False
  default: True

library
  extensions: 
    CPP
  exposed-modules: 
    Data.Void
  build-depends: 
    base >= 3 && < 4.8,
    semigroups >= 0.8 && < 0.9

  ghc-options: -Wall 

  if flag(DeriveDataTypeable)
    extensions: DeriveDataTypeable
    cpp-options: -DLANGUAGE_DeriveDataTypeable
