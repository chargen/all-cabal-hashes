-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:a17db68f57d0287d07dac5a43d878fc4
    SHA1:ecf0151dc30419bdbad1309538ae996132ed54f3
    SHA256:04c81c1286ab53e4600896f26c247ded82a9520199cea6739ab84d6a278f829e
    SHA512:0646bfe375c0f9de777e49f3f6d8cfce370ee18aca454f16e9a5d1d6a795a544890ee65df3568fa1a1d843761cfdc713aa5f50485524d69228b63724b09e554d
    Skein512_512:c69fbc934782929bb3ac768eb7c72ffc2eac9ed716a1d57aa72d7d46c3e5276240676ff27f7690e778ff9525d320616c2dcedd4439d42ed78d19380f3ab2b704

package-locations:
    https://hackage.haskell.org/package/linear-maps-0.5/linear-maps-0.5.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/linear-maps-0.5.tar.gz

package-size: 27785
-- END Added by all-cabal-hashes-tool

Name:           linear-maps
Version:        0.5
Synopsis:       Finite maps for linear use
Description:    
    Finite maps for linear use. 
    .
    This package contains three different implementations with the same interface.
    The implementations are controlled by Cabal flags which can be set at installation time
    with the following commands:
    .
    [@cabal install -fcheck@] 
    Installs an implementation where linear use of maps is needed and checked (at runtime).
    It is recommended to use this version during development.
    .
    [@cabal install@]      
    Installs an implementation where linear use of maps is needed but not checked.
    It is the fastest implementation so it is ideal for the final product.
    Install this only if you are certain that maps are used linearly.
    .
    [@cabal install -fpure@]  
    Installs an implementation where linear use of maps is not needed and not checked.
    This is the simplest implementation so it can be read as a documentation.  
    Do not install this version because it is slow and does not check the linear use of maps.
Category:       Data
Author:         Péter Diviánszky <divip@aszt.inf.elte.hu>
Maintainer:     Péter Diviánszky <divip@aszt.inf.elte.hu>
Copyright:      (c) 2009 by Péter Diviánszky
License:        BSD3
License-File:   LICENSE
Stability:      Experimental
Tested-With:    GHC == 6.10.2
Cabal-Version:  >= 1.6
Build-Type:     Simple
Extra-Source-Files: 
    Intro.pandoc,
    Intro.html

Flag check
    Description:    Check linear use
    Default:        False

Flag pure
    Description:    Pure functional implementation
    Default:        False

Library
    GHC-Options: -Wall -fwarn-tabs -fno-warn-incomplete-patterns  -fcontext-stack=33

    Exposed-Modules:    

    -- helper
        Data.TypeInt,
        Data.Subtyping,
        Control.Functor,

    -- core
        Data.IdMap,
        Data.IdMap.Static,

    -- applications / uses cases
        Data.Sequence.IdMap,
        Data.Sequence.IdMap.Tests,
--        Data.Sequence.IdMap.Profile,
        Data.Sequence.IdMap2
--        Data.Sequence.Profile,
--        Data.IdSequence,
--        Data.List.IdMap,
--        Data.Graph.IdMap,
--        Data.LinkMap,
--        Data.LinkMap.Tests,
--        Test.IdMap
    --	Tests.PointerReversal,
    --	Tests.RandomGraph

    Other-Modules:

        Data.Array.Simple,
        Data.Control.Kvantum,
        Data.Control.Kvantum.Void,

        Data.IdMap.Core,
        Data.IdMap.Core.Pure,
        Data.IdMap.Core.Fast

    Build-Depends:
        base == 4.1.*,
        containers == 0.2.*,
        HUnit == 1.2.* 
--        random

    if flag(pure)
        CPP-Options: -D__PURE__
    else
        if flag(check)
            CPP-Options: -D__CHECK__
        
    Extensions:
        GADTs,
        TypeOperators,
        RankNTypes,
        BangPatterns,
        KindSignatures,
        EmptyDataDecls,
        GeneralizedNewtypeDeriving,
        ScopedTypeVariables,
        TypeFamilies,
        MultiParamTypeClasses

    --  CPP,
    --  MagicHash,
    --  UnboxedTuples,


