-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:e2a182c3ca48356c1ccd31be67f9f309
    SHA1:19a52c0ca63bcbb15d718d0fb692702e484547fe
    SHA256:df0160fbc87d14f69d42cca07f486e4a608a28b1ccaa5a7bd07ae252d228e2dc
    SHA512:7cd25435ad1ab650cc622edda603482c849ee17d9f6f17ac7d42e66b366d2bca432cf51a72d03a9e81cc9ebffcfd88c63bf96cd6d4cdbe0f9d3c36f2c35f950c
    Skein512_512:e433ce0d85178990d2d18907d8f81e630a93ad79cdb9b355c8dfca0a9d21129a80763da3532102a3f52b30d9a2c9e0fc1bbddaa70abed943795a333182f8c124

x-package-locations:
    https://hackage.haskell.org/package/MonadCatchIO-mtl-0.1.0.1/MonadCatchIO-mtl-0.1.0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/MonadCatchIO-mtl-0.1.0.1.tar.gz

x-package-size: 2150
-- END Added by all-cabal-hashes-tool

name:                MonadCatchIO-mtl
version:             0.1.0.1
x-revision: 1
description:
        Provides a monad-transformer version of the @Control.Exception.catch@
        function. For this, it defines the @MonadCatchIO@ class, a subset of
        @MonadIO@. It defines proper instances for most monad transformers in
        the 'mtl' library.

synopsis:           Monad-transformer version of the Control.Exception module
category:           Control
license:            PublicDomain
maintainer:         jcpetruzza@gmail.com
homepage:           http://code.haskell.org/~jcpetruzza/MonadCatchIO-mtl

cabal-version:      >= 1.2
build-type:         Simple
tested-with:        GHC==6.10

extra-source-files: Control/Monad/generic-code.inc

Flag base3
  description: Don't expect the new Control.Exception module (prior to base-4)
  default: False

Library
  build-depends:    mtl
  ghc-options:      -Wall
  extensions:       CPP
                    ExistentialQuantification

  if flag(base3) {
    build-depends: base < 4
  } else {
    build-depends: base >= 4 && < 4.6
  }

  exposed-modules: Control.Monad.CatchIO.Old

  if flag(base3) {
    cpp-options: -D__BASE_VERSION__=3
  } else {
    cpp-options: -D__BASE_VERSION__=4
    exposed-modules:  Control.Monad.CatchIO
  }
