-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:3704bb478550feffb57f34ccf656f573
    SHA1:47978214ad7199b082703b652ef1f893b13a2ccb
    SHA256:4ba73b48fc3c37fb25f1e6377346816c18ee72534701da10371bb54171548fa6
    SHA512:f4c311769be42a03b0ea358db6fbfb5af9f6c978756a59b5b27931931de0235d06406e9e6a6161b5dd8cad2bd5df86a8a71a0481ad59dd54d40d6bd14e930a36
    Skein512_512:618b2098cd351b04e95537824c2bc154f0d94750d115f789067debfcdf083599b224f663ca241253dd89817e9bde753d719f24a8a5f0c3c038eded5864333ac5

x-package-locations:
    https://hackage.haskell.org/package/syntax-trees-0.1.2/syntax-trees-0.1.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/syntax-trees-0.1.2.tar.gz

x-package-size: 4617
-- END Added by all-cabal-hashes-tool

name:             syntax-trees
version:          0.1.2
synopsis:         Convert between different Haskell syntax trees.
description:      Provides an instance that translates
		  haskell-src-exts expression trees into Template Haskell expression
		  trees in a way that depends only on the haskell-src-exts syntax tree
		  and agreement on the pretty-printed representation of
		  Haskell between haskell-src-exts pretty-printer and
		  Template Haskell quotations (as opposed to depending on
		  both TH and haskell-src-exts syntax tree representations).
		  .
		  Instead of converting between data types, 
		  haskell-src-exts syntax trees are pretty-printed and wrapped in
		  a TH quotation which is then interpreted as a Haskell program,
		  yielding a TH Exp tree. Free variables in the haskell-src-exts tree are
		  preserved by lifting them to TH splices prior to pretty-printing.
		  .
license:          BSD3
license-file:     LICENSE
author:           Dominic Orchard
maintainer:       dom.orchard@gmail.com
build-type:       Simple
cabal-version:    >= 1.6
category: 	  Language
extra-source-files:  examples/Foo.lhs

library
  build-depends:    base >= 3 && <5,
                    mtl,
                    haskell-src-exts >=1.2,
                    template-haskell,
                    uniplate,
                    hint
  extensions:       TemplateHaskell, MultiParamTypeClasses
  exposed-modules:  Language.Haskell.SyntaxTrees
                    Language.Haskell.SyntaxTrees.Main
                    Language.Haskell.SyntaxTrees.ExtsToTH
		    
    
