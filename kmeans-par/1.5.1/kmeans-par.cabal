-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:07b4e98a2b85cf2200f2aa1908850d0e
    SHA1:2ea93495a013a72a56ab8bbe85e3dacd6cf72828
    SHA256:2c19fbd9e353d8ba20b215ea31bc03c85b755cb6170392e8d37e4bea520eff20
    SHA512:bfffe34f14911616fe00f747203f8a3f065672cda87e9c8f4bf28e0d368add717105552d81ec44743ebebda2e7f813e48e5c25a0be8e6c346c013fd97eb9bdd0
    Skein512_512:2407364851a22e52086354a74404fef9935b0321db3c103b20bb4c1fe9c775c69e8569877ae1be07f0b2d9e9b6232b21d82073755cbef1f9f24b84bcc006d051

x-package-locations:
    https://hackage.haskell.org/package/kmeans-par-1.5.1/kmeans-par-1.5.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/kmeans-par-1.5.1.tar.gz

x-package-size: 5217
-- END Added by all-cabal-hashes-tool

name:                kmeans-par
version:             1.5.1
synopsis:            Sequential and parallel implementations of Lloyd's algorithm.
license:             MIT
license-file:        LICENSE
author:              vi
maintainer:          me@vikramverma.com
category:            Algorithm
build-type:          Simple
cabal-version:       >=1.10

library
  exposed-modules:
    Algorithms.Lloyd.Sequential,
    Algorithms.Lloyd.Strategies
  other-modules:
    Data.Functor.Extras,
    Data.Vector.Split
  other-extensions:
    ViewPatterns 
  build-depends:
    base == 4.*,
    vector,
    semigroups,
    parallel,
    metric
  hs-source-dirs:
    src
  ghc-options:
    -threaded -O2 -with-rtsopts=-N -rtsopts
  default-language:
    Haskell2010

benchmark kmeans-benchmark
  type:
    exitcode-stdio-1.0
  main-is:
    Main.lhs
  hs-source-dirs:
    benchmark
  build-depends:
    base == 4.*,
    random,
    criterion,
    normaldistribution,
    kmeans-par,
    deepseq,
    vector,
    metric
  ghc-options:
    -threaded -O2 -with-rtsopts=-N -rtsopts
  default-language:
    Haskell2010

test-suite spec
  type: 
    exitcode-stdio-1.0
  hs-source-dirs:
    src,
    test
  main-is:
    Spec.hs
  build-depends:
    base == 4.*,
    hspec >= 1.5,
    normaldistribution,
    metric,
    parallel,
    semigroups,
    vector,
    QuickCheck
  default-language:
    Haskell2010
  ghc-options:
    -threaded -O2 -with-rtsopts=-N -rtsopts
