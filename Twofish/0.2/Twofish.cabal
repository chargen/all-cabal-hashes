-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:6b49ec41410bbbc960c866a2569ecd88
    SHA1:80a9ce1e67d3b333a6107caed582b245a1a2e991
    SHA256:6711a473f7988315ca78c7ea915f77dbfa4e9ec7e6413d4c9c81d0b6674b5162
    SHA512:ad3032572cdfb3b49534d620f0b54eca32600cc0b9d839dbafc4f4e5d9545059995e970712a4cd0ad0ddbd5118e41bb24a0402a9e730a5e241e8dcb77c10b109
    Skein512_512:03caa5ffbf84b7007d922aaf2781df2c98f51c6ab5a69626ce66912d10e0df30885fe7f8d1617847a6a3c4371236684d483cd34cc3ff4c4c42edf07664b2ed0e

package-locations:
    https://hackage.haskell.org/package/Twofish-0.2/Twofish-0.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/Twofish-0.2.tar.gz

package-size: 8486
-- END Added by all-cabal-hashes-tool

Name:          Twofish
Version:       0.2
Category:      Cryptography, Codec
Stability:     experimental
Synopsis:      An implementation of the Twofish Symmetric-key cipher.
Description:   Implements the Twofish symmetric block cipher, designed by:
               Bruce Schneier, John Kelsey, Doug Whiting, David Wagner, Chris Hall,
               and Niels Ferguson.
               .
               As well, this module includes some generic definitions for
               ciphers and cipher-block-chaining mode in the Data.Cipher
               module.  In the future, these should probably either be
               moved to their own package, or all of this should be merged
               into the Crypto package.
               .
               Acknowledgments:
               .
               Dominic Steinitz and Creighton Hogg for their work on the Crypto
               package, upon which this package depends (particularily for the
               Data.LargeWord module).
               .
               Stephen Tetley for his advice and code examples provided on
               the Haskell-Beginners mailing list in response to a question
               I had, which helped me to create a transformer version of the Cbc monad.

Author:        Ron Leisti
Maintainer:    ron.leisti@gmail.com
Bug-Reports:   mailto:ron.leisti@gmail.com
Homepage:

License:       BSD3
License-File:  LICENSE
Cabal-Version: >= 1.2
Build-Type:    Simple

Tested-With:   GHC == 6.12.1

Library
  Build-Depends:   array >= 0.3
                   ,base >= 4 && < 5
                   ,Crypto >= 4.2.1
                   ,HUnit >= 1.2.2.1
                   ,mtl >= 1.1.0.2
  Exposed-Modules: Codec.Encryption.Twofish
                   ,Data.Cipher
  Extensions:      FlexibleContexts
                   ,FlexibleInstances 
                   ,FunctionalDependencies
                   ,GeneralizedNewtypeDeriving
                   ,MultiParamTypeClasses
                   ,TypeSynonymInstances
  Ghc-Options:     -Wall

Executable Test
  Main-Is:       Test.hs
  Ghc-options:   -fregs-graph
  Other-Modules: Data.Cipher
                 Codec.Encryption.Twofish

-- Commented, because I'm not sure about the ramifications
-- of attempting to build an executable with profiling 
-- on a machine that doesn't have the required profiling 
-- libraries installed.
--
--Executable CbcPerformance
--  Main-Is:       CbcPerformance.hs
--  Ghc-options:   -fregs-graph -prof -auto-all -O2
--  Other-Modules: Data.Cipher
--                 Codec.Encryption.Twofish
