-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:b59f8ea7f63634ae60a1e1c19fb4517d
    SHA1:782d15a10b4172fac2b0993c649563465f18f23c
    SHA256:58ab8cbdcfc1502791732fcb6340442614748e9332c97c4f10c084bd5a1296f3
    SHA512:03f526edd3fc2a6b9c5c2a3d8421301ec4c6371b35ea0cbd5b03f1fecd756227a50d1419c178fccdb4f0857e53111857864187c3d7cfd3acbea5dcc5f2b02669
    Skein512_512:1725dc7f9647c9b4425672dc0b9615d4062a9c5f57c9c41c2daee86e48c9ef8a86b9fee322330dfe6001e1f3f765b1642c49032f2b8c6842ebc14effac285ba4

x-package-locations:
    https://hackage.haskell.org/package/happstack-state-0.3.1/happstack-state-0.3.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/happstack-state-0.3.1.tar.gz

x-package-size: 30152
-- END Added by all-cabal-hashes-tool

Name:                happstack-state
Version:             0.3.1
Synopsis:            Event-based distributed state.
Description:         Unplug your machine and restart and have your app recover to exactly where it left off. Happstack-State spares you the need to deal with all the marshalling, consistency, and configuration headache that you would have if you used an external DBMS for this purpose. Its component model makes it easy to compose big applications from smaller reliable parts. Use event subscription to trigger IO actions and support comet-style or irc-bot applications. 
License:             BSD3
License-file:        COPYING
Author:              Happstack team, HAppS LLC
Maintainer:          Happstack team <happs@googlegroups.com>
homepage:            http://happstack.com
Category:            Web, Distributed Computing
Cabal-Version:       >= 1.6
Build-Type:          Simple

source-repository head
    type:     darcs
    subdir:   happstack-state
    location: http://patch-tag.com/publicrepos/happstack

flag base4

Flag tests
    Description: Build the testsuite, and include the tests in the library
    Default: False

Library

  Exposed-modules:     
                       Happstack.State
--                     Happstack.State.Logger
                       Happstack.State.Saver
                       Happstack.State.Control
                       Happstack.State.Transaction
                       Happstack.State.ComponentTH
                       Happstack.State.ComponentSystem
  if flag(tests)
    Exposed-modules:   
                       Happstack.State.Tests
                       Happstack.State.Tests.Helpers
                       Happstack.State.Tests.CheckpointProperties
                       Happstack.State.Tests.SaverProperties
  Other-modules:       
                       Happstack.State.Checkpoint
                       Happstack.State.Spread
                       Happstack.State.Monad
                       Happstack.State.Saver.Impl.File
                       Happstack.State.Saver.Impl.Memory
                       Happstack.State.Saver.Impl.Queue
                       Happstack.State.Saver.Types
--                     Happstack.State.OperationModes
                       Happstack.State.Types
                       Happstack.State.Util
                       Happstack.State.TxControl

  Build-Depends:       binary,
                       bytestring,
                       containers,
                       directory, 
                       extensible-exceptions,
                       filepath,
                       hslogger >= 1.0.2,
                       hspread >= 0.3,
                       happstack-util >= 0.3.1 && < 0.4,
                       happstack-data >= 0.3.1 && < 0.4,
                       mtl,
                       old-time,
                       random,
                       stm,
                       template-haskell

  if flag(base4)
    Build-Depends:     base >= 4 && < 5, syb
  else
    Build-Depends:     base < 4
  if flag(tests)
    Build-Depends:     QuickCheck < 2, HUnit

  hs-source-dirs:      src
  if flag(tests)
    hs-source-dirs:    tests
  
  if !os(windows)
     Build-Depends:    unix
     cpp-options:      -DUNIX

  Extensions:          TemplateHaskell, FlexibleInstances, FlexibleContexts,
                       MultiParamTypeClasses, DeriveDataTypeable,
                       OverlappingInstances, UndecidableInstances, CPP,
                       TypeFamilies, FunctionalDependencies, TypeOperators,
                       GADTs, EmptyDataDecls, ExistentialQuantification, RankNTypes,
                       ScopedTypeVariables, PatternSignatures, PatternGuards,
                       MagicHash, TypeSynonymInstances
  ghc-options:         -Wall
  GHC-Prof-Options:    -auto-all

Executable happstack-state-tests
  Main-Is: Test.hs
  GHC-Options: -threaded
  Build-depends: HUnit
  hs-source-dirs: tests, src
  if flag(tests)
    Buildable: True
  else
    Buildable: False

