-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:1abbf3dc5b2bf43d06b03e2478902619
    SHA1:8794663df9f5a02fafb33dac7ccd1fff34ef84e6
    SHA256:a2741816571d9db32a9e88ea90436288ca533e091301b0e6caec5c0f73bc60c7
    SHA512:65f21025fbcf3c99b178a2b3f214df244d1173450fd41e2c7827e667ac38058d4d8546dc9a25eb3a61d7ad89f3cb33d64076a05d5afca8d8fd7206ac007de109
    Skein512_512:c4adb3543be5895433d151a9efc0450e3ed8e69bdf822bb98f245baf5f299cbfc95f8813afd00504b59b997d1b61e932f7f06efecfac7db2385423db63793d52

package-locations:
    https://hackage.haskell.org/package/units-2.0/units-2.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/units-2.0.tar.gz

package-size: 19878
-- END Added by all-cabal-hashes-tool

name:           units
version:        2.0
cabal-version:  >= 1.10
synopsis:       A domain-specific type system for dimensional analysis
homepage:       http://www.cis.upenn.edu/~eir/packages/units
category:       Math
author:         Richard Eisenberg <eir@cis.upenn.edu>
maintainer:     Richard Eisenberg <eir@cis.upenn.edu>, Takayuki Muranushi <muranushi@gmail.com>
bug-reports:    https://github.com/goldfirere/units/issues
stability:      experimental
extra-source-files: README.md, CHANGES.md
license:        BSD3
license-file:   LICENSE
build-type:     Simple
description:

    The units package provides a mechanism for compile-time
    dimensional analysis in Haskell programs. It defines an embedded
    type system based on units-of-measure. The units defined are fully
    extensible, and need not relate to physical properties.

    The package supports defining multiple inter-convertible units,
    such as Meter and Foot. When extracting a number from a
    dimensioned quantity, the desired unit must be specified, and the
    value is converted into that unit.

    If you are looking for specific systems of units (such as SI),
    please see the `units-defs` package.

    The Haddock documentation is insufficient for using the units
    package. Please see the README file, available from the package
    home page.

source-repository this
  type:     git
  location: https://github.com/goldfirere/units.git
  tag:      v2.0

library
  build-depends:      
      base >= 4.7 && < 5,
      singletons >= 0.9 && < 1
  exposed-modules:    
    Data.Metrology, 
    Data.Metrology.Internal,
    Data.Metrology.Show,
    Data.Metrology.Unsafe,
    Data.Metrology.Z,
    Data.Metrology.Set

  other-modules:     
    Data.Metrology.Factor,
    Data.Metrology.LCSU,
    Data.Metrology.Quantity, 
    Data.Metrology.Dimensions,
    Data.Metrology.Units,
    Data.Metrology.Combinators,
    Data.Metrology.Validity

    -- cabal now recommends that TH be explicitly listed in cabal files
  default-extensions: TemplateHaskell
  default-language:   Haskell2010


-- Here are some test scripts for `units`. Since `units` is a
-- type-level library and mainly works at compile time, we're just
-- testing if these programs compiles and runs properlly.
-- 
-- !IMPORTANT! You need to type
--
-- > make prepare-test
--
-- once, to bring the specific unit definitions from `units-defs`
-- into scope to run the tests.

Test-Suite travel
  Type:               exitcode-stdio-1.0
  Hs-Source-Dirs:     Test
  Ghc-Options:        -Wall
  Main-Is:            Travel.hs
  Other-Modules:        
                        
  Build-Depends:        
      base
    , units

  default-language:   Haskell2010
