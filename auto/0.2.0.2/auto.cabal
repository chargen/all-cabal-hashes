name:                auto
version:             0.2.0.2
synopsis:            Denotative, locally stateful programming DSL & platform
description:         (Up to date documentation is maintained at
                     <https://mstksg.github.com/auto>)
                     .
                     /auto/ is a Haskell DSL and platform providing
                     declarative, compositional, denotative semantics for
                     discrete-step, locally stateful, interactive programs,
                     games, and automations, with implicitly derived
                     serialization.
                     .
                     /auto/ works by providing a type that encapsulates
                     "stream transformers", or locally stateful functions; by
                     specifying your program as a (potentially cyclic) graph
                     of relationships between streams, you create a way of
                     "declaring" a system based simply on static relationships
                     between quantities.
                     .
                     Instead of a "state monad" type solution, where all
                     functions have access to a global state, /auto/ works by
                     specifying relationships which each exist independently
                     and on their own, without any global state.
                     .
                     A more fuller exposition is in the `README.md`, in this
                     project directory and also online at
                     <https://github.com/mstksg/auto/blob/master/README.md>;
                     you can get started by reading the tutorial, which is
                     also in this project directory in the `tutorial`
                     directory, and also incidentally online at
                     <https://github.com/mstksg/auto/blob/master/tutorial/tutorial.md>.
                     Also, check out the
                     <https://github.com/mstksg/auto-examples auto-examples>
                     repository on github for plenty of real-world and toy
                     examples to learn from!
                     .
                     Import "Control.Auto" to begin!

license:             MIT
license-file:        LICENSE
author:              Justin Le
maintainer:          justin@jle.im
copyright:           (c) Justin Le 2015
category:            Control
homepage:            https://github.com/mstksg/auto
bug-reports:         https://github.com/mstksg/issues
build-type:          Simple
extra-source-files:  README.md
                     CHANGELOG.md
                     tutorial/tutorial.md
                     .gitignore
cabal-version:       >=1.10

source-repository head
  type:              git
  location:          git://github.com/mstksg/auto.git

library
  exposed-modules:     Control.Auto
                     , Control.Auto.Blip
                     , Control.Auto.Blip.Internal
                     , Control.Auto.Collection
                     , Control.Auto.Core
                     , Control.Auto.Effects
                     , Control.Auto.Generate
                     , Control.Auto.Interval
                     , Control.Auto.Process
                     , Control.Auto.Process.Random
                     , Control.Auto.Run
                     , Control.Auto.Serialize
                     , Control.Auto.Switch
                     , Control.Auto.Time
  -- other-modules:       
  -- other-extensions:    
  build-depends:       base         >= 4.6      && < 4.8
                     , bytestring   >= 0.10.4.0 && < 0.11
                     , cereal       >= 0.4.1.1  && < 0.5
                     , containers   >= 0.5.5.1  && < 0.6
                     , deepseq      >= 1.3.0.2  && < 2.0
                     , profunctors  >= 4.4.1    && < 5.0
                     , random       >= 1.1      && < 2.0
                     , semigroups   >= 0.16.2.2 && < 0.17
                     , transformers >= 0.4.2.0  && < 0.5
  hs-source-dirs:      src
  default-language:    Haskell2010
  ghc-options:         -Wall


package-hashes:
    MD5:968b4a80da98b7931c2364f6930d6a1d
    SHA1:face3ee079566a73f241fd1551faddfb00245770
    SHA256:478363c30533dcd5f1efb809ae45875af18b3efdea5be8cc455fb66914b75194
    SHA512:2f038f6b5d860d7c3fe16cbe21e36186b7afce53adabaae7fc3c5d9365ecc57473f1f98f9bd4c31ee0812f2b599276957f0151f495f2626697186a34bc30fd8b
    Skein512_512:c05edca58ee2b77a558a4d100c7b74d714e4be5f2e4508d25f2cd4394be224488b4d2f568136e08972b487c0e2a578434d6b580b5cac9b6f574a51948a49db94

package-locations:
    https://hackage.haskell.org/package/auto-0.2.0.2/auto-0.2.0.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/auto-0.2.0.2.tar.gz

package-size: 99998
