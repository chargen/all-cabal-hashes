-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:b834809dc5c4ac4d1e519d8d6c456600
    SHA1:4db75bfdc4dcb6061500cc3321e10a5a311df6ea
    SHA256:fdbcbc28196d616b449bf3e46c30dcd5577dc92f290458e2dbdbfc5a65de327a
    SHA512:cce6062e7471746d23d9755b60d39cb189f27a513eb6a50c2c67619ea265658c3a03263143e15ebaa65c5cbece8ca8c6df9a5a8eb7cce0f43e164d8ee41e1829
    Skein512_512:06eccf5802707c7ee925d78190bd85a46d15cd4d84190cdc2c95132814893a97750fb21eaf29860092f2b1a00e540c7bd1537ac1bad62dda2525d8c72d013269

x-package-locations:
    https://hackage.haskell.org/package/HUnit-1.2.4.2/HUnit-1.2.4.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/HUnit-1.2.4.2.tar.gz

x-package-size: 23558
-- END Added by all-cabal-hashes-tool

Name:                   HUnit
Version:                1.2.4.2
x-revision: 1
Cabal-Version:          >= 1.6
License:                BSD3
License-File:           LICENSE
Author:                 Dean Herington
Maintainer:             hunit@richardg.name
Stability:              stable
Homepage:               http://hunit.sourceforge.net/
Category:               Testing
Synopsis:               A unit testing framework for Haskell
Description:
    HUnit is a unit testing framework for Haskell, inspired by the
    JUnit tool for Java, see: <http://www.junit.org>.
Tested-With:
    GHC == 6.12.3
    GHC == 7.0.3
Build-Type:             Custom
Extra-Source-Files:
    tests/HUnitTest98.lhs
    tests/HUnitTestBase.lhs
    tests/HUnitTestExtended.lhs
    tests/HUnitTests.cabal
    tests/Setup.hs
    tests/TerminalTest.lhs
Data-Files:
    doc/Guide.html
    examples/Example.hs
    prologue.txt
    README

source-repository head
    type:     darcs
    location: http://code.haskell.org/HUnit/

flag base4

Library
    Build-Depends: base <4.7
    if flag(base4)
        Build-Depends: base >=4
        CPP-Options: -DBASE4
        GHC-Options: -Wall
    else
        Build-Depends: base <4
    if impl(ghc >= 6.10)
        Build-Depends: base >=4
    Exposed-Modules:
        Test.HUnit.Base,
        Test.HUnit.Lang,
        Test.HUnit.Terminal,
        Test.HUnit.Text,
        Test.HUnit
    Extensions: CPP

Executable basic-tests
    Main-Is:            HUnitTest98.lhs
    HS-Source-Dirs:     . tests
    Build-Depends:      base<4.7
    if flag(base4)
        Build-Depends: base >=4
        CPP-Options: -DBASE4
        GHC-Options: -Wall
    else
        Build-Depends: base <4
    if impl(ghc >= 6.10)
        Build-Depends: base >=4
        Extensions: CPP

Executable extended-tests
    Main-Is:            HUnitTestExtended.lhs
    HS-Source-Dirs:     . tests
    Build-Depends:      base<4.7
    if flag(base4)
        Build-Depends: base >=4
        CPP-Options: -DBASE4
        GHC-Options: -Wall
    else
        Build-Depends: base <4
    if impl(ghc >= 6.10)
        Build-Depends: base >=4
        Extensions: CPP

Executable terminal-tests
    Main-Is:            TerminalTest.lhs
    HS-Source-Dirs:     . tests
    Build-Depends:      base<4.7
    if flag(base4)
        Build-Depends: base >=4
        CPP-Options: -DBASE4
    else
        Build-Depends: base <4
    if impl(ghc >= 6.10)
        Build-Depends: base >=4
        Extensions: CPP

-- Commenting these tests out because Hackage doesn't
-- accept packages that specify optimization level,
-- which is a key component of these tests.
--Executable optimize-0-tests
--    Main-Is:            HUnitTestOptimize.hs
--    HS-Source-Dirs:     . tests
--    Build-Depends:      base<4.7
--    GHC-Options:        -O0
--    if flag(base4)
--        Build-Depends: base >=4
--        CPP-Options: -DBASE4
--        GHC-Options: -Wall
--    else
--        Build-Depends: base <4
--    if impl(ghc >= 6.10)
--        Build-Depends: base >=4
--        Extensions: CPP
        
Executable optimize-1-tests
    Main-Is:            HUnitTestOptimize.hs
    HS-Source-Dirs:     . tests
    Build-Depends:      base<4.7
-- Commenting out this line because, at the time of writing, -O1 is implied and
-- the issue, that tests are optimized out of existence, is exposed at this 
-- optimization level.
--    GHC-Options:        -O1
    if flag(base4)
        Build-Depends: base >=4
        CPP-Options: -DBASE4
        GHC-Options: -Wall
    else
        Build-Depends: base <4
    if impl(ghc >= 6.10)
        Build-Depends: base >=4
        Extensions: CPP
        
-- Commented out for the same reason as optimize-0-tests.
--Executable optimize-2-tests
--    Main-Is:            HUnitTestOptimize.hs
--    HS-Source-Dirs:     . tests
--    Build-Depends:      base<4.7
--    GHC-Options:        -O2
--    if flag(base4)
--        Build-Depends: base >=4
--        CPP-Options: -DBASE4
--        GHC-Options: -Wall
--    else
--        Build-Depends: base <4
--    if impl(ghc >= 6.10)
--        Build-Depends: base >=4
--        Extensions: CPP
        
