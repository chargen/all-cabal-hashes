-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:a692d63e256dfb2764b62f4db9a67f40
    SHA1:8b7b0f2e988cfb4c9ce45f311c4ccf185f608953
    SHA256:4adc2437d493f8041c9338c0acf0c59af86a9e8e0ecbde1631e603c47acb724f
    SHA512:8b94a0f9f58e01429e837d37d318c3600f146afefad565b5bfd1c2978b7aca077d1b2fcf228a32d30632b528eccf716b1c05422dee8f8046234314056f010b5e
    Skein512_512:8dde3e4fae13c119aa61ecf4f2bfda7045e1ca53358f984a133391b4b034f3a9b93f22b94b1a4c7b51d71ee936722d4945dc17071ff4f5496a93d91dcef08019

package-locations:
    https://hackage.haskell.org/package/Deadpan-DDP-0.2.0.1/Deadpan-DDP-0.2.0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/Deadpan-DDP-0.2.0.1.tar.gz

package-size: 10088
-- END Added by all-cabal-hashes-tool

name:                Deadpan-DDP
version:             0.2.0.1
synopsis:            Write clients for Meteor's DDP Protocol
description:         The Deadpan-DDP project includes a debugging-tool, as well as a general purpose library.
                     .
                     <https://github.com/meteor/meteor/blob/devel/packages/ddp/DDP.md DDP> is the protocol that
                     <http://meteor.com Meteor> speaks between client and server.
                     .
                     The DDP tech-stack is: Websockets -> JSON -> EJson -> Collections -> Subscriptions + RPC.
                     .
                     In order to use the debugging tool, install this package and run `deadpan` for a usage
                     statement.
                     .
                     In order to use the library, simply import "Web.DDP.Deadpan".
                     .
                     The DSL monad is largely based around RPC calls and callbacks.
                     In order to write an application you would call
                     `Web.DDP.Deadpan.runClient` with
                     .
                     * An initial application state (this includes initial callbacks)
                     * A set of connection parameters
                     * A `Web.DDP.Deadpan.DSL.Deadpan` application
                     .
                     There are several callback-sets provided in "Web.DDP.Deadpan",
                     however, if you want to pick in a more granular fashion,
                     look inside "Web.DDP.Deadpan.Callbacks".
                     .
                     The connection parameters are the triple (Domain, Port, Path)...
                     .
                     For convenience the function getURI is provided to turn a URI
                     of the form <websocket://localhost:3000/websocket>
                     into the triple (Right ("localhost", 3000, "websocket"))...
                     or an error (Left "error message").
                     .
                     Refer to the <https://github.com/sordina/Deadpan-DDP#deadpan-ddp README.md> on Github for more information.
homepage:            http://github.com/sordina/Deadpan-DDP
license:             MIT
license-file:        LICENSE
author:              Lyndon Maydwell
maintainer:          maydwell@gmail.com
build-type:          Simple
cabal-version:       >=1.10
Extra-Source-Files:  changelog.md

library
  exposed-modules:     Data.EJson, Data.EJson.EJson, Data.EJson.Prism, Data.EJson.Aeson,
                       Web.DDP.Deadpan, Web.DDP.Deadpan.Callbacks, Web.DDP.Deadpan.Comms,
                       Web.DDP.Deadpan.DSL, Web.DDP.Deadpan.Websockets
  build-depends:       base >= 4 && < 5, websockets, network,
                       text, unordered-containers, base64-bytestring,
                       aeson, scientific, bytestring,
                       vector, convertible, lens,
                       network-uri, safe, mtl,
                       containers, stm, transformers
  hs-source-dirs:      src
  default-language:    Haskell2010

executable deadpan
  main-is:             Main.hs
  build-depends:       base >= 4 && < 5, websockets, network,
                       text, unordered-containers, base64-bytestring,
                       aeson, scientific, bytestring,
                       vector, convertible, lens,
                       network-uri, safe, mtl,
                       containers, stm, transformers
  hs-source-dirs:      src
  default-language:    Haskell2010
