-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:594e156cf47f83fb23e9d316314aa636
    SHA1:6d701fa4472c168a98d7a361edb4c81015acc223
    SHA256:431a1e6219f879cc2d5f051db7216734078c678ca0ed0f5d86708a2c94106250
    SHA512:a06474236995e14c743e2560cd97f8ffa69dc98054a0e49fbe2b9795fcc166e694b42d75ed0b79fa3ef9f48ec3904f6706ebc65fb437dbc72c450b3b10b47e93
    Skein512_512:d97c09145413fb86040e313991db4008d8f51ac8cbb7906661ba57d032544910c6523c3f5e56ff9851f90911991c7f07a4a34ab62b48932b3f4bd38c783d8e96

x-package-locations:
    https://hackage.haskell.org/package/flowsim-0.3.5/flowsim-0.3.5.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/flowsim-0.3.5.tar.gz

x-package-size: 859237
-- END Added by all-cabal-hashes-tool

Name:           flowsim
Version:        0.3.5
License:        GPL-2
License-file:   COPYING
Cabal-Version:  >= 1.6
Author:         Ketil Malde
Maintainer:     Ketil Malde <ketil@malde.org>

Category:       Bioinformatics
Synopsis:       Simulate 454 pyrosequencing
Description:    Provides clonesim, a clone simulator that simulates shotgun 
                genomic clones, and flowsim, that takes the output from clonesim
                (or any other Fasta-formatted file) and generates simulated 
                reads from them mimicing Roche's 454 pyrosequencing technology,
                writing output in 454's native SFF format.  The flowgram
                generation is based on empirical distributions derived from real
                data (although analytic distributions are available too, if you
                prefer).
                .
                The Darcs repository is at <http://malde.org/~ketil/biohaskell/flowsim>.

HomePage:       http://biohaskell.org/Applications/FlowSim
Build-Type:     Simple
Tested-with:    GHC==6.8.2, GHC==6.10, GHC==6.12.1, GHC==7.4.1

 -- Data-files:     README
Executable flowsim
  Main-Is:        FlowSim.hs
  Other-Modules:  Statistics, Config, EmpFile
                  Generations.GenBase, Generations.GS20, 
                  Generations.Titanium, Generations.Empirical, Version
  Build-Depends:  base >= 4 && < 5, array >= 0.1, random, MonadRandom, cmdargs >= 0.5, containers, bytestring, directory, mtl >= 2, biofasta, biocore >= 0.3, biosff >= 0.3
  Ghc-Options:    -Wall
  Hs-Source-Dirs: src

Executable hplc
  Build-Depends:  base >= 4 && < 5, containers, bytestring
  Main-Is:        HPLCount.hs
  Ghc-Options:    -main-is HPLCount
  Hs-Source-Dirs: src

Executable clonesim
  Main-Is:	  CloneSim.hs
  Build-Depends:  base >= 4 && < 5, array >= 0.1, cmdargs >= 0.5, bytestring, MonadRandom
  Other-Modules:  Statistics, Version
  Extensions: DeriveDataTypeable
  Ghc-Options: -Wall
  Hs-Source-Dirs: src

Executable kitsim
  Main-Is:	  KitSim.hs
  Build-Depends:  base >= 4 && < 5, cmdargs >= 0.5
  Other-Modules:  Version
  Extensions:     DeriveDataTypeable
  Ghc-Options:    -Wall -main-is KitSim
  Hs-Source-Dirs: src

Executable mutator
  Main-Is:       Mutator.hs
  Build-Depends: base >= 4 && < 5, cmdargs >= 0.5
  Other-Modules: Version, Statistics
  Extensions:    DeriveDataTypeable
  Ghc-Options:   -Wall -main-is Mutator
  Hs-Source-Dirs: src

Executable duplicator
  Main-Is:       Duplicator.hs
  Build-Depends: base >= 4 && < 5
  Other-Modules: Statistics
  Ghc-Options:   -Wall -main-is Duplicator
  Hs-Source-Dirs: src

Executable gelfilter
  Main-Is:       GelFilter.hs
  Build-Depends: base >= 4 && < 5
  Ghc-Options:   -Wall -main-is GelFilter
  Hs-Source-Dirs: src

Executable filtersff
  Main-Is:       FilterSFF.hs
  Build-Depends: base >= 4 && < 5
  Ghc-Options:   -Wall -main-is FilterSFF
  Hs-Source-Dirs: src
