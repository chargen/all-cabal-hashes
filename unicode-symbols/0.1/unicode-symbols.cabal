-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:94b5d517f765419f68d0196289881660
    SHA1:52e7b41742c7bbdc2fde7ac146be681f5b154a33
    SHA256:5645faf205655ce751533ce80a10bf3eff17be7e25756953ffbad32be17b0679
    SHA512:bfba65efb345d06ce3ab419da46a540ff999dd55885d04c6c11fc485afae73ea14f1a8204564f2ef548352fbc4c2e1c8af0f269be2ca70f60f1864eb7374883d
    Skein512_512:a3942d14face2f47f13f8b23045de71ef667622da12f0d5e29e030476bdcca1eb200563428e81ebfcab1dba88224e12fc5184884b2033e445be8ea78e4eca13a

x-package-locations:
    https://hackage.haskell.org/package/unicode-symbols-0.1/unicode-symbols-0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/unicode-symbols-0.1.tar.gz

x-package-size: 4046
-- END Added by all-cabal-hashes-tool

name:          unicode-symbols
version:       0.1
cabal-version: >=1.6
build-type:    Simple
stability:     experimental
author:        Roel van Dijk
maintainer:    vandijk.roel@gmail.com
copyright:     (c) 2009 Roel van Dijk
license:       BSD3
license-file:  LICENSE
category:
synopsis:      Unicode alternatives for common functions and operators
description:

  This package defines new symbols for a number of functions and
  operators in the base package and optionally for the containers
  package.

  .

  All symbols are documented with their actual definition and
  information regarding their Unicode code point. They should be
  completely interchangeable with their definitions.

  .

  This package was inspired by unicode-prelude from P&#xE9;ter
  Divi&#xE1;nszky:
  <http://hackage.haskell.org/package/unicode-prelude>

flag containers
  description: Unicode symbols for the containers package
  default:     True

Library
  exposed-modules: Prelude.Unicode
                 , Control.Applicative.Unicode
                 , Control.Category.Unicode
                 , Data.Monoid.Unicode
  build-depends: base >= 3.0.3.1 && < 4.2

  if flag(containers)
    build-depends: containers >= 0.2.0.1 && < 0.3
    exposed-modules: Data.IntMap.Unicode
                   , Data.IntSet.Unicode
                   , Data.Map.Unicode
                   , Data.Set.Unicode
                   , Data.Sequence.Unicode
