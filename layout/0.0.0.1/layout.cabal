-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:20f9d44b2da542c94c4439f3b33f88ef
    SHA1:65e411091afcec7716e85b4d2a034e280e01a292
    SHA256:0f483650f9d95f35aa5089135164d07187bb95d125f69bb872d110e3442f0710
    SHA512:749c3544a48997173919d9be02c077f9451521f0b2f01e563e79e186fe674194251e767fc8540b245573f6e684a45e33b70f723661765d1650958b37f8bfbc98
    Skein512_512:4be9dd0436edf5e57abc686ec04c600e123b41514dd6be135b7e7669e3da3423b0dab06fec5b540025389082c7caf55a850c032aa47a65d25dea2e7277033a46

package-locations:
    https://hackage.haskell.org/package/layout-0.0.0.1/layout-0.0.0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/layout-0.0.0.1.tar.gz

package-size: 2652
-- END Added by all-cabal-hashes-tool

Name:           layout
Version:        0.0.0.1
License:        BSD3
Author:         Robert Hensing
Maintainer:     hackage@roberthensing.nl
Synopsis:       Turn values into pretty text or markup
Description:    A library for turning values into text or markup. Flexibility
                is achieved by separating the semantics from the formatting
                implementation. This way, a function can output, for example,
		a table, which can then be rendered to any format.
                
                This library provides 'standard' objects that can be formatted,
                in module @Text.Layout.Objects@. It also provides data types for
                a few formats. These data types are glued together with
                instances of @Convertible@
Build-Type:     Simple
Cabal-Version:  >= 1.2
Stability:      work in progress
Category:       Pretty Printer, Text, Typography

Library
    Build-Depends:      base >= 4 && < 5
                        , convertible
                        , hinduce-missingh >= 0.0.0.0
    Exposed-Modules:    Text.Layout
                        Text.Layout.Class
                        Text.Layout.Objects
                        Text.Layout.DisplayText
                        Text.Layout.DisplayLatex
    Hs-Source-Dirs:     src
    Extensions:	        MultiParamTypeClasses, FlexibleContexts
