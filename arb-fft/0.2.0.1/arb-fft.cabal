-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:c3d66015ed74a5628830d34a593e496e
    SHA1:253e162c8f4b523c284d9f7880743eecbcf268a9
    SHA256:9e2d935c5ea5127659c65a9c68af2ed5fd5c116c0880d72d31d469b036a30848
    SHA512:02fb7e3dab5aaafadce261cef04d3e093fa333014f3e3aa2d1316373a66111635583016172a8d52ad7de835e199c8c5d8a97fa5c5c08c5d19e7c59d807dccd89
    Skein512_512:6d320a1f8d17e7b7b241e44b5093b6083c33b2007c0cbf724538b87122c0e93f633fe8f732544f45765b1a1d9bc3662c9acb3978014dea80d63deed5304a4730

package-locations:
    https://hackage.haskell.org/package/arb-fft-0.2.0.1/arb-fft-0.2.0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/arb-fft-0.2.0.1.tar.gz

package-size: 51922
-- END Added by all-cabal-hashes-tool

name:               arb-fft
version:            0.2.0.1
synopsis:           Pure Haskell arbitrary length FFT library
homepage:           https://github.com/ian-ross/arb-fft
license:            BSD3
license-file:       LICENSE
author:             Ian Ross
maintainer:         ian@skybluetrades.net
copyright:          Copyright (2013) Ian Ross
category:           Math
build-type:         Custom
extra-source-files: README.markdown CHANGELOG.markdown doc-formulae/*.svg
extra-doc-files:    doc-formulae/*.svg
cabal-version:      >=1.10

description:
  This library provides a pure Haskell complex-to-complex Fast Fourier
  Transform implementation for arbitrary length input vectors, using a
  mixed-radix decimation-in-time algorithm with specialised
  straight-line code for a range of base transform sizes, Rader's
  algorithm for prime length base transforms, and an empirical
  optimisation scheme to select a good problem decomposition.
  .
  This package is probably primarily of pedagogical interest (FFTW is
  about five times faster for most input sizes).  There is a long
  series of blog articles describing the development of the package,
  indexed at <http://www.skybluetrades.net/haskell-fft-index.html>.

source-repository head
  type:     git
  location: https://github.com/ian-ross/arb-fft

Flag LLVM
  default: True
  description: Use LLVM build for better performance

Library
  exposed-modules:  Numeric.FFT
  other-modules:    Numeric.FFT.Plan
                    Numeric.FFT.Execute
                    Numeric.FFT.Special
                    Numeric.FFT.Special.PowersOfTwo
                    Numeric.FFT.Special.Primes
                    Numeric.FFT.Special.Miscellaneous
                    Numeric.FFT.Types
                    Numeric.FFT.Utils
  ghc-prof-options: -auto-all -caf-all
  build-depends:    base                        >= 4.6      && < 5,
                    containers                  >= 0.5.0.0  && < 0.6,
                    criterion                   >= 0.8.0.0  && < 0.9,
                    directory                   >= 1.2.0.1  && < 1.3,
                    filepath                    >= 1.3.0.1  && < 1.4,
                    primitive                   >= 0.5.1.0  && < 0.6,
                    transformers                >= 0.3.0.0  && < 0.4,
                    vector                      >= 0.10.9.1 && < 0.11
  default-language: Haskell2010
  if flag(LLVM)
    ghc-options:    -O2 -fllvm
  else
    ghc-options:    -O2

Test-Suite basic-test
  type:             exitcode-stdio-1.0
  hs-source-dirs:   test
  main-is:          basic-test.hs
  build-depends:    arb-fft,
                    base                        >= 4.6      && < 5,
                    containers                  >= 0.5.0.0  && < 0.6,
                    vector                      >= 0.10.9.1 && < 0.11,
                    QuickCheck                  >= 2.6      && < 2.7,
                    tasty                       >= 0.3,
                    tasty-quickcheck            >= 0.3
  default-language: Haskell2010

Executable profile-256
  hs-source-dirs:   test
  main-is:          profile-256.hs
  build-depends:    arb-fft,
                    base                        >= 4.6      && < 5,
                    containers                  >= 0.5.0.0  && < 0.6,
                    vector                      >= 0.10.9.1 && < 0.11,
                    criterion
  default-language: Haskell2010
