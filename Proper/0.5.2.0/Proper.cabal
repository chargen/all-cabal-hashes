-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:8afb6df9d25cd5e7ef1ae79e55ab955f
    SHA1:fb55056ff2fa08c6ad97de5b20eac3034affb3bc
    SHA256:661e878b8b9372f197fefbda7159a5e45b0b52658843123fca76ac6de1ce1279
    SHA512:5edfb0f450291c6ee771d19604a7489d134fffe61cba2c9f565c7ec40e7d11ed95da41179525a58cd8839fbef97f2471e8422b8e67018d57d61dba909bed878c
    Skein512_512:dacb596e54f261a34d783253ef0d5ddf792a9ec6e7a46620ad12ef023c77e71193d6f8b7929c2b2a66f5cf3c1be7a362c116d89aab9e989d7d17a7676afbea61

x-package-locations:
    https://hackage.haskell.org/package/Proper-0.5.2.0/Proper-0.5.2.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/Proper-0.5.2.0.tar.gz

x-package-size: 6080
-- END Added by all-cabal-hashes-tool

-- Initial Proper.cabal generated by cabal init.  For further 
-- documentation, see http://haskell.org/cabal/users-guide/

name:                Proper
version:             0.5.2.0
synopsis:	     An implementation of propositional logic in Haskell            
description:         Proper is both an executable theorem prover for Propositional logic
		     and a library for incorporating propositional logic into other Haskell
		     programs. See the github repo for examples of theorem files for the
		     executable.

license:  	     BSD3           
license-file:        LICENSE
author:		     Dillon Huff              
maintainer:	     Dillon Huff
homepage:	     https://github.com/dillonhuff/Proper
-- copyright:           
-- category:            
build-type:          Simple
cabal-version:       >=1.8

library
  hs-source-dirs:	src
  build-depends:	base < 6, containers, syb
  exposed-modules:	Proper.Formula, Proper.CNF, Proper.Clause, Proper.BDD

executable Proper
  main-is:             Main.hs
  -- other-modules:       
  build-depends:       base < 6, containers, parsec, syb
  hs-source-dirs:      src

executable Proper-tests
  main-is:             Main.hs
  -- other-modules:       
  build-depends:       base < 6, HUnit, containers, parsec, syb
  hs-source-dirs:      test, src
