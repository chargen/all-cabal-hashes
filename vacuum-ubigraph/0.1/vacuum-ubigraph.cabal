-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:567044de2af83264e41691914fa83673
    SHA1:164b9e4ad48d9e4c1e5c5e24d6d4d47a85694f88
    SHA256:0f413cd175a4f5676aadbc64be6c9f84f064cfa48c3a7ac9f4b6f0fc0d090d50
    SHA512:defd3296549983f091bead04b2d7f39070390152948fd93f4c01139d3bd06a283a53757e81d586016a9220d40f570ae022419c99df0977c30606afc5e5fc3669
    Skein512_512:4f82916b3b07f4df5f4979362e0b78313ba510c5fd44e4a1950d52ca076e3cd9e337eccfea595fe6dcd585e5a05169c4af72a90facf620f5b3e82699c4a66d3b

package-locations:
    https://hackage.haskell.org/package/vacuum-ubigraph-0.1/vacuum-ubigraph-0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/vacuum-ubigraph-0.1.tar.gz

package-size: 2283
-- END Added by all-cabal-hashes-tool

name:               vacuum-ubigraph
version:            0.1
cabal-version:      >= 1.2
build-type:         Simple
license:            BSD3
license-file:       LICENSE
category:           Development
author:             Gleb Alexeyev
maintainer:         Gleb Alexeyev <gleb.alexeev@gmail.com>
stability:          experimental
synopsis:           Visualize Haskell data structures using vacuum and Ubigraph
description:        Visualize Haskell data structures using vacuum and Ubigraph
                    To use it, you'll have to install Ubigraph first - see http://ubietylab.net/ubigraph/
                    Then run ubigraph server with default settings (with a command like $UBIGRAPH_DIR/bin/ubigraph_server)
                    Then load System.Vacuum.Ubigraph module into the ghci session and use `view' function, e.g.
                    > view [1..3]
library
  build-depends:    base >= 3,
                    vacuum,
                    haxr,
                    containers
  exposed-modules:  System.Vacuum.Ubigraph
