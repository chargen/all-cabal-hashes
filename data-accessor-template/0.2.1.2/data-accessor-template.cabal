-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:0feb98757d889bbc9fbbe0379cdb3c05
    SHA1:db8811103549bdb4b86f21f7dcfc6a12cace14cc
    SHA256:17a3092619d67b1cb0484ff1e0b7dee11d0db6b85d8f771e3eeb07a6688ce143
    SHA512:8f57217ef8537f8cdbcbc47d7118e04164e6dbcbf78d4d3ee0700346caa0653a435d75ecf11d8d5ce76bf10104fc86238d30838d2b15ffe09d0e53e451f0926e
    Skein512_512:9a723c98c9b527155a395f8009f41d2d4e004e48a194ac521d169e4b5da19c9e5405ccada9ca00fcb281b9be703b4c7ce54dcb051fbaa4bf253d878a0829b94c

x-package-locations:
    https://hackage.haskell.org/package/data-accessor-template-0.2.1.2/data-accessor-template-0.2.1.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/data-accessor-template-0.2.1.2.tar.gz

x-package-size: 3512
-- END Added by all-cabal-hashes-tool

Name:             data-accessor-template
Version:          0.2.1.2
License:          BSD3
License-File:     LICENSE
Author:           Luke Palmer <lrpalmer@gmail.com>, Henning Thielemann <haskell@henning-thielemann.de>
Maintainer:       Henning Thielemann <haskell@henning-thielemann.de>
Homepage:         http://www.haskell.org/haskellwiki/Record_access
Package-URL:      http://code.haskell.org/data-accessor/
Category:         Data
Synopsis:         Utilities for accessing and manipulating fields of records
Description:
  Automate generation of @Accessor@'s of the @data-accessor@ package
  by Template Haskell functions.
Build-Type:       Simple
Tested-With:      GHC==6.8.2
Cabal-Version:    >=1.2

Extra-Source-Files:
  src-3/Data/Accessor/Template.hs
  src-5/Data/Accessor/Template.hs

Flag template_2_4
  description: Adapt to TemplateHaskell version of GHC-6.12

Library
  Build-Depends:
    data-accessor >=0.1 && <0.4,
    utility-ht >=0.0.1 && <0.1,
    base >=1.0 && <6

  If flag(template_2_4)
    Hs-Source-Dirs: src-5
    Build-Depends:  template-haskell >=2.4 && <2.5
  Else
    Hs-Source-Dirs: src-3
    Build-Depends:  template-haskell >=2.2 && <2.4

  Exposed-Modules:
    Data.Accessor.Template

  Extensions:       CPP, TemplateHaskell
  GHC-Options:      -Wall
