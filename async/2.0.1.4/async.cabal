-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:b62af9134df64aaa6868a7c50c856c38
    SHA1:bea8ae1b0dc6a0b5b2b321f50fb1d2e06e776544
    SHA256:41ddfe012d98f3ef101651fb529753bca5bb4c804f03f9cfafc5d0cbe50224c2
    SHA512:8b170644ce92f9788e22771239542e46ee14b9898404744f6a97b955ef22ae4b3fa280ea759f228cb22f2083b5ee007f39c61063f82e5cce8f6bf1c6df789a71
    Skein512_512:58bd5ea01cc4ba580274ba861060753c8d082344f590284a810a6e0ed742685016f65669527f99b07f3191ec2a2ecf47fc76dd457cd5eeb38553cef9d82602bd

x-package-locations:
    https://hackage.haskell.org/package/async-2.0.1.4/async-2.0.1.4.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/async-2.0.1.4.tar.gz

x-package-size: 8349
-- END Added by all-cabal-hashes-tool

name:                async
synopsis:            Run IO operations asynchronously and wait for their results

description:
 This package provides a higher-level interface over
 threads, in which an @Async a@ is a concurrent
 thread that will eventually deliver a value of
 type @a@.  The package provides ways to create
 @Async@ computations, wait for their results, and
 cancel them.
 .
 Using @Async@ is safer than using threads in two
 ways:
 .
 * When waiting for a thread to return a result,
   if the thread dies with an exception then the
   caller must either re-throw the exception
   ('wait') or handle it ('waitCatch'); the
   exception cannot be ignored.
 .
 * The API makes it possible to build a tree of
   threads that are automatically killed when
   their parent dies (see 'withAsync').
 .
 Changes in 2.0.1.4:
 .
 * Bump @base@ dependency of test suite
 .
 Changes in 2.0.1.3:
 .
 * Bump @base@ dependency to allow 4.6
 .
 Changes in 2.0.1.2:
 .
 * Bump @stm@ dependency to 2.4
 .
 Changes in 2.0.1.1:
 .
 * Safe Haskell support: @Control.Concurrent.Async@ is now @Trustworthy@
 .
 Changes in 2.0.1.0:
 .
 * Added a @Functor@ instance for @Async@
 .
 * Added @asyncBound@, @asyncOn@, @asyncWithUnmask@, @asyncOnWithUnmask@, @withAsyncBound@, @withAsyncOn@, @withAsyncWithUnmask@, @withAsyncOnWithUnmask@.
 .
 * Added @mapConcurrently@
 .
 * Added @Concurrently@ (with @Applicative@ and @Alternative@ instances)

version:             2.0.1.4
license:             BSD3
license-file:        LICENSE
author:              Simon Marlow
maintainer:          Simon Marlow <marlowsd@gmail.com>
copyright:           (c) Simon Marlow 2012
category:            Concurrency
build-type:          Simple
cabal-version:       >=1.8
homepage:            https://github.com/simonmar/async
bug-reports:         https://github.com/simonmar/async/issues
tested-with:         GHC==7.0.3, GHC==7.2.2, GHC==7.4.1

extra-source-files:
    bench/race.hs

source-repository head
    type: git
    location: https://github.com/simonmar/async.git

library
    exposed-modules:     Control.Concurrent.Async
    build-depends:       base >= 4.3 && < 4.7, stm >= 2.2 && < 2.5

test-suite test-async
    type:       exitcode-stdio-1.0
    hs-source-dirs: test
    main-is:    test-async.hs
    build-depends: base >= 4.3 && < 4.7,
                   async,
                   test-framework,
                   test-framework-hunit,
                   HUnit
