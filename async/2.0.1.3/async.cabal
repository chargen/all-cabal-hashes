name:                async
synopsis:            Run IO operations asynchronously and wait for their results

description:
 This package provides a higher-level interface over
 threads, in which an @Async a@ is a concurrent
 thread that will eventually deliver a value of
 type @a@.  The package provides ways to create
 @Async@ computations, wait for their results, and
 cancel them.
 .
 Using @Async@ is safer than using threads in two
 ways:
 .
 * When waiting for a thread to return a result,
   if the thread dies with an exception then the
   caller must either re-throw the exception
   ('wait') or handle it ('waitCatch'); the
   exception cannot be ignored.
 .
 * The API makes it possible to build a tree of
   threads that are automatically killed when
   their parent dies (see 'withAsync').
 .
 Changes in 2.0.1.3:
 .
 * Bump @base@ dependency to allow 4.6
 .
 Changes in 2.0.1.2:
 .
 * Bump @stm@ dependency to 2.4
 .
 Changes in 2.0.1.1:
 .
 * Safe Haskell support: @Control.Concurrent.Async@ is now @Trustworthy@
 .
 Changes in 2.0.1.0:
 .
 * Added a @Functor@ instance for @Async@
 .
 * Added @asyncBound@, @asyncOn@, @asyncWithUnmask@, @asyncOnWithUnmask@, @withAsyncBound@, @withAsyncOn@, @withAsyncWithUnmask@, @withAsyncOnWithUnmask@.
 .
 * Added @mapConcurrently@
 .
 * Added @Concurrently@ (with @Applicative@ and @Alternative@ instances)

version:             2.0.1.3
license:             BSD3
license-file:        LICENSE
author:              Simon Marlow
maintainer:          Simon Marlow <marlowsd@gmail.com>
copyright:           (c) Simon Marlow 2012
category:            Concurrency
build-type:          Simple
cabal-version:       >=1.8
homepage:            https://github.com/simonmar/async
bug-reports:         https://github.com/simonmar/async/issues
tested-with:         GHC==7.0.3, GHC==7.2.2, GHC==7.4.1

extra-source-files:
    bench/race.hs

source-repository head
    type: git
    location: https://github.com/simonmar/async.git

library
    exposed-modules:     Control.Concurrent.Async
    build-depends:       base >= 4.3 && < 4.7, stm >= 2.2 && < 2.5

test-suite test-async
    type:       exitcode-stdio-1.0
    hs-source-dirs: test
    main-is:    test-async.hs
    build-depends: base >= 4.3 && < 4.6,
                   async,
                   test-framework,
                   test-framework-hunit,
                   HUnit


package-hashes:
    MD5:7d7f4e05b86acc352ea38489208a7a77
    SHA1:6ca95c41e79b2ee79db33a5f2f2a6fc6c602ee74
    SHA256:70d681084aca826c84d722320fc5d67ac6294802afbb13f8b5e8eac2bbc972e5
    SHA512:d7ee7b1e4616a20688d87e613e74c3b9ed41966fe4522215315a71582fc9007b1f8ef08ae390d9547e77c51b45c380008ef79fbe71f7b13666b979fa82169599
    Skein512_512:d5b2470b0920ca317364865196244e61ac54d8f5afbefd173f00c942602bd0b07ab19756d739e5e19fdcd0cc0c0a5dcbb9dfce431688884d276dbe6e453b2e02

package-locations:
    https://hackage.haskell.org/package/async-2.0.1.3/async-2.0.1.3.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/async-2.0.1.3.tar.gz

