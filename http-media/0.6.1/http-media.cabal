-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:bb965b4d13f354fe5aa486ac471f9dd7
    SHA1:6b85b10c8cc4c5d325fe2618f47d4f52f4b8f494
    SHA256:b8affebcb75e508ecb14fe22213d8c54e190e7b144f2a6c2a09418cdd8ac5a74
    SHA512:575786d95e300887fe74078695dbb8d2e34f9ea293256bf0ed85c13aab9b9147cfb8637992c0634b55cae0195b926fd78470f6c84f89c3be926b044348e6fa86
    Skein512_512:ad922f377fd2ef676eaab22bfd770553ebf564bdaf7a7aff8fcffe29e6b0c04e5a7d2a2421632b73d8132a7405f209309c97090e27b21e97f940060b69065145

package-locations:
    https://hackage.haskell.org/package/http-media-0.6.1/http-media-0.6.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/http-media-0.6.1.tar.gz

package-size: 14791
-- END Added by all-cabal-hashes-tool

name:          http-media
version:       0.6.1
license:       MIT
license-file:  LICENSE
author:        Timothy Jones
maintainer:    Timothy Jones <git@zmthy.io>
homepage:      https://github.com/zmthy/http-media
bug-reports:   https://github.com/zmthy/http-media/issues
copyright:     (c) 2012-2015 Timothy Jones
category:      Web
build-type:    Simple
cabal-version: >= 1.10
synopsis:      Processing HTTP Content-Type and Accept headers
description:
  This library is intended to be a comprehensive solution to parsing and
  selecting quality-indexed values in HTTP headers. It is capable of parsing
  both media types and language parameters from the Accept and Content header
  families, and can be extended to match against other accept headers as well.
  Selecting the appropriate header value is achieved by comparing a list of
  server options against the quality-indexed values supplied by the client.
  .
  In the following example, the Accept header is parsed and then matched against
  a list of server options to serve the appropriate media using
  'mapAcceptMedia':
  .
  > getHeader >>= maybe send406Error sendResourceWith . mapAcceptMedia
  >     [ ("text/html",        asHtml)
  >     , ("application/json", asJson)
  >     ]
  .
  Similarly, the Content-Type header can be used to produce a parser for request
  bodies based on the given content type with 'mapContentMedia':
  .
  > getContentType >>= maybe send415Error readRequestBodyWith . mapContentMedia
  >     [ ("application/json", parseJson)
  >     , ("text/plain",       parseText)
  >     ]
  .
  The API is agnostic to your choice of server.

library
  hs-source-dirs: src

  ghc-options: -Wall

  default-language: Haskell2010
  default-extensions:
    OverloadedStrings
  other-extensions:
    CPP

  exposed-modules:
    Network.HTTP.Media
    Network.HTTP.Media.Accept
    Network.HTTP.Media.Language
    Network.HTTP.Media.MediaType
    Network.HTTP.Media.RenderHeader
  other-modules:
    Network.HTTP.Media.Language.Internal
    Network.HTTP.Media.MediaType.Internal
    Network.HTTP.Media.Quality
    Network.HTTP.Media.Utils
  build-depends:
    base             >= 4.6  && < 5.0,
    bytestring       >= 0.10 && < 0.11,
    case-insensitive >= 1.0  && < 1.3,
    containers       >= 0.5  && < 0.6

test-suite test-http-media
  type:           detailed-0.9
  hs-source-dirs: src test

  default-language: Haskell2010
  default-extensions:
    OverloadedStrings
  other-extensions:
    CPP
    TupleSections

  test-module: Tests
  other-modules:
    Network.HTTP.Media
    Network.HTTP.Media.Accept
    Network.HTTP.Media.Accept.Tests
    Network.HTTP.Media.Gen
    Network.HTTP.Media.Language
    Network.HTTP.Media.Language.Gen
    Network.HTTP.Media.Language.Internal
    Network.HTTP.Media.Language.Tests
    Network.HTTP.Media.MediaType
    Network.HTTP.Media.MediaType.Gen
    Network.HTTP.Media.MediaType.Internal
    Network.HTTP.Media.MediaType.Tests
    Network.HTTP.Media.Quality
    Network.HTTP.Media.RenderHeader
    Network.HTTP.Media.Tests
    Network.HTTP.Media.Utils

  ghc-options: -Wall -Werror

  build-depends:
    base                  >= 4.6  && < 5.0,
    bytestring            >= 0.10 && < 0.11,
    Cabal                 >= 1.16 && < 1.23,
    cabal-test-quickcheck >= 0.1  && < 0.2,
    case-insensitive      >= 1.0  && < 1.3,
    containers            >= 0.5  && < 0.6,
    QuickCheck            >= 2.6  && < 2.9

source-repository head
  type:     git
  location: git://github.com/zmthy/http-media.git
