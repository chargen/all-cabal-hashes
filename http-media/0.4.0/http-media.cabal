-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:3ba3fe5e65465576229ca96eebffdc4d
    SHA1:f8d709a08c02eb7608dc7e6ebe9c7f228756bad7
    SHA256:797b2c987f8eee3f02bbdbbd2035ee446bc69116625225ddbf1dd0a8186ddb92
    SHA512:78ddf2775380b0ddc5e245e643d15835bfcee3f99b4c3aafbd89c6c9392fa415fe5898268767a6895146d4b35a655ee4333a76f7328de662efc4a4d087a5568a
    Skein512_512:8917ba0f4ddcac0ea6198d598bbf45822e0377ae53d3f106259724255406ed91a042f589effb8aa66c22701caea5383ea88c6fb1d63d6457f338a400743ec84f

package-locations:
    https://hackage.haskell.org/package/http-media-0.4.0/http-media-0.4.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/http-media-0.4.0.tar.gz

package-size: 13702
-- END Added by all-cabal-hashes-tool

name:          http-media
version:       0.4.0
license:       MIT
license-file:  LICENSE
author:        Timothy Jones
maintainer:    Timothy Jones <git@zmthy.io>
homepage:      http://github.com/zmthy/http-media
bug-reports:   http://github.com/zmthy/http-media/issues
category:      Web
copyright:     (c) 2012-2014 Timothy Jones
build-type:    Simple
cabal-version: >= 1.10
synopsis:      Processing HTTP Content-Type and Accept headers
description:
  This library is intended to be a comprehensive solution to parsing and
  selecting quality-indexed values in HTTP headers. It is capable of parsing
  both media types and language parameters from the Accept and Content header
  families, and can be extended to match against other accept headers as well.
  Selecting the appropriate header value is achieved by comparing a list of
  server options against the quality-indexed values supplied by the client.
  .
  In the following example, the Accept header is parsed and then matched against
  a list of server options to serve the appropriate media using
  'mapAcceptMedia':
  .
  > getHeader >>= maybe send406Error sendResourceWith . mapAcceptMedia
  >     [ ("text/html",        asHtml)
  >     , ("application/json", asJson)
  >     ]
  .
  Similarly, the Content-Type header can be used to produce a parser for request
  bodies based on the given content type with 'mapContentMedia':
  .
  > getContentType >>= maybe send415Error readRequestBodyWith . mapContentMedia
  >     [ ("application/json", parseJson)
  >     , ("text/plain",       parseText)
  >     ]
  .
  The API is agnostic to your choice of server.


library
  hs-source-dirs: src

  ghc-options: -Wall

  default-language: Haskell2010
  default-extensions:
    OverloadedStrings

  exposed-modules:
    Network.HTTP.Media
    Network.HTTP.Media.Accept
    Network.HTTP.Media.Language
    Network.HTTP.Media.MediaType
    Network.HTTP.Media.RenderHeader
  other-modules:
    Network.HTTP.Media.Language.Internal
    Network.HTTP.Media.MediaType.Internal
    Network.HTTP.Media.Quality
    Network.HTTP.Media.Utils
  build-depends:
    base        >= 4.6.0  && < 5.0,
    bytestring  >= 0.10.0 && < 0.11,
    containers  >= 0.5.0  && < 0.6,
    utf8-string >= 0.3.7  && < 0.4

test-suite test-http-media
  type:           detailed-0.9
  hs-source-dirs: src test

  default-language: Haskell2010
  default-extensions:
    OverloadedStrings

  test-module: Tests
  other-modules:
    Network.HTTP.Media
    Network.HTTP.Media.Accept
    Network.HTTP.Media.Accept.Tests
    Network.HTTP.Media.Gen
    Network.HTTP.Media.Language
    Network.HTTP.Media.Language.Gen
    Network.HTTP.Media.Language.Internal
    Network.HTTP.Media.Language.Tests
    Network.HTTP.Media.MediaType
    Network.HTTP.Media.MediaType.Gen
    Network.HTTP.Media.MediaType.Internal
    Network.HTTP.Media.MediaType.Tests
    Network.HTTP.Media.Quality
    Network.HTTP.Media.RenderHeader
    Network.HTTP.Media.Tests
    Network.HTTP.Media.Utils

  ghc-options: -Wall -fhpc

  build-depends:
    base                  >= 4.6.0  && < 5.0,
    bytestring            >= 0.10.0 && < 0.11,
    Cabal                 >= 1.18.0 && < 1.21,
    cabal-test-quickcheck >= 0.1.0  && < 0.2,
    containers            >= 0.5.0  && < 0.6,
    QuickCheck            >= 2.6    && < 2.9,
    utf8-string           >= 0.3.7  && < 0.4

source-repository head
  type:     git
  location: git://github.com/zmthy/http-media.git

