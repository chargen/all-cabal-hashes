-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:af9fa6ca8168b01033179c92e0fbbbfa
    SHA1:f9d3b19e93c1fdfded561568d19d6a525b18e8d5
    SHA256:e19c54fa9400253addf011440d6c291c51a9156c8425bc8527e8954f94a37217
    SHA512:4ed7f90a929f971e841d043ff8784aa89523d637a68bc5aa2edce1638b6a16b591a7aa5625faa7595aeb90dd2c299b3aabde8bb89ab13fa8c21e2fad55bda383
    Skein512_512:8e9fbb1d158aa9ceb088dacdcb76ffd1b0359a5a0f2e468f5eee4d6ada7653c2becece4cd30ebe491d696267e7a0fe96adefa7072c0ed7c47d619b7358d0cf15

x-package-locations:
    https://hackage.haskell.org/package/http-media-0.6.0/http-media-0.6.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/http-media-0.6.0.tar.gz

x-package-size: 14693
-- END Added by all-cabal-hashes-tool

name:          http-media
version:       0.6.0
license:       MIT
license-file:  LICENSE
author:        Timothy Jones
maintainer:    Timothy Jones <git@zmthy.io>
homepage:      https://github.com/zmthy/http-media
bug-reports:   https://github.com/zmthy/http-media/issues
copyright:     (c) 2012-2015 Timothy Jones
category:      Web
build-type:    Simple
cabal-version: >= 1.10
synopsis:      Processing HTTP Content-Type and Accept headers
description:
  This library is intended to be a comprehensive solution to parsing and
  selecting quality-indexed values in HTTP headers. It is capable of parsing
  both media types and language parameters from the Accept and Content header
  families, and can be extended to match against other accept headers as well.
  Selecting the appropriate header value is achieved by comparing a list of
  server options against the quality-indexed values supplied by the client.
  .
  In the following example, the Accept header is parsed and then matched against
  a list of server options to serve the appropriate media using
  'mapAcceptMedia':
  .
  > getHeader >>= maybe send406Error sendResourceWith . mapAcceptMedia
  >     [ ("text/html",        asHtml)
  >     , ("application/json", asJson)
  >     ]
  .
  Similarly, the Content-Type header can be used to produce a parser for request
  bodies based on the given content type with 'mapContentMedia':
  .
  > getContentType >>= maybe send415Error readRequestBodyWith . mapContentMedia
  >     [ ("application/json", parseJson)
  >     , ("text/plain",       parseText)
  >     ]
  .
  The API is agnostic to your choice of server.

library
  hs-source-dirs: src

  ghc-options: -Wall

  default-language: Haskell2010
  default-extensions:
    OverloadedStrings

  exposed-modules:
    Network.HTTP.Media
    Network.HTTP.Media.Accept
    Network.HTTP.Media.Language
    Network.HTTP.Media.MediaType
    Network.HTTP.Media.RenderHeader
  other-modules:
    Network.HTTP.Media.Language.Internal
    Network.HTTP.Media.MediaType.Internal
    Network.HTTP.Media.Quality
    Network.HTTP.Media.Utils
  build-depends:
    base             >= 4.6  && < 5.0,
    bytestring       >= 0.10 && < 0.11,
    case-insensitive >= 1.0  && < 1.3,
    containers       >= 0.5  && < 0.6

test-suite test-http-media
  type:           detailed-0.9
  hs-source-dirs: src test

  default-language: Haskell2010
  default-extensions:
    OverloadedStrings

  test-module: Tests
  other-modules:
    Network.HTTP.Media
    Network.HTTP.Media.Accept
    Network.HTTP.Media.Accept.Tests
    Network.HTTP.Media.Gen
    Network.HTTP.Media.Language
    Network.HTTP.Media.Language.Gen
    Network.HTTP.Media.Language.Internal
    Network.HTTP.Media.Language.Tests
    Network.HTTP.Media.MediaType
    Network.HTTP.Media.MediaType.Gen
    Network.HTTP.Media.MediaType.Internal
    Network.HTTP.Media.MediaType.Tests
    Network.HTTP.Media.Quality
    Network.HTTP.Media.RenderHeader
    Network.HTTP.Media.Tests
    Network.HTTP.Media.Utils

  ghc-options: -Wall -Werror

  build-depends:
    base                  >= 4.6  && < 5.0,
    bytestring            >= 0.10 && < 0.11,
    Cabal                 >= 1.16 && < 1.23,
    cabal-test-quickcheck >= 0.1  && < 0.2,
    case-insensitive      >= 1.0  && < 1.3,
    containers            >= 0.5  && < 0.6,
    QuickCheck            >= 2.6  && < 2.9

source-repository head
  type:     git
  location: git://github.com/zmthy/http-media.git
