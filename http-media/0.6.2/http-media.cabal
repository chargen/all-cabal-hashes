-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:a931840f2446252b0519cbd35a41b070
    SHA1:b30808a664d500075cf5f858c8d6264856d0fbf5
    SHA256:a7ce64b69d1dbb4e7480976e80c451f9773ab02ed44846d743ec720b3b7c7d64
    SHA512:b275749fd2e7ce884729661b8ca3e7a67420c71257d1c2a7b98304d9486d7af6ee9c6be230e3f0c6c7803855b605df4679cfc6d09d2fa211979ee5142265d5a5
    Skein512_512:d9f4e57137cfefdbf0cea726032335fc8571b030ea97e72958b42e6784e0a7308c30da4080d3ee26ac061ff1196a5c599f236e249958ba343904bb35da9275c8

package-locations:
    https://hackage.haskell.org/package/http-media-0.6.2/http-media-0.6.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/http-media-0.6.2.tar.gz

package-size: 14690
-- END Added by all-cabal-hashes-tool

name:          http-media
version:       0.6.2
license:       MIT
license-file:  LICENSE
author:        Timothy Jones
maintainer:    Timothy Jones <git@zmthy.io>
homepage:      https://github.com/zmthy/http-media
bug-reports:   https://github.com/zmthy/http-media/issues
copyright:     (c) 2012-2015 Timothy Jones
category:      Web
build-type:    Simple
cabal-version: >= 1.10
synopsis:      Processing HTTP Content-Type and Accept headers
description:
  This library is intended to be a comprehensive solution to parsing and
  selecting quality-indexed values in HTTP headers. It is capable of parsing
  both media types and language parameters from the Accept and Content header
  families, and can be extended to match against other accept headers as well.
  Selecting the appropriate header value is achieved by comparing a list of
  server options against the quality-indexed values supplied by the client.
  .
  In the following example, the Accept header is parsed and then matched against
  a list of server options to serve the appropriate media using
  'mapAcceptMedia':
  .
  > getHeader >>= maybe send406Error sendResourceWith . mapAcceptMedia
  >     [ ("text/html",        asHtml)
  >     , ("application/json", asJson)
  >     ]
  .
  Similarly, the Content-Type header can be used to produce a parser for request
  bodies based on the given content type with 'mapContentMedia':
  .
  > getContentType >>= maybe send415Error readRequestBodyWith . mapContentMedia
  >     [ ("application/json", parseJson)
  >     , ("text/plain",       parseText)
  >     ]
  .
  The API is agnostic to your choice of server.

library
  default-language: Haskell2010

  ghc-options: -Wall

  hs-source-dirs:
    src

  default-extensions:
    OverloadedStrings

  other-extensions:
    CPP

  exposed-modules:
    Network.HTTP.Media
    Network.HTTP.Media.Accept
    Network.HTTP.Media.Language
    Network.HTTP.Media.MediaType
    Network.HTTP.Media.RenderHeader

  other-modules:
    Network.HTTP.Media.Language.Internal
    Network.HTTP.Media.MediaType.Internal
    Network.HTTP.Media.Quality
    Network.HTTP.Media.Utils

  build-depends:
    base             >= 4.6  && < 5.0,
    bytestring       >= 0.10 && < 0.11,
    case-insensitive >= 1.0  && < 1.3,
    containers       >= 0.5  && < 0.6

test-suite test-http-media
  type:    exitcode-stdio-1.0
  main-is: Test.hs

  default-language: Haskell2010

  ghc-options: -Wall -Werror

  hs-source-dirs:
    src
    test

  default-extensions:
    OverloadedStrings

  other-extensions:
    CPP
    TupleSections

  other-modules:
    Network.HTTP.Media
    Network.HTTP.Media.Accept
    Network.HTTP.Media.Accept.Tests
    Network.HTTP.Media.Gen
    Network.HTTP.Media.Language
    Network.HTTP.Media.Language.Gen
    Network.HTTP.Media.Language.Internal
    Network.HTTP.Media.Language.Tests
    Network.HTTP.Media.MediaType
    Network.HTTP.Media.MediaType.Gen
    Network.HTTP.Media.MediaType.Internal
    Network.HTTP.Media.MediaType.Tests
    Network.HTTP.Media.Quality
    Network.HTTP.Media.RenderHeader
    Network.HTTP.Media.Tests
    Network.HTTP.Media.Utils

  build-depends:
    base                       >= 4.6  && < 5.0,
    bytestring                 >= 0.10 && < 0.11,
    case-insensitive           >= 1.0  && < 1.3,
    containers                 >= 0.5  && < 0.6,
    QuickCheck                 >= 2.6  && < 2.9,
    test-framework             >= 0.8  && < 0.9,
    test-framework-quickcheck2 >= 0.3  && < 0.4

source-repository head
  type:     git
  location: git://github.com/zmthy/http-media.git
