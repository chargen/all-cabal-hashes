-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:6ca11d969cb9ca50451cd2a7179f2a64
    SHA1:a891af2bd0c8b295cdc42aa05d13a65ffd93ddd3
    SHA256:b4c43c9966add4a1fa4264b1635869b4b560a3ac466207211514df637e8b3bbd
    SHA512:005ec6f7a5009e4136790863a127a2eda09858d40ba84c14400170dc7361057f59e52721789f13d1f5898e565979bb69663ed0ce25ba0d9321e5982295468049
    Skein512_512:2f9127e83e54d394ea372a62f9534f91224656de9cd1517a2868587171ed262781226f54458834651abb79613230164a67cebb5ef4ce5ead4c20efb9bf471f23

package-locations:
    https://hackage.haskell.org/package/http-media-0.5.0/http-media-0.5.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/http-media-0.5.0.tar.gz

package-size: 14669
-- END Added by all-cabal-hashes-tool

name:          http-media
version:       0.5.0
license:       MIT
license-file:  LICENSE
author:        Timothy Jones
maintainer:    Timothy Jones <git@zmthy.io>
homepage:      https://github.com/zmthy/http-media
bug-reports:   https://github.com/zmthy/http-media/issues
copyright:     (c) 2012-2015 Timothy Jones
category:      Web
build-type:    Simple
cabal-version: >= 1.10
synopsis:      Processing HTTP Content-Type and Accept headers
description:
  This library is intended to be a comprehensive solution to parsing and
  selecting quality-indexed values in HTTP headers. It is capable of parsing
  both media types and language parameters from the Accept and Content header
  families, and can be extended to match against other accept headers as well.
  Selecting the appropriate header value is achieved by comparing a list of
  server options against the quality-indexed values supplied by the client.
  .
  In the following example, the Accept header is parsed and then matched against
  a list of server options to serve the appropriate media using
  'mapAcceptMedia':
  .
  > getHeader >>= maybe send406Error sendResourceWith . mapAcceptMedia
  >     [ ("text/html",        asHtml)
  >     , ("application/json", asJson)
  >     ]
  .
  Similarly, the Content-Type header can be used to produce a parser for request
  bodies based on the given content type with 'mapContentMedia':
  .
  > getContentType >>= maybe send415Error readRequestBodyWith . mapContentMedia
  >     [ ("application/json", parseJson)
  >     , ("text/plain",       parseText)
  >     ]
  .
  The API is agnostic to your choice of server.

library
  hs-source-dirs: src

  ghc-options: -Wall

  default-language: Haskell2010
  default-extensions:
    OverloadedStrings

  exposed-modules:
    Network.HTTP.Media
    Network.HTTP.Media.Accept
    Network.HTTP.Media.Language
    Network.HTTP.Media.MediaType
    Network.HTTP.Media.RenderHeader
  other-modules:
    Network.HTTP.Media.Language.Internal
    Network.HTTP.Media.MediaType.Internal
    Network.HTTP.Media.Quality
    Network.HTTP.Media.Utils
  build-depends:
    base             >= 4.6  && < 5.0,
    bytestring       >= 0.10 && < 0.11,
    case-insensitive >= 1.0  && < 1.3,
    containers       >= 0.5  && < 0.6

test-suite test-http-media
  type:           detailed-0.9
  hs-source-dirs: src test

  default-language: Haskell2010
  default-extensions:
    OverloadedStrings

  test-module: Tests
  other-modules:
    Network.HTTP.Media
    Network.HTTP.Media.Accept
    Network.HTTP.Media.Accept.Tests
    Network.HTTP.Media.Gen
    Network.HTTP.Media.Language
    Network.HTTP.Media.Language.Gen
    Network.HTTP.Media.Language.Internal
    Network.HTTP.Media.Language.Tests
    Network.HTTP.Media.MediaType
    Network.HTTP.Media.MediaType.Gen
    Network.HTTP.Media.MediaType.Internal
    Network.HTTP.Media.MediaType.Tests
    Network.HTTP.Media.Quality
    Network.HTTP.Media.RenderHeader
    Network.HTTP.Media.Tests
    Network.HTTP.Media.Utils

  ghc-options: -Wall -Werror

  build-depends:
    base                  >= 4.6  && < 5.0,
    bytestring            >= 0.10 && < 0.11,
    Cabal                 >= 1.19 && < 1.23,
    cabal-test-quickcheck >= 0.1  && < 0.2,
    case-insensitive      >= 1.0  && < 1.3,
    containers            >= 0.5  && < 0.6,
    QuickCheck            >= 2.6  && < 2.9

source-repository head
  type:     git
  location: git://github.com/zmthy/http-media.git
