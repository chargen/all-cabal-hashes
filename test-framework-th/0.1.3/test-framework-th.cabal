-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:91f7a583fcc4fba569b7299937012885
    SHA1:51fea00ff9ba18ea4fd1c1af4762f85c4f3f5f19
    SHA256:572a6620ce5a5a615143fd041a8860f99e06bffea1681a4ca239a354adbee743
    SHA512:baa66607b29365a1f83ec0624b8e80ec7c1bda903fb3f879191f832c748122d3e0692cd6c34d2ee41a548ed91f1cdac88f11ba608b41703d33623c4efd63bb70
    Skein512_512:ebace779612a37fb1bc9e3fb8c5d2f2c5283ac76b9784c4700acf5cf25b32d22e0a36fb9f323c2c62554743c345ed8a7b908d7c93c0e5cff642b3a6df7378b55

package-locations:
    https://hackage.haskell.org/package/test-framework-th-0.1.3/test-framework-th-0.1.3.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/test-framework-th-0.1.3.tar.gz

package-size: 2197
-- END Added by all-cabal-hashes-tool

name: test-framework-th
version: 0.1.3
cabal-version: -any
build-type: Simple
license: BSD3
maintainer: Oscar Finnsson
build-depends: base >= 4 && < 5, test-framework, language-haskell-extract, haskell-src-exts, haskell98, regex-posix, template-haskell
stability:
homepage: http://github.com/finnsson/test-generator
package-url:
bug-reports:
synopsis: Automagically generate the HUnit- and Quickcheck-bulk-code using Template Haskell.
description:
   @test-framework-th@ contains two interesting functions: @defaultMainGenerator@ and @testGroupGenerator@.
   .
   @defaultMainGenerator@ will extract all functions beginning with case_ or prop_ in the module and put them in a testGroup.
   .
   > -- file SomeModule.hs
   > ( -# OPTIONS_GHC -fglasgow-exts -XTemplateHaskell #- )
   > module SomeModule where
   > import Test.Framework.TH
   > import Test.Framework
   > import Test.HUnit
   > import Test.Framework.Providers.HUnit
   > import Test.Framework.Providers.QuickCheck2
   >
   > -- observe this line! 
   > main = $(defaultMainGenerator)
   > case_1 = do 1 @=? 1
   > case_2 = do 2 @=? 2
   > prop_reverse xs = reverse (reverse xs) == xs
   >    where types = xs::[Int]
   .
   is the same as
   .
   > -- file SomeModule.hs
   > ( -# OPTIONS_GHC -fglasgow-exts -XTemplateHaskell #- )
   > module SomeModule where
   > import Test.Framework.TH
   > import Test.Framework
   > import Test.HUnit
   > import Test.Framework.Providers.HUnit
   > import Test.Framework.Providers.QuickCheck2
   >
   > -- observe this line! 
   > main =
   >   defaultMain [
   >     testGroup "SomeModule" [ testCase "1" case_1, testCase "2" case_2, testProperty "reverse" prop_reverse]
   >     ]
   > 
   > case_1 = do 1 @=? 1
   > case_2 = do 2 @=? 2
   > prop_reverse xs = reverse (reverse xs) == xs
   >    where types = xs::[Int]
   .
   @testGroupGenerator@ is like @defaultMainGenerator@ but without @defaultMain@. It is useful if you need a function for the testgroup
   (e.g. if you want to be able to call the testgroup from another module).
category: Testing
author: Oscar Finnsson & Emil Nordling
tested-with:
data-files:
data-dir: ""
extra-source-files:
extra-tmp-files:
exposed-modules: Test.Framework.TH 
exposed: True
buildable: True
build-tools:
cpp-options:
cc-options:
ld-options:
pkgconfig-depends:
frameworks:
c-sources:
extensions:
extra-libraries:
extra-lib-dirs:
includes:
install-includes:
include-dirs:
hs-source-dirs: src
other-modules:
ghc-prof-options:
ghc-shared-options:
ghc-options:
hugs-options:
nhc98-options:
jhc-options:
