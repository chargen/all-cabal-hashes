name: test-framework-th
version: 0.2.0
cabal-version: >= 1.6
build-type: Simple
license: BSD3
license-file: BSD3.txt
maintainer: Oscar Finnsson
homepage: http://github.com/finnsson/test-generator
synopsis: Automagically generate the HUnit- and Quickcheck-bulk-code using Template Haskell.
description:
   @test-framework-th@ contains two interesting functions: @defaultMainGenerator@ and @testGroupGenerator@.
   .
   @defaultMainGenerator@ will extract all functions beginning with case_ or prop_ in the module and put them in a testGroup.
   .
   > -- file SomeModule.hs
   > { -# OPTIONS_GHC -fglasgow-exts -XTemplateHaskell #- }
   > module SomeModule where
   > import Test.Framework.TH
   > import Test.Framework
   > import Test.HUnit
   > import Test.Framework.Providers.HUnit
   > import Test.Framework.Providers.QuickCheck2
   >
   > -- observe this line! 
   > main = $(defaultMainGenerator)
   > case_1 = do 1 @=? 1
   > case_2 = do 2 @=? 2
   > prop_reverse xs = reverse (reverse xs) == xs
   >    where types = xs::[Int]
   .
   is the same as
   .
   > -- file SomeModule.hs
   > ( -# OPTIONS_GHC -fglasgow-exts -XTemplateHaskell #- )
   > module SomeModule where
   > import Test.Framework.TH
   > import Test.Framework
   > import Test.HUnit
   > import Test.Framework.Providers.HUnit
   > import Test.Framework.Providers.QuickCheck2
   >
   > -- observe this line! 
   > main =
   >   defaultMain [
   >     testGroup "SomeModule" [ testCase "1" case_1, testCase "2" case_2, testProperty "reverse" prop_reverse]
   >     ]
   > 
   > case_1 = do 1 @=? 1
   > case_2 = do 2 @=? 2
   > prop_reverse xs = reverse (reverse xs) == xs
   >    where types = xs::[Int]
   .
   @testGroupGenerator@ is like @defaultMainGenerator@ but without @defaultMain@. It is useful if you need a function for the testgroup
   (e.g. if you want to be able to call the testgroup from another module).
category: Testing
author: Oscar Finnsson & Emil Nordling

library
  exposed-modules: Test.Framework.TH 
  build-depends: base >= 4 && < 5, test-framework, language-haskell-extract >= 0.2, haskell-src-exts, haskell98, regex-posix, template-haskell
  hs-source-dirs: src


source-repository head
  type:     git
  location: https://github.com/finnsson/test-framework-th/


package-hashes:
    MD5:1ac790e418479e54ff3d53def0f6c643
    SHA1:133e5f9d8d2ec3eb9a09fee6eb02df73ca2df517
    SHA256:0d4667be44e5c46c27bb7b2edab974f0f38d7167ea02032b9f029c11c08aa00d
    SHA512:9a01027886da924b21891a55a68b080b92f95ca7181a74f4e449812ebb048491df6de26008e7f88dd5ebd253b18393effdb8b70d1c382623e9707c79e804d932
    Skein512_512:a3a8541a7fc000c8ed08c41c53eca75f5e7056718b7a1316774a1c29be8ca1314610e3bbaa1995f5b35b699fd8a871a07f157fe31133e98536231adf465613cb

package-locations:
    https://hackage.haskell.org/package/test-framework-th-0.2.0/test-framework-th-0.2.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/test-framework-th-0.2.0.tar.gz

