-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:14021420a279cb74976e341d70122d4b
    SHA1:b1691767690afea5a03a7dbebc0cb04b3a6e4acc
    SHA256:4397db73f17a41342e71e4dd2d12fc6fec248a389a4f3d79680f03f8659b49b5
    SHA512:093d9c374748f50540f231277edd4e96fee8ad40065c3585a67dfbe0dbdc86f9ab4356f5cc658cf911450a57159fafade44bbbbbb1fe27bbedb219f644cca3cd
    Skein512_512:3f86d6de1c10a7815a1754158b688f6a8ba49e8ddfebe03fb5ed6e5abaee831d713bafde0d69092efc114426f10067f302d0ddffaaed62510603a99b884a70ed

package-locations:
    https://hackage.haskell.org/package/rangemin-1.0.3/rangemin-1.0.3.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/rangemin-1.0.3.tar.gz

package-size: 11686
-- END Added by all-cabal-hashes-tool

name:                rangemin
version:             1.0.3
synopsis:            Effectively linear range-min algorithms.
description:	     Rapidly and lazily preprocesses an array or list so that the smallest element in an arbitrary subrange can be found in constant time.
tested-with:	     GHC
category:            Algorithms
license:             BSD3
license-file:	     LICENSE
author:              Louis Wasserman
maintainer:          wasserman.louis@gmail.com
build-Depends:       base, array, containers
build-type:	     Simple
Exposed-modules:     Data.RangeMin
Other-modules:	     Data.RangeMin.Internal.Combinators, Data.RangeMin.Internal.HandyArray, Data.RangeMin.Internal.HandyList, Data.RangeMin.Internal.HandyNumeric, Data.RangeMin.Internal.HandyOrdering
ghc-options:         -O2 -fglasgow-exts -fvia-c -optc-O3
