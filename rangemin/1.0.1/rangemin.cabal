-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:c582518c8263fe6aab975a61a0c8ddcd
    SHA1:ac94d5703fa45aa8871b00ef6454650dd58b7ea6
    SHA256:a4be9eaa91c075e72cb92189fede084e3c42306037a813aec73157d491f0834d
    SHA512:b3a9476214fe0ef28fe1a8ae0c42924a419f795be120534285a770938eca0aae18663363d95eeaaefa412c04e066d93747a43a9c224c31b39153e0c19eaa4bdf
    Skein512_512:334ce35cd27e311faf00344a50ab4ac075dc9f8a4004144ee80b6a585faafe37fca947b7cebd774d8141fc9d35ec64ffdd740a523dbca8b659c5d0634d0a9ac4

package-locations:
    https://hackage.haskell.org/package/rangemin-1.0.1/rangemin-1.0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/rangemin-1.0.1.tar.gz

package-size: 10748
-- END Added by all-cabal-hashes-tool

name:                rangemin
version:             1.0.1
synopsis:            Effectively linear range-min algorithms.
description:	     Rapidly and lazily preprocesses an array or list so that the smallest element in an arbitrary subrange can be found in constant time.
tested-with:	     GHC
category:            Algorithms
license:             BSD3
license-file:	     LICENSE
author:              Louis Wasserman
maintainer:          wasserman.louis@gmail.com
build-Depends:       base, array, containers
build-type:	     Simple
Exposed-modules:     Data.RangeMin
Other-modules:	     Data.RangeMin.Internal.Combinators, Data.RangeMin.Internal.HandyArray, Data.RangeMin.Internal.HandyList, Data.RangeMin.Internal.HandyNumeric, Data.RangeMin.Internal.HandyOrdering
ghc-options:         -O2 -fglasgow-exts -fvia-c -optc-O2
