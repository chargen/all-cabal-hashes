-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:fe875f80160a35e4b2fcc8d35e54e3bd
    SHA1:01913a29a1875055e95885aa78c2cfc902c66beb
    SHA256:fe209820e74f11aec43afd54f04920b721954efe9a0b5659d6d755492ef1e130
    SHA512:da1053ebe24ccebb50d1cb02748442b650e1ff8543f7887119fe9ddf6185a04aaa163e5281ee30d07e0b2a2718b6172b2a7c0268a76d3e16050f687999ba6c8b
    Skein512_512:f6dd85c211dd76076f21a2308e6259cb5d83d1b5f77e223e0165a6bdbbb713cb006ee4e18e568e0696960dc6b879ae6700645f906606e856420a715393e94373

package-locations:
    https://hackage.haskell.org/package/rangemin-1.0.6/rangemin-1.0.6.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/rangemin-1.0.6.tar.gz

package-size: 13178
-- END Added by all-cabal-hashes-tool

name:                rangemin
version:             1.0.6
synopsis:            Effectively linear range-min algorithms.
description:	     Rapidly and lazily preprocesses an array or list so that the smallest element in an arbitrary subrange can be found in constant time.
tested-with:	     GHC
category:            Algorithms
license:             BSD3
license-file:	     LICENSE
author:              Louis Wasserman
maintainer:          wasserman.louis@gmail.com
build-Depends:       base, array, containers
build-type:	     Simple
Exposed-modules:     Data.RangeMin
Other-modules:	     Data.RangeMin.Internal.Combinators, Data.RangeMin.Internal.HandyArray, Data.RangeMin.Internal.HandyList, Data.RangeMin.Internal.HandyNumeric, Data.RangeMin.Internal.HandyOrdering
ghc-options:         -O2 -fglasgow-exts -fvia-c -optc-O3
