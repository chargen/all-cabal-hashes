-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:3b7236d78b543088264971f9cee5d5fe
    SHA1:e510301f124fa4878320b610db1bf6de01d20ee8
    SHA256:4f6f93c300b011478a4dc984fc93f090e1941ce3b34172d700bdc906db4e5fd2
    SHA512:0da88aa204c886b1375fc8c99deb69cc1cde61371bf343b9287a05319aa6ec84dce94cfcc532efaa6e4ba37b99d424f59b496e909a1f0aeb89d2334af144a023
    Skein512_512:0184231fc8fdd7a8846171c2fb75b46711707b90326fc5607ae9e5f6be7c85386ad52b615a71815d66b153161e4369a512ad0652bff1874d2801ca8ea3ead683

x-package-locations:
    https://hackage.haskell.org/package/rangemin-1.0.4/rangemin-1.0.4.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/rangemin-1.0.4.tar.gz

x-package-size: 13229
-- END Added by all-cabal-hashes-tool

name:                rangemin
version:             1.0.4
synopsis:            Effectively linear range-min algorithms.
description:	     Rapidly and lazily preprocesses an array or list so that the smallest element in an arbitrary subrange can be found in constant time.
tested-with:	     GHC
category:            Algorithms
license:             BSD3
license-file:	     LICENSE
author:              Louis Wasserman
maintainer:          wasserman.louis@gmail.com
build-Depends:       base, array, containers
build-type:	     Simple
Exposed-modules:     Data.RangeMin
Other-modules:	     Data.RangeMin.Internal.Combinators, Data.RangeMin.Internal.HandyArray, Data.RangeMin.Internal.HandyList, Data.RangeMin.Internal.HandyNumeric, Data.RangeMin.Internal.HandyOrdering
ghc-options:         -O2 -fglasgow-exts -fvia-c -optc-O3
