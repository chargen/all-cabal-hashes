-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:d3c51e29dfc0875127e851d6a4660d27
    SHA1:23c17f7b3922709223877b75e64904261e4d0cff
    SHA256:6726a29c2e15a63f470bc3056caa011d44a901bcdbcac9e7eb9eb45d62bc1d16
    SHA512:6bb917c711978ce5c57c4107c5cd628c15c4475d49b87f8726e59fa32345f6e9c6844a1e0334e3a57e5b18122a1bc42dcf2bb206e8d8ef756179987edc7195f7
    Skein512_512:98d1265dbe4da5dcfb3108e4452e45ac307cb67f46371688819019c5d1f64f5e1499297b8e7137f253cc1b5edff5ad618545a5e0bf7917579f38cb9437f8a2b4

package-locations:
    https://hackage.haskell.org/package/rangemin-1.0/rangemin-1.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/rangemin-1.0.tar.gz

package-size: 10687
-- END Added by all-cabal-hashes-tool

name:                rangemin
version:             1.0
synopsis:            Effectively linear range-min algorithms.
description:	     Rapidly and lazily preprocesses an array or list so that the smallest element in an arbitrary subrange can be found in constant time.
tested-with:	     GHC
category:            Algorithms
license:             BSD3
license-file:	     LICENSE
author:              Louis Wasserman
maintainer:          wasserman.louis@gmail.com
build-Depends:       base, array, containers
build-type:	     Simple
Exposed-modules:     Data.RangeMin
Other-modules:	     Data.RangeMin.Internal.Combinators, Data.RangeMin.Internal.HandyArray, Data.RangeMin.Internal.HandyList, Data.RangeMin.Internal.HandyNumeric, Data.RangeMin.Internal.HandyOrdering
ghc-options:         -O2 -fglasgow-exts -fvia-c -optc-O2
