name:			multirec
version:		0.3
license:		BSD3
license-file:		LICENSE
author:			Alexey Rodriguez,
                        Stefan Holdermans,
                        Andres Löh,
                        Johan Jeuring
maintainer:		generics@haskell.org
category:		Generics
synopsis:		Generic programming for families of recursive datatypes
homepage:		http://www.cs.uu.nl/wiki/GenericProgramming/Multirec
description:
  Many generic programs require information about the recursive positions
  of a datatype. Examples include the generic fold, generic rewriting or
  the Zipper data structure. Several generic programming systems allow to
  write such functions by viewing datatypes as fixed points of a pattern
  functor. Traditionally, this view has been limited to so-called regular
  datatypes such as lists and binary trees. In particular, families of
  mutually recursive datatypes have been excluded.
  .
  With the multirec library, we provide a mechanism to talk about fixed
  points of families of datatypes that may be mutually recursive. On top
  of this representations, generic functions such as the fold or the Zipper
  can then be defined.
  .
  We expect that the library will be especially interesting for compiler
  writers, because ASTs are typically families of mutually recursive datatypes,
  and with multirec it becomes easy to write generic functions on ASTs.
  .
  The library is based on ideas described in the paper:
  .
  *  Alexey Rodriguez, Stefan Holdermans, Andres Löh, Johan Jeuring.
     /Generic programming with fixed points for mutually recursive datatypes/.
     Technical Report, Universiteit Utrecht
     (<http://www.cs.uu.nl/research/techreps/repo/CS-2008/2008-019.pdf>).
 
stability:		experimental
build-type:		Simple
cabal-version:		>= 1.2.1
tested-with:		GHC == 6.8.3, GHC == 6.10.3
hs-source-dirs:		src
exposed-modules:	Generics.MultiRec

			-- Base
                        Generics.MultiRec.Base
			Generics.MultiRec.Constructor
                        Generics.MultiRec.TH

			-- Generic functions
			Generics.MultiRec.ConNames
			Generics.MultiRec.HFunctor
			Generics.MultiRec.HFix
			Generics.MultiRec.Fold
			Generics.MultiRec.FoldK
			Generics.MultiRec.FoldAlg
			Generics.MultiRec.FoldAlgK
			Generics.MultiRec.Compos
			Generics.MultiRec.Eq
			Generics.MultiRec.Show

			-- Extra
			Generics.MultiRec.TEq

extra-source-files:	examples/AST.hs
                        examples/ASTUse.hs
                        examples/ASTTHUse.hs
			examples/ASTExamples.hs
			examples/Single.hs
			examples/SingleUse.hs
			examples/SingleTHUse.hs
			examples/SingleExamples.hs
			CREDITS
build-depends:		base >= 3.0 && < 5,
                        template-haskell >= 2.2 && < 2.4


package-hashes:
    MD5:e752375e6cf683efec33546040af4210
    SHA1:ee14b7b774bfd5803e43ec2c8d6d8c79a4fb0c64
    SHA256:2d6e08131f9a884de685fc8a004de723e06d8884d30cb3f3d12e068e32b7a5d2
    SHA512:483e7ca196f73ef54f3e9af9c2ff6166c9384f4902a650ce59f9d163ee9debaa13bb5f43df203ae597522ac8509be99881c605255839f11ea32c04dbef2850ef
    Skein512_512:2d436714f66b3a545e120dba152154f0cf72fdd469a1da7dbaaa64738eee5398f474a5dfbe4086e85f05cf786fe3dc4fe1bd508ca6d6379b861e9ca329c8e426

package-locations:
    https://hackage.haskell.org/package/multirec-0.3/multirec-0.3.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/multirec-0.3.tar.gz

package-size: 14184
