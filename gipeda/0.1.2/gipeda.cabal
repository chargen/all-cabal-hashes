-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:c9c090e56d64ee95226c82e98837f894
    SHA1:24ccfa06b55cae71dc5248e3668788347253e3fb
    SHA256:44f9e2941e8b00e85681cbfb1d5977f38969457916e448fc7ed56d101fc16228
    SHA512:ec5169bdd0ce3b36028622a11be3307bec60d61680263270155411de3334b6498c6a80759e3e061e32f0a23995ab82e1dc5a104df67e2f04496387baac56d02d
    Skein512_512:52935c474224c352d1c1bd4270be257ca63d551614bd268b6511688326aa691ca56cbde341721f4d144a3b8934fd0f5461dfe2fb10f924e0513212560392dc1c

x-package-locations:
    https://hackage.haskell.org/package/gipeda-0.1.2/gipeda-0.1.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/gipeda-0.1.2.tar.gz

x-package-size: 23343
-- END Added by all-cabal-hashes-tool

name:                gipeda
version:             0.1.2
category:            Development
synopsis:            Git Performance Dashboard
description:
 Gipeda is a a tool that presents data from your program’s benchmark suite
 (or any other source), with nice tables and shiny graphs.
 .
 So it is up to you whether you have a polling shell script loop, a post-commit
 hook or a elaborate jenkins setup. As long as the performance data ends up in
 the `logs/` directory, gipeda is happy.
 .
 Gipeda produces static pages. In fact, the (single) html file and the
 accompagning JavaScript code is completely static. Giepda just generates a
 large number of json files. This has the advantage of easy deployment: Just put
 gipeda in your webspace of copy the files to some static web hosting and you
 are done. This putts very little load on your server, is cache friendly and has
 no security problems.
 .
 Do you want to see it live? Check out these:
 .
   * Demo page, visualizing fairly boring stuff about gipedia itself:
     <http://nomeata.github.io/gipeda/>
 .
   * GHC’s gipeda installation:
     <https://perf.haskell.org/>
homepage:            https://github.com/nomeata/gipeda
license:             MIT
license-file:        LICENSE
author:              Joachim Breitner
maintainer:          mail@joachim-breitner.de
build-type:          Simple
extra-source-files:
  README.md,
  site/index.html,
  site/js/gipeda.js,
  install-jslibs.sh
cabal-version:       >=1.10

flag old-gitlib
  default: False

executable gipeda
  main-is:
      gipeda.hs

  other-modules:
    BenchmarkSettings,
    BenchmarksInCSV,
    BenchNames,
    GraphReport,
    JsonSettings,
    JsonUtils,
    ParentMap,
    Paths,
    ReadResult,
    ReportTypes,
    RevReport,
    Shake,
    Summary,
    GraphSummaries,
    WithLatestLogs,
    Development.Shake.Gitlib,
    Data.Text.Binary


  build-depends:
      base                 >= 4.6  && <4.9,
      bytestring           >= 0.10 && <0.11,
      containers           >= 0.4  && <0.6,
      directory            >= 1.2  && <1.3,
      filepath             >= 1.3  && <1.5,
      shake                >= 0.13 && <0.16,
      text                 >= 0.11 && <1.3,
      unordered-containers >= 0.2  && <0.3,
      split                >= 0.2  && <0.3,
      vector               >= 0.10 && <0.11,
      cassava              >= 0.4  && <0.5,
      yaml                 >= 0.8  && <0.9,
      aeson                >= 0.7  && <0.10,
      scientific           >= 0.3  && <0.4,
      gitlib               >= 3.1  && <3.2,
      gitlib-libgit2,
      tagged               >= 0.7  && <0.9,
      extra                >= 1    && <1.4

  if flag(old-gitlib)
      build-depends:
        gitlib               < 3.1.0.2,
        -- https://github.com/jwiegley/gitlib/issues/46
        conduit-combinators  < 1
  else
      build-depends:
        gitlib               >= 3.1.0.2

  hs-source-dirs: src

  default-language: Haskell2010

source-repository head
  type:     git
  location: https://github.com/nomeata/gipeda
