Name:                bitwise
Version:             0.1.0.1
Synopsis:            fast multi-dimensional unboxed bit packed Bool arrays
Description:
  Unboxed multidimensional bit packed Bool arrays with fast aggregate
  operations based on lifting Bool operations to bitwise operations.
  .
  There are many other bit packed structures out there, but none met
  all of these requirements:
  .
    (1) unboxed bit packed Bool array,
  .
    (2) multi-dimensional indexing,
  .
    (3) fast (de)serialization, or interoperable with foreign code,
  .
    (4) fast aggregate operations (fold, map, zip).
  .
  Quick tour of the bitwise library:
  .
  [Data.Bits.Bitwise] Lift boolean operations on 'Bool' to bitwise
  operations on 'Data.Bits.Bits'.
  .
  [Data.Array.BitArray] Immutable bit arrays.
  .
  [Data.Array.BitArray.ST] Mutable bit arrays in 'Control.Monad.ST.ST'.
  .
  [Data.Array.BitArray.IO] Mutable bit arrays in 'IO'.
  .
  [Data.Array.BitArray.ByteString] (De)serialization.
  .
  [Codec.Image.PBM] Portable bitmap monochrome 2D image format.
  .
  Very rough performance benchmarks:
  .
    * immutable random access single bit reads:
      @BitArray ix@ is about 40% slower than @UArray ix Bool@,
  .
    * 'Control.Monad.ST.ST' mutable random access single bit reads:
      @STBitArray s ix@ is about the same as @STUArray s ix Bool@,
  .
    * immutable map @Bool -> Bool@:
      @BitArray ix@ is about 85x faster than @UArray ix Bool@,
  .
    * immutable zipWith @Bool -> Bool -> Bool@:
      @BitArray ix@ is about 1300x faster than @UArray ix Bool@.

Homepage:            https://gitorious.org/bitwise
License:             BSD3
License-file:        LICENSE
Author:              Claude Heiland-Allen
Maintainer:          claude@mathr.co.uk
Copyright:           (c) 2012 Claude Heiland-Allen
Category:            Data, Data Structures, Bit Vectors
Build-type:          Simple

Cabal-version:       >= 1.9.2

Extra-source-files:  README hugs98/Compat.hs ghc70/Compat.hs ghc74/Compat.hs

Library
  Exposed-modules:
    Data.Bits.Bitwise
    Data.Array.BitArray
    Data.Array.BitArray.IO
    Data.Array.BitArray.ST
    Data.Array.BitArray.ByteString
    Codec.Image.PBM

  Other-modules:
    Data.Array.BitArray.Internal
    Compat

  Build-depends:
    base >= 2 && < 6

  if (impl(ghc >= 7.4))
    HS-source-dirs: src ghc74
    Build-depends:  bytestring, array

  if (impl(ghc < 7.4))
    HS-source-dirs: src ghc70
    Build-depends:  bytestring, array

  if (impl(hugs))
    HS-source-dirs: src hugs98

  GHC-Options:        -Wall
  GHC-Prof-Options:   -prof -auto-all -caf-all

Test-Suite bitwise-testsuite
  type:    exitcode-stdio-1.0
  main-is: extra/testsuite.hs
  build-depends:
    bitwise == 0.1.0.1,
    base >= 2 && < 6,
    QuickCheck >= 2.4 && < 2.5

Benchmark bitwise-benchmark
  type:   exitcode-stdio-1.0
  main-is: extra/benchmark.hs
  build-depends:
    bitwise == 0.1.0.1,
    base >= 2 && < 6,
    array,
    bytestring,
    criterion >= 0.6 && < 0.7

source-repository head
  type:     git
  location: git://gitorious.org/bitwise/bitwise.git

source-repository this
  type:     git
  location: git://gitorious.org/bitwise/bitwise.git
  tag:      v0.1.0.1


package-hashes:
    MD5:cf9d983e42f9f8fbfb21b424e3b7db53
    SHA1:b63c0f70d79d15d366ead348c2276dd039795eaf
    SHA256:56ab7f701e74402d045fe42a84504614ff68959ae43d0cd15ece65460dff7d4c
    SHA512:9c6dca89d49e999f00780b96878b1d740ce4c3a6a27e6df35786485e2350323ae811c057d0e8de6976028a51b342f5acfbe2f543069ff4c3aec5e1f94b8221ef
    Skein512_512:888f6cc95613b36f3d4ec104e6a9292bff615f7c7bdc979582d9f770783a512e1cbfaa82eb2049ad7485ececafa21e83f9ed232e10ae3ceaaa2bfc0987f83d5f

package-locations:
    https://hackage.haskell.org/package/bitwise-0.1.0.1/bitwise-0.1.0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/bitwise-0.1.0.1.tar.gz

package-size: 16548
