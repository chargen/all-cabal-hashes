-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:8f65c4dc8245b39709974bd2f2f904d7
    SHA1:8a9863c0032eadf67a89db2cd855c35a178f3dcb
    SHA256:0267c1c15bd647432fa24e4d40c6f06dc347bd3b185a05608cb1b5c862b9bd11
    SHA512:b985447544e0de22345f511032e719b4ca7ef416fb7119c108bc765985edee619c7541fd07993f35adf3b3962b252e562aee4c6652e21bc350304ef4f2ff0a9b
    Skein512_512:40f2a0e73dc9f0ffde62f5413fb321771ebc1cfe4f69d381fe3b15e028e48d4fd19735e106d6c7a0737c413d5cd469d5cb966328a9840d5e4a616262e7ac7ebb

x-package-locations:
    https://hackage.haskell.org/package/zeno-0.2.0.0/zeno-0.2.0.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/zeno-0.2.0.0.tar.gz

x-package-size: 44765
-- END Added by all-cabal-hashes-tool

name:             zeno
version:          0.2.0.0
cabal-version:    >= 1.4
author:           William Sonnex
maintainer:       William Sonnex <will@sonnex.name>
synopsis:         An automated proof system for Haskell programs
description:      Zeno is an automated proof system for Haskell program
                  properties; developed at Imperial College London by 
                  William Sonnex, Sophia Drossopoulou and Susan Eisenbach. 
                  It aims to solve the general problem of equality between 
                  two Haskell terms, for any input value.
category:         Theorem Provers
stability:        Experimental
build-type:       Simple
license:          MIT
license-file:     LICENSE
data-files:       Zeno.hs Example.hs

executable zeno
  hs-source-dirs: src
  main-is:        Main.hs
  build-depends:  base >= 4 && < 5, mtl >= 2, containers >= 0.4,
                  random, array, ghc, ghc-paths, directory,
                  text, process, transformers >= 0.2, parallel >= 3
  extensions:     MultiParamTypeClasses, FlexibleContexts, 
                  FlexibleInstances, ScopedTypeVariables, 
                  TypeSynonymInstances, ViewPatterns,
                  OverloadedStrings, TypeFamilies, BangPatterns
  ghc-options:    -funbox-strict-fields -threaded -feager-blackholing
  
  if impl(ghc >= 7)
    ghc-options:  -with-rtsopts="-N"
    
  other-modules:  Zeno.Checker,
                  Zeno.Clause,
                  Zeno.Core,
                  Zeno.DataType,
                  Zeno.Evaluation,
                  Zeno.Expression,
                  Zeno.Flags,
                  Zeno.HaskellParser,
                  Zeno.Id,
                  Zeno.Isabelle,
                  Zeno.Prelude,
                  Zeno.Program,
                  Zeno.Proof,
                  Zeno.Property,
                  Zeno.Reduction,
                  Zeno.Solver,
                  Zeno.Traversing,
                  Zeno.Type,
                  Zeno.Unification,
                  Zeno.Utils,
                  Zeno.Var,
                  Zeno.Isabellable.Class,
                  Zeno.Isabellable.Core,
                  Zeno.Isabellable.Proof
