-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:05f1eefecd943d249fef61690aaeb3b2
    SHA1:ab5213a146c153c4f0dfae0c95ec824cbcde3816
    SHA256:dba8a5cc985efd9c54151345a9a1d5532fafb76f935b64ef3f3b269be2835c0e
    SHA512:2c3ed711497d79368e1a10ccd1ff3c9fb76844efef3cc10206df78bc1528361ffe8fdf19b4ca77a215810f3f04a9617719d629cb9d00dd0a3d5a5defba8af9cc
    Skein512_512:60ae87c24a4e7955e85a5a42bf30468851b54cc6c7d8f41c0f3713b8d76c8bf38cf5efa223c91ff94df71879bd174bccd996e2ba447bcfd13f8397988289af4d

x-package-locations:
    https://hackage.haskell.org/package/zeno-0.2.0.1/zeno-0.2.0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/zeno-0.2.0.1.tar.gz

x-package-size: 44774
-- END Added by all-cabal-hashes-tool

name:             zeno
version:          0.2.0.1
cabal-version:    >= 1.4
author:           William Sonnex
maintainer:       William Sonnex <will@sonnex.name>
synopsis:         An automated proof system for Haskell programs
description:      Zeno is an automated proof system for Haskell program
                  properties; developed at Imperial College London by 
                  William Sonnex, Sophia Drossopoulou and Susan Eisenbach. 
                  It aims to solve the general problem of equality between 
                  two Haskell terms, for any input value.
category:         Theorem Provers
stability:        Experimental
build-type:       Simple
license:          MIT
license-file:     LICENSE
data-files:       Zeno.hs Example.hs

executable zeno
  hs-source-dirs: src
  main-is:        Main.hs
  build-depends:  base >= 4 && < 5, mtl >= 2, containers,
                  random, array, ghc, ghc-paths, directory,
                  text, process, transformers >= 0.2, parallel >= 3
  extensions:     MultiParamTypeClasses, FlexibleContexts, 
                  FlexibleInstances, ScopedTypeVariables, 
                  TypeSynonymInstances, ViewPatterns,
                  OverloadedStrings, TypeFamilies, BangPatterns
  ghc-options:    -funbox-strict-fields -threaded -feager-blackholing
  
  if impl(ghc >= 7)
    ghc-options:  -with-rtsopts="-N"
    
  other-modules:  Zeno.Checker,
                  Zeno.Clause,
                  Zeno.Core,
                  Zeno.DataType,
                  Zeno.Evaluation,
                  Zeno.Expression,
                  Zeno.Flags,
                  Zeno.HaskellParser,
                  Zeno.Id,
                  Zeno.Isabelle,
                  Zeno.Prelude,
                  Zeno.Program,
                  Zeno.Proof,
                  Zeno.Property,
                  Zeno.Reduction,
                  Zeno.Solver,
                  Zeno.Traversing,
                  Zeno.Type,
                  Zeno.Unification,
                  Zeno.Utils,
                  Zeno.Var,
                  Zeno.Isabellable.Class,
                  Zeno.Isabellable.Core,
                  Zeno.Isabellable.Proof
