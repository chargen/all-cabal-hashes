Name:             pooled-io
Version:          0.0.1.1
License:          BSD3
License-File:     LICENSE
Author:           Henning Thielemann <haskell@henning-thielemann.de>
Maintainer:       Henning Thielemann <haskell@henning-thielemann.de>
Homepage:         http://code.haskell.org/~thielema/pooled-io/
Category:         Parallelism
Synopsis:         Run jobs on a limited number of threads and support data dependencies
Description:
  The motivation for this package was to run computations on multiple cores
  that need to write intermediate results to disk.
  The functions restrict the number of simultaneously running jobs
  to a user given number or to the number of capabilities
  the Haskell program was started with,
  i.e. the number after the RTS option @-N@.
  .
  There are some flavors of this functionality:
  .
  * "Control.Concurrent.PooledIO.Independent":
    run independent actions without results in parallel
  .
  * "Control.Concurrent.PooledIO.Final":
    run independent actions with a final result in parallel
  .
  * "Control.Concurrent.PooledIO.InOrder":
    run jobs in parallel with data dependencies like @make -j n@
  .
  Related packages:
  .
  * @lazyio@: interleave IO actions in a single thread
  .
  * @async@: start threads and wait for their results, forward exceptions,
    but do not throttle concurrency with respect to number of available cores
  .
  * @parallel-tasks@
Tested-With:      GHC==7.4.1
Cabal-Version:    >=1.8
Build-Type:       Simple

Flag buildExamples
  description: Build example executables
  default:     False

Source-Repository this
  Tag:         0.0.1.1
  Type:        darcs
  Location:    http://code.haskell.org/~thielema/pooled-io/

Source-Repository head
  Type:        darcs
  Location:    http://code.haskell.org/~thielema/pooled-io/

Library
  Build-Depends:
    transformers >=0.2.2 && <0.5,
    deepseq >=1.3 && <1.5,
    unsafe >=0.0 && <0.1,
    containers >=0.4 && <0.6,
    utility-ht >=0.0.9 && <0.1,
    base >=4 && <5

  GHC-Options:      -Wall
  Hs-Source-Dirs:   src
  Exposed-Modules:
    Control.Concurrent.PooledIO.Independent
    Control.Concurrent.PooledIO.Final
    Control.Concurrent.PooledIO.InOrder
  Other-Modules:
    Control.Concurrent.PooledIO.Monad

Executable pooled-io-demo
  If flag(buildExamples)
    Build-Depends:
      pooled-io,
      base
  Else
    Buildable: False

  GHC-Options:      -Wall -threaded
  Main-Is:          example/Main.hs


package-hashes:
    MD5:684b62e40d4dcd35d8df43d7ad9f71a1
    SHA1:4f0e0f1b8b6f89990816c12a81a9472b062d0204
    SHA256:5999c3d915f98ac4c08685cc53a6943d11adb791be7187c0f1559a4c133148d9
    SHA512:c8939f924a22f4902f7c859aac5682bc6d891faf0f70e22250e45ecde330752882eea45191d5e0008122ec1f30a6c2fb1f79311358aa479fd5f8a845edcddc72
    Skein512_512:622dc15296a886aa6f176cbb4ff67a07b43c1de7feebc0b9c0a19bf28b214541a6df7b4596a188ff5e73696514cb968dc992c3d3058bce3e4c201cdbd0adfaf6

package-locations:
    https://hackage.haskell.org/package/pooled-io-0.0.1.1/pooled-io-0.0.1.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/pooled-io-0.0.1.1.tar.gz

