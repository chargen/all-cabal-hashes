-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:44ebb6f574b81cab6b009363e8d31936
    SHA1:ee33a006192490980f3fe638393855cc2a1e3ace
    SHA256:c58d861b199fcf1b76516c781805ba76b91b4ceeeb415d53d74031c49ce57270
    SHA512:54f188f42bea947672bdb06ec5ba8aa6de5c0fc6518ad89a832712605694b870e73ea7168e58b17814b71c12c21070014ac391fd717964fa5135b3f28f956d15
    Skein512_512:bffb8504590dc39650843923eb317c8e24a556d87185acde1cfafe7177d4cf0484985cc6564b700a84a532367eb33237f9410d3d31d7a01dbc1b311c79d526e1

x-package-locations:
    https://hackage.haskell.org/package/distributed-process-0.5.5/distributed-process-0.5.5.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/distributed-process-0.5.5.tar.gz

x-package-size: 79296
-- END Added by all-cabal-hashes-tool

Name:          distributed-process
Version:       0.5.5
Cabal-Version: >=1.8
Build-Type:    Simple
License:       BSD3
License-File:  LICENSE
Copyright:     Well-Typed LLP, Tweag I/O Limited
Author:        Duncan Coutts, Nicolas Wu, Edsko de Vries
Maintainer:    Facundo Dom√≠nguez <facundo.dominguez@tweag.io>
Stability:     experimental
Homepage:      http://haskell-distributed.github.com/
Bug-Reports:   https://github.com/haskell-distributed/distributed-process/issues
Synopsis:      Cloud Haskell: Erlang-style concurrency in Haskell
Description:   This is an implementation of Cloud Haskell, as described in
               /Towards Haskell in the Cloud/ by Jeff Epstein, Andrew Black,
               and Simon Peyton Jones
               (<http://research.microsoft.com/en-us/um/people/simonpj/papers/parallel/>),
               although some of the details are different. The precise message
               passing semantics are based on /A unified semantics for future Erlang/
               by Hans Svensson, Lars-&#xc5;ke Fredlund and Clara Benac Earle.

               You will probably also want to install a Cloud Haskell backend such
               as distributed-process-simplelocalnet.
Tested-With:   GHC==7.4.2 GHC==7.6.3 GHC==7.8.4 GHC==7.10.1
Category:      Control
extra-source-files: ChangeLog

Source-Repository head
  Type:     git
  Location: https://github.com/haskell-distributed/distributed-process
  SubDir:   distributed-process

flag th
  description: Build with Template Haskell support
  default: True

flag prof
  description: Compiling with profiling enabled
  default: False


flag old-locale
 description: If false then depend on time >= 1.5.
              .
              If true then depend on time < 1.5 together with old-locale.
 default: False

Library
  Build-Depends:     base >= 4.4 && < 5,
                     binary >= 0.6.3 && < 0.8,
                     hashable >= 1.2.0.5 && < 1.3,
                     network-transport >= 0.4.1.0 && < 0.5,
                     stm >= 2.4 && < 2.5,
                     transformers >= 0.2 && < 0.5,
                     mtl >= 2.0 && < 2.4,
                     data-accessor >= 0.2 && < 0.3,
                     bytestring >= 0.9 && < 0.11,
                     random >= 1.0 && < 1.2,
                     ghc-prim >= 0.2 && < 0.5,
                     distributed-static >= 0.2 && < 0.4,
                     rank1dynamic >= 0.1 && < 0.4,
                     syb >= 0.3 && < 0.5
  Exposed-modules:   Control.Distributed.Process,
                     Control.Distributed.Process.Closure,
                     Control.Distributed.Process.Debug,
                     Control.Distributed.Process.Internal.Closure.BuiltIn,
                     Control.Distributed.Process.Internal.Closure.Explicit,
                     Control.Distributed.Process.Internal.CQueue,
                     Control.Distributed.Process.Internal.Messaging,
                     Control.Distributed.Process.Internal.Primitives,
                     Control.Distributed.Process.Internal.Spawn,
                     Control.Distributed.Process.Internal.StrictContainerAccessors,
                     Control.Distributed.Process.Internal.StrictList,
                     Control.Distributed.Process.Internal.StrictMVar,
                     Control.Distributed.Process.Internal.Types,
                     Control.Distributed.Process.Internal.WeakTQueue,
                     Control.Distributed.Process.Management,
                     Control.Distributed.Process.Node,
                     Control.Distributed.Process.Serializable,
                     Control.Distributed.Process.UnsafePrimitives
                     Control.Distributed.Process.Management.Internal.Agent,
                     Control.Distributed.Process.Management.Internal.Bus,
                     Control.Distributed.Process.Management.Internal.Table,
                     Control.Distributed.Process.Management.Internal.Types,
                     Control.Distributed.Process.Management.Internal.Trace.Primitives,
                     Control.Distributed.Process.Management.Internal.Trace.Remote,
                     Control.Distributed.Process.Management.Internal.Trace.Types,
                     Control.Distributed.Process.Management.Internal.Trace.Tracer
  -- Extensions:     -- we use explicit per-file LANGUAGE pragmas
  ghc-options:       -Wall
  HS-Source-Dirs:    src
  if impl(ghc <= 7.4.2)
     Build-Depends:   containers >= 0.4 && < 0.5,
                      deepseq == 1.3.0.0
  else
     Build-Depends:   containers >= 0.4 && < 0.6,
                      deepseq >= 1.3.0.1 && < 1.6
  if flag(old-locale)
     Build-Depends:   time < 1.5, old-locale >= 1.0 && <1.1
  else
     Build-Depends:   time >= 1.5
  if flag(th)
     if impl(ghc <= 7.4.2)
       Build-Depends: template-haskell >= 2.7 && < 2.8
     else
       Build-Depends: template-haskell >= 2.6 && < 2.11
     Exposed-modules: Control.Distributed.Process.Internal.Closure.TH
     CPP-Options:     -DTemplateHaskellSupport

-- Tests are in distributed-process-test package, for convenience.

benchmark distributed-process-throughput
  Type:            exitcode-stdio-1.0        
  Build-Depends:   base >= 4.4 && < 5,
                   distributed-process,
                   network-transport-tcp >= 0.3 && < 0.5,
                   bytestring >= 0.9 && < 0.11,
                   binary >= 0.6.3 && < 0.8
  Main-Is:         benchmarks/Throughput.hs
  ghc-options:     -Wall
  Extensions:      BangPatterns

benchmark distributed-process-latency
  Type:            exitcode-stdio-1.0
  Build-Depends:   base >= 4.4 && < 5,
                   distributed-process,
                   network-transport-tcp >= 0.3 && < 0.5,
                   bytestring >= 0.9 && < 0.11,
                   binary >= 0.6.3 && < 0.8
  Main-Is:         benchmarks/Latency.hs
  ghc-options:     -Wall
  Extensions:      BangPatterns

benchmark distributed-process-channels
  Type:            exitcode-stdio-1.0
  Build-Depends:   base >= 4.4 && < 5,
                   distributed-process,
                   network-transport-tcp >= 0.3 && < 0.5,
                   bytestring >= 0.9 && < 0.11,
                   binary >= 0.6.3 && < 0.8
  Main-Is:         benchmarks/Channels.hs
  ghc-options:     -Wall
  Extensions:      BangPatterns

benchmark distributed-process-spawns
  Type:            exitcode-stdio-1.0
  Build-Depends:   base >= 4.4 && < 5,
                   distributed-process,
                   network-transport-tcp >= 0.3 && < 0.5,
                   bytestring >= 0.9 && < 0.11,
                   binary >= 0.6.3 && < 0.8
  Main-Is:         benchmarks/Spawns.hs
  ghc-options:     -Wall
  Extensions:      BangPatterns

benchmark distributed-process-ring
  Type:            exitcode-stdio-1.0
  Build-Depends:   base >= 4.4 && < 5,
                   distributed-process,
                   network-transport-tcp >= 0.3 && < 0.5,
                   bytestring >= 0.9 && < 0.11,
                   binary >= 0.6.3 && < 0.8
  Main-Is:         benchmarks/ProcessRing.hs
  if flag(prof)
    ghc-options:   -Wall -threaded -prof -auto-all -fno-prof-count-entries -rtsopts
  else
    ghc-options:   -Wall -threaded -O2 -rtsopts
  Extensions:      BangPatterns,
                   ScopedTypeVariables
