-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:c5f7677baf542671d90eefc510423e31
    SHA1:b1944b28e228c03e483edfa5eaa7e5da3c4dbd71
    SHA256:62f9eda6a2dc4a086eeefbb6f7b008d3f6e36bdd325f72858f4d43593d4bfc03
    SHA512:f7bd7ae2eaeb7121cf03a3cd8ff6333d9ba5683efefaf79c11fea368f3a21afcf9f88695510906669e334b007c2329f0a507c169214e5a9828f272ec5afa9cb7
    Skein512_512:4c947e53c05ee820e3ae39eff64c6dd1684d2a7cb4fb11e40d6be9c83b85d99489ae1d9aebccc07daf54a351412026a1c01bc33f8026eea51a34c8667b25a7ce

x-package-locations:
    https://hackage.haskell.org/package/crypto-api-0.13/crypto-api-0.13.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/crypto-api-0.13.tar.gz

x-package-size: 47884
-- END Added by all-cabal-hashes-tool

name:           crypto-api
version:        0.13
license:        BSD3
license-file:   LICENSE
copyright:      Thomas DuBuisson <thomas.dubuisson@gmail.com>
author:         Thomas DuBuisson <thomas.dubuisson@gmail.com>, Francisco Blas Izquierdo Riera (klondike)
maintainer:     Thomas DuBuisson <thomas.dubuisson@gmail.com>
description:    A generic interface for cryptographic operations (hashes, ciphers, randomness).

                Maintainers of hash and cipher implementations are
                encouraged to add instances for the classes defined
                in Crypto.Classes.  Crypto users are similarly
                encouraged to use the interfaces defined in the Classes
                module.

                Any concepts or functions of general use to more than
                one cryptographic algorithm (ex: padding) is within
                scope of this package.
synopsis:       A generic interface for cryptographic operations
category:       Data, Cryptography
homepage:       https://github.com/TomMD/crypto-api
bug-reports:    https://github.com/TomMD/crypto-api
stability:      stable
build-type:     Simple
cabal-version:  >= 1.6
tested-with:    GHC == 7.6.2
extra-source-files:
  cbits/misc.c
  cbits/misc.h

Flag ALL_CPOLYS
  Description: Build all the CMAC polynomes up to 10000 bits instead of just the usual ones
  Default:     False
  Manual:      True

Library
  Build-Depends: base == 4.*,
                 bytestring >= 0.9,
                 cereal >= 0.2,
                 tagged >= 0.1,
                 entropy, transformers
  ghc-options:
  hs-source-dirs:
  exposed-modules: Crypto.Classes, Crypto.Types, Crypto.HMAC,
                   Crypto.Random, Crypto.Padding, Crypto.Modes,
                   Crypto.Util, Crypto.Classes.Exceptions
  other-modules: Crypto.CPoly
  extensions: ForeignFunctionInterface, MultiParamTypeClasses,
              BangPatterns, FunctionalDependencies, FlexibleInstances,
              TypeSynonymInstances
  c-sources: cbits/misc.c
  include-dirs: cbits
  if flag(ALL_CPOLYS)
    Build-Depends: array
    cpp-options: -DALL_CPOLYS


source-repository head
  type:     git
  location: https://github.com/TomMD/crypto-api
