-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:064dddc2b177d5d2fc51694b78a91639
    SHA1:f8387258ca9b3ba395e984c6be1a5af377739fec
    SHA256:33ec873929013e9b0fefeddfdecffd445f1afdf426a3e3c41c5aaefce346bb62
    SHA512:340aefd9f8b24d99866fce26bd3eaba8484be6e15648a2ff1a0a051f8974514a50f809f8d2539c7fe747dbe1b6946a1ecfa8a2966548391e71b498d19e79cc86
    Skein512_512:0679ae4487db3cb51115ce9333e24ee30cf3b78abd1b4dc0c57e530ebc5aeb973dbec6e476fc5e0c7cfff884a08c5968d9d42e0f74f8a63f329b2f3a45088c50

package-locations:
    https://hackage.haskell.org/package/crypto-api-0.12.2.2/crypto-api-0.12.2.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/crypto-api-0.12.2.2.tar.gz

package-size: 45271
-- END Added by all-cabal-hashes-tool

name:           crypto-api
version:        0.12.2.2
license:        BSD3
license-file:   LICENSE
copyright:      Thomas DuBuisson <thomas.dubuisson@gmail.com>
author:         Thomas DuBuisson <thomas.dubuisson@gmail.com>, Francisco Blas Izquierdo Riera (klondike)
maintainer:     Thomas DuBuisson <thomas.dubuisson@gmail.com>
description:    A generic interface for cryptographic operations (hashes, ciphers, randomness).

                Maintainers of hash and cipher implementations are
                encouraged to add instances for the classes defined
                in Crypto.Classes.  Crypto users are similarly
                encouraged to use the interfaces defined in the Classes
                module.

                Any concepts or functions of general use to more than
                one cryptographic algorithm (ex: padding) is within
                scope of this package.
synopsis:       A generic interface for cryptographic operations
category:       Data, Cryptography
homepage:       https://github.com/TomMD/crypto-api
bug-reports:    https://github.com/TomMD/crypto-api
stability:      stable
build-type:     Simple
cabal-version:  >= 1.6
tested-with:    GHC == 7.6.2
extra-source-files:
  cbits/misc.c
  cbits/misc.h

Flag ALL_CPOLYS
  Description: Build all the CMAC polynomes up to 10000 bits instead of just the usual ones
  Default:     False
  Manual:      True

Library
  Build-Depends: base == 4.*,
                 bytestring >= 0.9,
                 cereal >= 0.2,
                 tagged >= 0.1,
                 entropy, transformers
  ghc-options:
  hs-source-dirs:
  exposed-modules: Crypto.Classes, Crypto.Types, Crypto.HMAC,
                   Crypto.Random, Crypto.Padding, Crypto.Modes,
                   Crypto.Util
  other-modules: Crypto.CPoly
  extensions: ForeignFunctionInterface, MultiParamTypeClasses,
              BangPatterns, FunctionalDependencies, FlexibleInstances,
              TypeSynonymInstances
  c-sources: cbits/misc.c
  include-dirs: cbits
  if flag(ALL_CPOLYS)
    Build-Depends: array
    cpp-options: -DALL_CPOLYS


source-repository head
  type:     git
  location: https://github.com/TomMD/crypto-api
