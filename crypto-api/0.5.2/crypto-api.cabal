-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:79fca2c9cf84b897e9bd0ff580148e9e
    SHA1:ce6203ce63943252ad2dad8be0db9b4cf3a11bae
    SHA256:19c8c27019c7f907b6521f6ec1900a2be608b883c396289264b1cc290fef8d46
    SHA512:1803926f4646aa3002ac6c42410aa46f87c2834c84eeba9c8bfa77a51d927388b7ee558988663ae48a5dac51dd5b98fe6f767d79f774b198335d932e5d4fee1d
    Skein512_512:949b3d35b984be67c2c9d9dcf06f2bd708c7d1479b13ed288bed55ab49f61a740f950bc6f0e8b3c2493787e460340d2cccc2766f2622514dbfd00a9f3a28c637

package-locations:
    https://hackage.haskell.org/package/crypto-api-0.5.2/crypto-api-0.5.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/crypto-api-0.5.2.tar.gz

package-size: 3643829
-- END Added by all-cabal-hashes-tool

name:           crypto-api
version:        0.5.2
license:        BSD3
license-file:   LICENSE
copyright:      Thomas DuBuisson <thomas.dubuisson@gmail.com>
author:         Thomas DuBuisson <thomas.dubuisson@gmail.com>
maintainer:     Thomas DuBuisson <thomas.dubuisson@gmail.com>
description:    A generic interface for cryptographic operations,
                platform independent quality RNG, property tests
                and known-answer tests (KATs) for common algorithms,
                and a basic benchmark infrastructure.

                Maintainers of hash and cipher implementations are
                encouraged to add instances for the classes defined
                in Crypto.Classes.  Crypto users are similarly
                encouraged to use the interfaces defined in the Classes
                module.

                Any concepts or functions of general use to more than
                one cryptographic algorithm (ex: padding) is within
                scope of this package.
synopsis:       A generic interface for cryptographic operations
category:       Data, Cryptography
homepage:       http://trac.haskell.org/crypto-api/wiki
bug-reports:    http://trac.haskell.org/crypto-api/report/1
stability:      stable
build-type:     Simple
cabal-version:  >= 1.6
tested-with:    GHC == 6.12.1
data-files:
         Test/KAT_AES/*.txt
       , Test/KAT_SHA/*.txt
       , Test/KAT_HMAC/*.txt
       , Test/KAT_TWOFISH/*.TXT
extra-source-files:
         Test/KAT_AES/*.txt
       , Test/KAT_SHA/*.txt
       , Test/KAT_HMAC/*.txt
       , Test/KAT_TWOFISH/*.TXT


flag tests
  description: Include Test.Crypto module for testing hash and cipher instances
  default: False

flag benchmarks
  description: Include benchmarking tools for cryptographic operations
  default: False


Library
  Build-Depends: base == 4.*,
                 bytestring >= 0.9 && < 0.10,
                 cereal >= 0.2 && < 0.4,
                 tagged >= 0.1 && < 0.3
  ghc-options:   -O2
  hs-source-dirs:
  exposed-modules: Crypto.Classes, Crypto.Types, Crypto.HMAC, Crypto.Modes, System.Crypto.Random, Crypto.Random, Crypto.Padding
  if os(windows)
    cpp-options: -DisWindows
    extra-libraries: advapi32
  if flag(tests)
    exposed-modules: Test.Crypto, Test.AES, Test.SHA, Test.HMAC, Test.ParseNistKATs, Test.TwoFish
    build-depends: QuickCheck >= 2.3 && < 2.4, directory >= 1.0.1.0 && < 1.2, filepath
    other-modules: Paths_crypto_api
  if flag(benchmarks)
    exposed-modules: Benchmark.Crypto
    build-depends: criterion >= 0.5, deepseq
source-repository head
    type:     darcs
    location: http://code.haskell.org/crypto-api
