-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:f2bb4362d862fcc52d7809656f705335
    SHA1:cad589f29f6cd64902848568fdf8c3eb536065b5
    SHA256:68e7516de177783b39c9dea158b96669d0769838a3138d65ec8f2a940ebe908b
    SHA512:e6ac3bed07228c507fe3908547537d0ac495cae7c14b2ec2ee94f4128f7e0b57410a7cc2ca0111e6883499a0d53fb67faddf32f807fb99a5c2863c2d3d3fbe95
    Skein512_512:309bf1cd08dcf46195cc8e10de00b2034f7c54705ff8917a460aedb971ac8e724ee24bb01bfa6300b6e66e64d664b1a756579ab0a6123e9a0ea79448aa495440

x-package-locations:
    https://hackage.haskell.org/package/crypto-api-0.3/crypto-api-0.3.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/crypto-api-0.3.tar.gz

x-package-size: 3648734
-- END Added by all-cabal-hashes-tool

name:           crypto-api
version:        0.3
license:        BSD3
license-file:   LICENSE
copyright:      Thomas DuBuisson <thomas.dubuisson@gmail.com>, Dominic Steinitz (see Data.LargeWord module)
author:         Thomas DuBuisson <thomas.dubuisson@gmail.com>, Dominic Steinitz
maintainer:     Thomas DuBuisson <thomas.dubuisson@gmail.com>
description:    A generic interface for cryptographic operations,
                platform independent quality RNG, property tests
                and known-answer tests (KATs) for common algorithms,
                and a basic benchmark infrastructure.

                Maintainers of hash and cipher implementations are
                encouraged to add instances for the classes defined
                in Crypto.Classes.  Crypto users are similarly
                encouraged to use the interfaces defined in the Classes
                module.

                Any concepts or functions of general use to more than
                one cryptographic algorithm (ex: padding) is within
                scope of this package.
synopsis:       A generic interface for cryptographic operations
category:       Data, Cryptography
homepage:       http://trac.haskell.org/crypto-api/wiki
bug-reports:    http://trac.haskell.org/crypto-api/report/1
stability:      stable
build-type:     Simple
cabal-version:  >= 1.6
tested-with:    GHC == 6.12.1
data-files:
         Test/KAT_AES/*.txt
       , Test/KAT_SHA/*.txt
       , Test/KAT_HMAC/*.txt
       , Test/KAT_TWOFISH/*.TXT
extra-source-files:
         Test/KAT_AES/*.txt
       , Test/KAT_SHA/*.txt
       , Test/KAT_HMAC/*.txt
       , Test/KAT_TWOFISH/*.TXT


flag tests
  description: Include Test.Crypto module for testing hash and cipher instances
  default: False

flag benchmarks
  description: Include benchmarking tools for cryptographic operations
  default: False


Library
  Build-Depends: base == 4.*,
                 bytestring >= 0.9 && < 0.10,
                 cereal >= 0.2 && < 0.4,
                 tagged == 0.1.*
  ghc-options:   -O2
  hs-source-dirs:
  exposed-modules: Crypto.Classes, Crypto.Types, Crypto.HMAC, Data.LargeWord, Crypto.Modes, System.Crypto.Random, Crypto.Random, Crypto.Padding
  if os(windows)
    cpp-options: -DisWindows
    extra-libraries: advapi32
  if flag(tests)
    exposed-modules: Test.Crypto, Test.AES, Test.SHA, Test.HMAC, Test.ParseNistKATs, Test.TwoFish
    build-depends: QuickCheck >= 2.3 && < 2.4, directory >= 1.0.1.0 && < 1.2
    other-modules: Paths_crypto_api
  if flag(benchmarks)
    exposed-modules: Benchmark.Crypto
    build-depends: criterion >= 0.5, deepseq
source-repository head
    type:     darcs
    location: http://code.haskell.org/crypto-api
