-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:5197daa3e560e8bd7fdc8eb2dd3f07b3
    SHA1:0593d42b129711877d5cc6294a55d12aad6463cd
    SHA256:ba1ffffa41d0a4f308b87579d86fd74b20a28ed4d41b7b0afec2162dfe2a2a27
    SHA512:6e75dfd092a1084f119b68f80360d0a7117f3202e3d427e158e4c3a500f8cfdf42e08eb482cd6b3890efadb0405b27212d928671fb28f48f0ca726f5b27e73e1
    Skein512_512:c35c2971c50290268f38157ae80956b11d23bea222b0bcee8ec6afa1c0557aa67b89a1a9d19d502d3974e43cc453e89b7a0f52d747ae32fcde95d80f8be39e83

package-locations:
    https://hackage.haskell.org/package/crypto-api-0.12/crypto-api-0.12.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/crypto-api-0.12.tar.gz

package-size: 45068
-- END Added by all-cabal-hashes-tool

name:           crypto-api
version:        0.12
license:        BSD3
license-file:   LICENSE
copyright:      Thomas DuBuisson <thomas.dubuisson@gmail.com>
author:         Thomas DuBuisson <thomas.dubuisson@gmail.com>, Francisco Blas Izquierdo Riera (klondike)
maintainer:     Thomas DuBuisson <thomas.dubuisson@gmail.com>
description:    A generic interface for cryptographic operations (hashes, ciphers, randomness).

                Maintainers of hash and cipher implementations are
                encouraged to add instances for the classes defined
                in Crypto.Classes.  Crypto users are similarly
                encouraged to use the interfaces defined in the Classes
                module.

                Any concepts or functions of general use to more than
                one cryptographic algorithm (ex: padding) is within
                scope of this package.
synopsis:       A generic interface for cryptographic operations
category:       Data, Cryptography
homepage:       https://github.com/TomMD/crypto-api
bug-reports:    https://github.com/TomMD/crypto-api
stability:      stable
build-type:     Simple
cabal-version:  >= 1.6
tested-with:    GHC == 7.6.2
extra-source-files:
  cbits/misc.c
  cbits/misc.h

Flag ALL_CPOLYS
  Description: Build all the CMAC polynomes up to 10000 bits instead of just the usual ones
  Default:     False
  Manual:      True

Library
  Build-Depends: base == 4.*,
                 bytestring >= 0.9,
                 cereal >= 0.2,
                 tagged >= 0.1,
                 entropy, transformers
  ghc-options:
  hs-source-dirs:
  exposed-modules: Crypto.Classes, Crypto.Types, Crypto.HMAC,
                   Crypto.Random, Crypto.Padding, Crypto.Modes,
                   Crypto.Util
  other-modules: Crypto.CPoly
  extensions: ForeignFunctionInterface, MultiParamTypeClasses,
              BangPatterns, FunctionalDependencies, FlexibleInstances,
              TypeSynonymInstances
  c-sources: cbits/misc.c
  include-dirs: cbits
  if flag(ALL_CPOLYS)
    Build-Depends: array
    cpp-options: -DALL_CPOLYS


source-repository head
  type:     git
  location: https://github.com/TomMD/crypto-api
