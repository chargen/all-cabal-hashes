-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:0137ee044a540e1033a0730917b3a1cd
    SHA1:6718e049bf8ebeafafb81719fe4d4de31139811d
    SHA256:e8c5acdcd1fb35f952aeb758bea18680ff975b77543c5f8472bab980853de04d
    SHA512:e5442a43fd7a739a6393b2a4bb675cd7f35ebd487f26cc5e5e2259ec2830b35bdfae0ddc2e8f73c449a70f809ba2e5fdc2470815ccaf92e40b0b4ba20f6c3448
    Skein512_512:1f2e08ef6c78c374cf76c533615ecdcd940fc84c732c96d225c707e0410ca71ac3d04dddeca09f03bd0dd24cb5bc4309a1e70574f28f6a56afe655726e8dbb7a

package-locations:
    https://hackage.haskell.org/package/crypto-api-0.4.1/crypto-api-0.4.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/crypto-api-0.4.1.tar.gz

package-size: 3645301
-- END Added by all-cabal-hashes-tool

name:           crypto-api
version:        0.4.1
license:        BSD3
license-file:   LICENSE
copyright:      Thomas DuBuisson <thomas.dubuisson@gmail.com>, Dominic Steinitz (see Data.LargeWord module)
author:         Thomas DuBuisson <thomas.dubuisson@gmail.com>, Dominic Steinitz
maintainer:     Thomas DuBuisson <thomas.dubuisson@gmail.com>
description:    A generic interface for cryptographic operations,
                platform independent quality RNG, property tests
                and known-answer tests (KATs) for common algorithms,
                and a basic benchmark infrastructure.

                Maintainers of hash and cipher implementations are
                encouraged to add instances for the classes defined
                in Crypto.Classes.  Crypto users are similarly
                encouraged to use the interfaces defined in the Classes
                module.

                Any concepts or functions of general use to more than
                one cryptographic algorithm (ex: padding) is within
                scope of this package.
synopsis:       A generic interface for cryptographic operations
category:       Data, Cryptography
homepage:       http://trac.haskell.org/crypto-api/wiki
bug-reports:    http://trac.haskell.org/crypto-api/report/1
stability:      stable
build-type:     Simple
cabal-version:  >= 1.6
tested-with:    GHC == 6.12.1
data-files:
         Test/KAT_AES/*.txt
       , Test/KAT_SHA/*.txt
       , Test/KAT_HMAC/*.txt
       , Test/KAT_TWOFISH/*.TXT
extra-source-files:
         Test/KAT_AES/*.txt
       , Test/KAT_SHA/*.txt
       , Test/KAT_HMAC/*.txt
       , Test/KAT_TWOFISH/*.TXT


flag tests
  description: Include Test.Crypto module for testing hash and cipher instances
  default: False

flag benchmarks
  description: Include benchmarking tools for cryptographic operations
  default: False


Library
  Build-Depends: base == 4.*,
                 bytestring >= 0.9 && < 0.10,
                 cereal >= 0.2 && < 0.4,
                 tagged >= 0.1 && < 0.3
  ghc-options:   -O2
  hs-source-dirs:
  exposed-modules: Crypto.Classes, Crypto.Types, Crypto.HMAC, Data.LargeWord, Crypto.Modes, System.Crypto.Random, Crypto.Random, Crypto.Padding
  if os(windows)
    cpp-options: -DisWindows
    extra-libraries: advapi32
  if flag(tests)
    exposed-modules: Test.Crypto, Test.AES, Test.SHA, Test.HMAC, Test.ParseNistKATs, Test.TwoFish
    build-depends: QuickCheck >= 2.3 && < 2.4, directory >= 1.0.1.0 && < 1.2
    other-modules: Paths_crypto_api
  if flag(benchmarks)
    exposed-modules: Benchmark.Crypto
    build-depends: criterion >= 0.5, deepseq
source-repository head
    type:     darcs
    location: http://code.haskell.org/crypto-api
