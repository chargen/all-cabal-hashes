-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:fdfa5688101e35c0bab5115ff1820224
    SHA1:2640c0ba1478a62fd87f42fd3c435391c00a17f5
    SHA256:a50888f9643693a293e33b3fc3b6467d28d107f765a7cf54d63ac6b942daf554
    SHA512:993785063747b675d32b318c7cef675525f02f0f4a05d4154d058f3751dba54ea5d8111acb81c44d810fc8395d2f14f1ec2cb151a5e8e3d10083c9d684779d63
    Skein512_512:9b0c97a2f32772f2468836bedabee5874a8ac862b253e687b9aff1b6d2c420f2c91a35d880d1bd0cc5225c0d66851ed48a9395e701b28815659eb9898e5001d0

package-locations:
    https://hackage.haskell.org/package/crypto-api-0.12.2/crypto-api-0.12.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/crypto-api-0.12.2.tar.gz

package-size: 45234
-- END Added by all-cabal-hashes-tool

name:           crypto-api
version:        0.12.2
license:        BSD3
license-file:   LICENSE
copyright:      Thomas DuBuisson <thomas.dubuisson@gmail.com>
author:         Thomas DuBuisson <thomas.dubuisson@gmail.com>, Francisco Blas Izquierdo Riera (klondike)
maintainer:     Thomas DuBuisson <thomas.dubuisson@gmail.com>
description:    A generic interface for cryptographic operations (hashes, ciphers, randomness).

                Maintainers of hash and cipher implementations are
                encouraged to add instances for the classes defined
                in Crypto.Classes.  Crypto users are similarly
                encouraged to use the interfaces defined in the Classes
                module.

                Any concepts or functions of general use to more than
                one cryptographic algorithm (ex: padding) is within
                scope of this package.
synopsis:       A generic interface for cryptographic operations
category:       Data, Cryptography
homepage:       https://github.com/TomMD/crypto-api
bug-reports:    https://github.com/TomMD/crypto-api
stability:      stable
build-type:     Simple
cabal-version:  >= 1.6
tested-with:    GHC == 7.6.2
extra-source-files:
  cbits/misc.c
  cbits/misc.h

Flag ALL_CPOLYS
  Description: Build all the CMAC polynomes up to 10000 bits instead of just the usual ones
  Default:     False
  Manual:      True

Library
  Build-Depends: base == 4.*,
                 bytestring >= 0.9,
                 cereal >= 0.2,
                 tagged >= 0.1,
                 entropy, transformers
  ghc-options:
  hs-source-dirs:
  exposed-modules: Crypto.Classes, Crypto.Types, Crypto.HMAC,
                   Crypto.Random, Crypto.Padding, Crypto.Modes,
                   Crypto.Util
  other-modules: Crypto.CPoly
  extensions: ForeignFunctionInterface, MultiParamTypeClasses,
              BangPatterns, FunctionalDependencies, FlexibleInstances,
              TypeSynonymInstances
  c-sources: cbits/misc.c
  include-dirs: cbits
  if flag(ALL_CPOLYS)
    Build-Depends: array
    cpp-options: -DALL_CPOLYS


source-repository head
  type:     git
  location: https://github.com/TomMD/crypto-api
