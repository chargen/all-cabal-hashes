-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:89716e973487ff0c7be6aae34edfe487
    SHA1:0baae0e79316cae9f7ab362e1022693231645059
    SHA256:2a6d78487835002942eaca4d388d0b4c99dd5dce3173078501ae5859da3b0bb7
    SHA512:4fd99cc49fcddf83616182aac1f167fa98fa976ccbbe89aca1c25f08d444071d5de75ca8625a876f5a126f6d9323eb836098005945d7917bb54bbc90ea26bbf1
    Skein512_512:bf18623aad14fb151a33e5386c318d646c604dd9b269cd04a2497234aa7d237533f4ae63a308f8a65bcb2e6f5103630cbcb7ea17c0bc03f2e47c433791442e41

package-locations:
    https://hackage.haskell.org/package/idris-0.9.3.1/idris-0.9.3.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/idris-0.9.3.1.tar.gz

package-size: 159225
-- END Added by all-cabal-hashes-tool

Name:           idris
Version:        0.9.3.1
License:        BSD3
License-file:   LICENSE
Author:         Edwin Brady
Maintainer:     Edwin Brady <eb@cs.st-andrews.ac.uk>
Homepage:       http://www.idris-lang.org/

Stability:      Beta
Category:       Compilers/Interpreters, Dependent Types
Synopsis:       Functional Programming Language with Dependent Types
Description:    Idris is a general purpose language with full dependent types.
                It is compiled, with eager evaluation. 
                Dependent types allow types to be predicated on values,
                meaning that some aspects of a program's behaviour can be
                specified precisely in the type. The language is closely 
		related to Epigram and Agda. There is a tutorial at <http://www.idris-lang.org/documentation>.
                Features include:
                .
                * Full dependent types with dependent pattern matching
                .                
                * where clauses, with rule, simple case expressions, 
                  pattern matching let and lambda bindings
                .
                * Type classes, monad comprehensions
                .
                * do notation, idiom brackets, syntactic conveniences for lists, 
                  tuples, dependent pairs
                .
                * Indentation significant syntax, extensible syntax
                .
                * Tactic based theorem proving (influenced by Coq)
                .
                * Cumulative universes
                .
                * Simple foreign function interface (to C)
                .
                * Hugs style interactive environment

Cabal-Version:  >= 1.6
Build-type:     Custom

Data-files:            rts/libidris_rts.a rts/idris_rts.h rts/idris_gc.h
                       rts/idris_stdfgn.h rts/idris_main.c rts/idris_gmp.h
Extra-source-files:    lib/Makefile  lib/*.idr lib/prelude/*.idr lib/network/*.idr
                       lib/control/monad/*.idr lib/language/*.idr
                       tutorial/examples/*.idr
                       rts/*.c rts/*.h rts/Makefile

source-repository head
  type:     git
  location: git://github.com/edwinb/Idris-dev.git 


Executable     idris
               Main-is: Main.hs
               hs-source-dirs: src
               Other-modules: Core.TT, Core.Evaluate, Core.Typecheck, 
                              Core.ProofShell, Core.ProofState, Core.CoreParser, 
                              Core.ShellParser, Core.Unify, Core.Elaborate,
                              Core.CaseTree, Core.Constraints,

                              Idris.AbsSyntax, Idris.AbsSyntaxTree,
                              Idris.Parser, Idris.REPL,
                              Idris.REPLParser, Idris.ElabDecls, Idris.Error,
                              Idris.Delaborate, Idris.Primitives, Idris.Imports,
                              Idris.Compiler, Idris.Prover, Idris.ElabTerm,
                              Idris.Coverage, Idris.IBC, Idris.Unlit,
                              Idris.DataOpts, Idris.Transforms, Idris.DSL, 

                              Util.Pretty,

                              IRTS.Lang, IRTS.LParser, IRTS.Bytecode, IRTS.Simplified,
                              IRTS.CodegenC, IRTS.Defunctionalise, IRTS.Compiler,

                              Paths_idris

               Build-depends:   base>=4 && <5, parsec, mtl, Cabal, haskeline<0.7,
                                containers, process, transformers, filepath, directory,
                                binary, bytestring, pretty
                                
               Extensions:      MultiParamTypeClasses, FunctionalDependencies,
                                FlexibleInstances, TemplateHaskell
               ghc-prof-options: -auto-all -caf-all
               ghc-options: -rtsopts
