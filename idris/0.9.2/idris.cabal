-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:9c2adf0d4e34cf06c3a6dc072ab01927
    SHA1:77a830f2f12760104544cc8f4b38a01192c8b7b5
    SHA256:053ab2ef6caae9c81c1f85d87f059754e020e2a6a8e25856467ccbd9f7808d58
    SHA512:c15e60561458631599c99b8e019c00ad34705110a2631f44333bd6021b6f26e9b6a1d2b9e27ebaaad64a19f692b78a583e87f973d2b40252ba65b5ad1e233aba
    Skein512_512:c2913f9753d299618af6953e50a451a1bea2b2776c9e91bfbc69b3078ccf2a0675c010dd62f33fddb0d45f186da66b0f4aab045f3327b51bb110ac3f5c63c42b

package-locations:
    https://hackage.haskell.org/package/idris-0.9.2/idris-0.9.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/idris-0.9.2.tar.gz

package-size: 121658
-- END Added by all-cabal-hashes-tool

Name:           idris
Version:        0.9.2
License:        BSD3
License-file:   LICENSE
Author:         Edwin Brady
Maintainer:     Edwin Brady <eb@cs.st-andrews.ac.uk>
Homepage:       http://www.idris-lang.org/

Stability:      Beta
Category:       Compilers/Interpreters, Dependent Types
Synopsis:       Functional Programming Language with Dependent Types
Description:    Idris is a general purpose language with full dependent types.
                It is compiled, with eager evaluation. 
                Dependent types allow types to be predicated on values,
                meaning that some aspects of a program's behaviour can be
                specified precisely in the type. The language is closely 
		related to Epigram and Agda. There is a tutorial at <http://www.idris-lang.org/documentation>.
                Features include:
                .
                * Full dependent types with dependent pattern matching
                .                
                * where clauses, with rule, simple case expressions, 
                  pattern matching let and lambda bindings
                .
                * Type classes, monad comprehensions
                .
                * do notation, idiom brackets, syntactic conveniences for lists, 
                  tuples, dependent pairs
                .
                * Indentation significant syntax, extensible syntax
                .
                * Tactic based theorem proving (influenced by Coq)
                .
                * Cumulative universes
                .
                * Simple foreign function interface (to C)
                .
                * Hugs style interactive environment

Cabal-Version:  >= 1.6
Build-type:     Custom

Extra-source-files:    lib/Makefile  lib/*.idr lib/prelude/*.idr lib/network/*.idr
                       lib/control/monad/*.idr tutorial/examples/*.idr

source-repository head
  type:     git
  location: git://github.com/edwinb/Idris-dev.git 


Executable     idris
               Main-is: Main.hs
               hs-source-dirs: src
               Other-modules: Core.TT, Core.Evaluate, Core.Typecheck, 
                              Core.ProofShell, Core.ProofState, Core.CoreParser, 
                              Core.ShellParser, Core.Unify, Core.Elaborate,
                              Core.CaseTree, Core.Constraints,

                              Idris.AbsSyntax, Idris.Parser, Idris.REPL,
                              Idris.REPLParser, Idris.ElabDecls, Idris.Error,
                              Idris.Delaborate, Idris.Primitives, Idris.Imports,
                              Idris.Compiler, Idris.Prover, Idris.ElabTerm,
                              Idris.Coverage, Idris.IBC, Idris.Unlit,
                              Idris.DataOpts, Idris.Transforms, Idris.DSL, 

                              Paths_idris

               Build-depends:   base>=4 && <5, parsec, mtl, Cabal, haskeline,
                                containers, process, transformers, filepath, directory,
                                binary, bytestring, epic>=0.9.3
                                
               Extensions:      MultiParamTypeClasses, FunctionalDependencies,
                                FlexibleInstances, TemplateHaskell
               ghc-prof-options: -auto-all
               ghc-options: -rtsopts
