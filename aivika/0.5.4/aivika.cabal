-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:4f386c889b933900d34ad92114ba8c8c
    SHA1:39aaf56a255509796ea2b809231b863435376ef1
    SHA256:eb76d63ad8e8cfa6065cd55a97942a18f94232cf602b096eafee4e47c611c9e9
    SHA512:bb334399f8f3094b2dfc4a5a4c02ec629489de5097a418e0e10526bec6c7a6e74be9fdd4f5b27152b687c2f8709b3ef8c259b28a365b4cd567089cde59a934fb
    Skein512_512:b01e0e0029bc4cd65c11fb11c7f0c45e85b16190a2ecfb7ebe1e81576891c828356eca17128aaf144a49278f7587b48441666247a41c83b4b7eba5441daaef80

x-package-locations:
    https://hackage.haskell.org/package/aivika-0.5.4/aivika-0.5.4.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/aivika-0.5.4.tar.gz

x-package-size: 307633
-- END Added by all-cabal-hashes-tool

name:            aivika
version:         0.5.4
synopsis:        A multi-paradigm simulation library
description:
    Aivika is a small simulation library that covers many paradigms. 
    It allows integrating a system of ordinary differential equations. 
    Also it can be applied to the Discrete Event Simulation. It supports 
    the event-oriented, process-oriented and activity-oriented paradigms. 
    Aivika also supports the Agent-based Modeling. Finally, it can be applied 
    to System Dynamics. 
    .
    It is possible due to using a very general approach when the basic 
    modeling entity is just a function of simulation time. The paradigms
    are mainly distinguished by sets of the functions that are used to 
    model the activities. These sets are small and do not pretend
    to be comprehensive. Aivika is mostly a proof-of-concept project
    rather than a big library that knows everything.
    .
    The library widely uses monads. The dynamic system is represented as 
    a computation in the Dynamics monad. There is also the Process
    monad to represent the discontinuous processes which can suspend
    at any time and then resume later. There is also the Simulation monad
    that represents a simulation run, in which scope the previous 
    two monads exist. Almost everything is expressed through these monads, 
    including the event handlers, agent handlers and even integrals 
    except for the parameters and statistics that already use the IO monad.
    .
    The PDF documentation is available at 
    <https://github.com/dsorokin/aivika/blob/master/doc/aivika.pdf>.
    Please note that the documentation is outdated and it corresponds to 
    version 0.2 but it can still be helpful.
    .
    Also please look at other two my packages
    <http://hackage.haskell.org/package/aivika-experiment> and
    <http://hackage.haskell.org/package/aivika-experiment-chart>
    that complement the Aivika library.
    .
category:        Simulation
license:         BSD3
license-file:    LICENSE
copyright:       (c) 2009-2013. David Sorokin <david.sorokin@gmail.com>
author:          David Sorokin
maintainer:      David Sorokin <david.sorokin@gmail.com>
homepage:        http://github.com/dsorokin/aivika
cabal-version:   >= 1.2.0
build-type:      Simple
tested-with:     GHC == 7.6.3

extra-source-files:  examples/BassDiffusion.hs
                     examples/ChemicalReaction.hs
                     examples/ChemicalReactionRec.hs
                     examples/FishBank.hs
                     examples/FishBankRec.hs
                     examples/MachRep1.hs
                     examples/MachRep1EventDriven.hs
                     examples/MachRep1TimeDriven.hs
                     examples/MachRep2.hs
                     examples/MachRep3.hs
                     examples/Furnace.hs
                     examples/TimeOut.hs
                     examples/TimeOutInt.hs

data-files:          doc/aivika.pdf

library

    exposed-modules: Simulation.Aivika.Dynamics
                     Simulation.Aivika.Dynamics.Agent
                     Simulation.Aivika.Dynamics.Base
                     Simulation.Aivika.Dynamics.Cont
                     Simulation.Aivika.Dynamics.EventQueue
                     Simulation.Aivika.Dynamics.Parameter
                     Simulation.Aivika.Dynamics.Process
                     Simulation.Aivika.Dynamics.Random
                     Simulation.Aivika.Dynamics.Ref
                     Simulation.Aivika.Dynamics.Resource
                     Simulation.Aivika.Dynamics.Simulation
                     Simulation.Aivika.Dynamics.SystemDynamics
                     Simulation.Aivika.Dynamics.UVar
                     Simulation.Aivika.Dynamics.Var
                     Simulation.Aivika.Dynamics.FIFO
                     Simulation.Aivika.Dynamics.LIFO
                     Simulation.Aivika.Dynamics.Buffer
                     Simulation.Aivika.Dynamics.Signal
                     Simulation.Aivika.Statistics
                     Simulation.Aivika.PriorityQueue
                     Simulation.Aivika.Queue

    other-modules:   Simulation.Aivika.Dynamics.Internal.Dynamics
                     Simulation.Aivika.Dynamics.Internal.Simulation
                     Simulation.Aivika.Dynamics.Internal.Cont
                     Simulation.Aivika.Dynamics.Internal.Process
                     Simulation.Aivika.Dynamics.Internal.Time
                     Simulation.Aivika.Dynamics.Internal.Memo
                     Simulation.Aivika.Dynamics.Internal.Interpolate
                     Simulation.Aivika.Dynamics.Internal.Fold
                     Simulation.Aivika.Dynamics.Internal.Signal
                     Simulation.Aivika.Vector
                     Simulation.Aivika.UVector
                     
    build-depends:   base >= 4.5.0.0 && < 6,
                     mtl >= 2.1.1,
                     array >= 0.3.0.0,
                     containers >= 0.4.0.0,
                     random >= 1.0.0.3

    extensions:      FlexibleContexts,
                     BangPatterns,
                     RecursiveDo
                     
    ghc-options:     -O2
