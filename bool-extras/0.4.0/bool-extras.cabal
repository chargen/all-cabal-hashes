-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:0e2d420317353b2ce184dd80c9c55dd1
    SHA1:9a94e63a963f8e3aebc3975228fad4dd9c9e746c
    SHA256:c1e8cfc6e716f089a7d24fe0cb33e2f4792ff97f81084604139d5902dc201501
    SHA512:c8b4e24f19963da30ff4191d8cdab91b19af7eb0b0ca6bd76e9661cbe19f05c500236943c1da12d300e245416f9d56d9b52b8b11616b997ab62d04b2a78f86cd
    Skein512_512:b7823df31bfe43032334f111433f53022e4f569a4c9c8b4827a34565c84a9fcfd83a5dd571140cc4ebc720a5346d3bfb328982c98657613e97b0d8bdb0c14e1a

package-locations:
    https://hackage.haskell.org/package/bool-extras-0.4.0/bool-extras-0.4.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/bool-extras-0.4.0.tar.gz

package-size: 3073
-- END Added by all-cabal-hashes-tool

name:                bool-extras
version:             0.4.0
synopsis:            A fold function for Bool
description:         The `bool' function allows folding over boolean values.
                     .
                     This is comparable to the `maybe' or `either' functions
                     on their respective types.
                     .
                     The `bool' function is a replacement for the build-in
                     @if then else@-syntax. However, since it is a function, it
                     can be partially applied and passed around to higher order
                     functions, like so:
                     .
                     > ghci> :m + Data.Bool.Extras
                     > ghci> let yesOrNo = bool "no" "yes"
                     > ghci> map yesOrNo [True, False, True]
                     > ["yes", "no", "yes"]
                     .
                     Note that the arguments to `bool' are in the opposite order
                     of the @if then else@-syntax; First the false value, then
                     the true value, and finally the boolean.
license:             BSD3
license-file:        LICENSE
author:              Erik Hesselink,
                     Jeroen Leeuwestein,
                     Tom Lokhorst,
                     Sebastiaan Visser
maintainer:          Tom Lokhorst <tom@lokhorst.eu>
homepage:            http://tom.lokhorst.eu/bool-extras
stability:           Stable
category:            Data
build-type:          Simple
cabal-version:       >= 1.6
extra-source-files:  examples/*.hs

library
  build-depends:       base >= 3 && < 5
  hs-source-dirs:      src
  exposed-modules:     Data.Bool.Extras
