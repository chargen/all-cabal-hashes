-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:8b3c8d48396017d02290a7e5eadf50b7
    SHA1:e85f73384d3329df7faa3c00f84d15989f0ebb31
    SHA256:33510b21b213557c0652340218cbf4cee11f120f639e400ace8b4ba5425a15ed
    SHA512:47a45a3609fb2c5a6e19e8e7c27b9effd9131bc2e63f95e442a88dd0186cce0dc524af13394a6b9fc9893ca2d178867b5fa52a8d018f23d733514eae376d0e8d
    Skein512_512:5f25e7e4b1a50176c22792fbdb6f7ae69fd1801d85e920883fac9a68f97f03e41086524e477c9525eef8f2096f015943ec60de8c25693e02ab342ac36598c2e5

x-package-locations:
    https://hackage.haskell.org/package/markup-1.0.0/markup-1.0.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/markup-1.0.0.tar.gz

x-package-size: 4168
-- END Added by all-cabal-hashes-tool

Name:                   markup
Version:                1.0.0
Author:                 Athan Clark <athan.clark@gmail.com>
Maintainer:             Athan Clark <athan.clark@gmail.com>
License:                MIT
License-File:           LICENSE
Category:               Data, Web
Synopsis:               Abstraction for markup languages
Description:
  This library tries to make things more uniformly controlled when working with
  markup languages in haskell - namely /deployment/ of markup assets.
  .
  Deployment, from this library's perspective, means /how/ something can be
  rendered to markup, yet still achieve the same "result" to the end user (namely
  the DOM).
  .
  We use monad transformers to infer the deployment mechanism for a context of
  markup. The three deployment mechanisms provided include /inline/ (content is
  slapped between markup tags), /hosted/ (entirely external - uses raw text as a
  url), and /local/ (which uses the <hackage.haskell.org/package/urlpath urlpath>
  library to realize what kind of link to create).
  .
  As an example, here is remotely hosted image:
  .
  > image = deploy Image "foo.png" :: HostedMarkupM (Html ())
  >
  > λ> renderMarkup image
  >
  > <img src="foo.png">
  .
  Here is the same example, going relative instead:
  .
  > image :: LocalMarkupM (HtmlT AbsoluteUrl ())
  > image = deploy Image $ "foo.png" <?> ("some","getparam")
  >
  > λ> (runUrlReader $ renderTextT $ renderMarkup image $
  >    ) "example.com"
  >
  > "<img src=\"example.com/foo.png?some=getparam\">"

Cabal-Version:          >= 1.10
Build-Type:             Simple

Library
  Default-Language:     Haskell2010
  HS-Source-Dirs:       src
  GHC-Options:          -Wall
  Exposed-Modules:      Data.Markup
                        Data.Markup.Types
                        Data.Markup.Class
                        Data.Markup.Library
  Build-Depends:        base >= 4 && < 5
                      , transformers
                      , mtl
                      , lucid >= 2.5
                      , blaze-html
                      , blaze-markup
                      , text
                      , urlpath >= 1.0
                      , comonad

Test-Suite spec
  Type:                 exitcode-stdio-1.0
  Default-Language:     Haskell2010
  Hs-Source-Dirs:       src
                      , test
  Ghc-Options:          -Wall
  Main-Is:              Spec.hs
  Build-Depends:        base
                      , hspec

Source-Repository head
  Type:                 git
  Location:             https://github.com/athanclark/markup.git
