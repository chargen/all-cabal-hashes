-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:662a715f436d7625f35c4fcd321a1bff
    SHA1:5c67cde9c716247463247ce5da51997a7575fded
    SHA256:9d99823156240149596f4835cedfc108b9b7f3ad23fda08a1b46f650b4b3a94d
    SHA512:0c946fdf890f3f7306281dfae66b5a2afd39157fb820b954a2321c92ad594400bd03e4abbc6eaaa690f74691790a460a322e890426b914cd14a5c7e82e8c2c37
    Skein512_512:21b9f0e7b867df30415858f1d05e56af8276ede99446ea1a506e94740f27b41024a167a3c07f2ec0f6c015abc2fc0aa0ae69f1b9db85a60e201f26d2a6296337

x-package-locations:
    https://hackage.haskell.org/package/markup-0.0.6/markup-0.0.6.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/markup-0.0.6.tar.gz

x-package-size: 4095
-- END Added by all-cabal-hashes-tool

Name:                   markup
Version:                0.0.6
Author:                 Athan Clark <athan.clark@gmail.com>
Maintainer:             Athan Clark <athan.clark@gmail.com>
License:                MIT
License-File:           LICENSE
Synopsis:               Abstraction for markup languages
Description:
  This library tries to make things more uniformly controlled when working with
  markup languages in haskell - namely /deployment/ of markup assets.
  .
  Deployment, from this library's perspective, means /how/ something can be
  rendered to markup, yet still achieve the same "result" to the end user (namely
  the DOM).
  .
  We use monad transformers to infer the deployment mechanism for a context of
  markup. The three deployment mechanisms provided include /inline/ (content is
  slapped between markup tags), /hosted/ (entirely external - uses raw text as a
  url), and /local/ (which uses the <hackage.haskell.org/package/urlpath urlpath>
  library to realize what kind of link to create).
  .
  As an example, here is remotely hosted image:
  .
  > image = deploy Image "foo.png" :: HostedMarkupM (Html ())
  >
  > λ> renderMarkup image
  >
  > <img src="foo.png">
  .
  Here is the same example, going relative instead:
  .
  > image :: LocalMarkupM (HtmlT AbsoluteUrl ())
  > image = deploy Image $ "foo.png" <?> ("some","getparam")
  >
  > λ> (runUrlReader $ renderTextT $ renderMarkup image $
  >    ) "example.com"
  >
  > "<img src=\"example.com/foo.png?some=getparam\">"

Cabal-Version:          >= 1.10
Build-Type:             Simple

Library
  Default-Language:     Haskell2010
  HS-Source-Dirs:       src
  GHC-Options:          -Wall
  Exposed-Modules:      Data.Markup
                        Data.Markup.Types
                        Data.Markup.Class
                        Data.Markup.Library
  Build-Depends:        base >= 4 && < 5
                      , transformers
                      , mtl
                      , lucid >= 2.5
                      , blaze-html
                      , blaze-markup
                      , text
                      , urlpath >= 0.2

Test-Suite spec
  Type:                 exitcode-stdio-1.0
  Default-Language:     Haskell2010
  Hs-Source-Dirs:       src
                      , test
  Ghc-Options:          -Wall
  Main-Is:              Spec.hs
  Build-Depends:        base
                      , hspec

Source-Repository head
  Type:                 git
  Location:             https://github.com/athanclark/markup.git
