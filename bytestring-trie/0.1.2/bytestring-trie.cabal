-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:de4fc8b5e2948dce980a1a0f3fbfe15d
    SHA1:cfc843a5337df23770d79737ac5ab0f803339bb2
    SHA256:4ca43f90c79f1d8a73d56fd84cf1db5c0dd8d28d4d6e372865c14276062a6dfb
    SHA512:698ef52a9194aaedd2c3700d84cd83e69c37a324b94ff58b98356fc901b43ed25ecb4b21f07ffe9db87fbbbb9dceac25454c2255bbd9873c82a817f7152be10f
    Skein512_512:2786f926bce164ec9367b23bfba661eee8510b3ebf48b7b3e7b3392ea072d4c28cd5f7f213af4189b5478b611907453f9a3fbe97bfcdb6471c87fa391036ad3b

package-locations:
    https://hackage.haskell.org/package/bytestring-trie-0.1.2/bytestring-trie-0.1.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/bytestring-trie-0.1.2.tar.gz

package-size: 12583
-- END Added by all-cabal-hashes-tool

----------------------------------------------------------------
-- wren ng thornton <wren@community.haskell.org>    ~ 2009.01.04
----------------------------------------------------------------

Name:           bytestring-trie
Version:        0.1.2
Cabal-Version:  >= 1.2
Build-Type:     Simple
Stability:      beta
Copyright:      Copyright (c) 2008--2009 wren ng thornton
License:        BSD3
License-File:   LICENSE
Author:         wren ng thornton
Maintainer:     wren@community.haskell.org
Homepage:       http://code.haskell.org/~wren/
Category:       Data, Data Structures
Synopsis:       An efficient finite map from (byte)strings to values.
Description:    An efficient finite map from (byte)strings to values.
                .
                The implementation is based on big-endian patricia
                trees, like "Data.IntMap". We first trie on the
                elements of "Data.ByteString" and then trie on the
                big-endian bit representation of those elements.
                Patricia trees have efficient algorithms for union
                and other merging operations, but they're also quick
                for lookups and insertions.

Library
    Hs-Source-Dirs:  src
    Exposed-Modules: Data.Trie
                   , Data.Trie.Convenience
    Other-Modules:   Data.Trie.BitTwiddle
                   , Data.Trie.ByteStringInternal
    Build-Depends:   base, bytestring, binary

----------------------------------------------------------------
----------------------------------------------------------- fin.
