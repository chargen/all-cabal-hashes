-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:7205ff0bec4f73ef6252b1e90eb990b6
    SHA1:6a4ce312d12a029c55a21c59330753e64b265929
    SHA256:80893de8e7af50e9bf7a8a651c8f412d31756aae0f6f8a82ea971cc889facee1
    SHA512:237d45f8d34a9070c30c939d4d3add50d3af2c9951bd2a3ec3d5bf5c82c1b99dd786203cafef99b56464837c2c9d034bebf818e08a376c0e81ebf37f198df45d
    Skein512_512:4e292a86f563e102b6ead3f85cba212572160f0c8cbb233aa13a617d31167cc5e8605a5e6264c8aa2f94ff297c57d5b1009c5e7ff424f78a9cde63bf02a3be14

package-locations:
    https://hackage.haskell.org/package/bytestring-trie-0.1.4/bytestring-trie-0.1.4.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/bytestring-trie-0.1.4.tar.gz

package-size: 14107
-- END Added by all-cabal-hashes-tool

----------------------------------------------------------------
-- wren ng thornton <wren@community.haskell.org>    ~ 2009.01.04
----------------------------------------------------------------

Name:           bytestring-trie
Version:        0.1.4
Cabal-Version:  >= 1.2
Build-Type:     Simple
Stability:      beta
Copyright:      Copyright (c) 2008--2009 wren ng thornton
License:        BSD3
License-File:   LICENSE
Author:         wren ng thornton
Maintainer:     wren@community.haskell.org
Homepage:       http://code.haskell.org/~wren/
Category:       Data, Data Structures
Synopsis:       An efficient finite map from (byte)strings to values.
Description:    An efficient finite map from (byte)strings to values.
                .
                The implementation is based on big-endian patricia
                trees, like "Data.IntMap". We first trie on the
                elements of "Data.ByteString" and then trie on the
                big-endian bit representation of those elements.
                Patricia trees have efficient algorithms for union
                and other merging operations, but they're also quick
                for lookups and insertions.

Library
    Hs-Source-Dirs:  src
    Exposed-Modules: Data.Trie
                   , Data.Trie.Internal
                   , Data.Trie.Convenience
    Other-Modules:   Data.Trie.BitTwiddle
                   , Data.Trie.ByteStringInternal
    Build-Depends:   base, bytestring, binary

----------------------------------------------------------------
----------------------------------------------------------- fin.
