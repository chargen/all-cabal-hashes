-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:ec6c277e1bb60118f13f6ae28c05faa8
    SHA1:328b21fa29b45fd126ad221cfdba9bb872d5d063
    SHA256:a9147d8b4b40b28297287c721a98fcb2d7f8a975e5cc7f655600a522ba63f588
    SHA512:f07aef58e6bac891d941d7db6f0ee6ef39822efd8b8ed8435aadfadfb6ec1e8ccaef965f90b02017600edffa93957f08c2a19a5eb81a13c85e17aac59d18a131
    Skein512_512:1be5349b3a4f65f3a74747db2cf8b1c1b3cb75fa2323cc3724b2c279bfd98734b66c21abd510ed4fd4a4fc11b17b8e055e4542b6124916746a6786941f9164ce

x-package-locations:
    https://hackage.haskell.org/package/property-list-0.0.0.5/property-list-0.0.0.5.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/property-list-0.0.0.5.tar.gz

x-package-size: 8062
-- END Added by all-cabal-hashes-tool

name:                   property-list
version:                0.0.0.5
stability:              experimental
license:                PublicDomain

cabal-version:          >= 1.2
build-type:             Simple

author:                 James Cook <james.cook@usma.edu>
maintainer:             James Cook <james.cook@usma.edu>
homepage:               http://code.haskell.org/~mokus/property-list

category:               Data, Parsing
synopsis:               XML property list parser
description:            Parser, data type and formatter for Apple's XML property list 1.0 format.

flag data_object_uses_lazy_bytestrings
  default:              True

Library
  hs-source-dirs:       src
  exposed-modules:      Data.PropertyList
  other-modules:        Data.PropertyList.Xml
                        Data.PropertyList.Xml.Dtd
                        Data.PropertyList.Type
                        Data.PropertyList.Parse
                        Data.PropertyList.PropertyListItem
                        Data.PropertyList.Object
  build-depends:        base >= 3 && <5,
                        bytestring,
                        containers, 
                        dataenc,
                        HaXml >= 1.19,
                        mtl,
                        old-locale,
                        pretty,
                        time,
                        
                        template-haskell,
                        th-fold

  if flag(data_object_uses_lazy_bytestrings)
    build-depends:      data-object >= 0.0.2
    cpp-options:        -Ddata_object_uses_lazy_bytestrings
  else
    build-depends:      data-object <  0.0.2
    