-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:d483ca2fab6469add12ebede7f185db9
    SHA1:bb2b3c811d857d6750ff2258328942885fb200d4
    SHA256:b01334510bc88a999246b54e55bc752e4d14a6e52d5ed20a2ac7986bb6a508fa
    SHA512:e6a5efc93436d6c6df00f889fbf62fd3f520a9531312c58e82f9157bb4689fdf4ca1828fa49a44fa1343212f1d01efbcf14baf9286d9af9342a22a1992a2b47d
    Skein512_512:980b3f70ab54c4e3cd40c8811a58c059512b7a7eb22ae7838864d334caca2f5dbd0e275eda7e9b619cfaec4a682269001623f9cded9e02b27d19d73c95303b20

package-locations:
    https://hackage.haskell.org/package/TernaryTrees-0.0.2.1/TernaryTrees-0.0.2.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/TernaryTrees-0.0.2.1.tar.gz

package-size: 4570
-- END Added by all-cabal-hashes-tool

Name:                   TernaryTrees
Version:                0.0.2.1
Category:               Data Structures
Synopsis:               Efficient pure ternary trees
Description:            Ternary trees are an efficient structure often used for storing
			strings for fast lookups. This package implements a generic tree
			for storing lists of Ord instances, and a specialised String
			implementation which is about 30% faster than the generic version.
			<br/>
			An example program is provided what shows how to use the package
			as a dictionary program for spell checking, and how it can be 
			used to serialise data with Don Stewart's Data.Binary package.
			<br/>
			From my testing, using the /usr/shart/dict/words file on my system
			(over 230,000 words), inserting all words, checking they all exist
			in the tree, writing them to a binary file, reading them back in
			and checking the read in result is the same as the original takes
			slightly over 3 seconds using the StringSet. The written file is 
			also slightly smaller than the input (by about 10% for shuffled data,
			and 7% for in order data).
			<br/>
			Future releases (coming very soon) will also have Map structures
			for key/value lookups.
			<br/>
			New n this version: <br/>
			<ul>
			    <li>Added Data.Map.TernaryMap</li>    
			</ul>
License:                BSD3
License-file:           LICENSE.txt
Author:                 Alex Mason
Maintainer:             Alex Mason (irc: Axman6) <axman6@gmail.com>
build-type:             Simple
Cabal-Version:          >= 1.2
Extra-Source-Files:
        Data/Map/TernaryMap.hs
        Data/Set/TernarySet.hs
        Data/Set/StringSet.hs

Library
        Build-Depends:
                base >= 4.0.0.0, base < 5.0.0.0, binary >= 0.5.0.0
        Exposed-modules:
                Data.Set.TernarySet, Data.Set.StringSet, Data.Map.TernaryMap

Executable tdict
  Main-Is:        Main.hs
  Build-Depends:  base