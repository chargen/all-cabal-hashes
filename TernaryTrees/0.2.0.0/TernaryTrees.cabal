-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:bef01ff2a18562451df54a64739c9839
    SHA1:d87a530022170480d8fbe6a7b6c5d426fd107b18
    SHA256:8f48de9dad6d3039451a97216f04984a905c0e2621ee4de97470049df50ca97c
    SHA512:200faeef99e3f7eb5ca437141229af29447886a4ce38a8ac0e23f61ab1ba0252a4a6223c1bd7a2e50df6d01562da28ab990ce8480d375883511854b4cc2cdf0a
    Skein512_512:ca03fbc314fd072dc3a64f498da5965e2d664fcc25523dfa964ab20aec881ed35ea124e938d44145cefd71656f00fbfcfd19c8b7387a242a389a8a6c58e50094

package-locations:
    https://hackage.haskell.org/package/TernaryTrees-0.2.0.0/TernaryTrees-0.2.0.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/TernaryTrees-0.2.0.0.tar.gz

package-size: 6597
-- END Added by all-cabal-hashes-tool

Name:                   TernaryTrees
Version:                0.2.0.0
Category:               Data Structures
Synopsis:               Efficient pure ternary tree Sets and Maps
Description:            Ternary trees are an efficient structure often used for storing
			strings for fast lookups. This package implements a generic tree
			for storing lists of Ord instances, and a specialised String
			implementation which is about 30% faster than the generic version.
			.
			An example program is provided what shows how to use the package
			as a dictionary program for spell checking, and how it can be 
			used to serialise data with Don Stewart's Data.Binary package.
			.
			From my testing, using the \/usr\/share\/dict\/words file on my system
			(over 230,000 words), inserting all words, checking they all exist
			in the tree, writing them to a binary file, reading them back in
			and checking the read in result is the same as the original takes
			slightly over 3 seconds using the StringSet. The written file is 
			also slightly smaller than the input (by over 40% in some cases).
			.
			New in this version:
			.
			* Added a StringMap type, which should be more efficient than using TernaryMap String a
			.
			&#169; 2009 by Alex Mason (<http://random.axman6.com/blog/>). BSD3 license.
			
License:                BSD3
License-file:           LICENSE.txt
Author:                 Alex Mason
Maintainer:             Alex Mason (irc: Axman6) <axman6@gmail.com>
build-type:             Simple
Cabal-Version:          >= 1.2
Extra-Source-Files:
        Data/Map/TernaryMap.hs
        Data/Map/StringMap.hs
        Data/Set/TernarySet.hs
        Data/Set/StringSet.hs
        Data/Set/StringSet/Internal.hs
        Data/Set/TernarySet/Internal.hs
        Data/Map/TernaryMap/Internal.hs

Library
        Build-Depends:
                base >= 4.0.0.0, base < 5.0.0.0, binary >= 0.5.0.0
        Exposed-modules:
                Data.Set.TernarySet, Data.Set.StringSet, Data.Map.TernaryMap, Data.Map.StringMap

Executable tdict
  Main-Is:        Main.hs
  Build-Depends:  base