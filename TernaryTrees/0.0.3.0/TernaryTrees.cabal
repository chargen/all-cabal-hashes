Name:                   TernaryTrees
Version:                0.0.3.0
Category:               Data Structures
Synopsis:               Efficient pure ternary tree Sets and Maps
Description:            Ternary trees are an efficient structure often used for storing
			strings for fast lookups. This package implements a generic tree
			for storing lists of Ord instances, and a specialised String
			implementation which is about 30% faster than the generic version.
			.
			An example program is provided what shows how to use the package
			as a dictionary program for spell checking, and how it can be 
			used to serialise data with Don Stewart's Data.Binary package.
			.
			From my testing, using the /usr/shart/dict/words file on my system
			(over 230,000 words), inserting all words, checking they all exist
			in the tree, writing them to a binary file, reading them back in
			and checking the read in result is the same as the original takes
			slightly over 3 seconds using the StringSet. The written file is 
			also slightly smaller than the input (by about 10% for shuffled data,
			and 7% for in order data).
			.
			New in this version:
			.
			* Added the all important getVal function to Data.Map.TernaryMap.
			* (Hopefully fixed this .cabal file again).
			.
			&#169; 2009 by Alex Mason (<http://axman6.homeip.net/blog/>); BSD3 license.
			
License:                BSD3
License-file:           LICENSE.txt
Author:                 Alex Mason
Maintainer:             Alex Mason (irc: Axman6) <axman6@gmail.com>
build-type:             Simple
Cabal-Version:          >= 1.2
Extra-Source-Files:
        Data/Map/TernaryMap.hs
        Data/Set/TernarySet.hs
        Data/Set/StringSet.hs

Library
        Build-Depends:
                base >= 4.0.0.0, base < 5.0.0.0, binary >= 0.5.0.0
        Exposed-modules:
                Data.Set.TernarySet, Data.Set.StringSet, Data.Map.TernaryMap

Executable tdict
  Main-Is:        Main.hs
  Build-Depends:  base

package-hashes:
    MD5:886461c688cf4d8c777392bd12744f35
    SHA1:746ca43b102b260eb0e2cc6baffa44562e55d0d3
    SHA256:55dc6de245847260b791470227978031479d2f1bb63fa98fcdcfec96b5cdaf14
    SHA512:7907d294e66e680dc01eb42f75f0efa34923af379c0909c86b2d90263c7fe017772deacf93b3630f8ff48fc7ea8f97eccf56e6cd99b27abb0c542d8e43c05637
    Skein512_512:ca7585becc0ee022ff34892929f67fac7da430c6dc82441cbf1343b79daae1dc323da7814d718519d90395fbb5f64c542402e724a1bcf92ef22c12e00c761e68

package-locations:
    https://hackage.haskell.org/package/TernaryTrees-0.0.3.0/TernaryTrees-0.0.3.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/TernaryTrees-0.0.3.0.tar.gz

package-size: 4743
