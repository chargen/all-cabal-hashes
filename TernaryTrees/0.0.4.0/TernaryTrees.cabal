-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:bf85f6ba1a0df1576dde5b9d0c789936
    SHA1:83972d47d594d514e74b1984e08cd87071fb3107
    SHA256:314ef64f9dd42c7b480939f2b10080dc72449cb02203c33f161d95c7c975f37e
    SHA512:87891bc0357c6087137eca12d975e65ebbb2bc1e27cda79aa8b09fc7da676a8f8cc696f849b9e83d9a9bb1c73d2931ee980df545cfbbc7ff202d8cef833ac0fb
    Skein512_512:e0b4d4588ee8ed707209c673d178e138951a52219a35f68f1c9190bada9640e6d5c29d8c78f383cadf9c7aa3fdd613e7aca9ff778dbc984333bdc7f5978614ec

x-package-locations:
    https://hackage.haskell.org/package/TernaryTrees-0.0.4.0/TernaryTrees-0.0.4.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/TernaryTrees-0.0.4.0.tar.gz

x-package-size: 5179
-- END Added by all-cabal-hashes-tool

Name:                   TernaryTrees
Version:                0.0.4.0
Category:               Data Structures
Synopsis:               Efficient pure ternary tree Sets and Maps
Description:            Ternary trees are an efficient structure often used for storing
			strings for fast lookups. This package implements a generic tree
			for storing lists of Ord instances, and a specialised String
			implementation which is about 30% faster than the generic version.
			.
			An example program is provided what shows how to use the package
			as a dictionary program for spell checking, and how it can be 
			used to serialise data with Don Stewart's Data.Binary package.
			.
			From my testing, using the /usr/shart/dict/words file on my system
			(over 230,000 words), inserting all words, checking they all exist
			in the tree, writing them to a binary file, reading them back in
			and checking the read in result is the same as the original takes
			slightly over 3 seconds using the StringSet. The written file is 
			also slightly smaller than the input (by over 40% in some cases).
			.
			New in this version:
			.
			* Made the Data.Binary instances much more efficient by using
			  binary numbers to represent the number of *End nodes.
			.
			.
			&#169; 2009 by Alex Mason (<http://axman6.homeip.net/blog/>). BSD3 license.
			
License:                BSD3
License-file:           LICENSE.txt
Author:                 Alex Mason
Maintainer:             Alex Mason (irc: Axman6) <axman6@gmail.com>
build-type:             Simple
Cabal-Version:          >= 1.2
Extra-Source-Files:
        Data/Map/TernaryMap.hs
        Data/Set/TernarySet.hs
        Data/Set/StringSet.hs

Library
        Build-Depends:
                base >= 4.0.0.0, base < 5.0.0.0, binary >= 0.5.0.0
        Exposed-modules:
                Data.Set.TernarySet, Data.Set.StringSet, Data.Map.TernaryMap

Executable tdict
  Main-Is:        Main.hs
  Build-Depends:  base