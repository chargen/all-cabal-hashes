-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:1b79543120aea819b66e7578c13637e0
    SHA1:0af65aa7521c0910b0dd92cb78e54ec4c3fcd2da
    SHA256:f4acebca43ac8f7dbca52bbe6e2ee934640b9c60890b473f5898f0b06331bca7
    SHA512:ce9ffebb1dda8b774da02a2463f800b2776ea53a6092584504f07f9ec75f3a3f57959a74038800061ef5d3164c40536b0dfc1cdf00f00245b90f015f67d461f8
    Skein512_512:914b691c566b78285016263a4bbe3de7adbe3d536b1c54b9b23b5112a6fa4fe97af0443990c0541ed2261f5c65b5d9b8a6754ff2f13c946cef35d3376ae79e6f

package-locations:
    https://hackage.haskell.org/package/TernaryTrees-0.1.3.4/TernaryTrees-0.1.3.4.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/TernaryTrees-0.1.3.4.tar.gz

package-size: 6056
-- END Added by all-cabal-hashes-tool

Name:                   TernaryTrees
Version:                0.1.3.4
Category:               Data Structures
Synopsis:               Efficient pure ternary tree Sets and Maps
Description:            Ternary trees are an efficient structure often used for storing
			strings for fast lookups. This package implements a generic tree
			for storing lists of Ord instances, and a specialised String
			implementation which is about 30% faster than the generic version.
			.
			An example program is provided what shows how to use the package
			as a dictionary program for spell checking, and how it can be 
			used to serialise data with Don Stewart's Data.Binary package.
			.
			From my testing, using the \/usr\/share\/dict\/words file on my system
			(over 230,000 words), inserting all words, checking they all exist
			in the tree, writing them to a binary file, reading them back in
			and checking the read in result is the same as the original takes
			slightly over 3 seconds using the StringSet. The written file is 
			also slightly smaller than the input (by over 40% in some cases).
			.
			New in this version:
			.
			* Moved datatype definitions into .Internal modules so that
			  testing can be performed, without needing to export their definitions in the
			  main modules.
			.
			* Checked a lot of the source with HLint 1.6 and made some minor changes based on that ((mostly redundant brackets)).
			.
			&#169; 2009 by Alex Mason (<http://random.axman6.com/blog/>). BSD3 license.
			
License:                BSD3
License-file:           LICENSE.txt
Author:                 Alex Mason
Maintainer:             Alex Mason (irc: Axman6) <axman6@gmail.com>
build-type:             Simple
Cabal-Version:          >= 1.2
Extra-Source-Files:
        Data/Map/TernaryMap.hs
        Data/Set/TernarySet.hs
        Data/Set/StringSet.hs
	Data/Set/StringSet/Internal.hs
	Data/Set/TernarySet/Internal.hs
	Data/Map/TernaryMap/Internal.hs

Library
        Build-Depends:
                base >= 4.0.0.0, base < 5.0.0.0, binary >= 0.5.0.0
        Exposed-modules:
                Data.Set.TernarySet, Data.Set.StringSet, Data.Map.TernaryMap

Executable tdict
  Main-Is:        Main.hs
  Build-Depends:  base