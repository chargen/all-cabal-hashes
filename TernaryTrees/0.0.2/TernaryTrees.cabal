-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:f20f73de1f3a7ff27f3bc9a37a173d72
    SHA1:ff1413c9c184d4328b4a35a7c4cd6bfd2ba28fb2
    SHA256:d8533665ce9486f543852b6d846b64b59704b9e246146d077363cb208424dea1
    SHA512:ea1161e078957c2b5115d209e49955496d3e3f0e7fe5cb3c8238d581d668aa7e15718dc15a0da4953ec161a5c006faca70a7c8bb4a8adac7f51f78ee84274c24
    Skein512_512:a0e1b61e706f6ee4c405fe3b6a027274bd4e215271fc9f3bb6dd0d25a7eece5856720022a533f777ba2f9b9add81c478a5c2573d497138d4ee3eae5d8ea57ce2

package-locations:
    https://hackage.haskell.org/package/TernaryTrees-0.0.2/TernaryTrees-0.0.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/TernaryTrees-0.0.2.tar.gz

package-size: 4565
-- END Added by all-cabal-hashes-tool

Name:                   TernaryTrees
Version:                0.0.2
Category:               Datatypes
Synopsis:               Efficient pure ternary trees
Description:            Ternary trees are an efficient structure often used for storing
			strings for fast lookups. This package implements a generic tree
			for storing lists of Ord instances, and a specialised String
			implementation which is about 30% faster than the generic version.
			<br/>
			An example program is provided what shows how to use the package
			as a dictionary program for spell checking, and how it can be 
			used to serialise data with Don Stewart's Data.Binary package.
			<br/>
			From my testing, using the /usr/shart/dict/words file on my system
			(over 230,000 words), inserting all words, checking they all exist
			in the tree, writing them to a binary file, reading them back in
			and checking the read in result is the same as the original takes
			slightly over 3 seconds using the StringSet. The written file is 
			also slightly smaller than the input (by about 10% for shuffled data,
			and 7% for in order data).
			<br/>
			Future releases (coming very soon) will also have Map structures
			for key/value lookups.
			<br/>
			New n this version: <br/>
			<ul>
			    <li>Added Data.Map.TernaryMap</li>    
			</ul>
License:                BSD3
License-file:           LICENSE.txt
Author:                 Alex Mason
Maintainer:             Alex Mason (irc: Axman6) <axman6@gmail.com>
build-type:             Simple
Cabal-Version:          >= 1.2
Extra-Source-Files:
        Data/Map/TernaryMap.hs
        Data/Set/TernarySet.hs
        Data/Set/StringSet.hs

Library
        Build-Depends:
                base >= 4.0.0.0, base < 5.0.0.0, binary >= 0.5.0.0
        Exposed-modules:
                Data.Set.TernarySet, Data.Set.StringSet, Data.Map.TernaryMap

Executable tdict
  Main-Is:        Main.hs
  Build-Depends:  base