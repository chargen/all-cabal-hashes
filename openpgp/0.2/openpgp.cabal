-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:3ccab823bde84b709a9d50aa4746e691
    SHA1:fe9fb865f45b3ede58cbe387594eef0341a3c933
    SHA256:118a98ab3c6d37046f421b29adba426857b25db7202662dfa0cfef4f11ca6f6c
    SHA512:32a32cc75a13fcdffb7634a9ce3254bd238a4e3d712ebb3d373a84040bb2d641378f3b838c639f244f2df72103f4e7d62c3600e624b1e0649d30570f092553bc
    Skein512_512:b1c8ff71f7881f87a00d299e8d1ea2fc97165f4c4e935541b878bb089c11a41489ae62821001b32605ab08c4ac51ca64df164d1c7f8ef2825b6080c8175e8024

x-package-locations:
    https://hackage.haskell.org/package/openpgp-0.2/openpgp-0.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/openpgp-0.2.tar.gz

x-package-size: 8586
-- END Added by all-cabal-hashes-tool

name:            openpgp
version:         0.2
cabal-version:   >= 1.8
license:         OtherLicense
license-file:    COPYING
category:        Data
copyright:       Â© 2011 Stephen Paul Weber
author:          Stephen Paul Weber <singpolyma@singpolyma.net>
maintainer:      Stephen Paul Weber <singpolyma@singpolyma.net>
stability:       experimental
tested-with:     GHC == 7.0.3
synopsis:        Implementation of the OpenPGP message format
homepage:        http://github.com/singpolyma/OpenPGP-Haskell
bug-reports:     http://github.com/singpolyma/OpenPGP-Haskell/issues
build-type:      Simple
description:
        This is an OpenPGP library inspired by my work on OpenPGP libraries in
        Ruby <https://github.com/singpolyma/openpgp>,
        PHP <http://github.com/singpolyma/openpgp-php>,
        and Python <https://github.com/singpolyma/OpenPGP-Python>.
        .
        It defines types to represent OpenPGP messages as a series of packets
        and then defines instances of Data.Binary for each to facilitate
        encoding/decoding.
        .
        There is also a wrapper around <http://hackage.haskell.org/package/Crypto>
        that currently does fingerprint generation, signature generation, and
        signature verification (for RSA keys only).
        .
        It is intended that you use qualified imports with this library.  If importing
        both modules, something like this will do:
        .
        > import qualified Data.OpenPGP as OpenPGP
        > import qualified Data.OpenPGP.Crypto as OpenPGP

extra-source-files:
        README

library
        exposed-modules:
                Data.OpenPGP
                Data.OpenPGP.Crypto

        other-modules:
                Data.BaseConvert

        build-depends:
                base == 4.*,
                containers,
                bytestring,
                utf8-string,
                binary,
                zlib,
                bzlib,
                Crypto

source-repository head
        type:     git
        location: git://github.com/singpolyma/OpenPGP-Haskell.git
