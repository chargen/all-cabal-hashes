-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:74c953320cbee83963e178f07d8d7689
    SHA1:0486ea60a7e63a818599b65baec657a3e9f67c7c
    SHA256:d3b171895698c73da24d7ce97543f725d26637f038de670c0fd4012ca7f95015
    SHA512:d0c9b94e93903d0a3ea5587a4ac4ee5124b5189842070dd11c99182ba7396c982aa8c3eae2f8a1fd5b906f8ab3306e4b49ae9276a837e871278d6fe591bbd816
    Skein512_512:90167d96d172b9f8dcbb0dfffc8be02e7e9eab44e3776dc5fbc09a19ad0434a256702adb541560ff0db82d438b387bfe84fc74a70a83a0527037c71a8348a1d4

x-package-locations:
    https://hackage.haskell.org/package/cipher-aes-0.2.11/cipher-aes-0.2.11.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/cipher-aes-0.2.11.tar.gz

x-package-size: 33939
-- END Added by all-cabal-hashes-tool

Name:                cipher-aes
Version:             0.2.11
Description:
    Fast AES cipher implementation with advanced mode of operations.
    .
    The modes of operations available are ECB (Electronic code book),
    CBC (Cipher block chaining), CTR (Counter), XTS (XEX with ciphertext stealing),
    GCM (Galois Counter Mode).
    .
    The AES implementation uses AES-NI when available (on x86 and x86-64 architecture),
    but fallback gracefully to a software C implementation.
    .
    The software implementation uses S-Boxes, which might suffer for cache timing issues.
    However do notes that most other known software implementations, including very popular
    one (openssl, gnutls) also uses similar implementation. If it matters for your
    case, you should make sure you have AES-NI available, or you'll need to use a different
    implementation.
    .
License:             BSD3
License-file:        LICENSE
Copyright:           Vincent Hanquez <vincent@snarc.org>
Author:              Vincent Hanquez <vincent@snarc.org>
Maintainer:          Vincent Hanquez <vincent@snarc.org>
Synopsis:            Fast AES cipher implementation with advanced mode of operations
Category:            Cryptography
Build-Type:          Simple
Homepage:            https://github.com/vincenthz/hs-cipher-aes
Cabal-Version:       >=1.8
Extra-Source-Files:  Tests/*.hs
                     cbits/*.h
                     cbits/aes_x86ni_impl.c

Flag support_aesni
  Description:       allow compilation with AESNI on system and architecture that supports it
  Default:           True

Library
  Build-Depends:     base >= 4 && < 5
                   , bytestring
                   , byteable
                   , securemem >= 0.1.2
                   , crypto-cipher-types >= 0.0.6 && < 0.1
  Exposed-modules:   Crypto.Cipher.AES
  ghc-options:       -Wall -optc-O3 -fno-cse -fwarn-tabs
  C-sources:         cbits/aes_generic.c
                     cbits/aes.c
                     cbits/gf.c
                     cbits/cpu.c
  if flag(support_aesni) && (os(linux) || os(freebsd)) && (arch(i386) || arch(x86_64))
    CC-options:      -mssse3 -maes -mpclmul -DWITH_AESNI
    C-sources:       cbits/aes_x86ni.c

Test-Suite test-cipher-aes
  type:              exitcode-stdio-1.0
  hs-source-dirs:    Tests
  Main-Is:           Tests.hs
  Build-depends:     base >= 4 && < 5
                   , cipher-aes
                   , crypto-cipher-types >= 0.0.6
                   , crypto-cipher-tests >= 0.0.8
                   , bytestring
                   , byteable
                   , QuickCheck >= 2
                   , test-framework >= 0.3.3
                   , test-framework-quickcheck2 >= 0.2.9

Benchmark bench-cipher-aes
  hs-source-dirs:    Benchmarks
  Main-Is:           Benchmarks.hs
  type:              exitcode-stdio-1.0
  Build-depends:     base >= 4 && < 5
                   , bytestring
                   , cipher-aes
                   , crypto-cipher-types >= 0.0.6
                   , crypto-cipher-benchmarks >= 0.0.4
                   , criterion
                   , mtl

source-repository head
  type:     git
  location: https://github.com/vincenthz/hs-cipher-aes
