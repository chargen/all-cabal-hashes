-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:e7dbf5563257192e73818fa0716554eb
    SHA1:8db04a8eaf6a3f100eca48928e5a3d1f2194c27a
    SHA256:d8b42c13db9af14e75bc1c20144655f706f2099ad2bdb703e169abbd0867d494
    SHA512:cd026fdb0d08f82770ef67c150ca35c3989aa8831fbbac2086a38f01eddec660ad382511b2516a987dd103124332b5d05c04dff23992f76f81600ca64bc3ed87
    Skein512_512:28f45f9a0c44ecfa86a300316874329dcb7b55c0b62860644d3fbadd873fd57fbec68dc1e7b82270147156a1707d16dc8c355c0f1352c5422609ba3ce6caa1f0

package-locations:
    https://hackage.haskell.org/package/infix-0.1.1/infix-0.1.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/infix-0.1.1.tar.gz

package-size: 12987
-- END Added by all-cabal-hashes-tool

name:                infix
version:             0.1.1
synopsis:            Infix expression re-parsing (for HsParser library)
description:         The Haskell parser does not consider the fixity
                     of operators when parsing infix applications.
                     All infix applications are thus parsed as
                     if the operators were all left associative with
                     the same precedence.

                     This module contains code for re-parsing infix
                     applications taking into account the fixity of
                     operators.

                     The important algorithm is the well known
                     operator precedence parsing algorithm. See
                     comments in the code for more detailed
                     information.
category:            Parsing
license:             GPL
license-file:        LICENSE
author:              Bernie Pope <bjpop@csse.unimelb.edu.au>
maintainer:          None
homepage:            http://www.cs.mu.oz.au/~bjpop/code.html

build-depends:       base, containers, haskell-src
build-type:          Simple
tested-with:         GHC==6.5

exposed-modules:     Language.Haskell.Infix

ghc-options:         -O2 -Wall -optl-Wl,-s
ghc-prof-options:    -prof -auto-all
