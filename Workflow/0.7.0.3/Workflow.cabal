name: Workflow
version: 0.7.0.3
cabal-version: >= 1.6
build-type: Simple
license: BSD3
license-file: LICENSE
maintainer: agocorona@gmail.com
stability: experimental
bug-reports: agocorona@gmail.com
synopsis:    Monad transformer for thread state persistence and workflow patterns
description: Transparent support  for interruptible computations. A workflow can be seen as a persistent thread that executes a
             monadic computation. Therefore, it can be used in very time consuming computations such are CPU intensive calculations
             or procedures that are most of the time waiting for the action of a process or an user, that are prone to comunication
             failures, timeouts or shutdowns. It also can be used if you like to restart your
             program at the point where the user left it last time.
             .
             The computation can be restarted at the interrupted point thanks to its logged state in permanent storage.
             Besides that, the package also provides other services associated to workflows
             .
             This release inprove the logging/recovery process in workflows with with many steps
             .
             See "Control.Workflow" for details

category: Control, Workflow

author: Alberto GÃ³mez Corona

data-dir: ""

extra-source-files: Demos/Fact.hs Demos/Inspect.hs
                    Demos/docAprobal.hs Demos/pr.hs Demos/sequence.hs



library
    build-depends: MonadCatchIO-mtl -any, RefSerialize ==0.3.0.* ,
                   TCache -any && <1.0, base >=4 && <5, binary -any, bytestring -any,
                   containers -any, directory -any, extensible-exceptions -any,
                    mtl -any, old-time -any, stm >2

    exposed-modules: Control.Workflow
                     Control.Workflow.Configuration
                     Control.Workflow.Patterns
    exposed: True
    buildable: True
    extensions: OverlappingInstances UndecidableInstances
                MultiParamTypeClasses ExistentialQuantification
                TypeSynonymInstances RecordWildCards DeriveDataTypeable
    hs-source-dirs: .
    other-modules: Control.Workflow.Stat Control.Workflow.Stat
                   Control.Workflow.IDynamic

source-repository head
  type : git
  location: https://github.com/agocorona/Workflow


package-hashes:
    MD5:540c540d3282b87c889d4ce42d4c548a
    SHA1:0edf7bb348d1740ae58922e8f1a72c5041822691
    SHA256:923d30aaa66b3af7f1d68df887ed3fbf4bd261bae879e1175cd116ca9c0c50a6
    SHA512:72d321b26afbc3d855b2ce9dc62780b92de48a4330076a078021fd405721c1272f467da529d07de13548b4a1b8b77e0f8f1ca6748f5ec98536af1ccbcddd095c
    Skein512_512:87c7cd1cf635f1f9045bd3276e866fb930a312488eb485d9da422608de31b5e8c99c7fafa353aa3173bcbe9a28b38e4cf89198812758bbe3cdcf18d257760a3c

package-locations:
    https://hackage.haskell.org/package/Workflow-0.7.0.3/Workflow-0.7.0.3.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/Workflow-0.7.0.3.tar.gz

