name: Workflow
version: 0.7.0.2
cabal-version: >= 1.6
build-type: Simple
license: BSD3
license-file: LICENSE
maintainer: agocorona@gmail.com
stability: experimental
bug-reports: agocorona@gmail.com
synopsis:    Monad transformer for thread state persistence and workflow patterns
description: Transparent support  for interruptible computations. A workflow can be seen as a persistent thread that executes a
             monadic computation. Therefore, it can be used in very time consuming computations such are CPU intensive calculations
             or procedures that are most of the time waiting for the action of a process or an user, that are prone to comunication
             failures, timeouts or shutdowns. It also can be used if you like to restart your
             program at the point where the user left it last time.
             .
             The computation can be restarted at the interrupted point thanks to its logged state in permanent storage.
             Besides that, the package also provides other services associated to workflows
             .
             This release inprove the logging/recovery process in workflows with with many steps
             .
             See "Control.Workflow" for details

category: Control, Workflow

author: Alberto GÃ³mez Corona

data-dir: ""

extra-source-files: Demos/Fact.hs Demos/Inspect.hs
                    Demos/docAprobal.hs Demos/pr.hs Demos/sequence.hs



library
    build-depends: MonadCatchIO-mtl -any, RefSerialize >=0.2.8 && <0.3,
                   TCache -any && <1.0, base >=4 && <5, binary -any, bytestring -any,
                   containers -any, directory -any, extensible-exceptions -any,
                    mtl -any, old-time -any, stm >2

    exposed-modules: Control.Workflow
                     Control.Workflow.Configuration
                     Control.Workflow.Patterns
    exposed: True
    buildable: True
    extensions: OverlappingInstances UndecidableInstances
                MultiParamTypeClasses ExistentialQuantification
                TypeSynonymInstances RecordWildCards DeriveDataTypeable
    hs-source-dirs: .
    other-modules: Control.Workflow.Stat Control.Workflow.Stat
                   Control.Workflow.IDynamic

source-repository head
  type : git
  location: https://github.com/agocorona/Workflow


package-hashes:
    MD5:d0062953f34d9dfe5245251064d604a3
    SHA1:1782efa408d6b85b61eb9c90f66bfc3c32869450
    SHA256:8e31490c2a2568015b296635a4de47aae0557512b3e6c4f36282d774386f0a09
    SHA512:7f40d0ebcea730fc6a5fbc2f250ad6b0dbddb059a6817cd8d63a1fed58d84ad6faf907f50354f927c5ebdb2118d8763023a662b9399e2915c319e836d085070d
    Skein512_512:82d66e17582b6d8b2df6886dc382b21340795ee0ab2f126578e4d1a74d61f90831fc4a42993926ae8df29c6326ef88277a1d26f883f262e0061b4b263330f2dd

package-locations:
    https://hackage.haskell.org/package/Workflow-0.7.0.2/Workflow-0.7.0.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/Workflow-0.7.0.2.tar.gz

