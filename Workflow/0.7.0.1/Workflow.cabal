-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:e8448c2c7fb50004a56fa21244bd5d97
    SHA1:36b94aac2b50a5f5dfcb095c4447d1ea4d5d7605
    SHA256:091695e825b862930bc68de4277a615a169343c89687193015b3e8de79231565
    SHA512:91c2d155310dac52fa3537530852a28585d0a0aa67f938ef6cc32b7121a600d914a9a97a528a8e20946d0a9bdeded0232857b762475ee2eae4e9f30691a25614
    Skein512_512:881f5e5b5c2e25f70436486c9f946d2590ccaeb1c9abb0a956974c03ba391b15fa65a90eb50dc8012a2dd54b2ea20da30d87cafae09cd82bae31781a787d0d8d

package-locations:
    https://hackage.haskell.org/package/Workflow-0.7.0.1/Workflow-0.7.0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/Workflow-0.7.0.1.tar.gz

package-size: 27550
-- END Added by all-cabal-hashes-tool

name: Workflow
version: 0.7.0.1
cabal-version: >= 1.6
build-type: Simple
license: BSD3
license-file: LICENSE
maintainer: agocorona@gmail.com
stability: experimental
bug-reports: agocorona@gmail.com
synopsis:    Monadic transformer for persistence in threads. and workflow patterns
description: Transparent support  for interruptible computations. A workflow can be seen as a persistent thread that executes any
             monadic computation. Therefore, it can be used in very time consuming computations such are CPU intensive calculations
             or procedures that are most of the time waiting for the action of a process or an user, that are prone to comunication
             failures, timeouts or shutdowns. It also can be used if you like to restart your
             program at the point where the user left it last time.
             .
             The computation can be restarted at the interrupted point thanks to its logged state in permanent storage.
             Besides that, the package also provides other services associated to workflows
             .
             This release inprove the logging/recovery process in workflows with with many steps
             .
             See "Control.Workflow" for details

category: Control, Workflow

author: Alberto GÃ³mez Corona

data-dir: ""

extra-source-files: Demos/Fact.hs Demos/Inspect.hs
                    Demos/docAprobal.hs Demos/pr.hs Demos/sequence.hs



library
    build-depends: MonadCatchIO-mtl -any, RefSerialize >=0.2.8 && <0.3,
                   TCache -any && <1.0, base >=4 && <5, binary -any, bytestring -any,
                   containers -any, directory -any, extensible-exceptions -any,
                    mtl -any, old-time -any, stm >2

    exposed-modules: Control.Workflow
                     Control.Workflow.Configuration
                     Control.Workflow.Patterns
    exposed: True
    buildable: True
    extensions: OverlappingInstances UndecidableInstances
                MultiParamTypeClasses ExistentialQuantification
                TypeSynonymInstances RecordWildCards DeriveDataTypeable
    hs-source-dirs: .
    other-modules: Control.Workflow.Stat Control.Workflow.Stat
                   Control.Workflow.IDynamic

source-repository head
  type : git
  location: https://github.com/agocorona/Workflow
