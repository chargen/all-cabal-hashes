-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:465fa64c63e8ed2195d514e242e31816
    SHA1:4f9359d5f09082ff10a2fb283179fc9bb6f93ac0
    SHA256:8fe28a0613d30d4701788e6ae8c9d31b15f2e091c0569598199296265fc5e298
    SHA512:7592e225e725d73d71e5e3baca55d6ea6d6aca3023cc5215edb84dc1ead5b25d9f6c250b8ea6681d42ebb3845e56940453abd86f60e63e8a9e7a1ab295057b26
    Skein512_512:56f986a522c73d1798942c73c566a4b8c96829c136de518cddb3bf5e9aa35e883d14c3e189238086494f3a4fd204413b3c429d3f0faba4b5963bc5681031e14f

package-locations:
    https://hackage.haskell.org/package/Workflow-0.7.0.6/Workflow-0.7.0.6.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/Workflow-0.7.0.6.tar.gz

package-size: 27130
-- END Added by all-cabal-hashes-tool

name: Workflow
version: 0.7.0.6
cabal-version: >= 1.6
build-type: Simple
license: BSD3
license-file: LICENSE
maintainer: agocorona@gmail.com
stability: experimental
bug-reports: agocorona@gmail.com
synopsis:    Monad transformer for thread state persistence and workflow patterns
description: Transparent support  for interruptible computations. A workflow can be seen as a persistent thread that executes a
             monadic computation. Therefore, it can be used in very time consuming computations such are CPU intensive calculations
             or procedures that are most of the time waiting for the action of a process or an user, that are prone to comunication
             failures, timeouts or shutdowns. It also can be used if you like to restart your
             program at the point where the user left it last time.
             .
             The computation can be restarted at the interrupted point thanks to its logged state in permanent storage.
             Besides that, the package also provides other services associated to workflows
             .
             This release inprove the logging/recovery process in workflows with with many steps
             .
             See "Control.Workflow" for details

category: Control, Workflow

author: Alberto GÃ³mez Corona

data-dir: ""

extra-source-files: Demos/Fact.hs Demos/Inspect.hs
                    Demos/docAprobal.hs Demos/pr.hs Demos/sequence.hs



library
    build-depends: MonadCatchIO-mtl -any, RefSerialize ==0.3.0.* ,
                   TCache -any && <1.0, base >=4 && <5, binary -any, bytestring -any,
                   containers -any, directory -any, extensible-exceptions -any,
                    mtl -any, old-time -any, stm >2

    exposed-modules: Control.Workflow
                     Control.Workflow.Configuration
                     Control.Workflow.Patterns
    exposed: True
    buildable: True
    extensions: OverlappingInstances UndecidableInstances
                MultiParamTypeClasses ExistentialQuantification
                TypeSynonymInstances RecordWildCards DeriveDataTypeable
    hs-source-dirs: .
    other-modules: Control.Workflow.Stat Control.Workflow.Stat
                   Control.Workflow.IDynamic

source-repository head
  type : git
  location: https://github.com/agocorona/Workflow
