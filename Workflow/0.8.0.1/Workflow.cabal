name: Workflow
version: 0.8.0.1
cabal-version: >= 1.6
build-type: Simple
license: BSD3
license-file: LICENSE
maintainer: agocorona@gmail.com
stability: experimental
bug-reports: agocorona@gmail.com
synopsis:    Monad transformer for thread state persistence and workflow patterns
description: Transparent support  for interruptible computations. A workflow can be seen as a persistent thread that executes a
             monadic computation. Therefore, it can be used in very time consuming computations such are CPU intensive calculations
             or procedures that are most of the time waiting for the action of a process or an user, that are prone to comunication
             failures, timeouts or shutdowns. It also can be used if you like to restart your
             program at the point where the user left it last time.
             .
             The computation can be restarted at the interrupted point thanks to its logged state in permanent storage.
             Besides that, the package also provides other services associated to workflows
             .
             This release inprove the logging/recovery process in workflows with with many steps
             .
             See "Control.Workflow" for details

category: Control, Workflow

author: Alberto GÃ³mez Corona

data-dir: ""

extra-source-files: Demos/Fact.hs Demos/Inspect.hs
                    Demos/docAprobal.hs  Demos/sequence.hs



library
    build-depends: MonadCatchIO-mtl -any, RefSerialize ==0.3.1.* ,
                   TCache -any && <1.0, base >=4 && <5, binary -any, bytestring -any,
                   containers -any, directory -any, extensible-exceptions -any,
                    mtl -any, old-time -any, stm >2, vector -any

    exposed-modules: Control.Workflow
                     Control.Workflow.Configuration
                     Control.Workflow.Patterns
    exposed: True
    buildable: True
    extensions: OverlappingInstances UndecidableInstances
                MultiParamTypeClasses ExistentialQuantification
                TypeSynonymInstances RecordWildCards DeriveDataTypeable
    hs-source-dirs: .
    other-modules: Control.Workflow.Stat


source-repository head
  type : git
  location: https://github.com/agocorona/Workflow


package-hashes:
    MD5:b25aa9897fd62a4f5f72393e534c4a1a
    SHA1:4dab1cece26caa4ceabd33a698e8fad64f23b6f6
    SHA256:54224c13b3513203ed1e72455bce50c8b650670111f9d1fda50ee274596c862d
    SHA512:1882dc150f97f1e9dfc599b3ed25fdfe99861f834de36bdb5d43f835a859be7e71916203f2d8c54b2e3ad96d2a202136ad069904a9e157c97b3c4b824ce54df4
    Skein512_512:eeedcd90c1822c1da6d280eaee98097e1c139b87abace833c71d08805f82ea24ccfe2a4b258930a885ff6a5e96da5313b066a15d0f739b2f91270a9c0f23c729

package-locations:
    https://hackage.haskell.org/package/Workflow-0.8.0.1/Workflow-0.8.0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/Workflow-0.8.0.1.tar.gz

