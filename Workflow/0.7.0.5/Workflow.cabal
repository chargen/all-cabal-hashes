name: Workflow
version: 0.7.0.5
cabal-version: >= 1.6
build-type: Simple
license: BSD3
license-file: LICENSE
maintainer: agocorona@gmail.com
stability: experimental
bug-reports: agocorona@gmail.com
synopsis:    Monad transformer for thread state persistence and workflow patterns
description: Transparent support  for interruptible computations. A workflow can be seen as a persistent thread that executes a
             monadic computation. Therefore, it can be used in very time consuming computations such are CPU intensive calculations
             or procedures that are most of the time waiting for the action of a process or an user, that are prone to comunication
             failures, timeouts or shutdowns. It also can be used if you like to restart your
             program at the point where the user left it last time.
             .
             The computation can be restarted at the interrupted point thanks to its logged state in permanent storage.
             Besides that, the package also provides other services associated to workflows
             .
             This release inprove the logging/recovery process in workflows with with many steps
             .
             See "Control.Workflow" for details

category: Control, Workflow

author: Alberto GÃ³mez Corona

data-dir: ""

extra-source-files: Demos/Fact.hs Demos/Inspect.hs
                    Demos/docAprobal.hs Demos/pr.hs Demos/sequence.hs



library
    build-depends: MonadCatchIO-mtl -any, RefSerialize ==0.3.0.* ,
                   TCache -any && <1.0, base >=4 && <5, binary -any, bytestring -any,
                   containers -any, directory -any, extensible-exceptions -any,
                    mtl -any, old-time -any, stm >2

    exposed-modules: Control.Workflow
                     Control.Workflow.Configuration
                     Control.Workflow.Patterns
    exposed: True
    buildable: True
    extensions: OverlappingInstances UndecidableInstances
                MultiParamTypeClasses ExistentialQuantification
                TypeSynonymInstances RecordWildCards DeriveDataTypeable
    hs-source-dirs: .
    other-modules: Control.Workflow.Stat Control.Workflow.Stat
                   Control.Workflow.IDynamic

source-repository head
  type : git
  location: https://github.com/agocorona/Workflow


package-hashes:
    MD5:c6f747b8b7bf73e9d18d1615a1a73e9a
    SHA1:6c3727a4ad6f2c14de10e4c8b85c114f6a2b9a29
    SHA256:3b0e2570f9a9e5259a60d51850df1773cd1b03e962f77f72b909de800267940a
    SHA512:48b7df5a98a77cd67fe994021a907b3882c623aafd0f06a224bc3af7b90df8e49146a07f7201e75051f4ddb767bb2d7c22688646f6699b36664e60bc75cb1681
    Skein512_512:918b8d136ee3dd8693811e03e201a54fcc39417d331ae1f6c914a31766511b2601417491ff35f9dc15c25ef3e98efcdabf9c67fa07b4ac16a33ae3c6e46ce114

package-locations:
    https://hackage.haskell.org/package/Workflow-0.7.0.5/Workflow-0.7.0.5.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/Workflow-0.7.0.5.tar.gz

