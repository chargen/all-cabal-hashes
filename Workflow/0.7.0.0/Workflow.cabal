name: Workflow
version: 0.7.0.0
cabal-version: >= 1.6
build-type: Simple
license: BSD3
license-file: LICENSE
maintainer: agocorona@gmail.com
stability: experimental
bug-reports: agocorona@gmail.com
synopsis:    Monadic transformer for persistence in threads. and workflow patterns
description: Transparent support  for interruptible computations. A workflow can be seen as a persistent thread that executes any
             monadic computation. Therefore, it can be used in very time consuming computations such are CPU intensive calculations
             or procedures that are most of the time waiting for the action of a process or an user, that are prone to comunication
             failures, timeouts or shutdowns. It also can be used if you like to restart your
             program at the point where the user left it last time.
             .
             The computation can be restarted at the interrupted point thanks to its logged state in permanent storage.
             Besides that, the package also provides other services associated to workflows
             .
             This release inprove the logging/recovery process in workflows with with many steps
             .
             See "Control.Workflow" for details

category: Control, Workflow

author: Alberto GÃ³mez Corona

data-dir: ""

extra-source-files: Demos/Fact.hs Demos/Inspect.hs
                    Demos/docAprobal.hs Demos/pr.hs Demos/sequence.hs



library
    build-depends: MonadCatchIO-mtl -any, RefSerialize >=0.2.8 && <0.3,
                   TCache -any && <1.0, base >=4 && <5, binary -any, bytestring -any,
                   containers -any, directory -any, extensible-exceptions -any,
                    mtl -any, old-time -any, stm >2

    exposed-modules: Control.Workflow
                     Control.Workflow.Configuration
                     Control.Workflow.Patterns
    exposed: True
    buildable: True
    extensions: OverlappingInstances UndecidableInstances
                MultiParamTypeClasses ExistentialQuantification
                TypeSynonymInstances RecordWildCards DeriveDataTypeable
    hs-source-dirs: .
    other-modules: Control.Workflow.Stat Control.Workflow.Stat
                   Control.Workflow.IDynamic

source-repository head
  type : git
  location: https://github.com/agocorona/Workflow


package-hashes:
    MD5:4c73e908d1ca37044dd3151bcc367b04
    SHA1:8db4cbf982d9301b7aa0750debc3a9d5b057d42a
    SHA256:01027adb23eff417fb84a538aa950a15a1e78c0ad9d81f81bd68e6ecd7afcadf
    SHA512:1f07456dce255540ab579dc0769a3cf434e801d11e46915e85d7d3f04efe52c7182dd08baaf4a42609c67c21cfca1c315294f414a85651115a7e1714d18e6167
    Skein512_512:620c98a9bafd0f8839c3dc4e99fcee595a78137e28de8aaa5649b9b6e89acef5687fbdb575e5dcc492230ad6d3963dbfae06ea04fa4cfcf58b7b959ee88a76ca

package-locations:
    https://hackage.haskell.org/package/Workflow-0.7.0.0/Workflow-0.7.0.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/Workflow-0.7.0.0.tar.gz

package-size: 27555
