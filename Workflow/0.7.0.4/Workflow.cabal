-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:e832a6576dda199baa83db51a7900bf8
    SHA1:d416a744571eaf13b6b771edfdd64258ad22e952
    SHA256:efc1400e7155699061ce991e9552baf593bc1e573b6b94230e2f4a6dd4ada4f8
    SHA512:f82d9ef59af5833617b30e924d828c8d58d18c5aae8598c795fd5896b22e6b7263907a2783ecdcf317e74bd78c076ed9d5c4f80cace6f870539cea0bf4f72e1e
    Skein512_512:25199f1e97fb8c301a10f3e8a5ce4f1d151a5cea4e970d53accf217ee47df4aafe1ab0febdac2dbbcb3c4e4411a61628f59609b77164254a1c0c591b5897d494

package-locations:
    https://hackage.haskell.org/package/Workflow-0.7.0.4/Workflow-0.7.0.4.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/Workflow-0.7.0.4.tar.gz

package-size: 26928
-- END Added by all-cabal-hashes-tool

name: Workflow
version: 0.7.0.4
cabal-version: >= 1.6
build-type: Simple
license: BSD3
license-file: LICENSE
maintainer: agocorona@gmail.com
stability: experimental
bug-reports: agocorona@gmail.com
synopsis:    Monad transformer for thread state persistence and workflow patterns
description: Transparent support  for interruptible computations. A workflow can be seen as a persistent thread that executes a
             monadic computation. Therefore, it can be used in very time consuming computations such are CPU intensive calculations
             or procedures that are most of the time waiting for the action of a process or an user, that are prone to comunication
             failures, timeouts or shutdowns. It also can be used if you like to restart your
             program at the point where the user left it last time.
             .
             The computation can be restarted at the interrupted point thanks to its logged state in permanent storage.
             Besides that, the package also provides other services associated to workflows
             .
             This release inprove the logging/recovery process in workflows with with many steps
             .
             See "Control.Workflow" for details

category: Control, Workflow

author: Alberto GÃ³mez Corona

data-dir: ""

extra-source-files: Demos/Fact.hs Demos/Inspect.hs
                    Demos/docAprobal.hs Demos/pr.hs Demos/sequence.hs



library
    build-depends: MonadCatchIO-mtl -any, RefSerialize ==0.3.0.* ,
                   TCache -any && <1.0, base >=4 && <5, binary -any, bytestring -any,
                   containers -any, directory -any, extensible-exceptions -any,
                    mtl -any, old-time -any, stm >2

    exposed-modules: Control.Workflow
                     Control.Workflow.Configuration
                     Control.Workflow.Patterns
    exposed: True
    buildable: True
    extensions: OverlappingInstances UndecidableInstances
                MultiParamTypeClasses ExistentialQuantification
                TypeSynonymInstances RecordWildCards DeriveDataTypeable
    hs-source-dirs: .
    other-modules: Control.Workflow.Stat Control.Workflow.Stat
                   Control.Workflow.IDynamic

source-repository head
  type : git
  location: https://github.com/agocorona/Workflow
