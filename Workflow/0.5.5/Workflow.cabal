-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:c7ebc977133878f58170d19c61ec0989
    SHA1:962e842500228635f083baaef6cb580e283abe25
    SHA256:b3f25205893d33318e162aa1968e7773c710f867eae7050c8af952af4ad2c567
    SHA512:fba832ba440e1856fd545573af93ad9f8341a790394eb17968acf86b35f279439ace449aba0c2883d91d52e547714d1d9bf28952103ee92425fe61b2dd0535f7
    Skein512_512:1734c76c67727dc6931114031a671b33c510d4f4d11d0a45eb9e48cd3a455739026dbc368b400b4bd6b546613395a55b079b80dffb2750dc910e0e2a511ae007

package-locations:
    https://hackage.haskell.org/package/Workflow-0.5.5/Workflow-0.5.5.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/Workflow-0.5.5.tar.gz

package-size: 43320
-- END Added by all-cabal-hashes-tool

name:                Workflow
version:              0.5.5
synopsis:            library for transparent execution  of interruptible  computations
description:
     Transparent support  for interruptable computations. A workflow can be seen as a persistent thread that executes any
     monadic computation. Therefore, it can be used in very time consuming computations such are CPU intensive calculations
     or procedures that are most of the time waiting for the action of a process or an user, that are prone to comunication
     failures, timeouts or shutdowns.
     .
     The computantion can be restarted at the interrupted point because such monad is encapsulated inside
     a state monad transformer that transparently checkpoint the computation state. Besides that, the package also provides
     other services associated to workflows
     The main features are:
     .
     * logging of each intermediate action results in disk.
     .
     * resume  the monadic computation at the last checkpoint after soft or hard interruption.
     .
     * suspend a computation until the input object meet certain conditions. useful for inter-workflow comunications.-
     .
     * Communications with other processes including other workflows trough persistent data objects,
        inspection of intermediate workflow results ,  persistent  queues, persistent timeouts so that no data is lost due
        to shutdowns
      .
      * A workflow can initiate anoter workflow and wait for the resutl
      .
      * workflow management and monitoriing, view workflow history and intermediate results.


category:          Control, Workflow, Concurrent, Middleware
Stability:           experimental
license:             BSD3
license-file:        LICENSE
author:              Alberto GÃ³mez Corona
maintainer:          agocorona@gmail.com
Tested-With:
Build-Type:          Simple
build-Depends:       base >=3 && <4, containers, RefSerialize>=0.2.4, TCache>=0.6.4,  stm > 2, old-time, mtl
Cabal-Version:       >= 1.2

exposed-modules:     Control.Workflow
ghc-options:             -O2


