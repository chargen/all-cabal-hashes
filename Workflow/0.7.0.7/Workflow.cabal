name: Workflow
version: 0.7.0.7
cabal-version: >= 1.6
build-type: Simple
license: BSD3
license-file: LICENSE
maintainer: agocorona@gmail.com
stability: experimental
bug-reports: agocorona@gmail.com
synopsis:    Monad transformer for thread state persistence and workflow patterns
description: Transparent support  for interruptible computations. A workflow can be seen as a persistent thread that executes a
             monadic computation. Therefore, it can be used in very time consuming computations such are CPU intensive calculations
             or procedures that are most of the time waiting for the action of a process or an user, that are prone to comunication
             failures, timeouts or shutdowns. It also can be used if you like to restart your
             program at the point where the user left it last time.
             .
             The computation can be restarted at the interrupted point thanks to its logged state in permanent storage.
             Besides that, the package also provides other services associated to workflows
             .
             This release inprove the logging/recovery process in workflows with with many steps
             .
             See "Control.Workflow" for details

category: Control, Workflow

author: Alberto GÃ³mez Corona

data-dir: ""

extra-source-files: Demos/Fact.hs Demos/Inspect.hs
                    Demos/docAprobal.hs Demos/pr.hs Demos/sequence.hs



library
    build-depends: MonadCatchIO-mtl -any, RefSerialize ==0.3.0.* ,
                   TCache -any && <1.0, base >=4 && <5, binary -any, bytestring -any,
                   containers -any, directory -any, extensible-exceptions -any,
                    mtl -any, old-time -any, stm >2

    exposed-modules: Control.Workflow
                     Control.Workflow.Configuration
                     Control.Workflow.Patterns
    exposed: True
    buildable: True
    extensions: OverlappingInstances UndecidableInstances
                MultiParamTypeClasses ExistentialQuantification
                TypeSynonymInstances RecordWildCards DeriveDataTypeable
    hs-source-dirs: .
    other-modules: Control.Workflow.Stat Control.Workflow.Stat
                   Control.Workflow.IDynamic

source-repository head
  type : git
  location: https://github.com/agocorona/Workflow


package-hashes:
    MD5:a873dd2958dce360a689973b8f9d42fa
    SHA1:412a936f0ba7ce09c8116b5875131932031121eb
    SHA256:54708c13d45b0ca31204f2da7da3cd445b0bb09d3528d8b81bf17f5fe3f7685e
    SHA512:0d3cf66abd3a9685bbd74daac942cfd801d87503baf6316fb29c80573481881b24a1b4b1005b222db317626a419becf240fe5460c8470c734563fc4d7737201a
    Skein512_512:d5a17f5d3fb45e7acf8e6ef70d3579af73a9ae776fae4d2eebcc2e3b9bf9e371886d81fc127b8f807fcb7ff409f8f259fb2b70a2a6818999cd2cda9d93cce271

package-locations:
    https://hackage.haskell.org/package/Workflow-0.7.0.7/Workflow-0.7.0.7.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/Workflow-0.7.0.7.tar.gz

package-size: 27198
