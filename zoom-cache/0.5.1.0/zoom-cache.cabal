Name:                zoom-cache

-- The package version. See the Haskell package versioning policy
-- (http://www.haskell.org/haskellwiki/Package_versioning_policy) for
-- standards guiding when and how versions should be incremented.
Version:             0.5.1.0

Synopsis:            A streamable, seekable, zoomable cache file format

Description:
    zoom-cache is a fairly simple data file format for storing and summarizing
    streams of time-series data. The purpose of this format is to make it easy
    to quickly generate plots; /zooming/ refers to being able to render a
    window of data, and being able to quickly change the bounds of the window:
    to move around and to zoom in and out.
    .
    This library provides a monadic writing and an iteratee reading interface
    for zoom-cache files.
    .
    What's neat about this format and library? Glad you asked!
    .
        * Data can be stored at variable or constant rates. For variable rate
    data, a timestamp is explicitly written into the file for every value,
    which is useful for recording events that occur at unpredictable times.
    Constant rate is useful for regularly sampled data, like most digital
    audio and video recordings.
    .
        * While writing a file, summary blocks (such as minimum, maximum,
    mean and RMS values) are written out every n samples. The summary blocks
    are hierarchical, such that after two have been written, a new one
    containing a merged summary of those is written. After two of those Level
    1 summary blocks have been written, a new Level 2 summary block combining
    those is written, and so on.
    .
        * You can write your own zoom-cache codecs for custom data types, or
    to implement custom summary functions. In order to do so you provide a
    'Summary' data type, functions for encoding and decoding raw data values
    and summaries, and a function for merging 'Summary' blocks. For details,
    see "Data.ZoomCache.Codec".
    .
        * Writing of raw data blocks is optional, under control of the
    application. If you already have the raw data stored in an easily
    accessible format, your zoom-cache files may just contain the summary
    data. On the other hand, if your input data is the result of expensive
    calculations you may want to store it along with the summary data so that
    plots of any level of detail can be rendered from a single file.
    .
    When developing applications that read or write zoom-cache files, it should
    be sufficient to import only the module "Data.ZoomCache".
    .

License:             BSD3
License-file:        LICENSE
Author:              Conrad Parker
Maintainer:          conrad@metadecks.org
Stability:           Experimental
Category:            Development

Cabal-version:       >=1.6
Build-type:          Simple

flag splitBase
  description: Use the split-up base package.

-- Extra-source-files:  

Library
  if flag(splitBase)
    build-depends:
      base >= 3 && < 6
  else
    build-depends:
      base < 3

  Build-Depends:
    blaze-builder,
    bytestring                >= 0.9     && < 0.10,
    containers                >= 0.2     && < 0.5,
    data-default,
    iteratee                  >= 0.8.6.0 && < 0.9,
    ListLike                  >= 1.0     && < 4,
    MonadCatchIO-transformers >  0.2     && < 0.3,
    mtl                       >= 2.0.0.0 && < 3

  Exposed-modules:
    Blaze.ByteString.Builder.ZoomCache
    Data.Iteratee.ZoomCache
    Data.Iteratee.ZoomCache.Utils
    Data.ZoomCache
    Data.ZoomCache.Bool
    Data.ZoomCache.Codec
    Data.ZoomCache.Common
    Data.ZoomCache.Dump
    Data.ZoomCache.Format
    Data.ZoomCache.Identify
    Data.ZoomCache.Numeric.FloatMinMax
    Data.ZoomCache.Numeric.IEEE754
    Data.ZoomCache.Numeric.Int
    Data.ZoomCache.Numeric.Internal
    Data.ZoomCache.Numeric.Types
    Data.ZoomCache.Pretty
    Data.ZoomCache.Types
    Data.ZoomCache.Unit
    Data.ZoomCache.Write

  Other-modules:
    Blaze.ByteString.Builder.ZoomCache.Internal
  
  -- Packages needed in order to build this package.
  -- Build-depends:       
  
  -- Modules not exported by this package.
  -- Other-modules:       
  
  -- Extra tools (e.g. alex, hsc2hs, ...) needed to build the source.
  -- Build-tools:         
  
Executable zoom-cache
  Main-is:             zoom-cache.hs
  Hs-Source-Dirs:      ., tools
  Build-Depends:
    ui-command

------------------------------------------------------------------------
-- Git repo
--
source-repository head
  type: git
  location: git://github.com/kfish/zoom-cache.git



package-hashes:
    MD5:9f02a034a449498269d1bf72f6624fe0
    SHA1:e5acb18ec96a1bc34027b30f456de3c82e374686
    SHA256:20452500559cfdc9ba7296f855225cea486252b76c0efe1af59f4a17052e5b9c
    SHA512:521c4bffb73357a0a36325c492967bd8428184e4f79227407a09bfea8f85c642363b10f1e1af3510250967557abea1e3ced5e1355a261fd4baf5864e08fd5be6
    Skein512_512:bb47f1add09d7d0041cb316a99376a37808e071871207630a3dae50f1dcc43878ec4622b01cc37ec5729e71c38775a692b052a20f1e86ae72c485b423e67fc10

package-locations:
    https://hackage.haskell.org/package/zoom-cache-0.5.1.0/zoom-cache-0.5.1.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/zoom-cache-0.5.1.0.tar.gz

