-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:5415e82ec3d0df90bf7cf15c4ac4607c
    SHA1:7297b707e8882b63e58743553e5ed7b72fcec122
    SHA256:a5ae749cbf005bf9b69ba58b61c176e865ed1e277a7f64207be6160192272985
    SHA512:021a7399e0a5df384463ce6be851b75e1e02312905395477e83aa7c07d69aa570e39bce5d0cbf1d60732e5cd3adb6c5834d29bb561cf74e9a9b7c43c16849d0c
    Skein512_512:453635569b4ba986254693bdfc5ed46c31fa725676d719badc9db7af81bee9e7d7ded1497a29fd8da8233287069c45e61e506caee87487b6c215b0426e145181

x-package-locations:
    https://hackage.haskell.org/package/concurrent-extra-0.6/concurrent-extra-0.6.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/concurrent-extra-0.6.tar.gz

x-package-size: 18119
-- END Added by all-cabal-hashes-tool

name:          concurrent-extra
version:       0.6
cabal-version: >= 1.6
build-type:    Custom
stability:     experimental
author:        Bas van Dijk <v.dijk.bas@gmail.com>
               Roel van Dijk <vandijk.roel@gmail.com>
maintainer:    Bas van Dijk <v.dijk.bas@gmail.com>
               Roel van Dijk <vandijk.roel@gmail.com>
copyright:     (c) 2010 Bas van Dijk & Roel van Dijk
license:       BSD3
license-file:  LICENSE
category:      Concurrency
synopsis:      Extra concurrency primitives
description:
  The @concurrent-extra@ package offers among other things the
  following selection of synchronisation primitives:
  .
  * @Broadcast@: Wake multiple threads by broadcasting a value.
  .
  * @Event@: Wake multiple threads by signalling an event.
  .
  * @Lock@: Enforce exclusive access to a resource. Also known as a
    binary semaphore or mutex. The package additionally provides an
    alternative that works in the @STM@ monad.
  .
  * @RLock@: A lock which can be acquired multiple times by the same
    thread. Also known as a reentrant mutex.
  .
  * @ReadWriteLock@: Multiple-reader, single-writer locks. Used to
    protect shared resources which may be concurrently read, but only
    sequentially written.
  .
  * @ReadWriteVar@: Concurrent read, sequential write variables.
  .
  Besides these synchronisation primitives the package also provides:
  .
  * @Thread.Delay@: Arbitrarily long thread delays.
  .
  * @Timeout@: Wait arbitrarily long for an IO computation to finish.
  .
  Please consult the API documentation of the individual modules for
  more detailed information.
  .
  This package was inspired by the concurrency libraries of Java and
  Python.

source-repository head
  Type: darcs
  Location: http://code.haskell.org/concurrent-extra

-------------------------------------------------------------------------------

flag test
  description: Build the testing suite
  default:     False

flag hpc
  description: Enable program coverage on test executable
  default:     False

flag nolib
  description: Don't build the library
  default:     False

-------------------------------------------------------------------------------

library
  build-depends: base                 >= 3       && < 4.4
               , base-unicode-symbols >= 0.1.1   && < 0.3
               , stm                  >= 2.1.2.1 && < 2.3
  exposed-modules: Control.Concurrent.Lock
                 , Control.Concurrent.STM.Lock
                 , Control.Concurrent.RLock
                 , Control.Concurrent.Event
                 , Control.Concurrent.Broadcast
                 , Control.Concurrent.ReadWriteLock
                 , Control.Concurrent.ReadWriteVar
                 , Control.Concurrent.Thread.Delay
                 , Control.Concurrent.Timeout
  other-modules: Utils
  ghc-options: -Wall

  if flag(nolib)
    buildable: False

-------------------------------------------------------------------------------

executable test-concurrent-extra
  main-is: test.hs
  other-modules: Control.Concurrent.Event.Test
               , Control.Concurrent.Lock.Test
               , Control.Concurrent.STM.Lock.Test
               , Control.Concurrent.RLock.Test
               , Control.Concurrent.Broadcast.Test
               , Control.Concurrent.ReadWriteLock.Test
               , Control.Concurrent.ReadWriteVar.Test
               , Control.Concurrent.Timeout.Test
               , TestUtils

  ghc-options: -Wall

  if flag(test)
    build-depends: base                       >= 3       && < 4.4
                 , base-unicode-symbols       >= 0.1.1   && < 0.3
                 , stm                        >= 2.1.2.1 && < 2.3
                 , HUnit                      >= 1.2.2 	 && < 1.3
                 , QuickCheck                 >= 2.1.0 	 && < 2.2
                 , test-framework             >= 0.2.4 	 && < 0.4
                 , test-framework-hunit       >= 0.2.4 	 && < 0.3
                 , test-framework-quickcheck2 >= 0.2.4 	 && < 0.3
    buildable: True
  else
    buildable: False

  if flag(hpc)
    ghc-options: -fhpc

-------------------------------------------------------------------------------
