-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:cc0a83a37d7e8b28d35a21b36991b350
    SHA1:e3429a6fcf934e7b9c92a929d33dcd706c338d94
    SHA256:499894210f44613f8f8233eddf6a3e13b630738eb4c3dd942692e5607811b759
    SHA512:0501d9687b5b7b608a25e209fb596b856f7d6a76312b033b64234a935af7882cf9b90291e8c530729f2bbdf4cb009bb88d4785661737c310f1c15357047c90d7
    Skein512_512:e7843eab012c81b9376d85a6f50d4c391735dbdf738aae80435f9ba3d53ae727499c71cbe9a457639680696ca68e13a8d61be8e9d9da92c153d77395f267155f

x-package-locations:
    https://hackage.haskell.org/package/vector-clock-0.2.2/vector-clock-0.2.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/vector-clock-0.2.2.tar.gz

x-package-size: 20757
-- END Added by all-cabal-hashes-tool

Name:           vector-clock
Version:        0.2.2
Cabal-Version:  >= 1.8
License:        GPL-3
License-File:   LICENSE
Stability:      experimental
Author:         Alexandru Scvortov <scvalex@gmail.com>
Maintainer:     scvalex@gmail.com
Homepage:       https://github.com/scvalex/vector-clock
Category:       Data, Data Structures, Distributed Computing
Synopsis:       Vector clocks for versioning message flows
Build-Type:     Simple
Description:
        This package provides a ready to use implementation of the
        vector clock data-structures, which may be used to version
        messages and determine causality relations between them in
        a distributed system.
        .
        See @Fundamentals of Distributed Computing: A Practical Tour
        of Vector Clock Systems@ by R. Baldoni and M. Raynal for an
        overview of vector clocks.
        .
        See the README.md file for details.

Extra-Source-Files:     Makefile

Data-Files:             README.md, NEWS.md, LICENSE

Source-repository head
  Type:                 git
  Location:             git://github.com/scvalex/vector-clock.git

Library
  Hs-Source-Dirs:       src
  Build-Depends:        base >= 4 && <5,
                        binary,
                        ghc-prim,
                        hashable
  Ghc-Options:          -Wall
  Exposed-Modules:      Data.VectorClock,
                        Data.VectorClock.Approximate,
                        Data.VectorClock.Simple

Test-suite props
  Hs-Source-Dirs:       test
  Main-Is:              Props.hs
  Type:                 exitcode-stdio-1.0
  Ghc-Options:          -Wall
  Build-Depends:        array,
                        base >= 4 && <5,
                        binary,
                        ghc-prim,
                        HUnit,
                        QuickCheck,
                        test-framework,
                        test-framework-hunit,
                        test-framework-quickcheck2,
                        vector-clock
