-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:2b666a304dbb44977561d4d3e3571444
    SHA1:4fe89aca63bb20b18b53a36d827b720711fcea80
    SHA256:b085bbfe6437065511ceb5cd6a9b1beb109459230a2aad843a51bada731e42ff
    SHA512:11adb8925eaf93bd834718be9797f1b96098731d95fd6dda4f210b24ca6f90e7a923869b996d5de5eeadff4ed14e9ee4e168f868e15acd84ad33360b1be9bec8
    Skein512_512:9ecf23d1bdd002af585fc0fc85166e0b4f8d97c8f90faa60234040334db44e1eec2611a839235b258b324cd059826846063907908f61d03f834cf4dee9d724ae

package-locations:
    https://hackage.haskell.org/package/acme-realworld-0.1/acme-realworld-0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/acme-realworld-0.1.tar.gz

package-size: 2521
-- END Added by all-cabal-hashes-tool

name:                acme-realworld
version:             0.1
synopsis:            Primitives for manipulating the state of the universe
description:
    GHC represents an IO action internally as a function from one state of the
    world to the next:
    .
    >State# RealWorld -> (# State# RealWorld, a #)
    .
    This module provides a very useful capability stemming directly from this
    representation: the ability to save the current state of the universe and
    restore it later.  This provides a way to \"undo\" certain types of side
    effects in the IO monad:
    .
    >import Acme.Missiles
    >import Acme.RealWorld
    >
    >main :: IO ()
    >main = do
    >    -- Save the current state of the universe
    >    world_as_we_know_it <- getWorld
    >
    >    -- Cause serious international side effects
    >    launchMissiles
    >
    >    -- After realizing that was a terrible, terrible mistake, restore the
    >    -- pre-war state of the universe.
    >    putWorld world_as_we_know_it
license:             BSD3
license-file:        LICENSE
author:              Joey Adams
maintainer:          joeyadams3.14159@gmail.com
copyright:           Copyright (c) Joseph Adams 2011
category:            Acme
build-type:          Simple
cabal-version:       >=1.8

library
    exposed-modules:    Acme.RealWorld
    build-depends:      base == 4.*
