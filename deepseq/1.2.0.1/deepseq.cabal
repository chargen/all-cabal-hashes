-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:74a226454f86a8b7208d852d5b1cfbf5
    SHA1:72b19027964faeb8ca6eddabaa8c55282ab82102
    SHA256:ed7ca0fd9f7e2df831fc121235af4b9e131dab3303614d6c85f7484a219ef464
    SHA512:9f02c05c14a79f4ad743f1fb25ed47706789c0141b6f765e140e9b088c5358bdde9ba6b096bf4d478f970839d347e1af40326063d4f3f913c33dc4b3b993454a
    Skein512_512:b49fa3877735f531624c082cea49976ad540e1fedae7df18ade0ec0c131b46ed3900d3847415079346a85dd33c2bedd4d2d972588a9b8ec131c9ebf5c22aca87

package-locations:
    https://hackage.haskell.org/package/deepseq-1.2.0.1/deepseq-1.2.0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/deepseq-1.2.0.1.tar.gz

package-size: 3789
-- END Added by all-cabal-hashes-tool

name:		deepseq
version:        1.2.0.1
license:	BSD3
license-file:	LICENSE
maintainer:	libraries@haskell.org
synopsis:	Deep evaluation of data structures
category:       Control
description:
    This package provides methods for fully evaluating data structures
    (\"deep evaluation\"). Deep evaluation is often used for adding
    strictness to a program, e.g. in order to force pending exceptions,
    remove space leaks, or force lazy I/O to happen. It is also useful
    in parallel programs, to ensure pending work does not migrate to the
    wrong thread.
    .
    The primary use of this package is via the 'deepseq' function, a
    \"deep\" version of 'seq'. It is implemented on top of an 'NFData'
    typeclass (\"Normal Form Data\", data structures with no unevaluated
    components) which defines strategies for fully evaluating different
    data types.
    .
build-type:     Simple
cabal-version:  >=1.6

source-repository head
    type:     git
    location: http://darcs.haskell.org/packages/deepseq.git/

library {
  exposed-modules: Control.DeepSeq
  build-depends: base       >= 3   && < 5, 
                 array      >= 0.1 && < 0.4
  ghc-options: -Wall
  extensions: CPP
}
