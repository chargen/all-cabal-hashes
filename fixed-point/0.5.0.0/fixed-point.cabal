-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:3b91a9fedae2c83cb6f341556088b438
    SHA1:c3c2fc59b4c240c09e551ee6d66c30e869a1fd1d
    SHA256:0253dadbd6de583aeb70be201345c359de03862c2ad0cab1c3f0a52aebf2fb42
    SHA512:f1a382362033ea0337989ee4693cdf8bafe9d28c241aa338f14cceb6ff15aa7218cd2d2100483241e5490ec77d73248a44ac3da120ee8c9a6bf742cb3e558da9
    Skein512_512:7dc2054379005f1533eb0e122e3fee9b2929c404480d56b7150819e8b0a4a0483b77e5b3355795a8e1608bf58d82aa15aeed9f2548dfb5613586a7b81b00355e

x-package-locations:
    https://hackage.haskell.org/package/fixed-point-0.5.0.0/fixed-point-0.5.0.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/fixed-point-0.5.0.0.tar.gz

x-package-size: 5233
-- END Added by all-cabal-hashes-tool

Name:                fixed-point
Version:             0.5.0.0
Synopsis:            Binary fixed-point arithmetic
Description:         This package defines a type for binary
                     fixed-precision arithmetic. The main differences
                     between this and Data.Fixed are that this is
                     binary fixed-point and it's polymorphic in the
                     underlying representation.

                     When is this more appropriate than floating
                     point? You'll mainly want to use this when you
                     need to be able to represent fractional values
                     within a bounded range. Fixed-point numbers have
                     the advantage of uniformity in these cases. On
                     the downside, you lose precision relative to
                     floating point numbers as you approach zero, and
                     you lose the ability to express very large (but
                     imprecise) values that floating point can
                     express. On some architectures, fixed-point
                     arithmetic might be faster than floating-point
                     arithmetic, but this is probably not the case on
                     x86.
License:             MIT
License-file:        LICENSE
Author:              Jake McArthur
Maintainer:          Jake McArthur <Jake.McArthur@gmail.com>
Category:            Data, Game, Math, Numerical
Build-type:          Simple
Cabal-version:       >=1.6

Library
  Build-depends:       base == 4.3.*
  Exposed-modules:     Data.Fixed.Binary
  Extensions:          CPP,
                       DeriveDataTypeable,
                       EmptyDataDecls,
                       FlexibleContexts,
                       GeneralizedNewtypeDeriving,
                       TypeFamilies,
                       TypeOperators,
                       ViewPatterns
  GHC-options:         -Wall -fwarn-tabs -funfolding-use-threshold=16

Source-repository head
  type:     darcs
  location: http://patch-tag.com/r/jmcarthur/fixed-point

source-repository this
  type:     darcs
  location: http://patch-tag.com/r/jmcarthur/fixed-point
  tag:      v0.5.0.0
