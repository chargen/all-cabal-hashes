-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:80f654827deb666dfe7d6d4885a331e5
    SHA1:d379b39065ddf2bd9becba9529b9af7325a209a7
    SHA256:ff64808c5ec0a7b5cf4d9c855bb646f1aebec122ddfbd72b24f9cf44eedb680a
    SHA512:431f776a3e2b4f77e799b9b33246b3da788843a85b0446171bbcb63f091d04fbf9b428558f37415b90425ea01b2e09609de7c805466b2283bd3b4c8a942e3a5f
    Skein512_512:abdf9b1c20f9946b91130fe6cf0443cdb5ac2fa9f59446caee437bce1067a9bc3f6de34a25a2947a42ecf9efd57c0f8e45be7d36c486b3cefbb939a54457a9f1

package-locations:
    https://hackage.haskell.org/package/fixed-point-0.4.0.1/fixed-point-0.4.0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/fixed-point-0.4.0.1.tar.gz

package-size: 5725
-- END Added by all-cabal-hashes-tool

Name:                fixed-point
Version:             0.4.0.1
Synopsis:            Binary fixed-point arithmetic
Description:         This package defines a type for binary
                     fixed-precision arithmetic. The main differences
                     between this and Data.Fixed are that this is
                     binary fixed-point and it's polymorphic in the
                     underlying representation.

                     When is this more appropriate than floating
                     point? You'll mainly want to use this when you
                     need to be able to represent fractional values
                     within a bounded range. Fixed-point numbers have
                     the advantage of uniformity in these cases. On
                     the downside, you lose precision relative to
                     floating point numbers as you approach zero, and
                     you lose the ability to express very large (but
                     imprecise) values that floating point can
                     express. On some architectures, fixed-point
                     arithmetic might be faster than floating-point
                     arithmetic, but this is probably not the case on
                     x86.
License:             MIT
License-file:        LICENSE
Author:              Jake McArthur
Maintainer:          Jake McArthur <Jake.McArthur@gmail.com>
Category:            Data, Game, Math, Numerical
Build-type:          Simple
Cabal-version:       >=1.6

Library
  Build-depends:       base == 4.3.*,
                       vector == 0.7.*
  Exposed-modules:     Data.Fixed.Binary
  Extensions:          CPP,
                       DeriveDataTypeable,
                       EmptyDataDecls,
                       FlexibleContexts,
                       GeneralizedNewtypeDeriving,
                       MultiParamTypeClasses,
                       TypeFamilies,
                       TypeOperators,
                       ViewPatterns
  GHC-options:         -Wall -fwarn-tabs -funfolding-use-threshold=16

Source-repository head
  type:     darcs
  location: http://patch-tag.com/r/jmcarthur/fixed-point

source-repository this
  type:     darcs
  location: http://patch-tag.com/r/jmcarthur/fixed-point
  tag:      v0.4.0.0
