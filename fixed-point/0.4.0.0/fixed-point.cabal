-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:d668877664bdb1a0e0c9cf63120e0108
    SHA1:c4df3638f578d67dbf064724ec1797504a980acc
    SHA256:66aa9b1998f0a5a0e0cf29049235705ff211b691ac8eedaf6b902425bccb3584
    SHA512:33fea4303db8593e9a59a77ff6a716ca9c9b3a15e3b7821c0961508e9bf30b38bdce551157e95dcb9278a27612fede6e35a3c576086bcfb42fc5b2da6f19dbd1
    Skein512_512:0fe31696b52d23914ad178866858b7b7693270b6f16ccaf25b065cf4d5eb971ce125c8f8aa8738314546a121ea9cbbb25feece1193319b4214c67f5b9658b2da

x-package-locations:
    https://hackage.haskell.org/package/fixed-point-0.4.0.0/fixed-point-0.4.0.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/fixed-point-0.4.0.0.tar.gz

x-package-size: 5725
-- END Added by all-cabal-hashes-tool

Name:                fixed-point
Version:             0.4.0.0
Synopsis:            Binary fixed-point arithmetic
Description:         This package defines a type for binary
                     fixed-precision arithmetic. The main differences
                     between this and Data.Fixed are that this is
                     binary fixed-point and it's polymorphic in the
                     underlying representation.

                     When is this more appropriate than floating
                     point? You'll mainly want to use this when you
                     need to be able to represent fractional values
                     within a bounded range. Fixed-point numbers have
                     the advantage of uniformity in these cases. On
                     the downside, you lose precision relative to
                     floating point numbers as you approach zero, and
                     you lose the ability to express very large (but
                     imprecise) values that floating point can
                     express. On some architectures, fixed-point
                     arithmetic might be faster than floating-point
                     arithmetic, but this is probably not the case on
                     x86.
License:             MIT
License-file:        LICENSE
Author:              Jake McArthur
Maintainer:          Jake McArthur <Jake.McArthur@gmail.com>
Category:            Data, Game, Math, Numerical
Build-type:          Simple
Cabal-version:       >=1.6

Library
  Build-depends:       base == 4.3.*,
                       vector == 0.7.*
  Exposed-modules:     Data.Fixed.Binary
  Extensions:          CPP,
                       DeriveDataTypeable,
                       EmptyDataDecls,
                       FlexibleContexts,
                       GeneralizedNewtypeDeriving,
                       MultiParamTypeClasses,
                       TypeFamilies,
                       TypeOperators,
                       ViewPatterns
  GHC-options:         -Wall -fwarn-tabs -funfolding-use-threshold=16

Source-repository head
  type:     darcs
  location: http://patch-tag.com/r/jmcarthur/fixed-point

source-repository this
  type:     darcs
  location: http://patch-tag.com/r/jmcarthur/fixed-point
  tag:      v0.4.0.0
