-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:d557d7056cad21755a72110d555795d2
    SHA1:fd43c0cfcab98890a8148f485c8aaaaa99467c85
    SHA256:96e6d57b951db38277092a6be9a9c8f40d7940907bcbfa6de6fac638e5ee7f4e
    SHA512:b45d466fd52daabb6612d7b775367d8755ea14599faf08568821900b1423575a79ca53ea898cd2bbd155e26a89a2a0aafc1a426e667158b37e13b65c51817f89
    Skein512_512:d08d63a236b6f98652f344e53ae799b96e1459acdd1f7cad031505437f6d8e9b8217396ad7052def3488a07239e36f57a53f66c602ec77c84dcfbdf4ea275d90

package-locations:
    https://hackage.haskell.org/package/BNFC-meta-0.2.0.1/BNFC-meta-0.2.0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/BNFC-meta-0.2.0.1.tar.gz

package-size: 57107
-- END Added by all-cabal-hashes-tool

Name:		BNFC-meta
version:	0.2.0.1
cabal-Version:  >= 1.6
build-type:     Simple
license:        GPL-2
license-file:   LICENSE
author:		Jonas Duregård
maintainer:     Jonas Duregård (jonas.duregard@chalmers.se)
category:	Development
synopsis:	Deriving Quasi-Quoters from BNF Grammars
description:    This package provides a comfortable way of defining quasi-quoters. 
  Specifically, given a quasi-quoted LBNF grammar (as used by the BNF Converter)  
  it generates (using Template Haskell) an LALR parser and pretty pretty printer 
  for the language. The parser is then used to define a quasi-quoter. With a simple
  pragma, the user can define a universal syntax for anti-quoting. This means that 
  any grammar non-terminal can be replaced by a quoted Haskell expression of the 
  appropriate type. A few examples are included in the source tarball.

extra-source-files:
  examples/GHC7/jll/JavaletteLight.hs
  examples/GHC7/jll/UseJll.hs
  examples/GHC6/jll/JavaletteLight.hs
  examples/GHC6/jll/UseJll.hs
  Bootstrap/Bootstrap.hs

Library
  Build-Depends: 
    base>=4.2&&<5
    , array==0.3.0.*
    , template-haskell >=2.4&&<2.6
    , haskell-src-meta >= 0.3 && < 1.0
    , happy-meta >= 0.2.0.2
    , alex-meta >= 0.2.0.1
  Exposed-modules:
    Language.LBNF
    , Language.LBNF.Runtime
    , Language.LBNF.Compiletime
    , Language.LBNF.Grammar
  Other-modules:
    Language.LBNF.CF
    , Language.LBNF.CFtoAbstract
    , Language.LBNF.CFtoAlex2
    , Language.LBNF.CFtoHappy 
    , Language.LBNF.CFtoPrinter
    , Language.LBNF.CFtoQQ
    , Language.LBNF.GetCF
    , Language.LBNF.TypeChecker
    , Language.LBNF.Utils
    , Language.Haskell.TH.Hide
