-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:dc3d4429155ea5cc7696bfe27542a9c2
    SHA1:433cfd72a3c288340d32d5232b14d5c5be0cadd8
    SHA256:faf5243224687d43476e99fd0b7720a6c68aeafe7cc9e929f6cab384dfd7759f
    SHA512:457433b7ddf471fc33c919cbf3a6f437ce692421b5927ec482c5d5c993939bbf39ac24f182a099e005aa2087365eb188fd3ea9af96b669fcebf5acd469927cee
    Skein512_512:4f6d40118af002caa36007152e4143977ab8803b110869f4db486473a29ea5fdbfee8ea489f6e76834aca40de602a03e0cb771b1fc3600e97934500d3d844c64

x-package-locations:
    https://hackage.haskell.org/package/BNFC-meta-0.3/BNFC-meta-0.3.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/BNFC-meta-0.3.tar.gz

x-package-size: 62218
-- END Added by all-cabal-hashes-tool

Name:		BNFC-meta
version:	0.3
cabal-Version:  >= 1.6
build-type:     Simple
license:        GPL-2
license-file:   LICENSE
author:		Jonas Duregård
maintainer:     Jonas Duregård (jonas.duregard@chalmers.se)
category:	Development
synopsis:	Deriving Quasi-Quoters from BNF Grammars
description:    This package provides a comfortable way of defining quasi-quoters. 
  Specifically, given a quasi-quoted LBNF grammar (as used by the BNF Converter)  
  it generates (using Template Haskell) an LALR parser and pretty pretty printer 
  for the language. The parser is then used to define a quasi-quoter. With a simple
  pragma, the user can define a universal syntax for anti-quoting. This means that 
  any grammar non-terminal can be replaced by a quoted Haskell expression of the 
  appropriate type. A few examples are included in the source tarball.

extra-source-files:
  examples/GHC7/jll/JavaletteLight.hs
  examples/GHC7/jll/UseJll.hs
  examples/GHC6/jll/JavaletteLight.hs
  examples/GHC6/jll/UseJll.hs
  Bootstrap/Bootstrap.hs

Library
  Build-Depends: 
    base>=4.2&&<5
    , array==0.3.0.*
    , template-haskell >=2.4&&<2.7
    , haskell-src-meta >= 0.5 && < 1.0
    , happy-meta >= 0.2.0.2
    , alex-meta >= 0.3
    , syb >= 0.2 && <1.0
  Exposed-modules:
    Language.LBNF
    , Language.LBNF.Runtime
    , Language.LBNF.Compiletime
    , Language.LBNF.Grammar
  Other-modules:
    Language.LBNF.CF
    , Language.LBNF.CFtoAbstract
    , Language.LBNF.CFtoAlex2
    , Language.LBNF.CFtoHappy 
    , Language.LBNF.CFtoLayout 
    , Language.LBNF.CFtoPrinter
    , Language.LBNF.CFtoQQ
    , Language.LBNF.GetCF
    , Language.LBNF.TypeChecker
    , Language.LBNF.Utils
    , Language.Haskell.TH.Hide
