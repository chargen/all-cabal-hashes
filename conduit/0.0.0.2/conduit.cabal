Name:                conduit
Version:             0.0.0.2
Synopsis:            A pull-based approach to streaming data.
Description:         Conduits are an approach to the streaming data problem. It is meant as an alternative to enumerators\/iterators, hoping to address the same issues with different trade-offs based on real-world experience with enumerators. For more information, see <http://www.yesodweb.com/blog/2011/12/conduits>.
License:             BSD3
License-file:        LICENSE
Author:              Michael Snoyman
Maintainer:          michael@snoyman.com
Category:            Data, Conduit
Build-type:          Simple
Cabal-version:       >=1.8
Homepage:            http://github.com/snoyberg/conduit
extra-source-files:  test/main.hs

flag debug

flag nohandles

Library
  if os(windows)
      cpp-options: -DCABAL_OS_WINDOWS
      other-modules: System.Win32File
  else
      other-modules: System.PosixFile
  if flag(nohandles)
      cpp-options: -DNO_HANDLES
  Exposed-modules:     Data.Conduit
                       Data.Conduit.Binary
                       Data.Conduit.Text
                       Data.Conduit.List
                       Data.Conduit.Lazy
                       Control.Monad.Trans.Resource
  Other-modules:       Data.Conduit.Types.Source
                       Data.Conduit.Types.Sink
                       Data.Conduit.Types.Conduit
                       Data.Conduit.Util.Source
                       Data.Conduit.Util.Sink
                       Data.Conduit.Util.Conduit
  Build-depends:       base                     >= 4.3          && < 5
                     , lifted-base              >= 0.1          && < 0.2
                     , transformers-base        >= 0.4.1        && < 0.5
                     , monad-control            >= 0.3.1        && < 0.4
                     , containers
                     , transformers             >= 0.2.2        && < 0.3
                     , bytestring               >= 0.9
                     , text                     >= 0.11
  ghc-options:     -Wall
  if flag(debug)
    cpp-options: -DDEBUG

test-suite test
    hs-source-dirs: test
    main-is: main.hs
    type: exitcode-stdio-1.0
    cpp-options:   -DTEST
    build-depends:   conduit
                   , base
                   , hspec
                   , HUnit
                   , QuickCheck
                   , bytestring
                   , transformers
                   , text
    ghc-options:     -Wall

source-repository head
  type:     git
  location: git://github.com/snoyberg/conduit.git


package-hashes:
    MD5:45d0ce703d04b0563a6cb662d3656706
    SHA1:61ebdaad5baf220ac842439f8b41cd96be3d60eb
    SHA256:bfa8553ad088424c2841194420a0ed9a4021ffe88cd0e8860454e0e229cdcfba
    SHA512:5ec6c61dc73b5f79ee06ff643ba38aafa79f9d08a66dc84a3c9512ec499af52a362fafa77300c2955943e6680aa53e678031b19b05a797a5963ec1a9a9a0cdbd
    Skein512_512:9992fe0974d481df2ca71c3b8f6348494687bd95c5ae2fddf1b634c5ff936e17b63ccf97b6f2814c76944db279063886bb28a2c3d53522f5ea1f193d8645e057

package-locations:
    https://hackage.haskell.org/package/conduit-0.0.0.2/conduit-0.0.0.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/conduit-0.0.0.2.tar.gz

