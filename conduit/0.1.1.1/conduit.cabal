Name:                conduit
Version:             0.1.1.1
Synopsis:            Streaming data processing library.
Description:
	Conduits are an approach to the streaming data problem. It is meant as an alternative to enumerators\/iterators, hoping to address the same issues with different trade-offs based on real-world experience with enumerators. For more information, see <http://www.yesodweb.com/book/conduit>.
	.
	Release history:
	.
	* 0.1: @BufferedSource@ is now an abstract type, and has a much more efficient internal representation. The result was a 41% speedup on microbenchmarks (note: do not expect speedups anywhere near that in real usage). In general, we are moving towards @BufferedSource@ being a specific tool used internally as needed, but using @Source@ for all external APIs.
	.
	* 0.0: Initial release.
License:             BSD3
License-file:        LICENSE
Author:              Michael Snoyman
Maintainer:          michael@snoyman.com
Category:            Data, Conduit
Build-type:          Simple
Cabal-version:       >=1.8
Homepage:            http://github.com/snoyberg/conduit
extra-source-files:  test/main.hs, test/random

flag debug
    default: True
    description: Turn on some runtime check to ensure invariants are respected.

flag nohandles

Library
  if os(windows)
      cpp-options: -DCABAL_OS_WINDOWS
      other-modules: System.Win32File
  else
      other-modules: System.PosixFile
  if flag(nohandles)
      cpp-options: -DNO_HANDLES
  Exposed-modules:     Data.Conduit
                       Data.Conduit.Binary
                       Data.Conduit.Text
                       Data.Conduit.List
                       Data.Conduit.Lazy
                       Control.Monad.Trans.Resource
  Other-modules:       Data.Conduit.Types.Source
                       Data.Conduit.Types.Sink
                       Data.Conduit.Types.Conduit
                       Data.Conduit.Util.Source
                       Data.Conduit.Util.Sink
                       Data.Conduit.Util.Conduit
  Build-depends:       base                     >= 4.3          && < 5
                     , lifted-base              >= 0.1          && < 0.2
                     , transformers-base        >= 0.4.1        && < 0.5
                     , monad-control            >= 0.3.1        && < 0.4
                     , containers
                     , transformers             >= 0.2.2        && < 0.3
                     , bytestring               >= 0.9
                     , text                     >= 0.11
  ghc-options:     -Wall
  if flag(debug)
    cpp-options: -DDEBUG

test-suite test
    hs-source-dirs: test
    main-is: main.hs
    type: exitcode-stdio-1.0
    cpp-options:   -DTEST
    build-depends:   conduit
                   , base
                   , hspec
                   , HUnit
                   , QuickCheck
                   , bytestring
                   , transformers
                   , text
    ghc-options:     -Wall

source-repository head
  type:     git
  location: git://github.com/snoyberg/conduit.git


package-hashes:
    MD5:17660144e95736c48026c683edb4d88a
    SHA1:73c8c34d1222a9288149e133ec079aac8ebad22d
    SHA256:e561b545b181cbbc9be24faed5a6344641f12f603db55e4ce1ab27317099133f
    SHA512:4b8fa1caa94f596a0b103b048b2d0f4dc6e282e28a9531ba01114edae1f258503660bcd1097fd82f0cc333c93f07b0502091318705ebf94a564643e83137d811
    Skein512_512:18a54691c3f5ada0e2075f0ac4b77594ef949f60a8f80480a958901aedda92f09f1e3007bbf4aa731d18ed1d503303aefb5fc5ab6f11537640d1f7b78c76b124

package-locations:
    https://hackage.haskell.org/package/conduit-0.1.1.1/conduit-0.1.1.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/conduit-0.1.1.1.tar.gz

