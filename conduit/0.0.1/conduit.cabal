Name:                conduit
Version:             0.0.1
Synopsis:            A pull-based approach to streaming data.
Description:         Conduits are an approach to the streaming data problem. It is meant as an alternative to enumerators\/iterators, hoping to address the same issues with different trade-offs based on real-world experience with enumerators. For more information, see <http://www.yesodweb.com/blog/2011/12/conduits>.
License:             BSD3
License-file:        LICENSE
Author:              Michael Snoyman
Maintainer:          michael@snoyman.com
Category:            Data, Conduit
Build-type:          Simple
Cabal-version:       >=1.8
Homepage:            http://github.com/snoyberg/conduit
extra-source-files:  test/main.hs

flag debug

flag nohandles

Library
  if os(windows)
      cpp-options: -DCABAL_OS_WINDOWS
      other-modules: System.Win32File
  else
      other-modules: System.PosixFile
  if flag(nohandles)
      cpp-options: -DNO_HANDLES
  Exposed-modules:     Data.Conduit
                       Data.Conduit.Binary
                       Data.Conduit.Text
                       Data.Conduit.List
                       Data.Conduit.Lazy
                       Control.Monad.Trans.Resource
  Other-modules:       Data.Conduit.Types.Source
                       Data.Conduit.Types.Sink
                       Data.Conduit.Types.Conduit
                       Data.Conduit.Util.Source
                       Data.Conduit.Util.Sink
                       Data.Conduit.Util.Conduit
  Build-depends:       base                     >= 4.3          && < 5
                     , lifted-base              >= 0.1          && < 0.2
                     , transformers-base        >= 0.4.1        && < 0.5
                     , monad-control            >= 0.3.1        && < 0.4
                     , containers
                     , transformers             >= 0.2.2        && < 0.3
                     , bytestring               >= 0.9
                     , text                     >= 0.11
  ghc-options:     -Wall
  if flag(debug)
    cpp-options: -DDEBUG

test-suite test
    hs-source-dirs: test
    main-is: main.hs
    type: exitcode-stdio-1.0
    cpp-options:   -DTEST
    build-depends:   conduit
                   , base
                   , hspec
                   , HUnit
                   , QuickCheck
                   , bytestring
                   , transformers
                   , text
    ghc-options:     -Wall

source-repository head
  type:     git
  location: git://github.com/snoyberg/conduit.git


package-hashes:
    MD5:39d8e9221f1c75cf12dc56ae2b86d7d6
    SHA1:dfb66730175b8793c1af171db9c11d6804f51d86
    SHA256:da7eafdf18d7f4d724168ed09a8ef1a301eb32243dadd7f5df0f1b1671e48bce
    SHA512:33ff426423c745f1a74c7605f4345a154015d4ba497b701ed7f3228153112f7f23e26d0e0a106cd13b8c1f772765af58fed2196b150d55ce0d022846e9d679ad
    Skein512_512:30d1dfc22498b9ffe1a8cb4aa52362140366fc3dc11ca5e11bb1dc1f7109d9384d1ea8176bcc0b6f8e78a677110fe36d2bc38d907868778254a7255a82a256c9

package-locations:
    https://hackage.haskell.org/package/conduit-0.0.1/conduit-0.0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/conduit-0.0.1.tar.gz

package-size: 25395
