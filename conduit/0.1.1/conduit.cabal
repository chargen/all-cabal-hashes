-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:b1d98e12b42984eacf682e77e388cefb
    SHA1:24f9dd93b85021649d4ad8c5671aa3b62885caec
    SHA256:20e4e253ebc0e311e9426a5edfb2acd4fe90e6ea5820b4a6d23da7dcfea62472
    SHA512:d806c77a58657cdc6ac0d38a10c2f583ec36e62564fcc12fb062049721fc01d11de35cd4710356f6f0889d737309b2aaff488c70558cb8d0d3d5684a9c40b7f5
    Skein512_512:edfacbc2c6ff1485bc3d7d4c181ca7f705d284da2ed25b0185d185e9d6bc83f2f81d20d86e1b9a772071e59ed28e456561f5f2d7f67e38d879e47d7e6f2f2dfa

x-package-locations:
    https://hackage.haskell.org/package/conduit-0.1.1/conduit-0.1.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/conduit-0.1.1.tar.gz

x-package-size: 29184
-- END Added by all-cabal-hashes-tool

Name:                conduit
Version:             0.1.1
x-revision: 1
Synopsis:            Streaming data processing library.
Description:
	Conduits are an approach to the streaming data problem. It is meant as an alternative to enumerators\/iterators, hoping to address the same issues with different trade-offs based on real-world experience with enumerators. For more information, see <http://www.yesodweb.com/book/conduit>.
	.
	Release history:
	.
	* 0.1: @BufferedSource@ is now an abstract type, and has a much more efficient internal representation. The result was a 41% speedup on microbenchmarks (note: do not expect speedups anywhere near that in real usage). In general, we are moving towards @BufferedSource@ being a specific tool used internally as needed, but using @Source@ for all external APIs.
	.
	* 0.0: Initial release.
License:             BSD3
License-file:        LICENSE
Author:              Michael Snoyman
Maintainer:          michael@snoyman.com
Category:            Data, Conduit
Build-type:          Simple
Cabal-version:       >=1.8
Homepage:            http://github.com/snoyberg/conduit
extra-source-files:  test/main.hs, test/random

flag debug

flag nohandles

Library
  if os(windows)
      cpp-options: -DCABAL_OS_WINDOWS
      other-modules: System.Win32File
  else
      other-modules: System.PosixFile
  if flag(nohandles)
      cpp-options: -DNO_HANDLES
  Exposed-modules:     Data.Conduit
                       Data.Conduit.Binary
                       Data.Conduit.Text
                       Data.Conduit.List
                       Data.Conduit.Lazy
                       Control.Monad.Trans.Resource
  Other-modules:       Data.Conduit.Types.Source
                       Data.Conduit.Types.Sink
                       Data.Conduit.Types.Conduit
                       Data.Conduit.Util.Source
                       Data.Conduit.Util.Sink
                       Data.Conduit.Util.Conduit
  Build-depends:       base                     >= 4.3          && < 4.6
                     , lifted-base              >= 0.1          && < 0.2
                     , transformers-base        >= 0.4.1        && < 0.5
                     , monad-control            >= 0.3.1        && < 0.4
                     , containers
                     , transformers             >= 0.2.2        && < 0.3
                     , bytestring               >= 0.9
                     , text                     >= 0.11
  ghc-options:     -Wall
  if flag(debug)
    cpp-options: -DDEBUG

test-suite test
    hs-source-dirs: test
    main-is: main.hs
    type: exitcode-stdio-1.0
    cpp-options:   -DTEST
    build-depends:   conduit
                   , base
                   , hspec
                   , HUnit
                   , QuickCheck
                   , bytestring
                   , transformers
                   , text
    ghc-options:     -Wall

source-repository head
  type:     git
  location: git://github.com/snoyberg/conduit.git
