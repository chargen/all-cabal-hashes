-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:ad5e61dc6f08aaa4c69b669e398267e8
    SHA1:6536803922e69f6aa3b4bc3508108223a9051a32
    SHA256:10ae2cbd387c044102b9f60b832230367ab85bced6b6186b3364ba2c47d9ed08
    SHA512:001fa38ac31ee7e85dee5ab4216563b3e418ecbac5075361736a49b6616bbe5a6348310a82c76add593273707820fa6501e42cc163bc212702c7719109d43b55
    Skein512_512:1145f9f11533072c92db6d01aed904b6dafeac37d31c75b61ded38fea3bb4ee61f9ce3ac47aac4a001e40e6001416b9722cc5edd63bf8238cb0b4c2ec7c66c92

package-locations:
    https://hackage.haskell.org/package/Contract-0.1/Contract-0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/Contract-0.1.tar.gz

package-size: 7253
-- END Added by all-cabal-hashes-tool

name:                Contract
version:             0.1
synopsis:            Practical typed lazy contracts. 
description:      
  Contracts describe properties of expressions (esp. functions) that are
  checked at run-time.
  For example, a contract states that an expression is a natural number,
  a list has at least one element or a function requires a natural number
  and a non-empty list of natural numbers as arguments and will produce a 
  natural number as result.
  Thus these properties are both documented and enforced.
  Contracts are more expressive than static types.
  If a contract is violated, then an informative exception is raised.
  See homepage or Olaf Chitil: "Practical Typed Lazy Contracts", ICFP 2012, ACM.
homepage:            http://www.cs.kent.ac.uk/~oc/contracts.html
license:             BSD3
license-file:        LICENSE
author:              Olaf Chitil
maintainer:          O.Chitil@kent.ac.uk
-- copyright:           
category:            Development
build-type:          Simple
cabal-version:       >=1.8

library
  exposed-modules:     Development.Contract
  -- other-modules:       
  build-depends:       base >=4.5 && < 5, template-haskell >= 2.7
