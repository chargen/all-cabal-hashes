-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:a08fbdf131fb1259bfc33abf8a9a951d
    SHA1:e413b1c91bc14156ee46c328e9a1213337747302
    SHA256:ad7cd4fdc52ac53a5e8a440428a5491fa15a79f60ff5a22f3bc2b6661db26a5f
    SHA512:8cdfdca36f14cd376f5349d63e62491c4651af3f891f9440737e6adbd72983ed4a57fdc34a2acca95076eeb5be371112741f7da103e35fa2eb9c3271ee3a1a8e
    Skein512_512:d7d0770acb5c3456a60813dd435bb6faf73a447e6c07485b0873ae7fe00398695fea9a93b4e4b5c8a75c720daf28653eedd18464897f506bc5582994a0ffc2f3

package-locations:
    https://hackage.haskell.org/package/snaplet-redson-0.1.0.0/snaplet-redson-0.1.0.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/snaplet-redson-0.1.0.0.tar.gz

package-size: 13797
-- END Added by all-cabal-hashes-tool

name:                snaplet-redson
version:             0.1.0.0
synopsis:            CRUD for JSON data with Redis storage

description: This snaplet provides HTTP API to /c/reate, /r/ead,
                     /u/pdate and /d/elete JSON objects sent by client
                     and stored in Redis key-value cache. CRUD methods
                     are mapped to HTTP `POST`, `GET`, `PUT` and
                     `DELETE`. Valid objects are described using model
                     definition syntax, which includes information on
                     fields and permissions. The snaplet supports
                     role-based user permissions system as implemented
                     by Snap authentication. Model definitions may
                     also be used by browser JavaScript to provide
                     interface to create or edit objects.

                     There is a permission-less transparent mode,
                     WebSocket create/delete notifications and
                     timeline method to serve information about
                     recently added objects. Ad-hoc search is
                     implemented in Redis and provided via snaplet
                     route.

                     There's a "snapless" part of the package, which
                     implements Snap-agnostic Redis CRUD operations
                     for key-value pair collections and may be used
                     for tools which operate with storage directly
                     without using web framework.

                     More of usage documentation is contained in
                     <https://github.com/dzhus/snaplet-redson/blob/master/README.org>

homepage:            https://github.com/dzhus/snaplet-redson/
bug-reports:         https://github.com/dzhus/snaplet-redson/issues/
license:             BSD3
license-file:        LICENSE
author:              Dmitry Dzhus
maintainer:          <dima@dzhus.org>
category:            Web, Snap
build-type:          Simple
cabal-version:       >=1.8
tested-with:         GHC == 7.4.1
stability:           provisional

source-repository head
  type:     git
  location: git://github.com/dzhus/snaplet-redson.git

library
  ghc-options: -Wall -fno-warn-unused-do-bind
  hs-source-dirs: src

  exposed-modules:      Snap.Snaplet.Redson,
                        Snap.Snaplet.Redson.Snapless.CRUD,
                        Snap.Snaplet.Redson.Snapless.Metamodel,
                        Snap.Snaplet.Redson.Snapless.Metamodel.Loader,
                        Snap.Snaplet.Redson.Util
  other-modules:        Snap.Snaplet.Redson.Permissions,
                        Snap.Snaplet.Redson.Search

  build-depends:        
    aeson               == 0.6.*,
    base                == 4.*,
    bytestring          == 0.9.*,
    configurator        == 0.2.*,
    containers          == 0.4.*,
    data-lens           >= 2.0.1 && < 2.1,
    data-lens-template  == 2.1.*,
    easy-file           == 0.1.*,
    hedis               == 0.4.*,
    mtl                 == 2.*,
    snap                == 0.8.*,
    snap-core           == 0.8.*,
    snaplet-redis       == 0.1.*,
    text                == 0.11.*,
    utf8-string         == 0.3.*,
    websockets          == 0.6.*,
    websockets-snap     == 0.6.*
