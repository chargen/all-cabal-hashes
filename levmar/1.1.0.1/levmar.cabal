-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:2cc26b99f96548c554d9e8ccabb45543
    SHA1:7b7cbdaa9544b376643f5723b772a11f427179ca
    SHA256:5ec8705c087b9bd892ce80d0f6f834377ad8561e4a62275329fc293ae8f0e1f2
    SHA512:c1bcafb136d5b8e3ce5fe8df2124664406ec2cae4dbe672f533527971b8d1bea26f5113b34e1590729ba0421ccadbac479c26611445ac163bc43af40e0eba1ab
    Skein512_512:faf3b514f0b31fed1fd02adc80a8ff9ad38027bdc2c0d2af9d864ee3aae8d1e996b234e3c652a000c7886ccfdeab517e88973dcbfacb0c31d821d2ba4a6bb9f6

package-locations:
    https://hackage.haskell.org/package/levmar-1.1.0.1/levmar-1.1.0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/levmar-1.1.0.1.tar.gz

package-size: 9334
-- END Added by all-cabal-hashes-tool

name:          levmar
version:       1.1.0.1
cabal-version: >= 1.6
build-type:    Simple
stability:     experimental
author:        Roel van Dijk <vandijk.roel@gmail.com>
               Bas van Dijk <v.dijk.bas@gmail.com>
maintainer:    Roel van Dijk <vandijk.roel@gmail.com>
               Bas van Dijk <v.dijk.bas@gmail.com>
copyright:     (c) 2009 - 2011 Roel van Dijk & Bas van Dijk
license:       BSD3
license-file:  LICENSE
homepage:      https://github.com/basvandijk/levmar/
bug-reports:   https://github.com/basvandijk/levmar/issues
category:      Numerical, Math
synopsis:      An implementation of the Levenberg-Marquardt algorithm
description:
  The Levenberg-Marquardt algorithm is an iterative technique that
  finds a local minimum of a function that is expressed as the sum of
  squares of nonlinear functions. It has become a standard technique
  for nonlinear least-squares problems and can be thought of as a
  combination of steepest descent and the Gauss-Newton method. When
  the current solution is far from the correct one, the algorithm
  behaves like a steepest descent method: slow, but guaranteed to
  converge. When the current solution is close to the correct
  solution, it becomes a Gauss-Newton method.
  .
  Optional box- and linear constraints can be given. Both single and
  double precision floating point types are supported.
  .
  The actual algorithm is implemented in a C library which is bundled
  with @bindings-levmar@ which this package depends on. See:
  <http://www.ics.forth.gr/~lourakis/levmar/>.
  .
  A note regarding the license:
  .
  This library depends on @bindings-levmar@ which is bundled together
  with a C library which falls under the GPL. Please be aware of this
  when distributing programs linked with this library. For details see
  the description and license of @bindings-levmar@.

extra-source-files: README.markdown

source-repository head
  Type: git
  Location: git://github.com/basvandijk/levmar.git

library
  build-depends: base                 >= 3     && < 4.5
               , base-unicode-symbols >= 0.1.1 && < 0.3
               , bindings-levmar      >= 1.0   && < 1.1
               , hmatrix              >= 0.11  && < 0.12
               , vector               >= 0.7   && < 0.8
  exposed-modules: Numeric.LevMar
  other-modules: Bindings.LevMar.CurryFriendly
  ghc-options: -Wall
