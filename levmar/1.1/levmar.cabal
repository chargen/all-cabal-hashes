-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:8fd999c5541ed87198b40f8284b80662
    SHA1:028af97b5e27039ead8b34497969e51af258ac4d
    SHA256:cf835e34f34fcb5055638e0122078d06e353c93c0afc9253c5521e960f19c0ea
    SHA512:4cc77c1114a7ed2d4a79260f97046c1684f1ef845008064268656cee713fda3a31ba1c6f730bd37060dc8a52d62d00c609c68d863d52cc12f71e6e6389a5c24e
    Skein512_512:ca47ef713629a1f92dd64f6f53a257577d6cd6aaa2f01a128336eac3fef53a5895523c443c42d54e715f77f8c5b3c2af12da3ee02768cd4365c77549f66ca138

x-package-locations:
    https://hackage.haskell.org/package/levmar-1.1/levmar-1.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/levmar-1.1.tar.gz

x-package-size: 9323
-- END Added by all-cabal-hashes-tool

name:          levmar
version:       1.1
cabal-version: >= 1.6
build-type:    Simple
stability:     experimental
author:        Roel van Dijk <vandijk.roel@gmail.com>
               Bas van Dijk <v.dijk.bas@gmail.com>
maintainer:    Roel van Dijk <vandijk.roel@gmail.com>
               Bas van Dijk <v.dijk.bas@gmail.com>
copyright:     (c) 2009 - 2011 Roel van Dijk & Bas van Dijk
license:       BSD3
license-file:  LICENSE
homepage:      https://github.com/basvandijk/levmar/
bug-reports:   https://github.com/basvandijk/levmar/issues
category:      Numerical, Math
synopsis:      An implementation of the Levenberg-Marquardt algorithm
description:
  The Levenberg-Marquardt algorithm is an iterative technique that
  finds a local minimum of a function that is expressed as the sum of
  squares of nonlinear functions. It has become a standard technique
  for nonlinear least-squares problems and can be thought of as a
  combination of steepest descent and the Gauss-Newton method. When
  the current solution is far from the correct one, the algorithm
  behaves like a steepest descent method: slow, but guaranteed to
  converge. When the current solution is close to the correct
  solution, it becomes a Gauss-Newton method.
  .
  Optional box- and linear constraints can be given. Both single and
  double precision floating point types are supported.
  .
  The actual algorithm is implemented in a C library which is bundled
  with @bindings-levmar@ which this package depends on. See:
  <http://www.ics.forth.gr/~lourakis/levmar/>.
  .
  A note regarding the license:
  .
  This library depends on @bindings-levmar@ which is bundled together
  with a C library which falls under the GPL. Please be aware of this
  when distributing programs linked with this library. For details see
  the description and license of @bindings-levmar@.

extra-source-files: README.markdown

source-repository head
  Type: git
  Location: git://github.com/basvandijk/levmar.git

library
  build-depends: base                 >= 3     && < 4.4
               , base-unicode-symbols >= 0.1.1 && < 0.3
               , bindings-levmar      >= 1.0   && < 1.1
               , hmatrix              >= 0.11  && < 0.12
               , vector               >= 0.7   && < 0.8
  exposed-modules: Numeric.LevMar
  other-modules: Bindings.LevMar.CurryFriendly
  ghc-options: -Wall
