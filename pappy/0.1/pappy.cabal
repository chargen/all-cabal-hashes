Name:                pappy
Version:             0.1
Synopsis:            Packrat parsing; linear-time parsers for grammars in TDPL.
Description:         

 Packrat parsing is a novel and practical method for implementing
 linear-time parsers for grammars defined in Top-Down Parsing
 Language (TDPL). While TDPL was originally created as a formal
 model for top-down parsers with backtracking capability, this
 thesis extends TDPL into a powerful general-purpose notation for
 describing language syntax, providing a compelling alternative to
 traditional context-free grammars (CFGs). Common syntactic idioms
 that cannot be represented concisely in a CFG are easily
 expressed in TDPL, such as longest-match disambiguation and
 "syntactic predicates," making it possible to describe the
 complete lexical and grammatical syntax of a practical
 programming language in a single TDPL grammar.
 .
 Packrat parsing is an adaptation of a 30-year-old tabular parsing
 algorithm that was never put into practice until now. A packrat
 parser can recognize any string defined by a TDPL grammar in
 linear time, providing the power and flexibility of a
 backtracking recursive descent parser without the attendant risk
 of exponential parse time. A packrat parser can recognize any
 LL(k) or LR(k) language, as well as many languages requiring
 unlimited lookahead that cannot be parsed by shift/reduce
 parsers. Packrat parsing also provides better composition
 properties than LL/LR parsing, making it more suitable for
 dynamic or extensible languages. The primary disadvantage of
 packrat parsing is its storage cost, which is a constant multiple
 of the total input size rather than being proportional to the
 nesting depth of the syntactic constructs appearing in the input.
 .
 Monadic combinators and lazy evaluation enable elegant and direct
 implementations of packrat parsers in recent functional
 programming languages such as Haskell. Three different packrat
 parsers for the Java language are presented here, demonstrating
 the construction of packrat parsers in Haskell using primitive
 pattern matching, using monadic combinators, and by automatic
 generation from a declarative parser specification. The prototype
 packrat parser generator developed for the third case itself uses
 a packrat parser to read its parser specifications, and supports
 full TDPL notation extended with "semantic predicates," allowing
 parsing decisions to depend on the semantic values of other
 syntactic entities. Experimental results show that all of these
 packrat parsers run reliably in linear time, efficiently support
 "scannerless" parsing with integrated lexical analysis, and
 provide the user-friendly error-handling facilities necessary in
 practical applications.

Homepage:            http://pdos.csail.mit.edu/~baford/packrat/thesis/
License:             BSD3
License-file:        LICENSE
Author:              Bryan Ford
Maintainer:          Chris Done <chrisdone@gmail.com>
Stability:           Alpha
Category:            Text
Build-type:          Simple
Cabal-version:       >=1.2
Executable pappy
     Main-is:        Main.hs
     Hs-source-dirs: src
     Build-depends:  base >= 4 && < 5


package-hashes:
    MD5:d2d189ed200450b37029c51e52a98827
    SHA1:7c19235aead885b13056568fe65dc6fefe7b3ab8
    SHA256:e65f1fd07b59fed23216c4b9f55827030527c469d98cd0905e6d8e0d47e70c86
    SHA512:773dec05274fc7f4667e2aadb0fc9ac864a48d782eaef8ee221ba128f64b39b9121c05b2f242f89cfce44ea7a46cfc315ff0a6c48b56fa2c778c955cb9199883
    Skein512_512:5fd103f1c42b088f124226555ad8f6d6f98422aa832ba87b6b693d44f24ba1655109733041a5d6dda10551523c37f0addce178a0085473fc5ee58aaf746d578f

package-locations:
    https://hackage.haskell.org/package/pappy-0.1/pappy-0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/pappy-0.1.tar.gz

package-size: 3041
