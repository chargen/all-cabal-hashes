Name: pipes
Version: 2.0.0
Cabal-Version: >=1.10.1
Build-Type: Simple
License: BSD3
License-File: LICENSE
Copyright: 2012 Gabriel Gonzalez
Author: Gabriel Gonzalez
Maintainer: Gabriel439@gmail.com
Stability: Experimental
Bug-Reports: mailto:Gabriel439@gmail.com
Synopsis: Compositional pipelines
Description:
  \"Iteratees done right\".  This library implements
  iteratees\/enumerators\/enumeratees simply and elegantly, using different
  naming conventions.
  .
  Advantages over traditional iteratee implementations:
  .
  * /Simpler semantics/: There is only one data type ('Pipe'), two primitives
    ('await' and 'yield'), and only one way to compose 'Pipe's ('.').  In fact,
    this library implements its entire behavior using its 'Monad' and 'Category'
    instances and enforces their laws strictly!
  .
  * /Clearer naming conventions/: Enumeratees are called 'Pipe's, Enumerators
    are 'Producer's, and Iteratees are 'Consumer's.  'Producer's and 'Consumer's
    are just type synonyms for 'Pipe's with either the input or output end
    closed.
  .
  * /Pipes are Categories/: You compose them using ordinary composition.
  .
  * /Intuitive/: Pipe composition is easier to reason about because it is a true
    'Category'.  Composition works seamlessly and you don't have to worry about
    restarting iteratees, feeding new input, etc.  \"It just works\".
  .
  * /"Vertical" concatenation works flawlessly on everything/: ('>>')
    concatenates 'Pipe's, but since everything is a 'Pipe', you can use it to
    concatenate 'Producer's, 'Consumer's, and even intermediate 'Pipe' stages.
    Vertical Concatenation always works the way you expect, picking up where the
    previous 'Pipe' left off.
  .
  Check out "Control.Pipe" for a copious tutorial and "Control.Pipe.Common" for
  the actual implementation.
Category: Control, Enumerator
Tested-With: GHC ==7.0.3
Source-Repository head
    Type: git
    Location: https://github.com/Gabriel439/Haskell-Pipes-Library

Library
    Build-Depends: base >= 4 && < 5, transformers, void
    Exposed-Modules:
        Control.Pipe,
        Control.Pipe.Common,
        Control.Pipe.Final,
        Control.Monad.Trans.Free
    GHC-Options: -O2
    Default-Language: Haskell2010


package-hashes:
    MD5:192c5ac33e9f237cccafd6ecd961f3c1
    SHA1:33dadd1c4a21e2008ee66a87613f5af4ae336bae
    SHA256:69c126d61172d0e48f5e0192591616ca3a9e252f265af0572a0f2db8972b6c81
    SHA512:c5e92210192c2519710520f3dcdd08d68b69d5a642b65dc2d3b1585431f46bf2fb05581c1a453e88a46a4365654e73535fbcc57359e0b0719a29e2a4e1ef2bbf
    Skein512_512:cf7aaeb35a687fec9d55ed83fa54dac86c79077045857fe8dde68a083afe78446d4dc8b64649d71d1667957e8cfd978fb92808610d3bd71a2e1932dd2e3f922b

package-locations:
    https://hackage.haskell.org/package/pipes-2.0.0/pipes-2.0.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/pipes-2.0.0.tar.gz

