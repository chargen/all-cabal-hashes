-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:3b196416d90d134f652acd2279da1b32
    SHA1:3f2efdecd02da75d7cb89c0c310e41433db14fb5
    SHA256:b68d008984f971c8ed277b3990fc2a47726bb5e8347d3b1e956a32d489de67c5
    SHA512:5265f75e8af39ea9e041016302ae2bd0ff7b8af3eab88654404584d7eba420d9424865ca849e55752e27a96a5bde2c88faaef5517487386b12d1e430234ff32f
    Skein512_512:97e6bea2c3d84fd6bdc7b064cefda563efcf682d3738aec57acf5fa8acb32ad3b4d7d3bd4d8f8c2b7ebe13d799faf88062440f1ec91148d12c224fda38c9f5a6

package-locations:
    https://hackage.haskell.org/package/pipes-4.1.1/pipes-4.1.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/pipes-4.1.1.tar.gz

package-size: 37789
-- END Added by all-cabal-hashes-tool

Name: pipes
Version: 4.1.1
Cabal-Version: >= 1.10
Build-Type: Simple
License: BSD3
License-File: LICENSE
Copyright: 2012-2014 Gabriel Gonzalez
Author: Gabriel Gonzalez
Maintainer: Gabriel439@gmail.com
Bug-Reports: https://github.com/Gabriel439/Haskell-Pipes-Library/issues
Synopsis: Compositional pipelines
Description:
  `pipes` is a clean and powerful stream processing library that lets you build
  and connect reusable streaming components
  .
  Advantages over traditional streaming libraries:
  .
  * /Concise API/: Use simple commands like 'for', ('>->'), 'await', and 'yield'
  .
  * /Blazing fast/: Implementation tuned for speed, including shortcut fusion
  .
  * /Lightweight Dependency/: @pipes@ is small and compiles very rapidly,
    including dependencies
  .
  * /Elegant semantics/: Use practical category theory
  .
  * /ListT/: Correct implementation of 'ListT' that interconverts with pipes
  .
  * /Bidirectionality/: Implement duplex channels
  .
  * /Extensive Documentation/: Second to none!
  .
  Import "Pipes" to use the library.
  .
  Read "Pipes.Tutorial" for an extensive tutorial.
Category: Control, Pipes
Source-Repository head
    Type: git
    Location: https://github.com/Gabriel439/Haskell-Pipes-Library

Library
    Default-Language: Haskell2010

    HS-Source-Dirs: src
    Build-Depends:
        base         >= 4       && < 5  ,
        transformers >= 0.2.0.0 && < 0.4,
        mmorph       >= 1.0.0   && < 1.1,
        mtl          >= 2.0.1.0 && < 2.2

    Exposed-Modules:
        Pipes,
        Pipes.Core,
        Pipes.Internal,
        Pipes.Lift,
        Pipes.Prelude,
        Pipes.Tutorial
    GHC-Options: -O2 -Wall

Benchmark prelude-benchmarks
    Default-Language: Haskell2010
    Type:             exitcode-stdio-1.0
    HS-Source-Dirs:   benchmarks
    Main-Is:          PreludeBench.hs
    GHC-Options:     -O2 -Wall -rtsopts -fno-warn-unused-do-bind

    Build-Depends:
        base      >= 4       && < 5  ,
        criterion >= 0.6.2.1 && < 0.9,
        mtl       >= 2.0.1.0 && < 2.2,
        pipes     >= 4.0.0   && < 4.2

test-suite tests
    Default-Language: Haskell2010
    Type:             exitcode-stdio-1.0
    HS-Source-Dirs:   tests
    Main-Is:          Main.hs
    GHC-Options:      -Wall -rtsopts -fno-warn-missing-signatures -fno-enable-rewrite-rules

    Build-Depends:
        base                       >= 4       && < 5   ,
        pipes                      >= 4.0.0   && < 4.2 ,
        QuickCheck                 >= 2.4     && < 3   ,
        mtl                        >= 2.0.1   && < 2.2 ,
        test-framework             >= 0.4     && < 1   ,
        test-framework-quickcheck2 >= 0.2.0   && < 0.4 ,
        transformers               >= 0.2.0.0 && < 0.4

Benchmark lift-benchmarks
    Default-Language: Haskell2010
    Type:             exitcode-stdio-1.0
    HS-Source-Dirs:   benchmarks
    Main-Is:          LiftBench.hs
    GHC-Options:     -O2 -Wall -rtsopts -fno-warn-unused-do-bind

    Build-Depends:
        base         >= 4       && < 5  ,
        criterion    >= 0.6.2.1 && < 0.9,
        deepseq                         ,
        mtl          >= 2.0.1.0 && < 2.2,
        pipes        >= 4.0.0   && < 4.2,
        transformers >= 0.2.0.0 && < 0.4
