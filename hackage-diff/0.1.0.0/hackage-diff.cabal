-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:8a4b62a44fbbbf4680d4b6278eccd1be
    SHA1:0926567ea24a3e2beb7649e83fc85ae5b9b0f701
    SHA256:bf8010479ba75032c6750444edc7979a65c6ce4c919a629562ddd81aa03aac4d
    SHA512:01e01aab06683b0955d292016ff4a02977254b2fdceecc610f8dea4771a8b54f9b55e3f3b3f339e2c0dec504ca96355696530ba6873e62046cedf434ef8d60bd
    Skein512_512:4dbe2754e59edd819f889af3f7755c23f67c2fd96edd440f5e540cfad28cd47343d3ad0f07e70c99e8c80f6457f50d7ce62043b83aa296f3fbdf25e71189e181

x-package-locations:
    https://hackage.haskell.org/package/hackage-diff-0.1.0.0/hackage-diff-0.1.0.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/hackage-diff-0.1.0.0.tar.gz

x-package-size: 11797
-- END Added by all-cabal-hashes-tool

-- Initial hackage-diff.cabal generated by cabal init.  For further 
-- documentation, see http://haskell.org/cabal/users-guide/

name:                hackage-diff
version:             0.1.0.0
synopsis:            Compare the public API of different versions of a Hackage library
description:         Please see <https://github.com/blitzcode/hackage-diff github.com/blitzcode/hackage-diff> for a user's manual.
                     .
                     Sample output
                     .
                     > Downloading Hoogle DBs...
                     > Parsing Hoogle DBs...
                     > Comparing Hoogle DBs...
                     > 
                     > --- Diff for | 0.2 → 0.3.5.2 | ---
                     > 
                     > + Data.Serialize.IEEE754
                     >   + getFloat32be :: Get Float
                     >   + getFloat32le :: Get Float
                     >   + getFloat64be :: Get Double
                     >   + getFloat64le :: Get Double
                     >   + putFloat32be :: Float -> Put
                     >   + putFloat32le :: Float -> Put
                     >   + putFloat64be :: Double -> Put
                     >   + putFloat64le :: Double -> Put
                     > × Data.Serialize
                     >   + instance Serialize a => GSerialize (K1 i a)
                     >   + instance GSerialize a => GSerialize (M1 i c a)
                     >   + instance (GSerialize a, GSerialize b) => GSerialize (a :*: b)
                     >   + instance GSerialize U1
                     >   + instance GSerialize a => GetSum (C1 c a)
                     >   + instance (GetSum a, GetSum b, GSerialize a, GSerialize b) => GetSum (a :+: b)
                     >   + instance GSerialize a => PutSum (C1 c a)
                     >   + instance (PutSum a, PutSum b, GSerialize a, GSerialize b) => PutSum (a :+: b)
                     >   + instance SumSize (C1 c a)
                     >   + instance (SumSize a, SumSize b) => SumSize (a :+: b)
                     >   + decodeLazy :: Serialize a => ByteString -> Either String a
                     >   + encodeLazy :: Serialize a => a -> ByteString
                     >   - data Get a
                     >   - type Put = PutM ()
                     >   - type Putter a = a -> Put
                     >   - getWord8 :: Get Word8
                     >   - putWord8 :: Putter Word8
                     > × Data.Serialize.Get
                     >   + Done :: r -> ByteString -> Result r
                     >   + instance Eq More
                     >   + Fail :: String -> Result r
                     >   + instance Functor Result
                     >   + Partial :: (ByteString -> Result r) -> Result r
                     >   + data Result r
                     >   + instance Show r => Show (Result r)
                     >   + ensure :: Int -> Get ByteString
                     >   + runGetLazy :: Get a -> ByteString -> Either String a
                     >   + runGetLazyState :: Get a -> ByteString -> Either String (a, ByteString)
                     >   + runGetPartial :: Get a -> ByteString -> Result a
                     >   × New: isolate :: Int -> Get a -> Get a
                     >     Old: isolate :: String -> Int -> Get a -> Get a
                     > × Data.Serialize.Put
                     >   + runPutLazy :: Put -> ByteString
                     >   + runPutMLazy :: PutM a -> (a, ByteString)
                     > · Data.Serialize.Builder
                     > 
                     > [+ Added] [- Removed] [× Modified] [· Unmodified]

license:             MIT
license-file:        LICENSE
author:              Tim C. Schroeder
maintainer:          www.blitzcode.net
homepage:            https://github.com/blitzcode/hackage-diff
bug-reports:         https://github.com/blitzcode/hackage-diff/issues
copyright:           (C) 2014 Tim C. Schroeder
category:            Distribution
build-type:          Simple
-- extra-source-files:  
cabal-version:       >=1.18

source-repository head
    type:           git
    location:       git@github.com:blitzcode/hackage-diff.git

executable hackage-diff
  main-is:             Main.hs
  -- other-modules:
  -- other-extensions:
  build-depends:       base             >=4.7 && <4.8,
                       Cabal            >=1.20.0.0,
                       haskell-src-exts >=1.15.0,
                       ansi-terminal    >=0.6.1.1,
                       directory        >=1.2.0.0,
                       filepath         >=1.3.0.0,
                       process          >=1.2.0.0,
                       attoparsec       >=0.12.1.0,
                       cpphs            >=1.18.5,
                       mtl              >=2.2.1,
                       text             >=1.1.1.0,
                       HTTP             >=4000.2.17,
                       async            >=2.0.1.5
  -- hs-source-dirs:      
  default-language:    Haskell2010
  ghc-options:         -Wall -O2 -rtsopts
  ghc-prof-options:    -fprof-auto -caf-all
