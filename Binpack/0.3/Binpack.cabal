-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:9aac713fef4d95d806cb45c4793cd886
    SHA1:29345f26580e470fe435f93f1d8241a9686f8f17
    SHA256:f02e3d289d7dfe39bee3b69f4a085ce280b859201b2633955e240b788b2324fe
    SHA512:88197f5fd419a0875f080d45026f65d04b62225beb90fcfceafeebc0778754baefac46953537761af0f6511e7fe0ecc70ff2a461dd2bd13b8a4fbd8cf336501f
    Skein512_512:672c0324c1f5d0109c471cb8b6ed4543735c658f0c1e5dcaf36c985cdb2c61bfc5e606f6b021e52f71a36e90b850061f88386cd6a0e1f3f614f9c16c10e039be

x-package-locations:
    https://hackage.haskell.org/package/Binpack-0.3/Binpack-0.3.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/Binpack-0.3.tar.gz

x-package-size: 8130
-- END Added by all-cabal-hashes-tool

Name:               Binpack
Version:            0.3
Cabal-Version:      >= 1.2
License:            BSD3
License-File:       LICENSE
Author:             BjÃ¶rn B. Brandenburg
Maintainer:         bbb@cs.unc.edu
Category:           Algorithms, Heuristics
Build-Type:         Simple
Synopsis:           Common bin packing heuristics
Description:

  An implementation of the first-fit, modified-first-fit, last-fit, best-fit,
  worst-fit, and almost-last-fit bin packing heuristics. Items can be packed in
  order of both decreasing and increasing size (and, of course, in unmodified
  order).
  .
  .
  The module supports both the standard (textbook) minimization problem 
  (/How many bins do I need?/) and the more practical fitting problem
  (/I've got n bins; which items can I take?/).
  .
  The API is simple and the module is documented with Haddock (complete with
  examples). The implementation of the above-mentioned heuristics is complete
  and partially tested with QuickCheck. However, note that speed has not been a
  primary concern to date.
  .
  Patches and feedback are very welcome.

Extra-Source-Files: NEWS, LICENSE

Library
  Exposed-Modules:  Data.BinPack
  build-depends:    base >= 3 && < 5, haskell98, QuickCheck
