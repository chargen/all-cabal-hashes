-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:0f8da0b53d501dbd1634caaa96bdb139
    SHA1:ea624a1ca9637285652a9179ce41d8e278435155
    SHA256:954197351bfd112485c080b3e01846df099fed793978406ba73a00802db5ad22
    SHA512:7e89d90000ccfb4c71fd0c6ab66bcf7d5071d27cfaa7841b355e181b2aef4b959ff91892de6b632ca0c2d8c3263638d249a4dde54d6bc22c2c054fe62f8785ae
    Skein512_512:a7c770aa10a2e1893181b67a5e268ba26e91638977f680767d973e2fd2f7e67daf9a0eb02b461b3d780302c8ff719b4c501509fa19b5ea81a6a7dff2aefca972

x-package-locations:
    https://hackage.haskell.org/package/shqq-0.1/shqq-0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/shqq-0.1.tar.gz

x-package-size: 5099
-- END Added by all-cabal-hashes-tool

name:                shqq
version:             0.1
license:             BSD3
license-file:        LICENSE
synopsis:            Embed shell commands with interpolated Haskell variables, and capture output
category:            System
author:              Keegan McAllister <mcallister.keegan@gmail.com>
maintainer:          Keegan McAllister <mcallister.keegan@gmail.com>
build-type:          Simple
cabal-version:       >=1.6
description:
    This library provides a quasiquoter for executing shell commands, somewhat
    similar to Perl's backtick operator.  Shell commands are IO actions, and
    they capture the command's standard output as a @String@ result.
    .
    You can use Haskell variables in a shell command.  A string representation
    of the contents will be interpolated.  The shell will see each interpolated
    variable as a single token without interpreting special characters, unless
    you choose otherwise.
    .
    Note: The shell escaping is not correct for the Windows shell.  This library
    should fail to build on Windows, as well.
    .
    Examples of using this library are included in @examples/@.

extra-source-files:
    README
  , examples/dupe.hs

-- Our shell escaping is not correct on Windows.  We make the project Unix-only
-- in two ways: the 'unix' dependency, and a CPP macro check in ShQQ.hs.

library
  exposed-modules:
      System.ShQQ
  ghc-options:      -Wall
  build-depends:
      base             >= 3 && < 5
    , template-haskell >= 2.3
    , posix-escape     >= 0.1
    , parsec           >= 3.1
    , unix

    -- NB: process-1.0 has a Unicode handling bug which makes shell escaping
    -- ineffective, compromising security.  See:
    --
    -- http://hackage.haskell.org/trac/ghc/ticket/4006
    -- http://hackage.haskell.org/trac/ghc/ticket/1414
    , process          >= 1.1

  other-extensions:
      TemplateHaskell
    , CPP

source-repository head
    type:     git
    location: git://github.com/kmcallister/shqq
