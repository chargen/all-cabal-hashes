-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:80a16519167f7e3289ae72cfcc9cdac6
    SHA1:e6c4777192237bf6df41ad8759b10e48550bf6c0
    SHA256:b2089154c1fd0ee40e092241dc3938688a7feb79e79ba61c0cd228182fffe9ca
    SHA512:e277dc094535fc12682978c5a0d91fca13835276c4bf9dbdf580b6b914950abbfbd3246c44cf3c80a3e1892b9a37d069218fcd1650c825af00baffa50712f25d
    Skein512_512:a8b2961f610d60f6d9d19a483fc6f3ce7f84c2dfd934493c94ef41afe09fe7d1740f40d2283bce2fe2a6e8534eec727a54114551fe52cdf7d8dbac97194b5698

x-package-locations:
    https://hackage.haskell.org/package/text-1.1.1.4/text-1.1.1.4.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/text-1.1.1.4.tar.gz

x-package-size: 138042
-- END Added by all-cabal-hashes-tool

name:           text
version:        1.1.1.4
homepage:       https://github.com/bos/text
bug-reports:    https://github.com/bos/text/issues
synopsis:       An efficient packed Unicode text type.
description:
    .
    An efficient packed, immutable Unicode text type (both strict and
    lazy), with a powerful loop fusion optimization framework.
    .
    The 'Text' type represents Unicode character strings, in a time and
    space-efficient manner. This package provides text processing
    capabilities that are optimized for performance critical use, both
    in terms of large data quantities and high speed.
    .
    The 'Text' type provides character-encoding, type-safe case
    conversion via whole-string case conversion functions. It also
    provides a range of functions for converting 'Text' values to and from
    'ByteStrings', using several standard encodings.
    .
    Efficient locale-sensitive support for text IO is also supported.
    .
    These modules are intended to be imported qualified, to avoid name
    clashes with Prelude functions, e.g.
    .
    > import qualified Data.Text as T
    .
    To use an extended and very rich family of functions for working
    with Unicode text (including normalization, regular expressions,
    non-standard encodings, text breaking, and locales), see
    the @text-icu@ package:
    <http://hackage.haskell.org/package/text-icu>

license:        BSD3
license-file:   LICENSE
author:         Bryan O'Sullivan <bos@serpentine.com>
maintainer:     Bryan O'Sullivan <bos@serpentine.com>
copyright:      2009-2011 Bryan O'Sullivan, 2008-2009 Tom Harper
category:       Data, Text
build-type:     Simple
cabal-version:  >= 1.8
extra-source-files:
    -- scripts/CaseFolding.txt
    -- scripts/SpecialCasing.txt
    README.markdown
    benchmarks/Setup.hs
    benchmarks/cbits/*.c
    benchmarks/haskell/*.hs
    benchmarks/haskell/Benchmarks/*.hs
    benchmarks/haskell/Benchmarks/Programs/*.hs
    benchmarks/python/*.py
    benchmarks/ruby/*.rb
    benchmarks/text-benchmarks.cabal
    changelog.md
    include/*.h
    scripts/*.hs
    tests-and-benchmarks.markdown
    tests/*.hs
    tests/.ghci
    tests/Makefile
    tests/Tests/*.hs
    tests/cabal.config
    tests/scripts/*.sh
    tests/text-tests.cabal

flag developer
  description: operate in developer mode
  default: False
  manual: True

flag integer-simple
  description: Use the simple integer library instead of GMP
  default: False

library
  c-sources:    cbits/cbits.c
  include-dirs: include

  exposed-modules:
    Data.Text
    Data.Text.Array
    Data.Text.Encoding
    Data.Text.Encoding.Error
    Data.Text.Foreign
    Data.Text.IO
    Data.Text.Internal
    Data.Text.Internal.Builder
    Data.Text.Internal.Builder.Functions
    Data.Text.Internal.Builder.Int.Digits
    Data.Text.Internal.Builder.RealFloat.Functions
    Data.Text.Internal.Encoding.Fusion
    Data.Text.Internal.Encoding.Fusion.Common
    Data.Text.Internal.Encoding.Utf16
    Data.Text.Internal.Encoding.Utf32
    Data.Text.Internal.Encoding.Utf8
    Data.Text.Internal.Functions
    Data.Text.Internal.Fusion
    Data.Text.Internal.Fusion.CaseMapping
    Data.Text.Internal.Fusion.Common
    Data.Text.Internal.Fusion.Size
    Data.Text.Internal.Fusion.Types
    Data.Text.Internal.IO
    Data.Text.Internal.Lazy
    Data.Text.Internal.Lazy.Encoding.Fusion
    Data.Text.Internal.Lazy.Fusion
    Data.Text.Internal.Lazy.Search
    Data.Text.Internal.Private
    Data.Text.Internal.Read
    Data.Text.Internal.Search
    Data.Text.Internal.Unsafe
    Data.Text.Internal.Unsafe.Char
    Data.Text.Internal.Unsafe.Shift
    Data.Text.Lazy
    Data.Text.Lazy.Builder
    Data.Text.Lazy.Builder.Int
    Data.Text.Lazy.Builder.RealFloat
    Data.Text.Lazy.Encoding
    Data.Text.Lazy.IO
    Data.Text.Lazy.Internal
    Data.Text.Lazy.Read
    Data.Text.Read
    Data.Text.Unsafe

  build-depends:
    array      >= 0.3,
    base       >= 4.2 && < 5,
    deepseq    >= 1.1.0.0,
    ghc-prim   >= 0.2

  if impl(ghc >= 7.7)
    build-depends: bytestring >= 0.10.4.0
  else
    build-depends: bytestring >= 0.9

  cpp-options: -DHAVE_DEEPSEQ
  ghc-options: -Wall -fwarn-tabs -funbox-strict-fields -O2
  if flag(developer)
    ghc-prof-options: -auto-all
    cpp-options: -DASSERTS

  if flag(integer-simple)
    cpp-options: -DINTEGER_SIMPLE
    build-depends: integer-simple >= 0.1 && < 0.5
  else
    cpp-options: -DINTEGER_GMP
    build-depends: integer-gmp >= 0.2

test-suite tests
  type:           exitcode-stdio-1.0
  hs-source-dirs: tests .
  main-is:        Tests.hs
  c-sources:      cbits/cbits.c
  include-dirs:   include

  ghc-options:
    -Wall -threaded -O0 -rtsopts

  cpp-options:
    -DASSERTS -DHAVE_DEEPSEQ -DTEST_SUITE

  build-depends:
    HUnit >= 1.2,
    QuickCheck >= 2.7,
    array,
    base,
    bytestring,
    deepseq,
    directory,
    ghc-prim,
    random,
    test-framework >= 0.4,
    test-framework-hunit >= 0.2,
    test-framework-quickcheck2 >= 0.2

  if flag(integer-simple)
    cpp-options: -DINTEGER_SIMPLE
    build-depends: integer-simple >= 0.1 && < 0.5
  else
    cpp-options: -DINTEGER_GMP
    build-depends: integer-gmp >= 0.2

source-repository head
  type:     git
  location: https://github.com/bos/text

source-repository head
  type:     mercurial
  location: https://bitbucket.org/bos/text
