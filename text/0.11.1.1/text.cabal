x-revision: 1
name:           text
version:        0.11.1.1
homepage:       https://bitbucket.org/bos/text
bug-reports:    https://bitbucket.org/bos/text/issues
synopsis:       An efficient packed Unicode text type.
description:
    .
    An efficient packed, immutable Unicode text type (both strict and
    lazy), with a powerful loop fusion optimization framework.
    .
    The 'Text' type represents Unicode character strings, in a time and
    space-efficient manner. This package provides text processing
    capabilities that are optimized for performance critical use, both
    in terms of large data quantities and high speed.
    .
    The 'Text' type provides character-encoding, type-safe case
    conversion via whole-string case conversion functions. It also
    provides a range of functions for converting 'Text' values to and from
    'ByteStrings', using several standard encodings.
    .
    Efficient locale-sensitive support for text IO is also supported.
    .
    These modules are intended to be imported qualified, to avoid name
    clashes with Prelude functions, e.g.
    .
    > import qualified Data.Text as T
    .
    To use an extended and very rich family of functions for working
    with Unicode text (including normalization, regular expressions,
    non-standard encodings, text breaking, and locales), see
    the @text-icu@ package:
    <http://hackage.haskell.org/package/text-icu>
    .
license:        BSD3
license-file:   LICENSE
author:         Bryan O'Sullivan <bos@serpentine.com>
maintainer:     Bryan O'Sullivan <bos@serpentine.com>
                Tom Harper <rtomharper@googlemail.com>
                Duncan Coutts <duncan@haskell.org>
copyright:      2008-2009 Tom Harper, 2009-2010 Bryan O'Sullivan
category:       Data, Text
build-type:     Simple
cabal-version:  >= 1.6
extra-source-files:
    README.markdown
    -- scripts/CaseFolding.txt
    -- scripts/SpecialCasing.txt
    scripts/*.hs
    tests/*.hs
    tests/Makefile
    tests/README.markdown
    tests/benchmarks/Setup.hs
    tests/benchmarks/python/*.py
    tests/benchmarks/ruby/*.rb
    tests/benchmarks/src/Data/Text/*.hs
    tests/benchmarks/src/Data/Text/Benchmarks/*.hs
    tests/benchmarks/text-benchmarks.cabal
    tests/cover-stdio.sh

flag developer
  description: operate in developer mode
  default: False

library
  exposed-modules:
    Data.Text
    Data.Text.Array
    Data.Text.Encoding
    Data.Text.Encoding.Error
    Data.Text.Foreign
    Data.Text.IO
    Data.Text.Internal
    Data.Text.Lazy
    Data.Text.Lazy.Builder
    Data.Text.Lazy.Builder.Int
    Data.Text.Lazy.Builder.RealFloat
    Data.Text.Lazy.Encoding
    Data.Text.Lazy.IO
    Data.Text.Lazy.Internal
    Data.Text.Lazy.Read
    Data.Text.Read
  other-modules:
    Data.Text.Encoding.Fusion
    Data.Text.Encoding.Fusion.Common
    Data.Text.Encoding.Utf16
    Data.Text.Encoding.Utf32
    Data.Text.Encoding.Utf8
    Data.Text.Fusion
    Data.Text.Fusion.CaseMapping
    Data.Text.Fusion.Common
    Data.Text.Fusion.Internal
    Data.Text.Fusion.Size
    Data.Text.IO.Internal
    Data.Text.Lazy.Builder.Functions
    Data.Text.Lazy.Builder.RealFloat.Functions
    Data.Text.Lazy.Encoding.Fusion
    Data.Text.Lazy.Fusion
    Data.Text.Lazy.Search
    Data.Text.Search
    Data.Text.Unsafe
    Data.Text.UnsafeChar
    Data.Text.UnsafeShift
    Data.Text.Util

  build-depends:
    array,
    base       < 5,
    bytestring >= 0.9 && < 1.0
  if impl(ghc >= 6.10)
    build-depends:
      ghc-prim, base >= 4, deepseq >= 1.1.0.0 && < 1.4
    cpp-options: -DHAVE_DEEPSEQ
  else
    build-depends: extensible-exceptions
    extensions: PatternSignatures

  ghc-options: -Wall -funbox-strict-fields -O2
  if impl(ghc >= 6.8)
    ghc-options: -fwarn-tabs
  if flag(developer)
    ghc-prof-options: -auto-all
    ghc-options: -Werror
    cpp-options: -DASSERTS

  if impl(ghc >= 6.11)
    cpp-options: -DINTEGER_GMP
    build-depends: integer-gmp >= 0.2 && < 0.3

  if impl(ghc >= 6.9) && impl(ghc < 6.11)
    cpp-options: -DINTEGER_GMP
    build-depends: integer >= 0.1 && < 0.2

source-repository head
  type:     mercurial
  location: https://bitbucket.org/bos/text

source-repository head
  type:     git
  location: https://github.com/bos/text

package-hashes:
    MD5:4620955ae7732bfdf25fd8535ae42322
    SHA1:65ea09e6770ddc11524ab027d51c76c10e859630
    SHA256:4e228d33022f751a6023e092bc64c071daeb4560e8358575e58623a542f975df
    SHA512:71a679232cd5089b6052552f78fbcb38ee01c11f5120998cfda376b25266d796eb6445c7a7d19e06c6a52043063bf255c4684c190661a5f1564722c11a7bf7bf
    Skein512_512:9a50c6095b26d97f7f6f5684b43d9cd12bed5a10fd34ef03b8eedd05a9cf198833971f8e78737481cb30a4f38c11312af607bb1a8c9c6ee85f44acb3a2c06d3e

package-locations:
    https://hackage.haskell.org/package/text-0.11.1.1/text-0.11.1.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/text-0.11.1.1.tar.gz

