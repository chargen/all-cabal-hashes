Name:                reactive-banana
Version:             0.8.0.0
Synopsis:            Library for functional reactive programming (FRP).
Description:
    Reactive-banana is a library for Functional Reactive Programming (FRP).
    .
    FRP offers an elegant and concise way to express interactive programs such as graphical user interfaces, animations, computer music or robot controllers. It promises to avoid the spaghetti code that is all too common in traditional approaches to GUI programming.
    .
    See the project homepage <http://haskell.org/haskellwiki/Reactive-banana>
    for more detailed documentation and examples.
    .
    /Stability forecast:/
    .
    No semantic bugs expected.
    .
    Significant API changes are likely in future versions,
    though the main interface is beginning to stabilize.
    .
    The library features an efficient, push-driven implementation
    and has seen some optimization work.
    However, the inner loop still has a rather large constant factor overhead.
    Moreover, there is currently /no/ garbage collection for events that are
    created dynamically with @Reactive.Banana.Switch@.

Homepage:            http://haskell.org/haskellwiki/Reactive-banana
License:             BSD3
License-file:        LICENSE
Author:              Heinrich Apfelmus
Maintainer:          Heinrich Apfelmus <apfelmus quantentunnel de>
Category:            FRP
Cabal-version:       >= 1.9.2
Build-type:          Simple

extra-source-files:     CHANGELOG.md,
                        doc/examples/*.hs,
                        src/Reactive/Banana/Test.hs,
                        src/Reactive/Banana/Test/Plumbing.hs

Source-repository head
    type:               git
    location:           git://github.com/HeinrichApfelmus/reactive-banana.git
    subdir:             reactive-banana/

flag UseExtensions
    description: Use GHC-specific language extensions.
                 This enables the efficient push-driven implementation,
                 but doesn't necessarily work with compilers other than GHC.
-- Cabal checks if the package can be build with  UseExtensions = True,
-- otherewise it is set to  False .

Library
    hs-source-dirs:     src
    
    extensions:         RecursiveDo,
                        Rank2Types, ScopedTypeVariables,
                        ExistentialQuantification,
                        TypeSynonymInstances, FlexibleInstances,
                        NoMonomorphismRestriction
    
    build-depends:      base >= 4.2 && < 5,
                        containers >= 0.3 && < 0.6,
                        transformers >= 0.2 && < 0.4,
                        vault == 0.3.*

    extensions:         EmptyDataDecls,
                        BangPatterns

    build-depends:      unordered-containers >= 0.2.1.0 && < 0.3,
                        hashable >= 1.1 && < 1.3,
                        pqueue >= 1.0 && < 1.3

--      CPP-options:    -DUseExtensions
        
    exposed-modules:
                        Control.Event.Handler,
                        Reactive.Banana,
                        Reactive.Banana.Combinators,
                        Reactive.Banana.Experimental.Calm,
                        Reactive.Banana.Frameworks,
                        Reactive.Banana.Model,
                        Reactive.Banana.Prim,
                        Reactive.Banana.Prim.Cached,
                        Reactive.Banana.Switch
    
    other-modules:
                        Reactive.Banana.Internal.Combinators,
                        Reactive.Banana.Internal.Phantom,
                        Reactive.Banana.Prim.Combinators,
                        Reactive.Banana.Prim.Compile,
                        Reactive.Banana.Prim.Dated,
                        Reactive.Banana.Prim.Dependencies,
                        Reactive.Banana.Prim.Evaluation,
                        Reactive.Banana.Prim.IO,
                        Reactive.Banana.Prim.Order,
                        Reactive.Banana.Prim.Plumbing,
                        Reactive.Banana.Prim.Test,
                        Reactive.Banana.Prim.Types,
                        Reactive.Banana.Types

Test-Suite tests
    type:               exitcode-stdio-1.0
    hs-source-dirs:     src
    main-is:            Reactive/Banana/Test.hs
    build-depends:      base >= 4.2 && < 5,
                        HUnit >= 1.2 && < 2,
                        test-framework >= 0.6 && < 0.9,
                        test-framework-hunit >= 0.2 && < 0.4,
                        reactive-banana, vault, containers, transformers,
                        unordered-containers, hashable, pqueue


package-hashes:
    MD5:a08a7cd8662b41548c09de96c67158d3
    SHA1:8fbcc70fa92e13fce9c59e09db60cd7cb4d4d565
    SHA256:41e5643f4719acf9fd4a85ad64c555270b378d9ca1790a027933e9c58eddbf95
    SHA512:16e8f4760160c019a46dc81b49acbc3afca442764d3717951ec3c4038073183c724aa257d58faa7b5b0c96cdc49453ca1952a0b4882c5141e807e38794b127d3
    Skein512_512:2c696bbf9df37e3b6ed2e44b90cd8dc3a6011ef4178c47616f34b6b8aef8d4719dcda3d850d07eb32140c98dfc3786c4801faad4f091401b88fc578fc310ab8a

package-locations:
    https://hackage.haskell.org/package/reactive-banana-0.8.0.0/reactive-banana-0.8.0.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/reactive-banana-0.8.0.0.tar.gz

