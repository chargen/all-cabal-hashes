-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:85726d9135c52b82f57a952b359ce3c6
    SHA1:433b2a205e7fee7a037e02a1337490e5d411adb5
    SHA256:ad736ec1d29f7cc6c8d65604a5e8e6a665f4da394f3a6ea83dafa6244539d360
    SHA512:216a2b8946893c022c290a39fd2ca3c9dfc6d0404496b6d1056ea9178714321c658ffd17b956c027bb0efb0313d081b4065774edb052dfc9726fb99a42573a51
    Skein512_512:ca0a14bfc213ffc85f099ee83015b18457b1248ca25be0f02ca7ab24b0a502369bfdf4a1bf7d5f175d46b4850718dd984b5a7e36edcd6c06376a0061753b5d48

package-locations:
    https://hackage.haskell.org/package/distributed-process-simplelocalnet-0.2.0.4/distributed-process-simplelocalnet-0.2.0.4.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/distributed-process-simplelocalnet-0.2.0.4.tar.gz

package-size: 6985
-- END Added by all-cabal-hashes-tool

Name:          distributed-process-simplelocalnet
Version:       0.2.0.4
Cabal-Version: >=1.8
Build-Type:    Simple
License:       BSD3 
License-File:  LICENSE
Copyright:     Well-Typed LLP
Author:        Duncan Coutts, Nicolas Wu, Edsko de Vries
Maintainer:    edsko@well-typed.com, dcoutts@well-typed.com
Stability:     experimental
Homepage:      http://github.com/haskell-distributed/distributed-process
Bug-Reports:   mailto:edsko@well-typed.com
Synopsis:      Simple zero-configuration backend for Cloud Haskell 
Description:   Simple backend based on the TCP transport which offers node
               discovery based on UDP multicast. This is a zero-configuration
               backend designed to get you going with Cloud Haskell quickly
               without imposing any structure on your application.
Tested-With:   GHC==7.2.2 GHC==7.4.1 GHC==7.4.2
Category:      Control 

Source-Repository head
  Type:     git
  Location: https://github.com/haskell-distributed/distributed-process
  SubDir:   distributed-process-simplelocalnet

Library
  Build-Depends:     base >= 4.4 && < 5,
                     bytestring >= 0.9 && < 0.11,
                     network >= 2.3 && < 2.4,
                     network-multicast >= 0.0 && < 0.1,
                     data-accessor >= 0.2 && < 0.3,
                     binary >= 0.5 && < 0.6,
                     containers >= 0.4 && < 0.6,
                     transformers >= 0.2 && < 0.4,
                     network-transport >= 0.2 && < 0.3,
                     network-transport-tcp >= 0.2 && < 0.3,
                     distributed-process >= 0.2 && < 0.4
  Exposed-modules:   Control.Distributed.Process.Backend.SimpleLocalnet,
                     Control.Distributed.Process.Backend.SimpleLocalnet.Internal.Multicast
  Extensions:        RankNTypes,
                     DeriveDataTypeable
  ghc-options:       -Wall
  HS-Source-Dirs:    src

-- Not a proper test, but we want to use cabal to compile it
Test-Suite TestSimpleLocalnet
  Type:              exitcode-stdio-1.0
  Main-Is:           TestSimpleLocalnet.hs
  Build-Depends:     base >= 4.4 && < 5,
                     bytestring >= 0.9 && < 0.11,
                     network >= 2.3 && < 2.4,
                     network-multicast >= 0.0 && < 0.1,
                     data-accessor >= 0.2 && < 0.3,
                     binary >= 0.5 && < 0.6,
                     containers >= 0.4 && < 0.6,
                     transformers >= 0.2 && < 0.4,
                     network-transport >= 0.2 && < 0.3,
                     network-transport-tcp >= 0.2 && < 0.3,
                     distributed-process >= 0.2 && < 0.3
  Extensions:        RankNTypes,
                     DeriveDataTypeable
  ghc-options:       -Wall -threaded -rtsopts -with-rtsopts=-N -fno-warn-unused-do-bind 
  HS-Source-Dirs:    tests src
