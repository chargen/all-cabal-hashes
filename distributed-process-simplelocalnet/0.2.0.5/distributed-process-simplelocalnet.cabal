-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:ac33d929a3fa4faf3b4c9eb096697a46
    SHA1:ac26260d314cc593445e405b8d71b0b328c5db0c
    SHA256:7c9431dc301d3cac69ef38dc333f5a15689769620dfed071bd9cb83bd62d9d11
    SHA512:8440631d0efc6c7afc5a9de84892f179cf6ae49ea6319835811c3d9eebfb556880872be82d089c83b00f8d4fe5de22028dde9907e0f3c515418fdccedc9205b1
    Skein512_512:8189eb2651ec856df97ac04a46552e41a8aa09f0baa6cb7e358abf59a6c47d0587c36ec72adea79248db985968b247cc500f8f0c3c238eb18839353519c512dd

package-locations:
    https://hackage.haskell.org/package/distributed-process-simplelocalnet-0.2.0.5/distributed-process-simplelocalnet-0.2.0.5.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/distributed-process-simplelocalnet-0.2.0.5.tar.gz

package-size: 7286
-- END Added by all-cabal-hashes-tool

Name:          distributed-process-simplelocalnet
Version:       0.2.0.5
Cabal-Version: >=1.8
Build-Type:    Simple
License:       BSD3 
License-File:  LICENSE
Copyright:     Well-Typed LLP
Author:        Duncan Coutts, Nicolas Wu, Edsko de Vries
Maintainer:    edsko@well-typed.com, dcoutts@well-typed.com
Stability:     experimental
Homepage:      http://github.com/haskell-distributed/distributed-process
Bug-Reports:   mailto:edsko@well-typed.com
Synopsis:      Simple zero-configuration backend for Cloud Haskell 
Description:   Simple backend based on the TCP transport which offers node
               discovery based on UDP multicast. This is a zero-configuration
               backend designed to get you going with Cloud Haskell quickly
               without imposing any structure on your application.
Tested-With:   GHC==7.2.2 GHC==7.4.1 GHC==7.4.2
Category:      Control 

Source-Repository head
  Type:     git
  Location: https://github.com/haskell-distributed/distributed-process
  SubDir:   distributed-process-simplelocalnet

Library
  Build-Depends:     base >= 4.4 && < 5,
                     bytestring >= 0.9 && < 0.11,
                     network >= 2.3 && < 2.4,
                     network-multicast >= 0.0 && < 0.1,
                     data-accessor >= 0.2 && < 0.3,
                     binary >= 0.5 && < 0.6,
                     containers >= 0.4 && < 0.6,
                     transformers >= 0.2 && < 0.4,
                     network-transport >= 0.2 && < 0.3,
                     network-transport-tcp >= 0.2 && < 0.3,
                     distributed-process >= 0.2 && < 0.4
  Exposed-modules:   Control.Distributed.Process.Backend.SimpleLocalnet,
                     Control.Distributed.Process.Backend.SimpleLocalnet.Internal.Multicast
  Extensions:        RankNTypes,
                     DeriveDataTypeable
  ghc-options:       -Wall
  HS-Source-Dirs:    src

-- Not a proper test, but we want to use cabal to compile it
Test-Suite TestSimpleLocalnet
  Type:              exitcode-stdio-1.0
  Main-Is:           TestSimpleLocalnet.hs
  Build-Depends:     base >= 4.4 && < 5,
                     bytestring >= 0.9 && < 0.11,
                     network >= 2.3 && < 2.4,
                     network-multicast >= 0.0 && < 0.1,
                     data-accessor >= 0.2 && < 0.3,
                     binary >= 0.5 && < 0.6,
                     containers >= 0.4 && < 0.6,
                     transformers >= 0.2 && < 0.4,
                     network-transport >= 0.2 && < 0.3,
                     network-transport-tcp >= 0.2 && < 0.3,
                     distributed-process >= 0.2 && < 0.4
  Extensions:        RankNTypes,
                     DeriveDataTypeable
  ghc-options:       -Wall -threaded -rtsopts -with-rtsopts=-N -fno-warn-unused-do-bind 
  HS-Source-Dirs:    tests src
