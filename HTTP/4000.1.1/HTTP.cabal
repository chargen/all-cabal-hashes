Name: HTTP
Version: 4000.1.1
x-revision: 1
Cabal-Version: >= 1.2
Build-type: Simple
License: BSD3
License-file: LICENSE
Copyright: 
  Copyright (c) 2002, Warrick Gray
  Copyright (c) 2002-2005, Ian Lynagh
  Copyright (c) 2003-2006, Bjorn Bringert
  Copyright (c) 2004, Andre Furtado
  Copyright (c) 2004, Ganesh Sittampalam
  Copyright (c) 2004-2005, Dominic Steinitz
  Copyright 2007 Robin Bate Boerop
  Copyright 2008- Sigbjorn Finne
Author: Warrick Gray <warrick.gray@hotmail.com>
Maintainer: Ganesh Sittampalam <ganesh@earth.li>
Homepage: http://projects.haskell.org/http/
Category: Network
Synopsis: A library for client-side HTTP
Description: 

 The HTTP package supports client-side web programming in Haskell. It lets you set up 
 HTTP connections, transmitting requests and processing the responses coming back, all
 from within the comforts of Haskell. It's dependent on the network package to operate,
 but other than that, the implementation is all written in Haskell.
 .
 A basic API for issuing single HTTP requests + receiving responses is provided. On top
 of that, a session-level abstraction is also on offer  (the @BrowserAction@ monad);
 it taking care of handling the management of persistent connections, proxies,
 state (cookies) and authentication credentials required to handle multi-step
 interactions with a web server.
 .
 The representation of the bytes flowing across is extensible via the use of a type class,
 letting you pick the representation of requests and responses that best fits your use.
 Some pre-packaged, common instances are provided for you (@ByteString@, @String@.)
 .
 Here's an example use:
 .
 >
 >    do
 >      rsp <- Network.HTTP.simpleHTTP (getRequest "http://www.haskell.org/")
 >              -- fetch document and return it (as a 'String'.)
 >      fmap (take 100) (getResponseBody rsp)
 >
 >    do 
 >      rsp <- Network.Browser.browse $ do
 >               setAllowRedirects True -- handle HTTP redirects
 >               request $ getRequest "http://google.com/"
 >      fmap (take 100) (getResponseBody rsp)
 > 
 .
 Git repository available at <git://github.com/haskell/HTTP.git>

Extra-Source-Files: CHANGES

Flag old-base
  description: Old, monolithic base
  default: False

Library
  Exposed-modules: 
                 Network.BufferType,
                 Network.Stream,
                 Network.StreamDebugger,
                 Network.StreamSocket,
                 Network.TCP,                
                 Network.HTTP,
                 Network.HTTP.Headers,
                 Network.HTTP.Base,
                 Network.HTTP.Stream,
                 Network.HTTP.Auth,
                 Network.HTTP.Cookie,
                 Network.HTTP.Proxy,
                 Network.HTTP.HandleStream,
                 Network.Browser
  Other-modules:
                 Network.HTTP.Base64,
                 Network.HTTP.MD5,
                 Network.HTTP.MD5Aux,
                 Network.HTTP.Utils
  GHC-options: -fwarn-missing-signatures -Wall
  Build-depends: base >= 2 && < 4.4, network < 2.4, parsec, mtl
  if flag(old-base)
    Build-depends: base < 3
  else
    Build-depends: base >= 3, array, old-time, bytestring

  if os(windows)
    Build-depends: Win32


package-hashes:
    MD5:ddf23d46c4d6dc0048c454e3d01caa57
    SHA1:cdb8ae29b8524a912545059e4ec4a2b25ada88c5
    SHA256:c3b7f8815f5528c88a41a4d62c4a0586edde644f83ae514f036a1cb35ce97026
    SHA512:ae2d28473cb5a17c19979487c3c4620e7bc6937b8ff7477f2ddede8b6d56f85fc41c959b01d4683b30d939ab4a6d3e8d13f2aefd85c26de38f88bd324cfdf439
    Skein512_512:626ec651183553069ba7777b71b704547707580c38eec85b179a94dcee0292df55c4dec9139fb6b4d59fea4f3b7b840ff034d4fd414224726936707d9070a8d7

package-locations:
    https://hackage.haskell.org/package/HTTP-4000.1.1/HTTP-4000.1.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/HTTP-4000.1.1.tar.gz

package-size: 59459
