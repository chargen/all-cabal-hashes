-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:2dc64c94741c449977a0129bbe287bd3
    SHA1:62114ae36271fc6d9f8947dc8d149e5b4cf8f29d
    SHA256:e7d7172c2a532263fe6aff81869f500a82cc43405a9b70d56280bf03e922ce3a
    SHA512:192cbeed6398f41843f1c92a12cfc67c53b710044e023f56561091819cafdb774aa9a79af616d6174d71ab25491d642d5a022e1ba618e0bf7b3735818a4ccfaf
    Skein512_512:4d4fd54bb7baccc817b491ee33f6d1964991bab50426d7635c2b277f702140703306854464fcfb9fd5587e6d1c317955609160bc7c4f982c9f9f6a9874da4626

x-package-locations:
    https://hackage.haskell.org/package/HTTP-4000.2.9/HTTP-4000.2.9.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/HTTP-4000.2.9.tar.gz

x-package-size: 67930
-- END Added by all-cabal-hashes-tool

Name: HTTP
Version: 4000.2.9
Cabal-Version: >= 1.8
Build-type: Simple
License: BSD3
License-file: LICENSE
Author: Warrick Gray <warrick.gray@hotmail.com>
Maintainer: Ganesh Sittampalam <http@projects.haskell.org>
Homepage: https://github.com/haskell/HTTP
Category: Network
Synopsis: A library for client-side HTTP
Description: 

 The HTTP package supports client-side web programming in Haskell. It lets you set up 
 HTTP connections, transmitting requests and processing the responses coming back, all
 from within the comforts of Haskell. It's dependent on the network package to operate,
 but other than that, the implementation is all written in Haskell.
 .
 A basic API for issuing single HTTP requests + receiving responses is provided. On top
 of that, a session-level abstraction is also on offer  (the @BrowserAction@ monad);
 it taking care of handling the management of persistent connections, proxies,
 state (cookies) and authentication credentials required to handle multi-step
 interactions with a web server.
 .
 The representation of the bytes flowing across is extensible via the use of a type class,
 letting you pick the representation of requests and responses that best fits your use.
 Some pre-packaged, common instances are provided for you (@ByteString@, @String@.)
 .
 Here's an example use:
 .
 >
 >    do
 >      rsp <- Network.HTTP.simpleHTTP (getRequest "http://www.haskell.org/")
 >              -- fetch document and return it (as a 'String'.)
 >      fmap (take 100) (getResponseBody rsp)
 >
 >    do
 >      (_, rsp)
 >         <- Network.Browser.browse $ do
 >               setAllowRedirects True -- handle HTTP redirects
 >               request $ getRequest "http://www.haskell.org/"
 >      return (take 100 (rspBody rsp))

Extra-Source-Files: CHANGES

Source-Repository head
  type: git
  location: https://github.com/haskell/HTTP.git

Flag old-base
  description: Old, monolithic base
  default: False

Flag mtl1
  description: Use the old mtl version 1.
  default: False

Flag warn-as-error
  default:     False
  description: Build with warnings-as-errors

Flag network23
  description: Use version 2.3.x or below of the network package
  default: False

Library
  Exposed-modules: 
                 Network.BufferType,
                 Network.Stream,
                 Network.StreamDebugger,
                 Network.StreamSocket,
                 Network.TCP,                
                 Network.HTTP,
                 Network.HTTP.Headers,
                 Network.HTTP.Base,
                 Network.HTTP.Stream,
                 Network.HTTP.Auth,
                 Network.HTTP.Cookie,
                 Network.HTTP.Proxy,
                 Network.HTTP.HandleStream,
                 Network.Browser
  Other-modules:
                 Network.HTTP.Base64,
                 Network.HTTP.MD5Aux,
                 Network.HTTP.Utils
                 Paths_HTTP
  GHC-options: -fwarn-missing-signatures -Wall
  Build-depends: base >= 2 && < 4.8, network < 2.5, parsec
  Extensions: FlexibleInstances
  if flag(old-base)
    Build-depends: base < 3
  else
    Build-depends: base >= 3, array, old-time, bytestring

  if flag(mtl1)
    Build-depends: mtl >= 1.1 && < 1.2
    CPP-Options: -DMTL1
  else
    Build-depends: mtl >= 2.0 && < 2.2

  if flag(warn-as-error)
    ghc-options:      -Werror

  if os(windows)
    Build-depends: Win32

Test-Suite test
  type: exitcode-stdio-1.0

  build-tools: ghc >= 6.10 && < 7.10

  hs-source-dirs: test
  main-is: httpTests.hs

  -- note: version constraints are inherited from HTTP library stanza
  build-depends:     HTTP,
                     HUnit,
                     httpd-shed,
                     mtl >= 2.0 && < 2.2,
                     bytestring >= 0.9 && < 0.11,
                     case-insensitive >= 0.4 && < 1.2,
                     deepseq >= 1.3 && < 1.4,
                     http-types >= 0.6 && < 0.9,
                     conduit >= 0.4 && < 1.1,
                     wai >= 1.2 && < 1.4,
                     -- compile failure with warp 1.3.10
                     warp >= 1.2 && < 1.3.10,
                     pureMD5 >= 2.1 && < 2.2,
                     base >= 2 && < 4.8,
                     network,
                     split >= 0.1 && < 0.3,
                     test-framework,
                     test-framework-hunit

