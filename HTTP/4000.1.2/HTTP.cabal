-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:0871666457aeabe4ed8ebce0acb424b7
    SHA1:b5ee196ac334c1571980b2eba0b99999f03cc1c4
    SHA256:c8725620a1566bcc6ded1304cced716b6d1f6e78da78aa580076671b3bf26ca7
    SHA512:41c985d47132ced2e094f24ab0bdfff13f58f6a1dccf78965aec30844d9646e7d3d7526a211ccef0f480f94dc181e51923bcb5900ab3fce14f634b7a05ffee76
    Skein512_512:7d761457f764f6e80dde81b60f6cb76b1ba51d0333cdc003ef1b198c9f68f713f76947af9182cec396a013b44682e6f053e7b50a67c2a8802e55aa66b097b52c

x-package-locations:
    https://hackage.haskell.org/package/HTTP-4000.1.2/HTTP-4000.1.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/HTTP-4000.1.2.tar.gz

x-package-size: 59835
-- END Added by all-cabal-hashes-tool

Name: HTTP
Version: 4000.1.2
x-revision: 1
Cabal-Version: >= 1.2
Build-type: Simple
License: BSD3
License-file: LICENSE
Copyright: 
  Copyright (c) 2002, Warrick Gray
  Copyright (c) 2002-2005, Ian Lynagh
  Copyright (c) 2003-2006, Bjorn Bringert
  Copyright (c) 2004, Andre Furtado
  Copyright (c) 2004, Ganesh Sittampalam
  Copyright (c) 2004-2005, Dominic Steinitz
  Copyright 2007 Robin Bate Boerop
  Copyright 2008- Sigbjorn Finne
Author: Warrick Gray <warrick.gray@hotmail.com>
Maintainer: Ganesh Sittampalam <ganesh@earth.li>
Homepage: http://projects.haskell.org/http/
Category: Network
Synopsis: A library for client-side HTTP
Description: 

 The HTTP package supports client-side web programming in Haskell. It lets you set up 
 HTTP connections, transmitting requests and processing the responses coming back, all
 from within the comforts of Haskell. It's dependent on the network package to operate,
 but other than that, the implementation is all written in Haskell.
 .
 A basic API for issuing single HTTP requests + receiving responses is provided. On top
 of that, a session-level abstraction is also on offer  (the @BrowserAction@ monad);
 it taking care of handling the management of persistent connections, proxies,
 state (cookies) and authentication credentials required to handle multi-step
 interactions with a web server.
 .
 The representation of the bytes flowing across is extensible via the use of a type class,
 letting you pick the representation of requests and responses that best fits your use.
 Some pre-packaged, common instances are provided for you (@ByteString@, @String@.)
 .
 Here's an example use:
 .
 >
 >    do
 >      rsp <- Network.HTTP.simpleHTTP (getRequest "http://www.haskell.org/")
 >              -- fetch document and return it (as a 'String'.)
 >      fmap (take 100) (getResponseBody rsp)
 >
 >    do 
 >      rsp <- Network.Browser.browse $ do
 >               setAllowRedirects True -- handle HTTP redirects
 >               request $ getRequest "http://google.com/"
 >      fmap (take 100) (getResponseBody rsp)
 > 
 .
 Git repository available at <git://github.com/haskell/HTTP.git>

Extra-Source-Files: CHANGES

Flag old-base
  description: Old, monolithic base
  default: False

Library
  Exposed-modules: 
                 Network.BufferType,
                 Network.Stream,
                 Network.StreamDebugger,
                 Network.StreamSocket,
                 Network.TCP,                
                 Network.HTTP,
                 Network.HTTP.Headers,
                 Network.HTTP.Base,
                 Network.HTTP.Stream,
                 Network.HTTP.Auth,
                 Network.HTTP.Cookie,
                 Network.HTTP.Proxy,
                 Network.HTTP.HandleStream,
                 Network.Browser
  Other-modules:
                 Network.HTTP.Base64,
                 Network.HTTP.MD5,
                 Network.HTTP.MD5Aux,
                 Network.HTTP.Utils
  GHC-options: -fwarn-missing-signatures -Wall
  Build-depends: base >= 2 && < 4.5, network < 2.4, parsec, mtl
  Extensions: FlexibleInstances
  if flag(old-base)
    Build-depends: base < 3
  else
    Build-depends: base >= 3, array, old-time, bytestring

  if os(windows)
    Build-depends: Win32
