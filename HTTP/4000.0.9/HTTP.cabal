Name: HTTP
Version: 4000.0.9
Cabal-Version: >= 1.2
Build-type: Simple
License: BSD3
License-file: LICENSE
Copyright: 
  Copyright (c) 2002, Warrick Gray
  Copyright (c) 2002-2005, Ian Lynagh
  Copyright (c) 2003-2006, Bjorn Bringert
  Copyright (c) 2004, Andre Furtado
  Copyright (c) 2004, Ganesh Sittampalam
  Copyright (c) 2004-2005, Dominic Steinitz
  Copyright 2007 Robin Bate Boerop
  Copyright 2008- Sigbjorn Finne
Author: Warrick Gray <warrick.gray@hotmail.com>
Maintainer: Sigbjorn Finne <sigbjorn.finne@gmail.com>
Homepage: http://projects.haskell.org/http/
Category: Network
Synopsis: A library for client-side HTTP
Description: 

 The HTTP package supports client-side web programming in Haskell. It lets you set up 
 HTTP connections, transmitting requests and processing the responses coming back, all
 from within the comforts of Haskell. It's dependent on the network package to operate,
 but other than that, the implementation is all written in Haskell.
 .
 A basic API for issuing single HTTP requests + receiving responses is provided. On top
 of that, a session-level abstraction is also on offer  (the @BrowserAction@ monad);
 it taking care of handling the management of persistent connections, proxies,
 state (cookies) and authentication credentials required to handle multi-step
 interactions with a web server.
 .
 The representation of the bytes flowing across is extensible via the use of a type class,
 letting you pick the representation of requests and responses that best fits your use.
 Some pre-packaged, common instances are provided for you (@ByteString@, @String@.)
 .
 Here's an example use:
 .
 >
 >    do
 >      rsp <- Network.HTTP.simpleHTTP (getRequest "http://www.haskell.org/")
 >              -- fetch document and return it (as a 'String'.)
 >      fmap (take 100) (getResponseBody rsp)
 >
 >    do 
 >      rsp <- Network.Browser.browse $ do
 >               setAllowRedirects True -- handle HTTP redirects
 >               request $ getRequest "http://google.com/"
 >      fmap (take 100) (getResponseBody rsp)
 > 
 .
 Git repository available at <git://code.galois.com/HTTPbis.git>

Extra-Source-Files: CHANGES

Flag old-base
  description: Old, monolithic base
  default: False

Library
  Exposed-modules: 
                 Network.BufferType,
                 Network.Stream,
                 Network.StreamDebugger,
                 Network.StreamSocket,
                 Network.TCP,                
                 Network.HTTP,
                 Network.HTTP.Headers,
                 Network.HTTP.Base,
                 Network.HTTP.Stream,
                 Network.HTTP.Auth,
                 Network.HTTP.Cookie,
                 Network.HTTP.Proxy,
                 Network.HTTP.HandleStream,
                 Network.Browser
  Other-modules:
                 Network.HTTP.Base64,
                 Network.HTTP.MD5,
                 Network.HTTP.MD5Aux,
                 Network.HTTP.Utils
  GHC-options: -fwarn-missing-signatures -Wall
  Build-depends: base >= 2 && < 4, network, parsec, mtl
  if flag(old-base)
    Build-depends: base < 3
  else
    Build-depends: base >= 3, array, old-time, bytestring

  if os(windows)
    Build-depends: Win32


package-hashes:
    MD5:bbd005935537ed8883bfefb624e8bf3c
    SHA1:bb20dda6d504918be3336c7d789e4df840fe9d4a
    SHA256:1e2b4a8b782ad1417c8755bb0d248851bc142b351366ed460e07f2945a5e95ba
    SHA512:d9c390af1b392ca5ca595928713c3574bf4cf3e832bffd3f79fd49e44110462432dffe8653765102ea27242272e161107bfc83aac5113f7d905e0fd420983a26
    Skein512_512:5913276aed75f1c7c264d30bdaedd20fb79ca413fab514857b5baae9faea1b5b2cdfc11a1f533cfcad6dae8293958c03661771c030eee2d5c6c6b9bee323bb0e

package-locations:
    https://hackage.haskell.org/package/HTTP-4000.0.9/HTTP-4000.0.9.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/HTTP-4000.0.9.tar.gz

