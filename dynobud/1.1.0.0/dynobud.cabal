-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:a7ef25665706a22aadb2ee4cd2fc6d2d
    SHA1:ff49ea40b1ca70e27bf3daaba34fb84383320856
    SHA256:2e87f56e6e957230db39595cc3f2bfbc982ffa946a85f83aa87e6fee8b56ffad
    SHA512:164c9bafb9ca87284c9e0e1cd869b709cd189caa6e4fe3c60a1ae96e310550b949dc9e9fff72f33a6f695c9a584ff1eb2a6ec6ea8e4f6d2898bc7e08cd150f62
    Skein512_512:76e6d3023108a77697f3c3e6ef7cfcc2f759af457c798c2a5d36479a4de5f20be8fa161ee3ecbed7ddd369ac2ffdc43ff31561f3f71ea7e3ac8a26c24e803b3b

package-locations:
    https://hackage.haskell.org/package/dynobud-1.1.0.0/dynobud-1.1.0.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/dynobud-1.1.0.0.tar.gz

package-size: 91325
-- END Added by all-cabal-hashes-tool

name:                dynobud
version:             1.1.0.0
synopsis:            your dynamic optimization buddy
description:         See readme at <http://www.github.com/ghorn/dynobud http://www.github.com/ghorn/dynobud>
license:             LGPL-3
license-file:        LICENSE
author:              Greg Horn
maintainer:          gregmainland@gmail.com
copyright:           (c) Greg Horn 2013-2015
category:            Science
build-type:          Simple
cabal-version:       >=1.10
extra-source-files:  README.md
stability:           Experimental

source-repository head
  type:     git
  location: git://github.com/ghorn/dynobud.git

library
  exposed-modules:     Dyno.LagrangePolynomials
                       Dyno.TypeVecs
                       Dyno.MultipleShooting
                       Dyno.Ocp
                       Dyno.DirectCollocation
                       Dyno.DirectCollocation.Dynamic
                       Dyno.DirectCollocation.Export
                       Dyno.DirectCollocation.Formulate
                       Dyno.DirectCollocation.Integrate
                       Dyno.DirectCollocation.Profile
                       Dyno.DirectCollocation.Quadratures
                       Dyno.DirectCollocation.Robust
                       Dyno.DirectCollocation.Types
                       Dyno.SXElement
                       Dyno.View.Cov
                       Dyno.View.CustomFunction
                       Dyno.View.Fun
                       Dyno.View.FunJac
                       Dyno.View.HList
                       Dyno.View.JV
                       Dyno.View.JVec
                       Dyno.View.M
                       Dyno.View.Scheme
                       Dyno.View.Symbolic
                       Dyno.View.Unsafe.View
                       Dyno.View.Unsafe.M
                       Dyno.View.View
                       Dyno.View.Viewable
                       Dyno.Vectorize
                       Dyno.Nlp
                       Dyno.NlpScaling
                       Dyno.NlpSolver
                       Dyno.Solvers
--                       Dyno.Sqp.Sqp
--                       Dyno.Sqp.LineSearch
                       Dyno.Server.Accessors
                       Dyno.Server.GraphWidget
                       Dyno.Server.PlotChart
                       Dyno.Server.PlotTypes
                       Dyno.Server.Server

  other-modules:

  build-depends:       base >=4.6 && < 5,
                       casadi-bindings-core >= 2.2.0.2,
                       casadi-bindings >= 2.2.0.4,
--                       casadi-bindings-internal,
                       jacobi-roots >=0.2 && <0.3,
                       spatial-math >= 0.2.1.0,
                       vector >=0.10,
                       data-default,
                       mtl >=2.2.1,
                       containers >=0.5,
                       hmatrix,
                       linear >= 1.3.1.1,
                       reflection >= 1.3.2,
                       lens,
                       cereal,
                       time,
                       gtk >= 0.13,
                       glib,
                       Chart-cairo >= 1.3.3,
                       cairo,
                       Chart >= 1.3.3,
                       data-default-class,
                       distributive,
                       text,
                       process
--                       cplex
  hs-source-dirs:      src
  default-language:    Haskell2010
  ghc-options:         -O2 -Wall
--  ghc-options:         -O2 -rtsopts
  ghc-prof-options:    -O2 -Wall -prof -fprof-auto -fprof-cafs -fprof-auto-calls

flag examples
    description:    build the examples
    default:        False

executable multiple_shooting
  if flag(examples)
    Buildable: True
  else
    Buildable: False
  hs-source-dirs:      examples
  main-is:             MultipleShooting.hs
  default-language:    Haskell2010
  build-depends:       dynobud
                       , base >=4.6 && < 5
                       , casadi-bindings
                       , vector
                       , linear
                       , Chart >= 1.3.3
                       , Chart-gtk >= 1.3.3
                       , lens
                       , colour
                       , data-default-class
  ghc-options:         -O2


executable sofa-viz-2000
  if flag(examples)
    Buildable: True
  else
    Buildable: False
  hs-source-dirs:      examples
  main-is:             SofaVisualizer.hs
  other-modules:       Sofa.Common
  default-language:    Haskell2010
  build-depends:       dynobud,
                       base >=4.6 && < 5,
                       not-gloss >= 0.7.0.0,
                       stm,
                       containers,
                       cereal,
                       linear,
                       bytestring,
                       zeromq4-haskell,
                       vector
  ghc-options:         -O2 -threaded

executable sofa-expand-o-matic
  if flag(examples)
    Buildable: True
  else
    Buildable: False
  hs-source-dirs:      examples
  main-is:             SofaExpando.hs
  other-modules:       Sofa.Common
  default-language:    Haskell2010
  build-depends:       dynobud,
                       vector,
                       casadi-bindings-core,
                       zeromq4-haskell,
                       bytestring,
                       cereal,
                       linear,
                       base >= 4.6 && < 5
  ghc-options:         -threaded -O2

executable homotopy
  if flag(examples)
    Buildable: True
  else
    Buildable: False
  hs-source-dirs:      examples
  main-is:             Homotopy.hs
  default-language:    Haskell2010
  build-depends:       dynobud,
                       vector,
                       casadi-bindings,
                       base >= 4.6 && < 5
  ghc-options:         -threaded -O2

executable vec
  if flag(examples)
    Buildable: True
  else
    Buildable: False
  hs-source-dirs:      examples
  main-is:             Vec.hs
  default-language:    Haskell2010
  build-depends:       dynobud,
                       vector >=0.10,
                       base >=4.6 && < 5

  ghc-options:         -threaded -O2

executable ocpDslSpring
  if flag(examples)
    Buildable: True
  else
    Buildable: False
  hs-source-dirs:      examples
  main-is:             OcpDslSpring.hs
  other-modules:       ExampleDsl.OcpMonad
                       ExampleDsl.LogsAndErrors
                       ExampleDsl.Types
  default-language:    Haskell2010
  build-depends:       base >=4.6 && < 5
                     , dynobud
                     , casadi-bindings
                     , vector
                     , containers
                     , unordered-containers
                     , lens
                     , bytestring
                     , zeromq4-haskell
                     , cereal
                     , mtl
  ghc-options:         -threaded -O2

executable ocpDslRocket
  if flag(examples)
    Buildable: True
  else
    Buildable: False
  hs-source-dirs:      examples
  main-is:             OcpDslRocket.hs
  other-modules:       ExampleDsl.OcpMonad
                       ExampleDsl.LogsAndErrors
                       ExampleDsl.Types
  default-language:    Haskell2010
  build-depends:       base >=4.6 && < 5
                     , dynobud
                     , casadi-bindings
                     , vector
                     , containers
                     , unordered-containers
                     , lens
                     , bytestring
                     , zeromq4-haskell
                     , cereal
                     , mtl

  ghc-options:         -threaded -O2

executable nlpDsl
  if flag(examples)
    Buildable: True
  else
    Buildable: False
  hs-source-dirs:      examples
  main-is:             NlpDsl.hs
  other-modules:       ExampleDsl.NlpMonad
                       ExampleDsl.LogsAndErrors
                       ExampleDsl.Types
  default-language:    Haskell2010
  build-depends:       base >=4.6 && < 5
                     , dynobud
                     , casadi-bindings
                     , vector
                     , linear
                     , containers
                     , unordered-containers
                     , lens
                     , mtl
  ghc-options:         -threaded -O2

executable basic
  if flag(examples)
    Buildable: True
  else
    Buildable: False
  hs-source-dirs:      examples
  main-is:             Basic.hs
  default-language:    Haskell2010
  build-depends:       dynobud,
                       vector >=0.10,
                       base >=4.6 && < 5
  ghc-options:         -threaded -O2

executable basicJ
  if flag(examples)
    Buildable: True
  else
    Buildable: False
  hs-source-dirs:      examples
  main-is:             BasicJ.hs
  default-language:    Haskell2010
  build-depends:       dynobud,
                       vector >=0.10,
                       casadi-bindings >=0.10,
                       base >=4.6 && < 5
  ghc-options:         -threaded -O2

executable daeColl
  if flag(examples)
    Buildable: True
  else
    Buildable: False
  hs-source-dirs:      examples
  main-is:             DaeColl.hs
  default-language:    Haskell2010
  build-depends:       dynobud,
                       base >=4.6 && < 5,
                       vector
  ghc-options:         -threaded -O2

executable glider
  if flag(examples)
    Buildable: True
  else
    Buildable: False
  hs-source-dirs:      examples
  main-is:             Glider.hs
  other-modules:       Glider.Aircraft
                       Glider.AeroCoeffs
                       Glider.Betty
  default-language:    Haskell2010
  build-depends:       dynobud,
                       base >=4.6 && < 5,
                       containers,
                       linear,
                       bytestring,
                       cereal,
                       vector,
                       zeromq4-haskell
  ghc-options:         -threaded -O2

executable sailboat
  if flag(examples)
    Buildable: True
  else
    Buildable: False
  hs-source-dirs:      examples
  main-is:             Sailboat.hs
  default-language:    Haskell2010
  build-depends:       dynobud,
                       base >=4.6 && < 5,
                       containers,
                       linear,
                       bytestring,
                       cereal,
                       vector,
                       semigroups,
                       zeromq4-haskell
  ghc-options:         -threaded -O2

executable dynoplot
  if flag(examples)
    Buildable: True
  else
    Buildable: False
  hs-source-dirs:      examples
  main-is:             Dynoplot.hs
  default-language:    Haskell2010
  build-depends:       dynobud,
                       base >=4.6 && < 5,
                       containers,
                       vector,
                       cereal,
                       bytestring,
                       zeromq4-haskell,
                       cmdargs
  ghc-options:         -O2

--test-suite lp_tests
--  type: exitcode-stdio-1.0
--  hs-source-dirs:      tests
--  main-is:             OldTests.hs
--  default-language:    Haskell2010
--  build-depends:       dynobud,
--                       vector,
--                       linear,
--                       hmatrix-glpk,
--                       QuickCheck >= 2,
--                       HUnit,
--                       test-framework,
--                       test-framework-hunit,
--                       test-framework-quickcheck2,
--                       base >=4.6 && < 5
--  ghc-options:         -O2

--test-suite old-unit-tests
--  type: exitcode-stdio-1.0
--  hs-source-dirs:      tests
--  main-is:             UnitTests.hs
--  default-language:    Haskell2010
--  build-depends:       dynobud,
--                       QuickCheck >= 2,
--                       HUnit,
--                       test-framework,
--                       test-framework-hunit,
--                       test-framework-quickcheck2,
--                       hmatrix,
--                       hmatrix-glpk,
--                       vector,
--                       linear,
--                       MemoTrie,
--                       base >=4.6 && < 5
----  ghc-options:         -O2

test-suite unit-tests
  type:                exitcode-stdio-1.0
  hs-source-dirs:      tests
  main-is:             NewUnitTests.hs
  other-modules:       VectorizeTests
                       ViewTests
                       Utils
  default-language:    Haskell2010
  build-depends:       dynobud,
                       QuickCheck >= 2,
                       HUnit,
                       test-framework,
                       test-framework-hunit,
                       test-framework-quickcheck2,
                       vector,
                       linear,
                       casadi-bindings,
                       hmatrix,
                       base >=4.6 && < 5
  ghc-options:         -O2
