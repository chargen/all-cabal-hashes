-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:8a5c232e74abec1d9e418b0fb48f0aec
    SHA1:ace60765a6319d09f8bde3834bb95993795f01f1
    SHA256:259422ea04f4c44faae4aeb7d91da3167589967985632fc2a5e474bfc209046c
    SHA512:a8ecf83a816a8e4742d7d2642056e6395aa2c4a4afcb92d4d5552f47ce4e13c99b3763463d96eab7491b241f426cfff28403aceb62ed0e3de2fce8ec773ea14b
    Skein512_512:a3d8e44c6289b6a95aeef1db5d0e3c579acf691547108c64cd57f8ff0ab8bb6f595e5ca66cd3a6b75944ebb19932f37deb775f4ff593ada5e114d7a52a241d68

package-locations:
    https://hackage.haskell.org/package/bits-atomic-0.1.0/bits-atomic-0.1.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/bits-atomic-0.1.0.tar.gz

package-size: 7494
-- END Added by all-cabal-hashes-tool

Name:               bits-atomic
Version:            0.1.0
License:            BSD3
License-File:       License.txt
Maintainer:         Gabriel Wicke <wicke@wikidev.net>
Author:             Gabriel Wicke <wicke@wikidev.net>
Synopsis:       Atomic bit operations on memory locations 
                for low-level synchronization
Description:        
 Atomic operations including CAS (compare-and-swap), lock and fetch & add
 suitable for low-level shared-memory synchronization.
 .
 The implementation is using GCC's builtin atomic operations in C wrappers
 called through the FFI.
 .
 /Testing:/ The following commands can be used to compile and run the test suite:
 .
    > cabal unpack bits-atomic && cd bits-atomic-* # if not yet locally available
    > cabal configure -ftest
    > cabal build
    > cabal test
Category:           Data, Concurrency, Foreign
Stability:          experimental
Build-Type:         Custom
Cabal-Version: >= 1.6
Extra-Source-Files: cbits/atomic-bitops-gcc.c cbits/atomic-bitops-gcc.h
Source-Repository head
    type: mercurial
    location: http://dev.wikidev.net/hg/bits-atomic/

library
    Exposed-Modules:  Data.Bits.Atomic
    Build-Depends:    base >= 4 && < 6
    GHC-Options:      -Wall -O2 -funbox-strict-fields
    GHC-Prof-Options: -auto-all
    C-Sources:        cbits/atomic-bitops-gcc.c
    CC-Options:       -Wall
    if os (linux)
        CC-Options: -fomit-frame-pointer -march=native
    Include-Dirs:     cbits
    Install-Includes: atomic-bitops-gcc.h
    -- Try link-time optimization (inlining) with gcc 4.5:
    -- CC-Options:       -fomit-frame-pointer -march=native -Wall -flto
    --LD-Options:     -flto

flag test
    description: Build test program.
    default:     False

Executable test
    if !flag(test)
        buildable:     False
    hs-source-dirs:  ., test
    other-modules:   Data.Bits.Atomic
    main-is:         test.hs
    GHC-Options:      -O2 -funbox-strict-fields -threaded
    GHC-Prof-Options: -auto-all

    Include-Dirs:     cbits
    C-Sources:        cbits/atomic-bitops-gcc.c
    build-depends:   base >= 4 && < 6, QuickCheck, HUnit,
                     test-framework-quickcheck2,
                     test-framework-hunit,
                     test-framework
