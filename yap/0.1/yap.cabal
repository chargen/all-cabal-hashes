-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:fab946e5c053272cfef8134769496387
    SHA1:7e10ce43c327700e87980907e9a15d129d612d37
    SHA256:1406cf020cc7bc964f9509caa04d2928d20a76d73302af0bc62991556ff9a193
    SHA512:5137157a3613fa29ef0948625390e659aa924d7ccbffb179a60add870baa3c315fba472da1c429222af42d78843841ed69c17c97ed9fbc4df6fa1e2869f42712
    Skein512_512:0f29ce6f125a01809702d9bcde5ddf0d95a8bca9101b424110190a68bcab8eee8ea9382be3b865998726eaafbb6b3a8a3f290c16fdbc79a821807c48ef7a01ea

package-locations:
    https://hackage.haskell.org/package/yap-0.1/yap-0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/yap-0.1.tar.gz

package-size: 13326
-- END Added by all-cabal-hashes-tool

Name:           yap
Version:        0.1
Build-Depends:  base >= 4.4 && < 5
Build-Type:     Simple
License:        BSD3
license-file:   LICENSE
Author:         Ross Paterson <ross@soi.city.ac.uk>
Maintainer:     Ross Paterson <ross@soi.city.ac.uk>
Category:       Algebra, Prelude
Synopsis:       yet another prelude - a simplistic refactoring with algebraic
                classes
Description:    A simple refactoring of the Prelude numeric classes,
                attempting backwards compatibility for clients by defining
                a few algebraic classes as superclasses of the Haskell 98
                numeric classes.  This yields the following class hierarchy
                (grey classes are unchanged):
                .
                <<http://code.haskell.org/~ross/images/hierarchy.png>>
                .
                "Prelude.YAP" is an almost-compatible replacement
                for the standard Haskell Prelude, as long as you're
                not defining instances of the numeric classes
                (though defaulting will be affected).
                When importing it, turn on @RebindableSyntax@.
                .
                "Data.YAP.Algebra" contains just the new classes;
                you'll need to import it if you want access to the
                new names, including to define instances.
                .
                Other modules contain some example instances, including
                for the existing types @Complex@ and @Ratio@.
                .
                History:
                .
                 * 0.0: initial version
                .
                 * 0.1: moved 'fromRational' back to 'Fractional', as it
                   isn't well-behaved for all fields.  Removed @realToField@.
Exposed-Modules:
                Data.YAP.Algebra
                Data.YAP.Complex
                Data.YAP.Matrix
                Data.YAP.Polynomial
                Data.YAP.Quantity
                Data.YAP.Ratio
                Data.YAP.Vector
                Prelude.YAP
Other-Modules:  Data.YAP.Algebra.Internal
                Prelude.YAP.Internal
