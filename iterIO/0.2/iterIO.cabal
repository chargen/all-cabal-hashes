-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:88ed5724e210912a950b1fcf4d9854f0
    SHA1:5e5816d295ea4b45d60260a23ccaf1235c5b651d
    SHA256:d3dc2ccdf5adf7a944454eee80312cecc514ecfe760fbdaa4a83ec2db6a2d32b
    SHA512:d0ed1631ec525760dce8e6d873eaacd4dac01e9f772a598bd691def0562a6fd91fe0efae604d2e9fb7e32d70423f6687be80eade6f7bfa63b56889aa32627eac
    Skein512_512:035ae26d52e5b8b983d94bb1268d27a41709797558248c15eb2f7d799fd380e17fe2b696f63eab3603064f6ce3bd496014de78c246c4ca726d41c4fd392d23d7

x-package-locations:
    https://hackage.haskell.org/package/iterIO-0.2/iterIO-0.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/iterIO-0.2.tar.gz

x-package-size: 91679
-- END Added by all-cabal-hashes-tool

Name:           iterIO
Homepage:       http://www.scs.stanford.edu/~dm/iterIO
Version:        0.2
Cabal-version:  >= 1.6
build-type:     Simple
License:        BSD3
License-file:   LICENSE
Author:         David Mazieres
Stability:      experimental
Maintainer:     http://www.scs.stanford.edu/~dm/addr/
Category:       System, Data, Enumerator
Synopsis:       Iteratee-based IO with pipe operators
Extra-source-files:
        GNUmakefile, README, NEWS,
        Examples/fgrep.hs, Examples/zpipe.hs, Examples/httptest.hs

Description:

        Iteratee-based IO is an alternative to lazy IO that offers
        better error handling, referential transparency, and
        convenient composition of protocol layers or parsers.  This
        package provides iteratees based around /pipe/ operators for
        hooking together application components and directing data
        flow.  New users should see the tutorial in the "Data.IterIO"
        module documentation.  Highlights of the library include:

        .

        * Heavy emphasis on ease of use, ease of learning, and
          uniformity of mechanism.

        .

        * Copious documentation.

        .

        * Consistent EOF and error handling to avoid resource leaks
          and other issues in corner cases.

        .

        * A set of iteratee parsing combinators providing LL(*)
          parsing while generally not consuming large amounts of
          memory for backtracking.

        .

        * Seamless integration with attoparsec for LL(1) parsing.

        .

        See "Data.IterIO" for a discussion of the differences between
	iterIO and the two previous iteratee implementations (iteratee
	and enumerator).

Source-repository head
  Type:     git
  Location: http://www.scs.stanford.edu/~dm/repos/iterIO.git

Library
  Build-depends: array >= 0.3.0.1 && < 2,
                 base >= 4.3 && < 6,
                 bytestring >= 0.9 && < 2,
                 containers >= 0.3 && < 2,
                 filepath >= 1.2 && < 2,
                 HsOpenSSL >= 0.10.1 && < 2,
                 ListLike >= 1.0 && < 4,
                 mtl >= 1.1.0.2 && < 3,
                 network >= 2.3 && < 3,
                 old-locale >= 1.0.0.2 && < 2,
                 attoparsec >= 0.8.5 && < 2,
                 process >= 1.0.1.3 && < 2,
                 stringsearch >= 0.3 && < 2,
                 time >= 1.1.4 && < 2,
                 unix >= 2.4 && < 3

  ghc-options: -Wall
  Exposed-modules:
    Data.IterIO,
    Data.IterIO.Atto,
    Data.IterIO.Iter,
    Data.IterIO.Extra,
    Data.IterIO.Http,
    Data.IterIO.HttpRoute,
    Data.IterIO.Inum,
    Data.IterIO.ListLike,
    Data.IterIO.Parse,
    Data.IterIO.SSL,
    Data.IterIO.Search,
    Data.IterIO.Trans,
    Data.IterIO.Zlib
  Other-modules:
    Data.IterIO.ZlibInt
  Extensions:
    ForeignFunctionInterface, DeriveDataTypeable,
    ExistentialQuantification, MultiParamTypeClasses,
    FunctionalDependencies, FlexibleInstances
  Extra-libraries: z
