-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:b8a7558a807d2c3a0339d5adfc6aa269
    SHA1:f62deba474193d5b3ec15c7b51fae7ac9a57de9c
    SHA256:041787a4d87966c4a0304d81a7d4d1f14bd54883708e2f0ffdfad95b4f91cc7e
    SHA512:24d35ad530440292da284f5031ec1b28df3d6ab7df14141a4c676d64491e0ce09c75278abf73688cc8ea001660c9765671771c1564e684a7fd07825b49b6a832
    Skein512_512:abc4d821f52252eba3f2a645c2200ff3e8b78ee842f6d1bd2059a72c978d8639a65299974bf1874cc4675e208a5ebd2cb44c3ccb53119b2b227dd3bbc3f1fb81

x-package-locations:
    https://hackage.haskell.org/package/explicit-exception-0.1.7.2/explicit-exception-0.1.7.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/explicit-exception-0.1.7.2.tar.gz

x-package-size: 16930
-- END Added by all-cabal-hashes-tool

Name:             explicit-exception
Version:          0.1.7.2
License:          BSD3
License-File:     LICENSE
Author:           Henning Thielemann <haskell@henning-thielemann.de>
Maintainer:       Henning Thielemann <haskell@henning-thielemann.de>
Homepage:         http://www.haskell.org/haskellwiki/Exception
Category:         Control
Stability:        Experimental
Synopsis:         Exceptions which are explicit in the type signature.
Description:
   Synchronous and Asynchronous exceptions which are explicit in the type signature.
   The first ones are very similar to 'Either' and 'Control.Monad.Error.ErrorT'.
   The second ones are used for 'System.IO.readFile' and 'System.IO.hGetContents'.
   This package is a proposal for improved exception handling in Haskell.
   It strictly separates between handling of
   exceptional situations (file not found, invalid user input,
   see <http://www.haskell.org/haskellwiki/Exception>) and
   (programming) errors (division by zero, index out of range,
   see <http://www.haskell.org/haskellwiki/Error>).
   Handling of the first one is called \"exception handling\",
   whereas handling of errors is better known as \"debugging\".
   .
   For applications see the packages @midi@, @spreadsheet@, @http-monad@.
   .
   Although I'm not happy with the identifier style of the Monad Transformer Library
   (partially intended for unqualified use)
   I have tried to adopt it for this library,
   in order to let Haskell programmers get accustomed easily to it.
   .
   To do:
   Because many people requested it,
   we will provide a @bracket@ function that frees a resource
   both when an exception and an error occurs,
   that is, it combines exception handling and debugging.
   However note that freeing resources in case of an error is dangerous
   and may cause further damage.
Tested-With:       GHC==6.8.2
Tested-With:       GHC==7.4.2, GHC==7.6.1, GHC==7.8.2
Cabal-Version:     >=1.6
Build-Type:        Simple

Source-Repository head
  type:     darcs
  location: http://code.haskell.org/explicit-exception/

Source-Repository this
  type:     darcs
  location: http://code.haskell.org/explicit-exception/
  tag:      0.1.7.2

Flag buildTests
  description: Build executables that demonstrate some space leaks
  default:     False

Flag splitBase
  description: Choose the smaller, split-up base package from version 2 on.


Library
  Build-Depends: transformers >=0.2 && <0.4
  If impl(jhc)
    Build-Depends:
      applicative >=1.0 && <1.1,
      base >= 1 && <2
  Else
    If flag(splitBase)
      Build-Depends: base >= 2 && <5
    Else
      Build-Depends:
        special-functors >=1.0 && <1.1,
        base >= 1 && <2

  GHC-Options:      -Wall
  Hs-Source-Dirs:   src
  Exposed-Modules:
    Control.Monad.Exception.Asynchronous
    Control.Monad.Exception.Asynchronous.Lazy
    Control.Monad.Exception.Asynchronous.Strict
    Control.Monad.Exception.Synchronous
  If !impl(jhc)
    Other-Modules:
      Control.Monad.Exception.Warning
      Control.Monad.Exception.Label
      Control.Monad.Label
      System.IO.Straight
      System.IO.Exception.File
      System.IO.Exception.BinaryFile
      System.IO.Exception.TextFile
--    System.IO.Exception.Std
--    Debug.Error

Executable ee-tar
  If flag(buildTests)
    Build-Depends:
      bytestring >=0.9.0.1 && <0.11,
      tar >=0.3 && <0.4
  Else
    Buildable: False
  GHC-Options: -Wall
  Hs-Source-Dirs: src, spaceleak
  Main-Is: Tar.hs

Executable ee-test
  If flag(buildTests)
    Build-Depends:
      bytestring >=0.9.0.1 && <0.11
  Else
    Buildable: False
  GHC-Options: -Wall
  Hs-Source-Dirs: src, spaceleak
  Main-Is: Example.hs

Executable ee-unzip
  If !flag(buildTests)
    Buildable: False
  GHC-Options: -Wall
  Hs-Source-Dirs: spaceleak
  Main-Is: Unzip.hs

Executable ee-writer
  If !flag(buildTests)
    Buildable: False
    Buildable: False
  GHC-Options: -Wall
  Hs-Source-Dirs: spaceleak
  Main-Is: Writer.hs
