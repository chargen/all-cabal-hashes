Name:             explicit-exception
Version:          0.0.2
License:          BSD3
License-File:     LICENSE
Author:           Henning Thielemann <haskell@henning-thielemann.de>
Maintainer:       Henning Thielemann <haskell@henning-thielemann.de>
Homepage:         http://www.haskell.org/haskellwiki/Exception
Package-URL:      http://code.haskell.org/explicit-exception/
Category:         Control
Stability:        Experimental
Synopsis:         Exceptions which are explicit in the type signature.
Description:
   Synchronous and Asynchronous exceptions which are explicit in the type signature.
   The first ones are very similar to 'Either' and 'Control.Monad.Error.ErrorT'.
   The second ones are used for 'System.IO.readFile' and 'System.IO.hGetContents'.
   This package is a proposal for improved exception handling in Haskell.
   It strictly separates between handling of
   exceptional situations (file not found, invalid user input,
   see <http://www.haskell.org/haskellwiki/Exception>) and
   (programming) errors (division by zero, index out of range,
   see <http://www.haskell.org/haskellwiki/Error>).
   Handling of the first one is called \"exception handling\",
   whereas handling of errors is better known as \"debugging\".
   .
   For an application see the @midi@ package.
   .
   Although I'm not happy with the identifier style of the Monad Template Library
   (partially intended for unqualified use)
   I have tried to adopt it for this library,
   in order to let Haskell programmers get accustomed easily to it.
   .
   To do:
   Because many people requested it,
   we will provide a @bracket@ function that frees a resource
   both when an exception and an error occurs,
   that is, it combines exception handling and debugging.
   However note that freeing resources in case of an error is dangerous
   and may cause further damage.
Tested-With:       GHC==6.8.2
Cabal-Version:     >=1.2
Build-Type:        Simple

Library
  Build-Depends: base >= 2, mtl

  GHC-Options:      -Wall
  Hs-Source-Dirs:   src
  Exposed-Modules:
    Control.Monad.Exception.Asynchronous
    Control.Monad.Exception.Synchronous
  Other-Modules:
    Control.Monad.Exception.Warning
    Control.Monad.Exception.Label
    Control.Monad.Label
    System.IO.Straight
    System.IO.Exception.File
    System.IO.Exception.BinaryFile
    System.IO.Exception.TextFile
--    System.IO.Exception.Std
--    Debug.Error


package-hashes:
    MD5:783ecfb67cb7813ee351aadb2d02cecd
    SHA1:06eb1ddf88ef1c95d7bc1db115bc0789161aba3c
    SHA256:5500ee3d06f4b7f471e4eaa4fa3ef032bc508558f341c4fa0285d80c559aae54
    SHA512:d824cb8f5dc988938d641c8861e24e14a066cd274357e4d97573d075dfa6c95a01493c98e2fe1937b98ac4c460bb34d87c8686fc40a79e9ce044e2b2d525287d
    Skein512_512:e027e524374fe7e187d1f99b977016a142ea97bbe198db378000802abc3d21911c7fd9ace8fbd989e134a37e1d67a8ea612f96f93d5a312c22bd72263b935a25

package-locations:
    https://hackage.haskell.org/package/explicit-exception-0.0.2/explicit-exception-0.0.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/explicit-exception-0.0.2.tar.gz

