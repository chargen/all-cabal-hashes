Name:             explicit-exception
Version:          0.1
License:          BSD3
License-File:     LICENSE
Author:           Henning Thielemann <haskell@henning-thielemann.de>
Maintainer:       Henning Thielemann <haskell@henning-thielemann.de>
Homepage:         http://www.haskell.org/haskellwiki/Exception
Category:         Control
Stability:        Experimental
Synopsis:         Exceptions which are explicit in the type signature.
Description:
   Synchronous and Asynchronous exceptions which are explicit in the type signature.
   The first ones are very similar to 'Either' and 'Control.Monad.Error.ErrorT'.
   The second ones are used for 'System.IO.readFile' and 'System.IO.hGetContents'.
   This package is a proposal for improved exception handling in Haskell.
   It strictly separates between handling of
   exceptional situations (file not found, invalid user input,
   see <http://www.haskell.org/haskellwiki/Exception>) and
   (programming) errors (division by zero, index out of range,
   see <http://www.haskell.org/haskellwiki/Error>).
   Handling of the first one is called \"exception handling\",
   whereas handling of errors is better known as \"debugging\".
   .
   For an application see the @midi@ package.
   .
   Although I'm not happy with the identifier style of the Monad Template Library
   (partially intended for unqualified use)
   I have tried to adopt it for this library,
   in order to let Haskell programmers get accustomed easily to it.
   .
   To do:
   Because many people requested it,
   we will provide a @bracket@ function that frees a resource
   both when an exception and an error occurs,
   that is, it combines exception handling and debugging.
   However note that freeing resources in case of an error is dangerous
   and may cause further damage.
Tested-With:       GHC==6.8.2
Cabal-Version:     >=1.6
Build-Type:        Simple

Source-Repository head
  type:     darcs
  location: http://code.haskell.org/explicit-exception/

Source-Repository this
  type:     darcs
  location: http://code.haskell.org/explicit-exception/
  tag:      0.1

Library
  Build-Depends: base >= 2, transformers >=0.0 && <0.1

  GHC-Options:      -Wall
  Hs-Source-Dirs:   src
  Exposed-Modules:
    Control.Monad.Exception.Asynchronous
    Control.Monad.Exception.Synchronous
  Other-Modules:
    Control.Monad.Exception.Warning
    Control.Monad.Exception.Label
    Control.Monad.Label
    System.IO.Straight
    System.IO.Exception.File
    System.IO.Exception.BinaryFile
    System.IO.Exception.TextFile
--    System.IO.Exception.Std
--    Debug.Error


package-hashes:
    MD5:102107286a16f32949d8a6bcb7fee703
    SHA1:6ae13d8ae0f091e50d4150bef2513f76d7ab7dac
    SHA256:5600e1d56a6243bcc2e5293807f77073ded06587e7485ada472b24579ef4c256
    SHA512:211657f08188f1f2069bed2a081fd60ad50856e6d5f7dc6a36545ff78c7427edfc993e3d089ad5a11f2eb2ee34051affbd638544233b712949b1c0048d4b969a
    Skein512_512:35a0708089af1340e2907acbd5a323336beab9c80805ddf66a4b2fc458804de4b896325bc4c6ea3689b6b9019946a8819966aca0bf28cccdf7931982fe6d6f4c

package-locations:
    https://hackage.haskell.org/package/explicit-exception-0.1/explicit-exception-0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/explicit-exception-0.1.tar.gz

