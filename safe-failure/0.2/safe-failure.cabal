-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:3efeb2f2f4ad45ed7b5a09111050428b
    SHA1:8a152e28dab165c8574fe06270caaeed215b074a
    SHA256:bc53df661977ba2c481ba16f66b926b1349a61aae5c414f4969be010e5b06180
    SHA512:51661cb144a3aa28aacc2decb98484cfabd10f73124370b71307f787a662aeee690c76722f3b92010073ab5934e2b6912b42e4e62e426dfb28742d8a4638652a
    Skein512_512:77907896413b61f32f28aae33616766e8e382a86d949da66eb4940435a3647aab91f446ce79305edf965d23930d6f395a6fe096a9cec6a556187844c8ddbaf9e

package-locations:
    https://hackage.haskell.org/package/safe-failure-0.2/safe-failure-0.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/safe-failure-0.2.tar.gz

package-size: 3588
-- END Added by all-cabal-hashes-tool

Name:           safe-failure
Build-Type:     Simple
Cabal-Version:  >= 1.2
Version:        0.2
License:        BSD3
License-File:   LICENSE
Copyright:      2007-8, Neil Mitchell
Maintainer:     pepeiborra@gmail.com
Author:         Neil Mitchell, Jose Iborra (2009), Michael Snoyman (2009)
Homepage:       http://www-users.cs.york.ac.uk/~ndm/safe/
Category:       Unclassified
Synopsis:       Partial functions from the prelude with a MonadFailure interface
Description:
    Partial functions from the base library, such as @head@ and @!!@, modified
    to fail in a @MonadFailure@ monad.
    
    These functions can be used to reduce the number of unsafe pattern matches in
    your code.

Flag cme
  description: build with special support for control-monad-exception
  default: True

Library
   buildable: True
   build-depends:  base >= 4 && < 5, control-monad-failure, transformers
   exposed-modules:  
      Safe.Failure
   ghc-options: -Wall
   if flag(cme)
     build-depends: control-monad-exception
     cpp-options: -DCME
