-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:ffce2a14df7a448e14053f4887aa44a4
    SHA1:ae20023f4b1da148a7312d087b29808d7df0e61c
    SHA256:a1ab661384383ed5c7ebe4f11ce2317a6ea9c2d5cecb338433754362c0288d8f
    SHA512:abbc455cf2b5cff019f1334053c3cfa932cbe3b2148e534e159ff02fdca3a205952e59cff1d85f6e4e91595dbf3eb0b9b23ae14511096009e1e9a07b1c569daf
    Skein512_512:967bde412e02337f4c85c8997c255d2664ad692b1b9b097203646a885d406c70d8611320855aa68f82960eca9f4c42e6a5d13f757fcbf7026dfe166023012f98

x-package-locations:
    https://hackage.haskell.org/package/record-syntax-0.1.0.1/record-syntax-0.1.0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/record-syntax-0.1.0.1.tar.gz

x-package-size: 11587
-- END Added by all-cabal-hashes-tool

name:
  record-syntax
version:
  0.1.0.1
synopsis:
  A library for parsing and processing the Haskell syntax sprinkled with anonymous records
category:
  Parser, Preprocessor, Syntax, Records
homepage:
  https://github.com/nikita-volkov/record-syntax 
bug-reports:
  https://github.com/nikita-volkov/record-syntax/issues 
author:
  Nikita Volkov <nikita.y.volkov@mail.ru>
maintainer:
  Nikita Volkov <nikita.y.volkov@mail.ru>
copyright:
  (c) 2015, Nikita Volkov
license:
  MIT
license-file:
  LICENSE
build-type:
  Custom
cabal-version:
  >=1.10


source-repository head
  type:
    git
  location:
    git://github.com/nikita-volkov/record-syntax.git


flag doctest
  description: Build Doctests
  default: True
  manual: True


library
  hs-source-dirs:
    library
  ghc-options:
    -funbox-strict-fields
  default-extensions:
    Arrows, BangPatterns, ConstraintKinds, DataKinds, DefaultSignatures, DeriveDataTypeable, DeriveFoldable, DeriveFunctor, DeriveGeneric, DeriveTraversable, EmptyDataDecls, FlexibleContexts, FlexibleInstances, FunctionalDependencies, GADTs, GeneralizedNewtypeDeriving, ImpredicativeTypes, LambdaCase, LiberalTypeSynonyms, MagicHash, MultiParamTypeClasses, MultiWayIf, NoImplicitPrelude, NoMonomorphismRestriction, OverloadedStrings, PatternGuards, ParallelListComp, QuasiQuotes, RankNTypes, RecordWildCards, ScopedTypeVariables, StandaloneDeriving, TemplateHaskell, TupleSections, TypeFamilies, TypeOperators, UnboxedTuples
  default-language:
    Haskell2010
  other-modules:
    Record.Syntax.Position
    Record.Syntax.Shared
    Record.Syntax.LevelReifier
    Record.Syntax.LevelReifier.Levels
    Record.Syntax.Parser
    Record.Syntax.Renderer
    Record.Syntax.Prelude
  exposed-modules:
    Record.Syntax
  build-depends:
    -- 
    -- Despite not making a single import from that library,
    -- we need the following dependency to restrict the range of supported versions.
    record == 0.4.*,
    -- 
    haskell-src-exts == 1.16.*,
    parsec >= 3.1.2 && < 4,
    -- 
    conversion == 1.*,
    conversion-text >= 1.0.0.2 && < 2,
    text >= 1 && < 2,
    --
    template-haskell == 2.*,
    -- 
    transformers >= 0.2 && < 0.5,
    base-prelude >= 0.1.16 && < 0.2,
    base >= 4.6 && < 4.9


test-suite doctest
  type:
    exitcode-stdio-1.0
  hs-source-dirs:
    doctest
  main-is:
    Main.hs
  ghc-options:
    -threaded
    "-with-rtsopts=-N"
    -funbox-strict-fields
  default-extensions:
    Arrows, BangPatterns, ConstraintKinds, DataKinds, DefaultSignatures, DeriveDataTypeable, DeriveFoldable, DeriveFunctor, DeriveGeneric, DeriveTraversable, EmptyDataDecls, FlexibleContexts, FlexibleInstances, FunctionalDependencies, GADTs, GeneralizedNewtypeDeriving, ImpredicativeTypes, LambdaCase, LiberalTypeSynonyms, MultiParamTypeClasses, MultiWayIf, NoImplicitPrelude, NoMonomorphismRestriction, OverloadedStrings, PatternGuards, ParallelListComp, QuasiQuotes, RankNTypes, RecordWildCards, ScopedTypeVariables, StandaloneDeriving, TemplateHaskell, TupleSections, TypeFamilies, TypeOperators
  default-language:
    Haskell2010
  if !flag(doctest)
    buildable: False
  build-depends:
    doctest == 0.9.*,
    directory == 1.2.*,
    filepath == 1.4.*,
    base-prelude,
    base


test-suite hspec
  type:
    exitcode-stdio-1.0
  hs-source-dirs:
    hspec
  main-is:
    Main.hs
  ghc-options:
    -funbox-strict-fields
    -threaded
    "-with-rtsopts=-N"
  default-extensions:
    Arrows, BangPatterns, ConstraintKinds, DataKinds, DefaultSignatures, DeriveDataTypeable, DeriveFoldable, DeriveFunctor, DeriveGeneric, DeriveTraversable, EmptyDataDecls, FlexibleContexts, FlexibleInstances, FunctionalDependencies, GADTs, GeneralizedNewtypeDeriving, ImpredicativeTypes, LambdaCase, LiberalTypeSynonyms, MagicHash, MultiParamTypeClasses, MultiWayIf, NoImplicitPrelude, NoMonomorphismRestriction, OverloadedStrings, PatternGuards, ParallelListComp, QuasiQuotes, RankNTypes, RecordWildCards, ScopedTypeVariables, StandaloneDeriving, TemplateHaskell, TupleSections, TypeFamilies, TypeOperators, UnboxedTuples
  default-language:
    Haskell2010
  build-depends:
    -- 
    record,
    record-syntax,
    -- 
    hspec == 2.1.*,
    -- 
    base-prelude,
    base


-- Well, it's not a benchmark actually, 
-- but in Cabal there's no better way to specify an executable, 
-- which is not intended for distribution.
benchmark demo
  type: 
    exitcode-stdio-1.0
  hs-source-dirs:
    demo
  main-is:
    Main.hs
  ghc-options:
    -O2
    -threaded
    "-with-rtsopts=-N"
    -funbox-strict-fields
  default-extensions:
    Arrows, BangPatterns, ConstraintKinds, DataKinds, DefaultSignatures, DeriveDataTypeable, DeriveFoldable, DeriveFunctor, DeriveGeneric, DeriveTraversable, EmptyDataDecls, FlexibleContexts, FlexibleInstances, FunctionalDependencies, GADTs, GeneralizedNewtypeDeriving, ImpredicativeTypes, LambdaCase, LiberalTypeSynonyms, MagicHash, MultiParamTypeClasses, MultiWayIf, NoImplicitPrelude, NoMonomorphismRestriction, OverloadedStrings, PatternGuards, ParallelListComp, QuasiQuotes, RankNTypes, RecordWildCards, ScopedTypeVariables, StandaloneDeriving, TemplateHaskell, TupleSections, TypeFamilies, TypeOperators, UnboxedTuples
  default-language:
    Haskell2010
  build-depends:
    -- 
    record,
    record-syntax,
    -- 
    conversion,
    conversion-text,
    text,
    -- 
    base-prelude


