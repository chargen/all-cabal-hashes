-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:3eb25a8d1cb976e3f18a92fd05f59360
    SHA1:5f6441dd70a9f96e0038846720018d5c301a9631
    SHA256:6798aa9a4fdc0ade9dd608efa42ea4d716a2c0bdbc28491d5577fb0224f0ff9c
    SHA512:0bd29e8b7ae55816f3d49dcaf8f61c8c1cca6ddca334d46d88aee7e35ead008c3f2fd68ddab07e158f607037201a5acb8774dbd408cce53e02ee6daf1fd77b50
    Skein512_512:19fcc079afae83cce39ab658a4c5e12ae7096f2ce0275a7e644874765640cae50bde4a51910587f987dcb41a4ef455fafdb7b80c423eb28ebcc15eed1ca5962a

x-package-locations:
    https://hackage.haskell.org/package/record-syntax-0.1.0.2/record-syntax-0.1.0.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/record-syntax-0.1.0.2.tar.gz

x-package-size: 11582
-- END Added by all-cabal-hashes-tool

name:
  record-syntax
version:
  0.1.0.2
synopsis:
  A library for parsing and processing the Haskell syntax sprinkled with anonymous records
category:
  Parser, Preprocessor, Syntax, Records
homepage:
  https://github.com/nikita-volkov/record-syntax 
bug-reports:
  https://github.com/nikita-volkov/record-syntax/issues 
author:
  Nikita Volkov <nikita.y.volkov@mail.ru>
maintainer:
  Nikita Volkov <nikita.y.volkov@mail.ru>
copyright:
  (c) 2015, Nikita Volkov
license:
  MIT
license-file:
  LICENSE
build-type:
  Custom
cabal-version:
  >=1.10


source-repository head
  type:
    git
  location:
    git://github.com/nikita-volkov/record-syntax.git


flag doctest
  description: Build Doctests
  default: True
  manual: True


library
  hs-source-dirs:
    library
  ghc-options:
    -funbox-strict-fields
  default-extensions:
    Arrows, BangPatterns, ConstraintKinds, DataKinds, DefaultSignatures, DeriveDataTypeable, DeriveFoldable, DeriveFunctor, DeriveGeneric, DeriveTraversable, EmptyDataDecls, FlexibleContexts, FlexibleInstances, FunctionalDependencies, GADTs, GeneralizedNewtypeDeriving, ImpredicativeTypes, LambdaCase, LiberalTypeSynonyms, MagicHash, MultiParamTypeClasses, MultiWayIf, NoImplicitPrelude, NoMonomorphismRestriction, OverloadedStrings, PatternGuards, ParallelListComp, QuasiQuotes, RankNTypes, RecordWildCards, ScopedTypeVariables, StandaloneDeriving, TemplateHaskell, TupleSections, TypeFamilies, TypeOperators, UnboxedTuples
  default-language:
    Haskell2010
  other-modules:
    Record.Syntax.Position
    Record.Syntax.Shared
    Record.Syntax.LevelReifier
    Record.Syntax.LevelReifier.Levels
    Record.Syntax.Parser
    Record.Syntax.Renderer
    Record.Syntax.Prelude
  exposed-modules:
    Record.Syntax
  build-depends:
    -- 
    -- Despite not making a single import from that library,
    -- we need the following dependency to restrict the range of supported versions.
    record == 0.4.*,
    -- 
    haskell-src-exts == 1.16.*,
    parsec >= 3.1.9 && < 4,
    -- 
    conversion == 1.*,
    conversion-text >= 1.0.0.2 && < 2,
    text >= 1 && < 2,
    --
    template-haskell == 2.*,
    -- 
    transformers >= 0.2 && < 0.5,
    base-prelude >= 0.1.16 && < 0.2,
    base >= 4.6 && < 4.9


test-suite doctest
  type:
    exitcode-stdio-1.0
  hs-source-dirs:
    doctest
  main-is:
    Main.hs
  ghc-options:
    -threaded
    "-with-rtsopts=-N"
    -funbox-strict-fields
  default-extensions:
    Arrows, BangPatterns, ConstraintKinds, DataKinds, DefaultSignatures, DeriveDataTypeable, DeriveFoldable, DeriveFunctor, DeriveGeneric, DeriveTraversable, EmptyDataDecls, FlexibleContexts, FlexibleInstances, FunctionalDependencies, GADTs, GeneralizedNewtypeDeriving, ImpredicativeTypes, LambdaCase, LiberalTypeSynonyms, MultiParamTypeClasses, MultiWayIf, NoImplicitPrelude, NoMonomorphismRestriction, OverloadedStrings, PatternGuards, ParallelListComp, QuasiQuotes, RankNTypes, RecordWildCards, ScopedTypeVariables, StandaloneDeriving, TemplateHaskell, TupleSections, TypeFamilies, TypeOperators
  default-language:
    Haskell2010
  if !flag(doctest)
    buildable: False
  build-depends:
    doctest == 0.9.*,
    directory == 1.2.*,
    filepath == 1.4.*,
    base-prelude,
    base


test-suite hspec
  type:
    exitcode-stdio-1.0
  hs-source-dirs:
    hspec
  main-is:
    Main.hs
  ghc-options:
    -funbox-strict-fields
    -threaded
    "-with-rtsopts=-N"
  default-extensions:
    Arrows, BangPatterns, ConstraintKinds, DataKinds, DefaultSignatures, DeriveDataTypeable, DeriveFoldable, DeriveFunctor, DeriveGeneric, DeriveTraversable, EmptyDataDecls, FlexibleContexts, FlexibleInstances, FunctionalDependencies, GADTs, GeneralizedNewtypeDeriving, ImpredicativeTypes, LambdaCase, LiberalTypeSynonyms, MagicHash, MultiParamTypeClasses, MultiWayIf, NoImplicitPrelude, NoMonomorphismRestriction, OverloadedStrings, PatternGuards, ParallelListComp, QuasiQuotes, RankNTypes, RecordWildCards, ScopedTypeVariables, StandaloneDeriving, TemplateHaskell, TupleSections, TypeFamilies, TypeOperators, UnboxedTuples
  default-language:
    Haskell2010
  build-depends:
    -- 
    record,
    record-syntax,
    -- 
    hspec == 2.1.*,
    -- 
    base-prelude,
    base


-- Well, it's not a benchmark actually, 
-- but in Cabal there's no better way to specify an executable, 
-- which is not intended for distribution.
benchmark demo
  type: 
    exitcode-stdio-1.0
  hs-source-dirs:
    demo
  main-is:
    Main.hs
  ghc-options:
    -O2
    -threaded
    "-with-rtsopts=-N"
    -funbox-strict-fields
  default-extensions:
    Arrows, BangPatterns, ConstraintKinds, DataKinds, DefaultSignatures, DeriveDataTypeable, DeriveFoldable, DeriveFunctor, DeriveGeneric, DeriveTraversable, EmptyDataDecls, FlexibleContexts, FlexibleInstances, FunctionalDependencies, GADTs, GeneralizedNewtypeDeriving, ImpredicativeTypes, LambdaCase, LiberalTypeSynonyms, MagicHash, MultiParamTypeClasses, MultiWayIf, NoImplicitPrelude, NoMonomorphismRestriction, OverloadedStrings, PatternGuards, ParallelListComp, QuasiQuotes, RankNTypes, RecordWildCards, ScopedTypeVariables, StandaloneDeriving, TemplateHaskell, TupleSections, TypeFamilies, TypeOperators, UnboxedTuples
  default-language:
    Haskell2010
  build-depends:
    -- 
    record,
    record-syntax,
    -- 
    conversion,
    conversion-text,
    text,
    -- 
    base-prelude


