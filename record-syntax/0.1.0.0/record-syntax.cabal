-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:644bd8d8e6cdc6575d7d4cf18f0395d0
    SHA1:d5c8b394ec3493730131eb9d9a81a81b4e4b55b4
    SHA256:80c003a3fca9d3d95a74d5962f3b6272d90e8fac6e7e2f821936b1e8a249bf84
    SHA512:e7697beb9574079f7bd41665f81dc2e52bd2e0269776e1323eb66ba5d13ac02b0996372e78c1b207b77af03358e0606aa521a7fd5331ec9d27adc016b29d71fb
    Skein512_512:459dd0f2d10cbb14254e0cb506cef264c810de3c09875dcb0aeb5f8f38c5f0197a3c62001f8e9b8e38e74f75f11f53ade93e13ad6c05b9295ebbeb8e40a2f1e8

x-package-locations:
    https://hackage.haskell.org/package/record-syntax-0.1.0.0/record-syntax-0.1.0.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/record-syntax-0.1.0.0.tar.gz

x-package-size: 11509
-- END Added by all-cabal-hashes-tool

name:
  record-syntax
version:
  0.1.0.0
synopsis:
  A library for parsing and processing the Haskell syntax sprinkled with anonymous records
category:
  Parser, Preprocessor, Syntax, Records
homepage:
  https://github.com/nikita-volkov/record-syntax 
bug-reports:
  https://github.com/nikita-volkov/record-syntax/issues 
author:
  Nikita Volkov <nikita.y.volkov@mail.ru>
maintainer:
  Nikita Volkov <nikita.y.volkov@mail.ru>
copyright:
  (c) 2015, Nikita Volkov
license:
  MIT
license-file:
  LICENSE
build-type:
  Custom
cabal-version:
  >=1.10


source-repository head
  type:
    git
  location:
    git://github.com/nikita-volkov/record-syntax.git


flag doctest
  description: Build Doctests
  default: True
  manual: True


library
  hs-source-dirs:
    library
  ghc-options:
    -funbox-strict-fields
  default-extensions:
    Arrows, BangPatterns, ConstraintKinds, DataKinds, DefaultSignatures, DeriveDataTypeable, DeriveFoldable, DeriveFunctor, DeriveGeneric, DeriveTraversable, EmptyDataDecls, FlexibleContexts, FlexibleInstances, FunctionalDependencies, GADTs, GeneralizedNewtypeDeriving, ImpredicativeTypes, LambdaCase, LiberalTypeSynonyms, MagicHash, MultiParamTypeClasses, MultiWayIf, NoImplicitPrelude, NoMonomorphismRestriction, OverloadedStrings, PatternGuards, ParallelListComp, QuasiQuotes, RankNTypes, RecordWildCards, ScopedTypeVariables, StandaloneDeriving, TemplateHaskell, TupleSections, TypeFamilies, TypeOperators, UnboxedTuples
  default-language:
    Haskell2010
  other-modules:
    Record.Syntax.Position
    Record.Syntax.Shared
    Record.Syntax.LevelReifier
    Record.Syntax.LevelReifier.Levels
    Record.Syntax.Parser
    Record.Syntax.Renderer
    Record.Syntax.Prelude
  exposed-modules:
    Record.Syntax
  build-depends:
    -- 
    -- Despite not making a single import from that library,
    -- we need the following dependency to restrict the range of supported versions.
    record == 0.4.*,
    -- 
    haskell-src-exts == 1.16.*,
    parsec == 3.*,
    -- 
    conversion == 1.*,
    conversion-text == 1.*,
    text >= 1 && < 2,
    --
    template-haskell == 2.*,
    -- 
    transformers >= 0.2 && < 0.5,
    base-prelude >= 0.1.16 && < 0.2,
    base >= 4.6 && < 4.9


test-suite doctest
  type:
    exitcode-stdio-1.0
  hs-source-dirs:
    doctest
  main-is:
    Main.hs
  ghc-options:
    -threaded
    "-with-rtsopts=-N"
    -funbox-strict-fields
  default-extensions:
    Arrows, BangPatterns, ConstraintKinds, DataKinds, DefaultSignatures, DeriveDataTypeable, DeriveFoldable, DeriveFunctor, DeriveGeneric, DeriveTraversable, EmptyDataDecls, FlexibleContexts, FlexibleInstances, FunctionalDependencies, GADTs, GeneralizedNewtypeDeriving, ImpredicativeTypes, LambdaCase, LiberalTypeSynonyms, MultiParamTypeClasses, MultiWayIf, NoImplicitPrelude, NoMonomorphismRestriction, OverloadedStrings, PatternGuards, ParallelListComp, QuasiQuotes, RankNTypes, RecordWildCards, ScopedTypeVariables, StandaloneDeriving, TemplateHaskell, TupleSections, TypeFamilies, TypeOperators
  default-language:
    Haskell2010
  if !flag(doctest)
    buildable: False
  build-depends:
    doctest == 0.9.*,
    directory == 1.2.*,
    filepath == 1.4.*,
    base-prelude,
    base


test-suite hspec
  type:
    exitcode-stdio-1.0
  hs-source-dirs:
    hspec
  main-is:
    Main.hs
  ghc-options:
    -funbox-strict-fields
    -threaded
    "-with-rtsopts=-N"
  default-extensions:
    Arrows, BangPatterns, ConstraintKinds, DataKinds, DefaultSignatures, DeriveDataTypeable, DeriveFoldable, DeriveFunctor, DeriveGeneric, DeriveTraversable, EmptyDataDecls, FlexibleContexts, FlexibleInstances, FunctionalDependencies, GADTs, GeneralizedNewtypeDeriving, ImpredicativeTypes, LambdaCase, LiberalTypeSynonyms, MagicHash, MultiParamTypeClasses, MultiWayIf, NoImplicitPrelude, NoMonomorphismRestriction, OverloadedStrings, PatternGuards, ParallelListComp, QuasiQuotes, RankNTypes, RecordWildCards, ScopedTypeVariables, StandaloneDeriving, TemplateHaskell, TupleSections, TypeFamilies, TypeOperators, UnboxedTuples
  default-language:
    Haskell2010
  build-depends:
    -- 
    record,
    record-syntax,
    -- 
    hspec == 2.1.*,
    -- 
    base-prelude,
    base


-- Well, it's not a benchmark actually, 
-- but in Cabal there's no better way to specify an executable, 
-- which is not intended for distribution.
benchmark demo
  type: 
    exitcode-stdio-1.0
  hs-source-dirs:
    demo
  main-is:
    Main.hs
  ghc-options:
    -O2
    -threaded
    "-with-rtsopts=-N"
    -funbox-strict-fields
  default-extensions:
    Arrows, BangPatterns, ConstraintKinds, DataKinds, DefaultSignatures, DeriveDataTypeable, DeriveFoldable, DeriveFunctor, DeriveGeneric, DeriveTraversable, EmptyDataDecls, FlexibleContexts, FlexibleInstances, FunctionalDependencies, GADTs, GeneralizedNewtypeDeriving, ImpredicativeTypes, LambdaCase, LiberalTypeSynonyms, MagicHash, MultiParamTypeClasses, MultiWayIf, NoImplicitPrelude, NoMonomorphismRestriction, OverloadedStrings, PatternGuards, ParallelListComp, QuasiQuotes, RankNTypes, RecordWildCards, ScopedTypeVariables, StandaloneDeriving, TemplateHaskell, TupleSections, TypeFamilies, TypeOperators, UnboxedTuples
  default-language:
    Haskell2010
  build-depends:
    -- 
    record,
    record-syntax,
    -- 
    conversion,
    conversion-text,
    text,
    -- 
    base-prelude


