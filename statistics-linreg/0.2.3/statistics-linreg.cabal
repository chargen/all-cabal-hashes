-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:a05fca07bfbc0a917fb9c81f947c907e
    SHA1:9818b732e3a564a2dee4656085bc1d9a6047d128
    SHA256:6479fd1e37cc64372a596913b0ed8cd269e8511d25d3ccaaf3035599813b6402
    SHA512:a603bf468f62be94b64d0a3c447c753d981bdfd56f4a0a41bcfb4f69592e8a8b82bbeec2223d0ac163356bd1176293757744d3070f3b0656f5c2f88de1e88e84
    Skein512_512:d68236cb2584bc7f1240a4e14d6f18b8d50192de9651fe2cf589047f4891aeae92ae434fca30ef6e5c1329d99f427d8cce208745769b9f32db08712bf3cecf39

package-locations:
    https://hackage.haskell.org/package/statistics-linreg-0.2.3/statistics-linreg-0.2.3.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/statistics-linreg-0.2.3.tar.gz

package-size: 6173
-- END Added by all-cabal-hashes-tool

Name:                statistics-linreg
Version:             0.2.3
Synopsis:            Linear regression between two samples, based on the 'statistics' package.
Description:         Provides functions to perform a linear regression between 2 samples, see the documentation of the linearRegression functions. This library is based on the 'statistics' package.
		     .
		       * 0.2.3: added robust-fit support.
		     .
		       * 0.2.2: added the Total-Least-Squares version and made some refactoring to eliminate code duplication
		     .
		       * 0.2.1: added the r-squared version and improved the performances.
                     .
                     Code sample:
                     .
                     > import qualified Data.Vector.Unboxed as U
                     > 
                     > test :: Int -> IO ()
                     > test k = do
                     >   let n = 10000000
                     >   let a = k*n + 1
                     >   let b = (k+1)*n
                     >   let xs = U.fromList [a..b]
                     >   let ys = U.map (\x -> x*100 + 2000) xs 
                     >   -- thus 100 and 2000 are the alpha and beta we want
                     >   putStrLn "linearRegression:"
                     >   print $ linearRegression xs ys
                     .
                     The r-squared and Total-Least-Squares versions work the same way.
Homepage:            http://github.com/alpmestan/statistics-linreg
Bug-reports:         https://github.com/alpmestan/statistics-linreg/issues
License:             MIT
License-file:        LICENSE
Author:              Alp Mestanogullari <alpmestan@gmail.com>, Uri Barenholz <uri.barenholz@weizmann.ac.il>
Maintainer:          Alp Mestanogullari <alpmestan@gmail.com>
Copyright:           2010-2012 Alp Mestanogullari
Stability:           Experimental
Category:            Math, Statistics
Build-type:          Simple
Cabal-version:       >=1.6

Library
  Exposed-modules: Statistics.LinearRegression
  Build-depends:    statistics >= 0.5, vector >= 0.5, base >= 4 && < 5,
                    safe >= 0.3, random >= 1.0, MonadRandom >= 0.1,
                    random-shuffle >= 0.0.4
  Ghc-options: -funbox-strict-fields -O2
  
source-repository head
  type: git
  location: http://github.com/alpmestan/statistics-linreg.git
