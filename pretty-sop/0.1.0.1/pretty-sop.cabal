-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:f03fd5810e31e0326f243fca5ab19c68
    SHA1:ef90568b33ec0d67d07ab0ca35947a532cc409f1
    SHA256:753bdf0b4e7906ad197efd5dfdeb3977245e5a45062d3a3a3d5b26f93ea766eb
    SHA512:6e65e73cbea663bb0a54a7d5680a23c7674df4b0e8773ec1b21375bbdedffdfffc0fcb3f57d51c73f973cf70d9946242e00730b374108e0dd0f286111b111c78
    Skein512_512:3af571701375be16f0c6318d65df83b702f3433c9e15ef0ab306f05ab9c8deba24950206f33b2ac021afa3fc11565bee585eceff42790adfe992986900c246a3

x-package-locations:
    https://hackage.haskell.org/package/pretty-sop-0.1.0.1/pretty-sop-0.1.0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/pretty-sop-0.1.0.1.tar.gz

x-package-size: 2679
-- END Added by all-cabal-hashes-tool

name:                pretty-sop
version:             0.1.0.1
synopsis:            A generic pretty-printer using generics-sop
description:
  This library contains a generic implementation of the 'prettyVal'
  function from the @<https://hackage.haskell.org/package/pretty-show pretty-show>@
  package. Using the pretty printer, values can easily be rendered to
  strings and HTML documents in a uniform way.
  .
  This library makes use of the
  @<https://hackage.haskell.org/package/generics-sop generics-sop>@ package and
  is an example of a generic function defined in the SOP style.
  .
license:             BSD3
license-file:        LICENSE
author:              Edsko de Vries <edsko@well-typed.com>, Andres LÃ¶h <andres@well-typed.com>
maintainer:          edsko@well-typed.com
category:            Generics
build-type:          Simple
cabal-version:       >=1.10
tested-with:         GHC == 7.6.3, GHC == 7.8.2

source-repository head
  type:                git
  location:            https://github.com/well-typed/pretty-sop

library
  exposed-modules:     Generics.SOP.PrettyVal
  build-depends:       base                 >= 4.6  && < 5,
                       generics-sop         >= 0.1  && < 0.2,
                       pretty-show          >= 1.6  && < 1.7
  hs-source-dirs:      src
  default-language:    Haskell2010
  ghc-options:         -Wall
  default-extensions:  ScopedTypeVariables
                       TypeFamilies
                       RankNTypes
                       TypeOperators
                       GADTs
                       ConstraintKinds
                       MultiParamTypeClasses
                       TypeSynonymInstances
                       FlexibleInstances
                       FlexibleContexts
                       DeriveFunctor
                       DeriveFoldable
                       DeriveTraversable
                       DefaultSignatures
                       KindSignatures
                       DataKinds
                       FunctionalDependencies
  if impl (ghc >= 7.8)
    default-extensions:  AutoDeriveTypeable
  other-extensions:    OverloadedStrings
                       OverlappingInstances
                       PolyKinds
                       UndecidableInstances
                       TemplateHaskell
                       CPP
