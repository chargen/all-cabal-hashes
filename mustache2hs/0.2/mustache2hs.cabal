-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:e04302da08c1b9ecaa1cd7809fa9fbd2
    SHA1:39abbe534ac13a9d0d385d5616d832470c5e30b0
    SHA256:b95e7829f02fdfc06e254f63b9bede8f00f957e28b7fa91c574682b6a42a5568
    SHA512:d5801427346fbc91b0f4abef6422fe7308216404b1b7544a7cd90193406e643484cccca4154d406363a4b4fddc3a701f52cd2293bc4a9ef6632c82386f4b9e63
    Skein512_512:5d29c8154d087fa989ef93a0a5cddfc6651748aba0bf6e0b3beeff8d0221b80466d8ace69c030a9d66761e96d8db5af8ad6e03344ebddea3887bc5d1bc32c2a8

x-package-locations:
    https://hackage.haskell.org/package/mustache2hs-0.2/mustache2hs-0.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/mustache2hs-0.2.tar.gz

x-package-size: 5230
-- END Added by all-cabal-hashes-tool

name:            mustache2hs
version:         0.2
cabal-version:   >= 1.8
license:         OtherLicense
license-file:    COPYING
category:        Utility
copyright:       Â© 2012 Stephen Paul Weber
author:          Stephen Paul Weber <singpolyma@singpolyma.net>
maintainer:      Stephen Paul Weber <singpolyma@singpolyma.net>
stability:       experimental
tested-with:     GHC == 7.0.3
synopsis:        Utility to generate Haskell code from Mustache templates
homepage:        http://github.com/singpolyma/mustache2hs
bug-reports:     http://github.com/singpolyma/mustache2hs/issues
build-type:      Simple
description:
        This utility takes in Haskell records (single data constructor only)
        and a list of mustache template and record name pairs, and generates
        Haskell code for functions that take an escape function and one of
        the records, and returns a 'Data.Text.Lazy.Builder.Builder'.
        .
        This allows most records to be used as context for rendering a
        template, and gives GHC the ability to typecheck the template's use of
        record fields at compile time.  It also means your application does
        not need to be reading template files off disk in production.
        .
        Usage example:
        .
        > mustache2hs -m Records.hs main.mustache SomeRec sub.mustache OtherRec
        .
        A full example is in the git repository.

extra-source-files:
        README

executable mustache2hs
        main-is: mustache2hs.hs

        build-depends:
                base == 4.*,
                text,
                parsec >= 3.1.2,
                haskell-src,
                utf8-string,
                bytestring,
                blaze-builder,
                transformers,
                filepath

source-repository head
        type:     git
        location: git://github.com/singpolyma/mustache2hs.git
