-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:82f135e975f88d638337fd12731ea31a
    SHA1:7178bf0ff87f1f68eae57c1b03188dd30d2bf378
    SHA256:7a3bccee877231fade17b392830c767460ed1bb70c8daf18dd6f8d209cfeabe0
    SHA512:c6f73e2a4491bb98359f7b21ccc004187de02beab8122ec60a0c7fdada3860c4d187ac1308e178035513fdc7e7df2ce0dce72ed55b82a00d6862882e3abc7547
    Skein512_512:231860048be3b5c2d34781d99949d90e476c790a8ea2eaecbd596f2554184e3367e628f8de642ddcb00d6e73cd0f33f8d2a6762f75dcfbf8b35345c7a7b59672

x-package-locations:
    https://hackage.haskell.org/package/mustache2hs-0.2.1.1/mustache2hs-0.2.1.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/mustache2hs-0.2.1.1.tar.gz

x-package-size: 6296
-- END Added by all-cabal-hashes-tool

name:            mustache2hs
version:         0.2.1.1
cabal-version:   >= 1.8
license:         OtherLicense
license-file:    COPYING
category:        Utility
copyright:       Â© 2012 Stephen Paul Weber
author:          Stephen Paul Weber <singpolyma@singpolyma.net>
maintainer:      Stephen Paul Weber <singpolyma@singpolyma.net>
stability:       experimental
tested-with:     GHC == 7.0.3
synopsis:        Utility to generate Haskell code from Mustache templates
homepage:        http://github.com/singpolyma/mustache2hs
bug-reports:     http://github.com/singpolyma/mustache2hs/issues
build-type:      Simple
description:
        This utility takes in Haskell records (single data constructor only)
        and a list of mustache template and record name pairs, and generates
        Haskell code for functions that take an escape function and one of
        the records, and returns a 'Data.Text.Lazy.Builder.Builder'.
        .
        This allows most records to be used as context for rendering a
        template, and gives GHC the ability to typecheck the template's use of
        record fields at compile time.  It also means your application does
        not need to be reading template files off disk in production.
        .
        Usage example:
        .
        > mustache2hs -m Records.hs main.mustache SomeRec sub.mustache OtherRec
        .
        A full example is in the git repository.

extra-source-files:
        README

executable mustache2hs
        main-is: mustache2hs.hs

        other-modules: ParseRecords

        build-depends:
                base >= 4.2.0.0 && < 5.0.0.0,
                text,
                parsec >= 3.1.2,
                haskell-src,
                utf8-string,
                bytestring,
                blaze-builder >= 0.2.0.0,
                transformers,
                filepath

source-repository head
        type:     git
        location: git://github.com/singpolyma/mustache2hs.git
