-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:25260c963f0ec52fe73753e438d6f841
    SHA1:12bdaf261079c6c79a95f5628933efd957b8f3dd
    SHA256:41bb3a4ec1ac35814ff68edb887cff69d601f6fc32862b38c25beb351ce1fbe5
    SHA512:5a00d7c6a0b843896a3eaf027ab53abfce81f279fd65bbc17fbec1a3eb915560eb031c99d506bbe98505578572401938619dd9783eec8e1c3dc0b4ea77ac2044
    Skein512_512:0fa4bba94c2ea42349fad275c308b0a24cf9638c9f7d7de59259e64874bb5d6f7e0b84d0a23fb65e1e755f797b62def0edad65da5e98e95e3b2a1fd9a7ccf677

package-locations:
    https://hackage.haskell.org/package/mustache2hs-0.1.1/mustache2hs-0.1.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/mustache2hs-0.1.1.tar.gz

package-size: 6152
-- END Added by all-cabal-hashes-tool

name:            mustache2hs
version:         0.1.1
cabal-version:   >= 1.8
license:         OtherLicense
license-file:    COPYING
category:        Utility
copyright:       Â© 2012 Stephen Paul Weber
author:          Stephen Paul Weber <singpolyma@singpolyma.net>
maintainer:      Stephen Paul Weber <singpolyma@singpolyma.net>
stability:       experimental
tested-with:     GHC == 7.0.3
synopsis:        Utility to generate Haskell code from Mustache templates
homepage:        http://github.com/singpolyma/mustache2hs
bug-reports:     http://github.com/singpolyma/mustache2hs/issues
build-type:      Simple
description:
        This utility take in Haskell records (single data constructor only)
        and a list of mustache template and record name pairs, and generates
        Haskell code for functions that take an escape function and one of
        the records, and returns a 'Builder'.
        .
        This allows most records to be used as context for rendering a
        template, and gives GHC the ability to typecheck the template's use of
        record fields at compile time.  It also means your application does
        not need to be reading template files off disk in production.
        .
        Usage example:
        .
        > mustache2hs -m Records.hs main.mustache SomeRec sub.mustache OtherRec
        .
        A full example is in the git repository.

extra-source-files:
        README

executable mustache2hs
        main-is: mustache2hs.hs
        other-modules: ParseRecords

        build-depends:
                base == 4.*,
                text,
                parsec >= 3.1.2,
                haskell-src,
                utf8-string,
                bytestring,
                blaze-builder,
                transformers,
                filepath

source-repository head
        type:     git
        location: git://github.com/singpolyma/mustache2hs.git
