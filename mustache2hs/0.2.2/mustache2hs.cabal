-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:0cce1e670705c5d847f3b253f47e465e
    SHA1:70d3998ef80a6b1e1aefe6dd2f88de1472ca0d89
    SHA256:4389291892e3128bb0d2f31a0adbddee6d3e73d1e5d9c3e8d7a10008d62c27a1
    SHA512:baa487bc36433335b1c1217515f87da9b3c05b8668b0e7d3e0dc6483361a56a54b5a0518736f00c1432fc4bcca7627b4980b76928ca95635c0f1428a782bc556
    Skein512_512:bb9a617ce3610e6d7e43dce6f20abb659e8ffa3587b17114e5ccb517152cc7e823c8c4528ee4cab5eef4d6c14ee644a0429ae07100d34ec69cc67b9f03ddc83d

package-locations:
    https://hackage.haskell.org/package/mustache2hs-0.2.2/mustache2hs-0.2.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/mustache2hs-0.2.2.tar.gz

package-size: 6339
-- END Added by all-cabal-hashes-tool

name:            mustache2hs
version:         0.2.2
cabal-version:   >= 1.8
license:         OtherLicense
license-file:    COPYING
category:        Utility
copyright:       Â© 2012 Stephen Paul Weber
author:          Stephen Paul Weber <singpolyma@singpolyma.net>
maintainer:      Stephen Paul Weber <singpolyma@singpolyma.net>
stability:       experimental
tested-with:     GHC == 7.0.3
synopsis:        Utility to generate Haskell code from Mustache templates
homepage:        http://github.com/singpolyma/mustache2hs
bug-reports:     http://github.com/singpolyma/mustache2hs/issues
build-type:      Simple
description:
        This utility takes in Haskell records (single data constructor only)
        and a list of mustache template and record name pairs, and generates
        Haskell code for functions that take an escape function and one of
        the records, and returns a 'Data.Text.Lazy.Builder.Builder'.
        .
        This allows most records to be used as context for rendering a
        template, and gives GHC the ability to typecheck the template's use of
        record fields at compile time.  It also means your application does
        not need to be reading template files off disk in production.
        .
        Usage example:
        .
        > mustache2hs -m Records.hs main.mustache SomeRec sub.mustache OtherRec
        .
        A full example is in the git repository.

extra-source-files:
        README

executable mustache2hs
        main-is: mustache2hs.hs

        other-modules: ParseRecords

        build-depends:
                base >= 4.2.0.0 && < 5.0.0.0,
                text,
                parsec >= 3.1.2,
                haskell-src,
                utf8-string,
                bytestring,
                blaze-builder >= 0.2.0.0,
                transformers,
                filepath

source-repository head
        type:     git
        location: git://github.com/singpolyma/mustache2hs.git
