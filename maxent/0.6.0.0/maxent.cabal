-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:fca84d3a245784175a57244dbabde35f
    SHA1:5154cef6f2b4246e83b1145e3429bd3def4b03aa
    SHA256:df11aea820c24e540f48b9bcab7b430e5570f04157ad2d8de41187c2b207d1ac
    SHA512:fc9debb2d869f71fbb5e0342dbdf11adeb68e950e7c51f88a44ddf73e2194e495c6b984e5f0ee0b6568a85dbdbddfbc93cafa9cb52e556eb123d3092cc0779ad
    Skein512_512:76f5f69e2dd779e6fb4d3ab2ed1a62e82cae1929966b008a37d2f1af08c99763170014a0e08dd1852253043330494d61ff6324ed23fc9c1636691b35f8842584

x-package-locations:
    https://hackage.haskell.org/package/maxent-0.6.0.0/maxent-0.6.0.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/maxent-0.6.0.0.tar.gz

x-package-size: 5072
-- END Added by all-cabal-hashes-tool

-- Initial maxent.cabal generated by cabal init.  For further 
-- documentation, see http://haskell.org/cabal/users-guide/

-- The name of the package.
name:                maxent

-- The package version.  See the Haskell package versioning policy (PVP) 
-- for standards guiding when and how versions should be incremented.
-- http://www.haskell.org/haskellwiki/Package_versioning_policy
-- PVP summary:      +-+------- breaking API changes
--                   | | +----- non-breaking API additions
--                   | | | +--- code changes with no API change
version:             0.6.0.0

-- A short (one-line) description of the package.
synopsis:            Compute Maximum Entropy Distributions

-- A longer description of the package.
description: 
 The maximum entropy method, or MAXENT, is variational approach for computing probability 
 distributions given a list of moment, or expected value, constraints.
 .
 Here are some links for background info.
 .
 A good overview of applications:
 <http://cmm.cit.nih.gov/maxent/letsgo.html>
 .
 On the idea of maximum entropy in general: 
 <http://en.wikipedia.org/wiki/Principle_of_maximum_entropy>
 .
 Use this package to compute discrete maximum entropy distributions over a list of values and
 list of constraints.
 .
 Here is a the example from Probability the Logic of Science
 .
 >> maxent 0.00001 [1,2,3] [average 1.5]
 > Right [0.61, 0.26, 0.11]
 .
 The classic dice example
 .
 >> maxent 0.00001 [1,2,3,4,5,6] [average 4.5]
 > Right [.05, .07, 0.11, 0.16, 0.23, 0.34]
 .
 One can use different constraints besides the average value there.  
  
-- URL for the project homepage or repository.
homepage:            https://github.com/jfischoff/maxent

-- The license under which the package is released.
license:             BSD3

-- The file containing the license text.
license-file:        LICENSE

-- The package author(s).
author:              Jonathan Fischoff

-- An email address to which users can send suggestions, bug reports, and 
-- patches.
maintainer:          jonathangfischoff@gmail.com

-- A copyright notice.
-- copyright:           

category:            Math

build-type:          Simple

-- Constraint on the version of Cabal needed to build this package.
cabal-version:       >=1.12


library
  -- Modules exported by the library.
  exposed-modules:     Numeric.MaxEnt
  
  -- Modules included in this library but not exported.
  other-modules:     Numeric.MaxEnt.Internal, 
                     Numeric.MaxEnt.Linear, 
                     Numeric.MaxEnt.ConjugateGradient 
  
  -- Other library packages from which modules are imported.
  build-depends: base ==4.6.*,
                 nonlinear-optimization ==0.3.*,
                 vector ==0.10.*, 
                 ad ==3.4.*,
                 lagrangian == 0.5.*
  
  -- Directories containing source files.
  hs-source-dirs:      src
  default-language: Haskell2010
  
Test-Suite tests
  hs-source-dirs:      src, tests
  type:       exitcode-stdio-1.0
  main-is:    Main.hs
  build-depends: base ==4.6.*,
                 nonlinear-optimization ==0.3.*,
                 vector ==0.10.*, 
                 ad ==3.4.*,
                 hmatrix ==0.14.*,
                 lagrangian == 0.5.*,
                 QuickCheck == 2.5.*,
                 test-framework-quickcheck2 ==0.3.*,
                 test-framework-quickcheck2 ==0.3.*,
                 test-framework-hunit ==0.3.*,
                 test-framework == 0.8.*
                    
  default-language: Haskell2010

Benchmark bench
  default-language: Haskell2010
  hs-source-dirs:      src, bench
  type:       exitcode-stdio-1.0
  main-is:    Bench.hs
  build-depends: base ==4.6.*,
                 nonlinear-optimization ==0.3.*,
                 vector ==0.10.*, 
                 ad ==3.4.*,
                 hmatrix ==0.14.*,
                 lagrangian == 0.5.*,
                 criterion == 0.6.*


  