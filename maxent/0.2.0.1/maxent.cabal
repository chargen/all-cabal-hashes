-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:8f6b25647e8ca32fc4ba69c38e875444
    SHA1:8c0d460cf38500534dd3647945a9bf4161eb3130
    SHA256:3660ed7dfd61987a8618cdc410061817a8b6e2868464e0aef8c70f6b7de5b5cf
    SHA512:5505745b7d323436419e5050d0f15ebd7bce11adce53644ca60c90c5e33274273fe96e0685f68e2700d1bf1980a31c4359a4b9c04943763d90f478c7d8d15693
    Skein512_512:3c4e37c8e0a7ce455a84957d1e65fb45386e62ca1b17f92e72ad6dda8e682f8aac1ceb9da70feee52ec5fe4150d6333e33fbc5068d71f2adc9a4e09cc56e3ab2

x-package-locations:
    https://hackage.haskell.org/package/maxent-0.2.0.1/maxent-0.2.0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/maxent-0.2.0.1.tar.gz

x-package-size: 3992
-- END Added by all-cabal-hashes-tool

-- Initial maxent.cabal generated by cabal init.  For further 
-- documentation, see http://haskell.org/cabal/users-guide/

-- The name of the package.
name:                maxent

-- The package version.  See the Haskell package versioning policy (PVP) 
-- for standards guiding when and how versions should be incremented.
-- http://www.haskell.org/haskellwiki/Package_versioning_policy
-- PVP summary:      +-+------- breaking API changes
--                   | | +----- non-breaking API additions
--                   | | | +--- code changes with no API change
version:             0.2.0.1

-- A short (one-line) description of the package.
synopsis:            Compute Maximum Entropy Distributions

-- A longer description of the package.
description: 
 The maximum entropy method, or MAXENT, is variational approach for computing probability 
 distributions given a list of moment, or expected value, constraints.
 .
 Here are some links for background info.
 .
 A good overview of applications:
 <http://cmm.cit.nih.gov/maxent/letsgo.html>
 .
 On the idea of maximum entropy in general: 
 <http://en.wikipedia.org/wiki/Principle_of_maximum_entropy>
 .
 Use this package to compute discrete maximum entropy distributions over a list of values and
 list of constraints.
 .
 Here is a the example from Probability the Logic of Science
 .
 @
  maxent ([1,2,3], [average 1.5])
 @
 .
 Right [0.61, 0.26, 0.11]
 .
 The classic dice example
 .
 @
  maxent ([1,2,3,4,5,6], [average 4.5])
 @
 .
 Right [.05, .07, 0.11, 0.16, 0.23, 0.34]
 .
 One can use different constraints besides the average value there.  
 .
 As for why you want to maximize the entropy to find the probability constraint, 
 I will say this for now. In the case of the average constraint 
 it is a kin to choosing a integer partition with the most interger compositions. 
 I doubt that makes any sense, but I will try to explain more with a blog post soon.
  
-- URL for the project homepage or repository.
homepage:            https://github.com/jfischoff/maxent

-- The license under which the package is released.
license:             BSD3

-- The file containing the license text.
license-file:        LICENSE

-- The package author(s).
author:              Jonathan Fischoff

-- An email address to which users can send suggestions, bug reports, and 
-- patches.
maintainer:          jonathangfischoff@gmail.com

-- A copyright notice.
-- copyright:           

category:            Math

build-type:          Simple

-- Constraint on the version of Cabal needed to build this package.
cabal-version:       >=1.8


library
  -- Modules exported by the library.
  exposed-modules:     MaxEnt
  
  -- Modules included in this library but not exported.
  other-modules:     MaxEnt.Internal
  
  -- Other library packages from which modules are imported.
  build-depends: base ==4.6.*,
                 nonlinear-optimization ==0.3.*,
                 vector ==0.9.*, 
                 ad ==3.2.*
  
  -- Directories containing source files.
  hs-source-dirs:      src
  