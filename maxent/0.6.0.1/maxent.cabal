-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:3f05adf95391a45cc3adfb0c8f138cd1
    SHA1:bc03464ddaa7ef786065b709dc72a4f694ca1686
    SHA256:e7ccd1ae8073fe8a6cb0da421bcdf2423a294fe6963ebb01febbdfa1ed536f1d
    SHA512:a8f9c182eb2ea54ede66d5bbc2ed83129d515d8450657a0f7d1b23f02ec83f282c7d9492ae2f927de4f7187208ac78ecd996137b1bf6112919d24f88dcfd9e0b
    Skein512_512:c6fad8d5238721c9816b46f9823dbd9ceb7099e863b09825b52cc549654e2c9487e7f880c50c73a3898bbd57d33817f3b8580827c70297bb53b36df365760656

x-package-locations:
    https://hackage.haskell.org/package/maxent-0.6.0.1/maxent-0.6.0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/maxent-0.6.0.1.tar.gz

x-package-size: 6151
-- END Added by all-cabal-hashes-tool

-- Initial maxent.cabal generated by cabal init.  For further 
-- documentation, see http://haskell.org/cabal/users-guide/

-- The name of the package.
name:                maxent

-- The package version.  See the Haskell package versioning policy (PVP) 
-- for standards guiding when and how versions should be incremented.
-- http://www.haskell.org/haskellwiki/Package_versioning_policy
-- PVP summary:      +-+------- breaking API changes
--                   | | +----- non-breaking API additions
--                   | | | +--- code changes with no API change
version:             0.6.0.1

-- A short (one-line) description of the package.
synopsis:            Compute Maximum Entropy Distributions

-- A longer description of the package.
description: 
 The maximum entropy method, or MAXENT, is variational approach for computing probability 
 distributions given a list of moment, or expected value, constraints.
 .
 Here are some links for background info.
 .
 A good overview of applications:
 <http://cmm.cit.nih.gov/maxent/letsgo.html>
 .
 On the idea of maximum entropy in general: 
 <http://en.wikipedia.org/wiki/Principle_of_maximum_entropy>
 .
 Use this package to compute discrete maximum entropy distributions over a list of values and
 list of constraints.
 .
 Here is a the example from Probability the Logic of Science
 .
 >> maxent 0.00001 [1,2,3] [average 1.5]
 > Right [0.61, 0.26, 0.11]
 .
 The classic dice example
 .
 >> maxent 0.00001 [1,2,3,4,5,6] [average 4.5]
 > Right [.05, .07, 0.11, 0.16, 0.23, 0.34]
 .
 One can use different constraints besides the average value there.  
  
-- URL for the project homepage or repository.
homepage:            https://github.com/jfischoff/maxent

-- The license under which the package is released.
license:             BSD3

-- The file containing the license text.
license-file:        LICENSE

-- The package author(s).
author:              Jonathan Fischoff

-- An email address to which users can send suggestions, bug reports, and 
-- patches.
maintainer:          jonathangfischoff@gmail.com

-- A copyright notice.
-- copyright:           

category:            Math

build-type:          Simple

-- Constraint on the version of Cabal needed to build this package.
cabal-version:       >=1.12


library
  -- Modules exported by the library.
  exposed-modules:     Numeric.MaxEnt
  
  -- Modules included in this library but not exported.
  other-modules:     Numeric.MaxEnt.Internal, 
                     Numeric.MaxEnt.Linear, 
                     Numeric.MaxEnt.ConjugateGradient,
                     Numeric.MaxEnt.Moment,
                     Numeric.MaxEnt.General  
  
  -- Other library packages from which modules are imported.
  build-depends: base ==4.6.*,
                 nonlinear-optimization ==0.3.*,
                 vector ==0.10.*, 
                 ad ==3.4.*,
                 lagrangian == 0.5.*
  
  -- Directories containing source files.
  hs-source-dirs:      src
  default-language: Haskell2010
  
Test-Suite tests
  hs-source-dirs:      src, tests
  type:       exitcode-stdio-1.0
  main-is:    Main.hs
  build-depends: base ==4.6.*,
                 nonlinear-optimization ==0.3.*,
                 vector ==0.10.*, 
                 ad ==3.4.*,
                 hmatrix ==0.14.*,
                 lagrangian == 0.5.*,
                 QuickCheck == 2.5.*,
                 test-framework-quickcheck2 ==0.3.*,
                 test-framework-quickcheck2 ==0.3.*,
                 test-framework-hunit ==0.3.*,
                 test-framework == 0.8.*
                    
  default-language: Haskell2010

Benchmark bench
  default-language: Haskell2010
  hs-source-dirs:      src, bench
  type:       exitcode-stdio-1.0
  main-is:    Bench.hs
  build-depends: base ==4.6.*,
                 nonlinear-optimization ==0.3.*,
                 vector ==0.10.*, 
                 ad ==3.4.*,
                 hmatrix ==0.14.*,
                 lagrangian == 0.5.*,
                 criterion == 0.6.*


  