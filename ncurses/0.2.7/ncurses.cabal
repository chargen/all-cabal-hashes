-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:d0b9854083c1c7054617cfa96468697c
    SHA1:d9648b3b78cd147e3af0c603e9f028d03b2fad53
    SHA256:7f0bc19ffabe9ea5335021145c95fffcf553681eb0107f8bc929beabc432d708
    SHA512:ba87fceedc98bfc6b4121daa9d59565de2d6003cd2398a3f1923b2e0c431812b8ab557db029f21cb614dbd33a6763a93e5eb51e848509d0ba3a529259c788439
    Skein512_512:bef72f5eda000f9d7d24012e17a59d1aaaa0cbeee0d4337274337325b9f4b6fb5e40e0945962ddef15dfef111d948b63f5f634c3379b62c2d5c4e3dd0b593a4a

x-package-locations:
    https://hackage.haskell.org/package/ncurses-0.2.7/ncurses-0.2.7.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/ncurses-0.2.7.tar.gz

x-package-size: 25355
-- END Added by all-cabal-hashes-tool

name: ncurses
version: 0.2.7
license: GPL-3
license-file: license.txt
author: John Millikin <jmillikin@gmail.com>
maintainer: John Millikin <jmillikin@gmail.com>
build-type: Simple
cabal-version: >= 1.6
category: User Interfaces, Foreign
stability: experimental
homepage: https://john-millikin.com/software/haskell-ncurses/
bug-reports: mailto:jmillikin@gmail.com

synopsis: Modernised bindings to GNU ncurses
description:
  GNU ncurses is a library for creating command-line application with
  pseudo-graphical interfaces. This package is a nice, modern binding
  to GNU ncurses.
  .
  The following example is a program that display the message
  \"Hello world!\" until the user hits Q:
  .
  @
  import UI.NCurses
  .
  main :: IO ()
  main = runCurses $ do
  &#x20;   setEcho False
  &#x20;   w <- defaultWindow
  &#x20;   updateWindow w $ do
  &#x20;       moveCursor 1 10
  &#x20;       drawString \"Hello world!\"
  &#x20;       moveCursor 3 10
  &#x20;       drawString \"(press q to quit)\"
  &#x20;       moveCursor 0 0
  &#x20;   render
  &#x20;   waitFor w (\\ev -> ev == EventCharacter \'q\' || ev == EventCharacter \'Q\')
  .
  waitFor :: Window -> (Event -> Bool) -> Curses ()
  waitFor w p = loop where
  &#x20;   loop = do
  &#x20;       ev <- getEvent w Nothing
  &#x20;       case ev of
  &#x20;           Nothing -> loop
  &#x20;           Just ev' -> if p ev' then return () else loop
  @

extra-source-files:
  cbits/hsncurses-shim.c
  cbits/hsncurses-shim.h

source-repository head
  type: git
  location: https://john-millikin.com/code/haskell-ncurses/

source-repository this
  type: git
  location: https://john-millikin.com/code/haskell-ncurses/
  tag: haskell-ncurses_0.2.7

library
  hs-source-dirs: lib
  ghc-options: -Wall -O2
  include-dirs: .

  build-depends:
      base >= 4.0 && < 5.0
    , containers >= 0.2
    , text >= 0.7
    , transformers >= 0.2

  build-tools:
    c2hs >= 0.15

  -- Do not use pkg-config to find ncurses libraries, because the .pc files
  -- are missing or broken in many installations.
  --
  -- Explicitly linking against libpthread.so fixes a build problem on
  -- platforms where the linker doesn't automatically follow dependencies.
  if os(darwin)
    -- MacOS has a version of ncurses where the narrow- and wide-character
    -- builds have been merged into a single header/dylib.
    cc-options: -DHSNCURSES_NARROW_HEADER
    extra-libraries: panel ncurses pthread
  else
    extra-libraries: panelw ncursesw pthread

  c-sources: cbits/hsncurses-shim.c

  exposed-modules:
    UI.NCurses
    UI.NCurses.Panel

  other-modules:
    UI.NCurses.Enums
    UI.NCurses.Types
