name: ncurses
version: 0.2.9
license: GPL-3
license-file: license.txt
author: John Millikin <jmillikin@gmail.com>
maintainer: John Millikin <jmillikin@gmail.com>
build-type: Simple
cabal-version: >= 1.6
category: User Interfaces, Foreign
stability: experimental
homepage: https://john-millikin.com/software/haskell-ncurses/
bug-reports: mailto:jmillikin@gmail.com

synopsis: Modernised bindings to GNU ncurses
description:
  GNU ncurses is a library for creating command-line application with
  pseudo-graphical interfaces. This package is a nice, modern binding
  to GNU ncurses.
  .
  The following example is a program that display the message
  \"Hello world!\" until the user hits Q:
  .
  @
  import UI.NCurses
  .
  main :: IO ()
  main = runCurses $ do
  &#x20;   setEcho False
  &#x20;   w <- defaultWindow
  &#x20;   updateWindow w $ do
  &#x20;       moveCursor 1 10
  &#x20;       drawString \"Hello world!\"
  &#x20;       moveCursor 3 10
  &#x20;       drawString \"(press q to quit)\"
  &#x20;       moveCursor 0 0
  &#x20;   render
  &#x20;   waitFor w (\\ev -> ev == EventCharacter \'q\' || ev == EventCharacter \'Q\')
  .
  waitFor :: Window -> (Event -> Bool) -> Curses ()
  waitFor w p = loop where
  &#x20;   loop = do
  &#x20;       ev <- getEvent w Nothing
  &#x20;       case ev of
  &#x20;           Nothing -> loop
  &#x20;           Just ev' -> if p ev' then return () else loop
  @

extra-source-files:
  cbits/hsncurses-shim.c
  cbits/hsncurses-shim.h

source-repository head
  type: git
  location: https://john-millikin.com/code/haskell-ncurses/

source-repository this
  type: git
  location: https://john-millikin.com/code/haskell-ncurses/
  tag: haskell-ncurses_0.2.9

-- Do not use default to using pkg-config to find ncurses libraries, because
-- the .pc files are missing or broken in many installations.
flag use-pkgconfig
  default: False
  manual: True
  description:
    Use pkg-config to set linker and include flags.

flag force-narrow-library
  default: False
  manual: True
  description:
    Force including and linking against ncurses instead of ncursesw. This is
    only useful on systems that have the ncursesw package installed
    incorrectly. On most systems this will cause compile- or run-time errors.

library
  hs-source-dirs: lib
  ghc-options: -Wall -O2
  include-dirs: .

  build-depends:
      base >= 4.0 && < 5.0
    , containers >= 0.2
    , text >= 0.7
    , transformers >= 0.2

  build-tools:
    c2hs >= 0.15

  if flag(use-pkgconfig)
    if flag(force-narrow-library)
      cc-options: -DHSNCURSES_NARROW_HEADER
      pkgconfig-depends: ncurses, panel
    else
      pkgconfig-depends: ncursesw, panelw
  else
    -- MacOS has a version of ncurses where the narrow- and wide-character
    -- builds have been merged into a single header/dylib.
    --
    -- Explicitly linking against libpthread.so fixes a build problem on
    -- platforms where the linker doesn't automatically follow dependencies.
    if os(darwin) || os(freebsd) || flag(force-narrow-library)
      cc-options: -DHSNCURSES_NARROW_HEADER
    if os(darwin) || flag(force-narrow-library)
      extra-libraries: panel ncurses pthread
    else
      extra-libraries: panelw ncursesw pthread

  c-sources: cbits/hsncurses-shim.c

  exposed-modules:
    UI.NCurses
    UI.NCurses.Panel

  other-modules:
    UI.NCurses.Enums
    UI.NCurses.Types


package-hashes:
    MD5:d4fffbcdedfe34875bc2f107fdcf167a
    SHA1:a7cd3316bb60b80dfcde717811ac28b5c82768a7
    SHA256:fafef82bdc5144c9482a352eb1b6b51acca1e7dc10e3173973dc221307fbfea1
    SHA512:03edc84d6d7db7df3f2e29e34cfbe32d0eb9c48ab0ea8e9ad9ab69f3ff5cd3d4725f643d1e52e84793dc9bfaeba866a48d0b1d393de26bd73469b76b796d2097
    Skein512_512:9132a557bdac2a626f67d273924c0980f60c48ad799c43365fdba66fc775a84a9eae3e82fcdcc9dd8983ba76deb8582d2da91f698e16678d328d552285c445ad

package-locations:
    https://hackage.haskell.org/package/ncurses-0.2.9/ncurses-0.2.9.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/ncurses-0.2.9.tar.gz

package-size: 25656
