Name:                SourceGraph
Version:             0.5.5.0
Synopsis:            Static code analysis using graph-theoretic techniques.
Description: {
Statically analyse Haskell source code using graph-theoretic
techniques.  Sample reports can be found at:
<http://code.haskell.org/~ivanm/Sample_SourceGraph/SampleReports.html>
.
To use SourceGraph, call it as either:
.
> SourceGraph path/to/Foo.cabal
.
Or, if your project doesn't use Cabal, then there is limited support
for using an overall module from your program\/library:
.
> SourceGraph path/to/Foo.hs
.
Note that the Cabal method is preferred, as it is better able to
determine the project name and exported modules (when passing a
Haskell file to SourceGraph, it uses that module's name as the overall
name of project and assumes that it is the only exported module; as
such, it works better for programs than libraries).
.
Whichever way you run SourceGraph, it then creates a @SourceGraph@
subdirectory in the same directory as the file that was passed to it,
and within that subdirectory creates the analysis report in
@Foo.html@.
.
SourceGraph is still experimental in terms of its ability to parse and
properly understand Haskell source code and in the types of analyses
it performs.
}

Category:            Development
License:             GPL
License-file:        COPYRIGHT
Copyright:           (c) Ivan Lazar Miljenovic
Author:              Ivan Lazar Miljenovic
Maintainer:          Ivan.Miljenovic@gmail.com
Cabal-Version:       >= 1.6
Build-Type:          Simple
Extra-Source-Files: TODO
                    ChangeLog
                    KnownProblems.txt
                    ParsingProblems.txt

Source-Repository head
    Type:         darcs
    Location:     http://code.haskell.org/SourceGraph


Executable SourceGraph {

    Main-Is:            Main.hs
    Other-Modules:      Parsing,
                        Parsing.ParseModule,
                        Parsing.State,
                        Parsing.Types,
                        Analyse,
                        Analyse.Utils,
                        Analyse.Module,
                        Analyse.Imports,
                        Analyse.Everything,
                        Paths_SourceGraph
    Ghc-Options:        -Wall
    Ghc-Prof-Options:   -prof -auto-all

    Build-Depends:      base >= 3 && < 5,
                        extensible-exceptions,
                        containers,
                        multiset,
                        filepath,
                        random,
                        directory,
                        fgl,
                        Graphalyze >= 0.8.0.0 && < 0.9.0.0,
                        graphviz >= 2999.6.0.0 && < 2999.7.0.0,
                        Cabal >= 1.6 && < 1.7,
                        haskell-src-exts >= 1.1.0 && < 1.2.0
}


package-hashes:
    MD5:80530ad01f53ddd8a740069da45c3689
    SHA1:218af777bb8540581f2fce314360653912df0199
    SHA256:d11adfc9e6715128a110a81493a878f23ba22ad3c8cb9b7bdad8d63f4cdefd4c
    SHA512:94edcb4d849b18ab2ce9e6ccb2bea44e9aa31de93d8a30d2fdd67a200fe5ed0876e8daac8c5fe2f88536023cd0df4cc3f575780147404a668d5c7b318a8b81fd
    Skein512_512:28f13052f3c5bb834301ea99b1f0f4a1c873911b948bd30d716019c648aa3440273b2d483d0252dcdf60c6ec9c4e1ab922fc0acf3102e76bab33ba31caa7b6c3

package-locations:
    https://hackage.haskell.org/package/SourceGraph-0.5.5.0/SourceGraph-0.5.5.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/SourceGraph-0.5.5.0.tar.gz

