Name:                SourceGraph
Version:             0.6.0.1
Synopsis:            Static code analysis using graph-theoretic techniques.
Description: {
Statically analyse Haskell source code using graph-theoretic
techniques.  Sample reports can be found at:
<http://code.haskell.org/~ivanm/Sample_SourceGraph/SampleReports.html>
.
To use SourceGraph, call it as either:
.
> SourceGraph path/to/Foo.cabal
.
Or, if your project doesn't use Cabal, then there is limited support
for using an overall module from your program\/library:
.
> SourceGraph path/to/Foo.hs
.
Note that the Cabal method is preferred, as it is better able to
determine the project name and exported modules (when passing a
Haskell file to SourceGraph, it uses that module's name as the overall
name of project and assumes that it is the only exported module; as
such, it works better for programs than libraries).
.
Whichever way you run SourceGraph, it then creates a @SourceGraph@
subdirectory in the same directory as the file that was passed to it,
and within that subdirectory creates the analysis report in
@Foo.html@.
.
SourceGraph is still experimental in terms of its ability to parse and
properly understand Haskell source code and in the types of analyses
it performs.
}

Category:            Development
License:             GPL
License-file:        COPYRIGHT
Copyright:           (c) Ivan Lazar Miljenovic
Author:              Ivan Lazar Miljenovic
Maintainer:          Ivan.Miljenovic@gmail.com
Cabal-Version:       >= 1.6
Build-Type:          Simple
Extra-Source-Files: TODO
                    ChangeLog

Source-Repository head
    Type:         darcs
    Location:     http://code.haskell.org/SourceGraph


Executable SourceGraph {

    Main-Is:            Main.hs
    Other-Modules:      CabalInfo,
                        Parsing,
                        Parsing.ParseModule,
                        Parsing.State,
                        Parsing.Types,
                        Analyse,
                        Analyse.Utils,
                        Analyse.Colors,
                        Analyse.GraphRepr,
                        Analyse.Visualise,
                        Analyse.Module,
                        Analyse.Imports,
                        Analyse.Everything,
                        Paths_SourceGraph
    Ghc-Options:        -Wall
    Ghc-Prof-Options:   -prof -auto-all

    Build-Depends:      base >= 3 && < 5,
                        extensible-exceptions,
                        containers,
                        multiset,
                        filepath,
                        random,
                        directory,
                        mtl,
                        fgl,
                        Graphalyze >= 0.9.0.0 && < 0.10.0.0,
                        graphviz >= 2999.8.0.0 && < 2999.9.0.0,
                        Cabal >= 1.8 && < 1.9,
                        haskell-src-exts >= 1.5.0 && < 1.6.0
}


package-hashes:
    MD5:4729163737d0d7bb95fcc98b9ce8d0fc
    SHA1:9412c9e51e5130fc37436faf67c48c2474378dca
    SHA256:19e2a97a32858bde7b3d87f63ba57f0f57f75ec8e152d64bd0787868ed57cfd5
    SHA512:29f9964757537e920a8718b0c5f4910f7a6a000fc5887a6cf0020cd97df637d0bd60c12437ff55be3c0e3b441478bd71ae0239f05d73d509c74e62df740ad5bd
    Skein512_512:c8a989897fed03551984e59b8ec55f7430f7a0830a26e5a5c17c2b4ae19cc47a15fc437805ebdebed1a383a775e69f3520aee3ae075876ad1a48196897a371db

package-locations:
    https://hackage.haskell.org/package/SourceGraph-0.6.0.1/SourceGraph-0.6.0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/SourceGraph-0.6.0.1.tar.gz

