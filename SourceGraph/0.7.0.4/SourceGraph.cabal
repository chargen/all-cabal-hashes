Name:                SourceGraph
Version:             0.7.0.4
Synopsis:            Static code analysis using graph-theoretic techniques.
Description: {
Statically analyse Haskell source code using graph-theoretic
techniques.  Sample reports can be found at:
<http://code.haskell.org/~ivanm/Sample_SourceGraph/SampleReports.html>
.
To use SourceGraph, call it as either:
.
> SourceGraph path/to/Foo.cabal
.
Or, if your project doesn't use Cabal, then there is limited support
for using an overall module from your program\/library:
.
> SourceGraph path/to/Foo.hs
.
Note that the Cabal method is preferred, as it is better able to
determine the project name and exported modules (when passing a
Haskell file to SourceGraph, it uses that module's name as the overall
name of project and assumes that it is the only exported module; as
such, it works better for programs than libraries).
.
Whichever way you run SourceGraph, it then creates a @SourceGraph@
subdirectory in the same directory as the file that was passed to it,
and within that subdirectory creates the analysis report in
@Foo.html@.
.
SourceGraph is still experimental in terms of its ability to parse and
properly understand Haskell source code and in the types of analyses
it performs.
}

Category:            Development
License:             GPL
License-file:        COPYRIGHT
Copyright:           (c) Ivan Lazar Miljenovic
Author:              Ivan Lazar Miljenovic
Maintainer:          Ivan.Miljenovic@gmail.com
Cabal-Version:       >= 1.6
Build-Type:          Simple
Extra-Source-Files: TODO
                    ChangeLog

Source-Repository head
    Type:         darcs
    Location:     http://code.haskell.org/SourceGraph


Executable SourceGraph {

    Main-Is:            Main.hs
    Other-Modules:      CabalInfo,
                        Parsing,
                        Parsing.ParseModule,
                        Parsing.State,
                        Parsing.Types,
                        Analyse,
                        Analyse.Utils,
                        Analyse.Colors,
                        Analyse.GraphRepr,
                        Analyse.Visualise,
                        Analyse.Module,
                        Analyse.Imports,
                        Analyse.Everything,
                        Paths_SourceGraph
    Ghc-Options:        -Wall
    Ghc-Prof-Options:   -prof -auto-all

    Build-Depends:      base == 4.*,
                        containers,
                        multiset,
                        filepath,
                        random,
                        directory,
                        mtl,
                        fgl >= 5.4.2.3 && < 5.5,
                        Graphalyze == 0.14.*,
                        graphviz >= 2999.15.0.0 && < 2999.16,
                        Cabal >= 1.8 && < 1.17,
                        haskell-src-exts >= 1.5.0 && < 1.14.0
}


package-hashes:
    MD5:60e0b25b1f47b5408d2f97b07ed69bb4
    SHA1:fc2dd6d737a45a88bf9df8feca55a0dc3457bff1
    SHA256:a6da53f5c76955537c6fd5b684b037e924fb44a0f71597ebb5edb6c0b755abe7
    SHA512:afcac38569c6d197740743434e9f2c0f4a228988994c16f42cee3de67616aea78ea6be9cb20a3555166cee82d40609a206eabb32f4a98843f9d13f5eabefdb25
    Skein512_512:57f10edf5fba6fe71b68b41a4d903feb1f14feeaabbaeb4d6677ef5a9a365bafe6ff8e66c0bf32b7d6ee53551a994ebea2c0040622868606a9902b5b377a33dc

package-locations:
    https://hackage.haskell.org/package/SourceGraph-0.7.0.4/SourceGraph-0.7.0.4.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/SourceGraph-0.7.0.4.tar.gz

