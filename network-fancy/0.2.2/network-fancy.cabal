-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:6cd0cd30ec463091f2312f156006623c
    SHA1:750561af97d5f98dd271e2d181cf2cbc5c4f1188
    SHA256:3224da225a69cbd9d4d59937e24de58b59ae347456907d052d5a93c7a58b028b
    SHA512:146e812d215b32375511f2f1b65d92a9ba65fc33511cd93563026a8c2563b006fd23eefaebbbb155b82fcb8e56c899765f1a7fd11df6e84e34c95752a55e0f84
    Skein512_512:7af90fff3b688c2b31efc9f240152338245db349abd899bc9ace49675a69e8e84d6b69fbd4d2760c97b35dcccfd5ed2693f9464237748ed80463199f36c9562a

x-package-locations:
    https://hackage.haskell.org/package/network-fancy-0.2.2/network-fancy-0.2.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/network-fancy-0.2.2.tar.gz

x-package-size: 9205
-- END Added by all-cabal-hashes-tool

name: network-fancy
version: 0.2.2
cabal-version: >=1.8
build-type: Simple
license: BSD3
license-file: COPYING
copyright: Taru Karttunen <taruti@taruti.net>
maintainer: taruti@taruti.net
homepage: http://github.com/taruti/network-fancy
synopsis: Networking support with a cleaner API
description: Networking support with a cleaner API
category: Network
author: Taru Karttunen
data-dir: ""
Extra-Source-Files: changelog.md

source-repository head
    type: git
    location: http://github.com/taruti/network-fancy

library
    build-depends: base ==4.*, bytestring -any

    if os(windows)
        exposed: True
        buildable: True
        cpp-options: -DWINDOWS=WINDOWS -DCALLCONV=stdcall
                     -DSAFE_ON_WIN=safe
        cc-options: -DWINDOWS=WINDOWS -DCALLCONV=stdcall -DSAFE_ON_WIN=safe
        extra-libraries: ws2_32
    else

        if os(solaris)
            exposed: True
            buildable: True
            extra-libraries: socket
        if os(linux)
            cpp-options: -DLINUX=LINUX
            extra-libraries: pthread
        exposed: True
        buildable: True
        cpp-options: -DCALLCONV=ccall -DSAFE_ON_WIN=unsafe
        cc-options: -DCALLCONV=ccall -DSAFE_ON_WIN=unsafe
    exposed-modules: Network.Fancy
    other-modules: Network.Fancy.Error Network.Fancy.Internal
    exposed: True
    buildable: True
    c-sources: cbits.c
    extensions: TypeSynonymInstances ForeignFunctionInterface CPP
                DeriveDataTypeable FlexibleInstances
    ghc-options: -Wall
