-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:a4a390c34d78a513b6e3150d225e1195
    SHA1:fac6744aa35dda4797ab718f0b0a4e5ac3c7aa0e
    SHA256:2f9d44160299cf49aaeb153564f2d64af0e634a3bf3810b5e445b7db7ff1a254
    SHA512:77ef84f89a2437ba3e2246f9c8484a9e0aa6869ea5f8277d85e6677923480a1722f596bd735157eb49d8e5eb47de678924e1c4e430c85d75a189b7b8b43b7db7
    Skein512_512:53bf2e06fc45780fe284b391753a202b73d585574a3e5374d02fb0254866d207514fd88a23cee1c3467f68324e030f8f2ed24af1b917600037399d7860b19311

x-package-locations:
    https://hackage.haskell.org/package/mstate-0.2.1/mstate-0.2.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/mstate-0.2.1.tar.gz

x-package-size: 4299
-- END Added by all-cabal-hashes-tool

Name:           mstate
Synopsis:       MState: A consistent State monad for concurrent applications.
Description:    MState offers a State monad which can be used in concurrent
                applications. It also manages new threads and waits until the
                whole state monad has been evaluated/executed before it returns
                the state values (if desired).

Author:         Nils Schweinsberg
Maintainer:     <mail@n-sch.de>

Version:        0.2.1
Category:       Concurrency, Monads
License:        BSD3
License-File:   LICENSE
Cabal-Version:  >= 1.6
Build-Type:     Simple

Library
    GHC-Options:        -Wall
    Hs-Source-Dirs:     src
    Build-Depends:
        base        == 4.*,
        mtl         == 2.*,
        stm         == 2.*,
        monad-peel  == 0.1.*

    Exposed-Modules:
        Control.Concurrent.MState
