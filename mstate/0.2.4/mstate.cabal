-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:68f49b93414fcec9c7132f9e54ce45ca
    SHA1:cb361c7308a0996b01ec17fca01e3f63c2b70a91
    SHA256:3bfc75dc24404da8f72808d2cb4112262ff40e7e17e402f0c654431405efe00d
    SHA512:0d37b86b07c3adfcbf96e1f7d4568523e96882651c1787b17371fd47ec9e260020cdd117c2263fc280b34ffea141ff8d4648c4c7b6e14b0fbb5d740eeabd3342
    Skein512_512:3aa20a9ef5d51ac5f48b1352e0603da8d797d6f2c7b4db92319edf348b77b4ece803a1828f72ffc3a03767caf1a9387aa8cc75f99fcc8baa1e599560ef7f95f6

x-package-locations:
    https://hackage.haskell.org/package/mstate-0.2.4/mstate-0.2.4.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/mstate-0.2.4.tar.gz

x-package-size: 4335
-- END Added by all-cabal-hashes-tool

Name:           mstate
Synopsis:       MState: A consistent State monad for concurrent applications.
Description:    MState offers a State monad which can be used in concurrent
                applications. It also manages new threads and waits until the
                whole state monad has been evaluated/executed before it returns
                the state values (if desired).

Author:         Nils Schweinsberg
Maintainer:     <mail@n-sch.de>

Version:        0.2.4
Category:       Concurrency, Monads
License:        BSD3
License-File:   LICENSE
Cabal-Version:  >= 1.6
Build-Type:     Simple

source-repository head
    type: git
    location: https://github.com/mcmaniac/mstate.git

Library
    GHC-Options:        -Wall
    Hs-Source-Dirs:     src
    Build-Depends:
        base        == 4.*,
        mtl         == 2.*,
        stm         == 2.*,
        monad-peel  == 0.1.*

    Exposed-Modules:
        Control.Concurrent.MState
