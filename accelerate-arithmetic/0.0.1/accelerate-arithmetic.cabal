-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:0c21931f524828ef6c5924fc6282954f
    SHA1:ff25dfe891daa74ea6986a27ce5ec6e805f0c788
    SHA256:819c4d6b24bf5858bf9ef77a002724d1685f80ac8c2c074b329ac3a51a0f7224
    SHA512:5bd05a88ea4cb4581b1dcc186872187cc013439237dd992d8b201c71f4e6ee4c8b075edb3b39a58841e7db054143daef7bbf346ee05ef18c15b9f2cb426eb300
    Skein512_512:018f6ebc5217f67b232002c3fc35d180cea5dcecea01a7ffcc382989faea38ddb7fbe02197121672737fb6e5c9189531d2feb352bd5f70f3a524eca67f322292

x-package-locations:
    https://hackage.haskell.org/package/accelerate-arithmetic-0.0.1/accelerate-arithmetic-0.0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/accelerate-arithmetic-0.0.1.tar.gz

x-package-size: 9878
-- END Added by all-cabal-hashes-tool

Name:             accelerate-arithmetic
Version:          0.0.1
License:          BSD3
License-File:     LICENSE
Author:           Henning Thielemann <haskell@henning-thielemann.de>
Maintainer:       Henning Thielemann <haskell@henning-thielemann.de>
Homepage:         http://code.haskell.org/~thielema/accelerate-arithmetic/
Category:         Math
Synopsis:         Linear algebra and interpolation using the Accelerate framework
Description:
  Linear algebra and interpolation via the @accelerate@ package.
  This can be used for computations on GPUs
  but it does not contain processor optimizations
  or optimizations for CUDA.
Tested-With:      GHC==7.8.2
Cabal-Version:    >=1.14
Build-Type:       Simple

Source-Repository this
  Tag:         0.0.1
  Type:        darcs
  Location:    http://code.haskell.org/~thielema/accelerate-arithmetic/

Source-Repository head
  Type:        darcs
  Location:    http://code.haskell.org/~thielema/accelerate-arithmetic/

Library
  Build-Depends:
    accelerate-utility >=0.1 && <0.2,
    accelerate >=0.15 && <0.16,
    utility-ht >=0.0.8 && <0.1,
    QuickCheck >=2.4 && <2.8,
    base >=4.5 && <4.8

  GHC-Options:      -Wall -fwarn-missing-import-lists
  Hs-Source-Dirs:   src
  Default-Language: Haskell98
  Exposed-Modules:
    Data.Array.Accelerate.Arithmetic.LinearAlgebra
    Data.Array.Accelerate.Arithmetic.Sparse
    Data.Array.Accelerate.Arithmetic.Interpolation
  Other-Modules:
    Data.Array.Accelerate.Arithmetic.Example

Test-Suite test
  Type: exitcode-stdio-1.0
  Main-Is:          Test.hs
  GHC-Options:      -Wall -fwarn-missing-import-lists
  Hs-Source-Dirs:   test
  Default-Language: Haskell98
  Build-Depends:
    accelerate-arithmetic,
    accelerate,
    QuickCheck,
    base
  Other-Modules:
    Test.Data.Array.Accelerate.Arithmetic.LinearAlgebra
    Test.Data.Array.Accelerate.Arithmetic.Sparse
    Test.Data.Array.Accelerate.Arithmetic.Utility

Benchmark newton-inverse
  Type:             exitcode-stdio-1.0
  Main-Is:          NewtonInverse.hs
  Hs-Source-Dirs:   benchmark
  Other-Modules:    CUBLASBatched
  Default-Language: Haskell98
  GHC-Options:      -Wall -threaded
  GHC-Prof-Options: -fprof-auto
  Build-Depends:
    accelerate-arithmetic,
    accelerate-utility,
    accelerate-cuda >=0.15 && <0.16,
    cublas >=0.2.0.2 && <0.3,
    cuda >=0.5 && <0.7,
    accelerate,
    pooled-io >=0.0 && <0.1,
    timeit >=1.0 && <1.1,
    hmatrix >=0.15.2 && <0.16,
    random >=1.0.1 && <1.1,
    utility-ht,
    base
