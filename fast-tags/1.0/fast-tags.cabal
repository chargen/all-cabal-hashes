-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:1688bb0ce90b6fad74de76dd6da0004c
    SHA1:68b46799bab33bb804b89013a628fa582ea67e5b
    SHA256:8165b7f4e2898f5e3e7e3827142346afe1ab940b2c5fce3436b2d9e7b81ecf42
    SHA512:41e77cb34e26255c2261044a97eb5bd1dfbd290d35ae9516cfd07527af05b7959ee3ca035054906c31cfe3ad0e9af290e2e87406c3a2724a0092c1cc64e89631
    Skein512_512:91ed23c14b03e9b1e6bf828277a23baa16d4100ec831fee6a269c32e61a100a0bd7e1d8474c39cc375cdd98bc7fb0372320043aa87bb13e807589b4e1be56711

package-locations:
    https://hackage.haskell.org/package/fast-tags-1.0/fast-tags-1.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/fast-tags-1.0.tar.gz

package-size: 22001
-- END Added by all-cabal-hashes-tool

name: fast-tags
version: 1.0
cabal-version: >= 1.8
build-type: Simple
synopsis: Fast incremental vi and emacs tags.
description:
    Yet another tags program.  Like hasktags, it uses its own parser rather
    than haskell-src or haskell-src-exts, so it's fast.  It understands
    hsc and literate haskell.
    .
    In addition, it will load an existing tags file and merge generated tags.
    .
    The intent is to bind it to vim's BufWrite autocommand to automatically
    keep the tags file up to date.  This only works for files changed by the
    editor of course, so you may want to bind 'rm tags' to a 'pull' posthook.
    .
    Limitations:
    .
    - Not using a real haskell parser means there is likely to be dark
    corners that don't parse right.
    .
    - Code has to be indented \"properly\", so brace and semicolon style with
    strange dedents will probably confuse it.

category: Haskell, Development
license: BSD3
license-file: LICENSE
author: Evan Laforge
maintainer: Evan Laforge <qdunkan@gmail.com>
stability: stable
tested-with: GHC>=7.0.3
data-files: README
extra-source-files:
    changelog.md
    src/*.hs

homepage: https://github.com/elaforge/fast-tags
source-repository head
    type: git
    location: git://github.com/elaforge/fast-tags.git

flag fast
    description:
        Spend more time optimizing a program (may yield up to 25% speedup)
    default:     False

library
    build-depends:
        base >= 3 && < 5, containers, cpphs >1.18, filepath, directory,
        -- text 0.11.1.12 has a bug.
        text (> 0.11.1.12 || < 0.11.1.12), deepseq
    exposed-modules: FastTags
    hs-source-dirs: src
    ghc-options: -Wall -fno-warn-name-shadowing
    ghc-prof-options: -Wall -fno-warn-name-shadowing -auto-all
    if flag(fast)
        ghc-options:
            -funfolding-creation-threshold=10000 -funfolding-use-threshold=2500

executable fast-tags
    main-is: src/Main.hs
    build-depends:
        base >= 3 && < 5, containers, filepath, directory,
        -- text 0.11.1.12 has a bug.
        text (> 0.11.1.12 || < 0.11.1.12),
        fast-tags
    ghc-options: -Wall -fno-warn-name-shadowing
    ghc-prof-options: -Wall -fno-warn-name-shadowing -auto-all
    if flag(fast)
        ghc-options:
            -funfolding-creation-threshold=10000 -funfolding-use-threshold=2500

test-suite test-fast-tags
    type: exitcode-stdio-1.0
    main-is: MainTest.hs
    hs-source-dirs: tests
    ghc-options: -main-is MainTest
    ghc-prof-options: -main-is MainTest
    build-depends:
        base >= 3 && < 5, containers, filepath, directory,
        -- text 0.11.1.12 has a bug.
        text (> 0.11.1.12 || < 0.11.1.12),
        tasty, tasty-hunit,
        fast-tags
