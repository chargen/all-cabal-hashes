-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:cdcc4809459cdb11d1a2fbec09aed172
    SHA1:fd23e4b18b12d56e9e0f571fb9b7a485e455da5c
    SHA256:5e55564b9b0422c0dccea91f2c212254c7e798e77ae85708352303459b4cdbd4
    SHA512:2b94bdd2271e6bd81772981d1c59d34924d8d758338cfcec5c843394345a69e364d3cae50a0468c55ed1b1248175f4e621a2cc6de068b6d76214ac391046ef18
    Skein512_512:0012f3e411f0090bfc23c13bc56e3a0716e026ccd8e38e45c5c624edc10bb1cc2423a0a24b99dad0cb80a871d8533a4b5aec367146c52549867c13b9ed6f29d5

package-locations:
    https://hackage.haskell.org/package/fast-tags-1.1.0/fast-tags-1.1.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/fast-tags-1.1.0.tar.gz

package-size: 21941
-- END Added by all-cabal-hashes-tool

name: fast-tags
version: 1.1.0
cabal-version: >= 1.8
build-type: Simple
synopsis: Fast incremental vi and emacs tags.
description:
    Yet another tags program.  Like hasktags, it uses its own parser rather
    than haskell-src or haskell-src-exts, so it's fast.  It understands
    hsc and literate haskell.
    .
    In addition, it will load an existing tags file and merge generated tags.
    .
    The intent is to bind it to vim's BufWrite autocommand to automatically
    keep the tags file up to date.  This only works for files changed by the
    editor of course, so you may want to bind 'rm tags' to a 'pull' posthook.
    .
    Limitations:
    .
    - Not using a real haskell parser means there is likely to be dark
    corners that don't parse right.
    .
    - Code has to be indented \"properly\", so brace and semicolon style with
    strange dedents will probably confuse it.

category: Haskell, Development
license: BSD3
license-file: LICENSE
author: Evan Laforge
maintainer: Evan Laforge <qdunkan@gmail.com>
stability: stable
tested-with: GHC>=7.0.3
data-files: README
extra-source-files:
    changelog.md
    src/*.hs

homepage: https://github.com/elaforge/fast-tags
source-repository head
    type: git
    location: git://github.com/elaforge/fast-tags.git

flag fast
    description:
        Spend more time optimizing a program (may yield up to 25% speedup)
    default: False

library
    build-depends:
        base >= 3 && < 5, containers, cpphs >1.18, filepath, directory,
        -- text 0.11.1.12 has a bug.
        text (> 0.11.1.12 || < 0.11.1.12),
        bytestring,
        deepseq
    exposed-modules: FastTags
    hs-source-dirs: src
    ghc-options: -Wall -fno-warn-name-shadowing
    ghc-prof-options: -Wall -fno-warn-name-shadowing -auto-all
    if flag(fast)
        ghc-options:
            -funfolding-creation-threshold=10000
            -funfolding-use-threshold=2500

executable fast-tags
    main-is: src/Main.hs
    build-depends:
        base >= 3 && < 5, containers, filepath, directory,
        -- text 0.11.1.12 has a bug.
        text (> 0.11.1.12 || < 0.11.1.12),
        bytestring,
        fast-tags
    ghc-options: -Wall -fno-warn-name-shadowing
    ghc-prof-options: -Wall -fno-warn-name-shadowing -auto-all
    if flag(fast)
        ghc-options:
            -funfolding-creation-threshold=10000
            -funfolding-use-threshold=2500

test-suite test-fast-tags
    type: exitcode-stdio-1.0
    main-is: MainTest.hs
    hs-source-dirs: tests
    ghc-options: -main-is MainTest
    ghc-prof-options: -main-is MainTest
    build-depends:
        base >= 3 && < 5, containers, filepath, directory,
        -- text 0.11.1.12 has a bug.
        text (> 0.11.1.12 || < 0.11.1.12),
        bytestring,
        tasty, tasty-hunit,
        fast-tags
