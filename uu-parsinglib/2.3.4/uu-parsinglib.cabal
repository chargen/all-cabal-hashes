-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:eebaf1d2e4ad85bd245ccf8423cce3dc
    SHA1:742d49c49703d2c306cd9dd6350f5c20f909497b
    SHA256:c5faeade06f363c2e7b95a2b7eeba752bf2dd1f4ff0cebbe09aaef9b79f8fdb2
    SHA512:7643edce20b7864a096162ac67cb5f65eaa8635eb019c7545b93d3cc4485e7032d4b9c07cc9be45352fdfac454ef650ddf21958f82a97c8c1b2c49469d15c4d2
    Skein512_512:1d490888311dae61f6a72b5969438a3c708f7d7551c7e1a5de5ca3599f245b91601d085e48e98b1366249fb6f6e73fe031ea6a56e326a57c066a4e7a5bbc20c1

package-locations:
    https://hackage.haskell.org/package/uu-parsinglib-2.3.4/uu-parsinglib-2.3.4.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/uu-parsinglib-2.3.4.tar.gz

package-size: 9905
-- END Added by all-cabal-hashes-tool

Name:                uu-parsinglib
Version:             2.3.4
Build-Type:          Simple
License:             MIT 
License-file:        LICENSE
Author:              Doaitse Swierstra
Maintainer:          doaitse@swierstra.net       
Stability:           stable, but evolving
Homepage:            http://www.cs.uu.nl/wiki/bin/view/HUT/ParserCombinators
Bug-reports:         mailto:doaitse@swierstra.net
Synopsis:            New version of the Utrecht University parser combinator library        
Cabal-Version:       >=1.4
Description:         New version of the Utrecht University parser combinator library, providing online, error correction, 
                     annotation free, applicative style parser combinators which also provides a monadic interface
                     .
                     The file Text.ParserCombinators.UU.Examples contains a ready-made main function,
                     which can be called to see the error correction at work.
                     .
                    
                     .
                     Versions above 2.1: 
                     .
                     * based on Control.Applicative
                     .
                     Versions above 2.2:
                     .
                     *  make use of type families   
                     *  contain a module with many list-based derived combinators
                     .
                     Version 2.3.1
                     .
                     * fix for GHC 6.12, because of change in GADT definition handling
                     .
                     Version 2.3.2
                     .
		     * added microsteps, which can be used to disambiguate
                     .
                     Version 2.3.3
                     .
                     * added pMunch which takes a Boolean function, and recognises the longest prefix for which the symbols match the predicate 
                     .
                     * added the infix operator with piority 2 <?> :: P state a -> String -> P st a which replaces the list of expected symbols
                       in error message by its right argument String
                     .
                     Version 2.3.4
                     .
                     * removed dependecies on impredictaive types, preparing for next GHC version
                     .
                     Future versions above 2.3
                     .
                     * contain some form of abstract interpretation from the old uulib versions of these combinators
                     .
                     * are closer to Haskell98, since they do not make use of type families anymore
                     .
                     * note that the basic parser interface will probably not change much when we add more features, but the calling conventions
                       of the outer parser and the class structure upon which the parametrisation is based may change
                     . 
                     
Category:            ParserCombinators Parsing Text

Library
  hs-source-dirs:    src

  Build-Depends:     base >= 4 && <5, haskell98
  Exposed-modules:   Text.ParserCombinators.UU.Parsing 
                     Text.ParserCombinators.UU.Core  
                     Text.ParserCombinators.UU.BasicInstances
                     Text.ParserCombinators.UU.Derived 
                     Text.ParserCombinators.UU.Examples
