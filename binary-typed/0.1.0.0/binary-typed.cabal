-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:9b2464567dc90c888a3d82ca50da4ee2
    SHA1:72d6b44c668214db79cd110fd08f62c8710911e5
    SHA256:6e50972f63e87585587d45b167a351fd6dc7be0fd4df010f3af958cf95870d03
    SHA512:f1dc5bec5f0e303676fac34a16e4bac820b670a99ad488de76ca05cae76772498348e841473b949a59d38adc14463d2ee4e5b7159e26ff44769c5bd6a633ae52
    Skein512_512:b343def8b0524e1682036d97b285d8c6a0584552687310ba1330d00af4062891e007eb6c6498292fd0b45f9efb37fd9b6080fbc097c3b1a1b157a264082f7113

package-locations:
    https://hackage.haskell.org/package/binary-typed-0.1.0.0/binary-typed-0.1.0.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/binary-typed-0.1.0.0.tar.gz

package-size: 35153
-- END Added by all-cabal-hashes-tool

name:          binary-typed
version:       0.1.0.0
synopsis:      Type-safe binary serialization
Description:
      `Binary` serialization tagged with type information, allowing for
      typechecking and useful error messages at the receiving site.
      .
      This package serves the same purpose as tagged-binary, with a couple of
      key differences:
      .
      * Support of different kinds of serialized type annotations, each with
        specific strengths and weaknesses.
      .
      * Error messages can provide details on type errors at the cost of
        longer message lengths to include the necessary information.
      .
      * Serialization computationally almost as efficient as "Data.Binary" when
        precaching type representations; decoding however is slower.
        These values obviously depend a lot on the involved data and its type;
        an example benchmark is shown in the picture below.
      .
      * No depencency on @Internal@ modules of other libraries, and a very small
        dependency footprint in general.
      .
      For information about usage, see the "Data.Binary.Typed.Tutorial" module.
      .
      Performance-wise, here is a value @Right (Left \<100 chars lipsum\>)@ of
      type @Either (Char, Int) (Either String (Maybe Integer))@ benchmarked
      using the @Hashed@ type representation:
      .
      <<http://i.imgur.com/nY6hgMP.png>>
      .
      <doc/bench-overview.png (local copy)>
homepage:      https://github.com/quchen/binary-typed
bug-reports:   https://github.com/quchen/binary-typed/issues
license:       BSD2
license-file:  LICENSE
author:        David Luposchainsky
maintainer:    dluposchainsky on googles email service
copyright:     David Luposchainsky
category:      Data, Serialization
build-type:    Simple
cabal-version: >= 1.20
extra-source-files: doc/*.png

source-repository head
      type:     git
      location: https://github.com/quchen/binary-typed

library
      default-language:    Haskell2010
      exposed-modules:     Data.Binary.Typed
                           Data.Binary.Typed.Internal
                           Data.Binary.Typed.Tutorial
      ghc-options:         -Wall
      hs-source-dirs:      src
      other-extensions:    GADTs, DeriveGeneric
      build-depends:       base             >= 4.7 && < 5
                         , binary           >= 0.7
                         , bytestring       >= 0.9
                         , murmur-hash      >= 0.1


test-suite tasty
      default-language:    Haskell2010
      ghc-options:         -Wall -fno-warn-orphans
      hs-source-dirs:      tests
      main-is:             Tests.hs
      other-modules:       HUnit, QuickCheck
      other-extensions:    ScopedTypeVariables, NumDecimals
      type:                exitcode-stdio-1.0
      build-depends:       base             >= 4.7 && < 5
                         , binary           >= 0.7
                         , binary-typed
                         , tasty            >= 0.8
                         , tasty-hunit      >= 0.8
                         , tasty-quickcheck >= 0.8

benchmark criterion
      default-language:    Haskell2010
      type:                exitcode-stdio-1.0
      hs-source-dirs:      benchmark
      main-is:             Criterion.hs
      build-depends:       base
                         , binary
                         , binary-typed
                         , criterion
                         , deepseq
      ghc-options:         -Wall



benchmark criterion-overview
      default-language:    Haskell2010
      type:                exitcode-stdio-1.0
      hs-source-dirs:      benchmark
      main-is:             CriterionOverview.hs
      build-depends:       base
                         , binary
                         , binary-typed
                         , criterion
                         , deepseq
                         , bytestring
      ghc-options:         -Wall