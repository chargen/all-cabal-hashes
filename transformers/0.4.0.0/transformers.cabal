-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:869c8419dddbfddd4a22208559c9359c
    SHA1:1dd9eef2e2cdf77d12d3190afe53041569c194b9
    SHA256:fd8d4cf50299bf23ecf421e7ecc6e33234f7b0352e807e531d117ac8ff6e6426
    SHA512:d6d40c60f7df1a7af0853aad285da4ef36cc57df586b49a827e67dcbf31e86a15cc2456cd9b38906c3dcb205871b876ed7c0633a098e106026b18751c9610e41
    Skein512_512:94d4c2c153cd5c1c3fca498308da3893b4c53b6a0d405b6371313198fc9b5aac9ed2503e9a4959ffda59f874f11f09e0f83560cf1c46e39f27bffe0494689a93

package-locations:
    https://hackage.haskell.org/package/transformers-0.4.0.0/transformers-0.4.0.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/transformers-0.4.0.0.tar.gz

package-size: 27387
-- END Added by all-cabal-hashes-tool

name:         transformers
version:      0.4.0.0
x-revision: 1
license:      BSD3
license-file: LICENSE
author:       Andy Gill, Ross Paterson
maintainer:   Ross Paterson <ross@soi.city.ac.uk>
category:     Control
synopsis:     Concrete functor and monad transformers
description:
    A portable library of functor and monad transformers, inspired by
    the paper \"Functional Programming with Overloading and Higher-Order
    Polymorphism\", by Mark P Jones,
    in /Advanced School of Functional Programming/, 1995
    (<http://web.cecs.pdx.edu/~mpj/pubs/springschool.html>).
    .
    This package contains:
    .
    * the monad transformer class (in "Control.Monad.Trans.Class")
      and IO monad class (in "Control.Monad.IO.Class")
    .
    * concrete functor and monad transformers, each with associated
      operations and functions to lift operations associated with other
      transformers.
    .
    The package can be used on its own in portable Haskell code, in
    which case operations need to be manually lifted through transformer
    stacks (see "Control.Monad.Trans.Class" for some examples).
    Alternatively, it can be used with the non-portable monad classes in
    the @mtl@ or @monads-tf@ packages, which automatically lift operations
    introduced by monad transformers through other transformers.
build-type: Simple
extra-source-files:
    changelog
cabal-version: >= 1.6

source-repository head
  type: darcs
  location: http://code.haskell.org/~ross/transformers

flag ApplicativeInBase
  description: Use the current base package, including Applicative and
    other Functor classes.

library
  if flag(ApplicativeInBase)
    build-depends: base >= 2 && < 4.8
  else
    build-depends: base >= 1.0 && < 2, special-functors >= 1.0 && < 1.1
  exposed-modules:
    Control.Applicative.Backwards
    Control.Applicative.Lift
    Control.Monad.IO.Class
    Control.Monad.Signatures
    Control.Monad.Trans.Class
    Control.Monad.Trans.Cont
    Control.Monad.Trans.Except
    Control.Monad.Trans.Error
    Control.Monad.Trans.Identity
    Control.Monad.Trans.List
    Control.Monad.Trans.Maybe
    Control.Monad.Trans.Reader
    Control.Monad.Trans.RWS
    Control.Monad.Trans.RWS.Lazy
    Control.Monad.Trans.RWS.Strict
    Control.Monad.Trans.State
    Control.Monad.Trans.State.Lazy
    Control.Monad.Trans.State.Strict
    Control.Monad.Trans.Writer
    Control.Monad.Trans.Writer.Lazy
    Control.Monad.Trans.Writer.Strict
    Data.Functor.Classes
    Data.Functor.Compose
    Data.Functor.Constant
    Data.Functor.Identity
    Data.Functor.Product
    Data.Functor.Reverse
    Data.Functor.Sum
