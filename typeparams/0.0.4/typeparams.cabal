-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:3e571a643967e4dbdd69c20b0fb702b4
    SHA1:26e7da9174e76490cd52b89b99911ef8c8b1bb68
    SHA256:afbfef09ea8855e42ba11955aebfa9a0355d61867d79cbbffad4672b12da459e
    SHA512:aac9613046852bcd70f266b246101b9a36ffe9142e3975bf37c3915abfbcf146a1296fcd9c43431ef8f332b095d177ef57327073206f471fef2c3940956cacb3
    Skein512_512:e1651dbf2e84af485365c3ea598c6db20cf2430f2241f5e5efb6750a0db0206bd7caffb4416d651838133c641f70aa7b4bbb36c17e1bc732af1245b30b6929ea

x-package-locations:
    https://hackage.haskell.org/package/typeparams-0.0.4/typeparams-0.0.4.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/typeparams-0.0.4.tar.gz

x-package-size: 16777
-- END Added by all-cabal-hashes-tool

Name:                typeparams
Version:             0.0.4
Synopsis:            Lens-like interface for type level parameters; allows unboxed unboxed vectors and supercompilation
Description:         
    This library provides a lens-like interface for working with type parameters. In the code:
    .
    > data Example p1 (p2::Config Nat) (p3::Constraint) = Example
    .
    @p1@, @p2@, and @p3@ are the type parameters.  
    .
    Two example uses of this library are for unboxing unboxed vectors and supercompilation-like optimizations.   Please see the <https://github.com/mikeizbicki/typeparams#the-typeparams-library README file on github> for a detailed description and tutorial.  After reading through that, the haddock documentation will make more sense.

Category:            Configuration, Dependent Types, Data, Optimization
License:             BSD3
License-file:        LICENSE
Author:              Mike izbicki
Maintainer:          mike@izbicki.me
Build-Type:          Simple
Cabal-Version:       >=1.8
homepage:            http://github.com/mikeizbicki/typeparams/
bug-reports:         http://github.com/mikeizbicki/typeparams/issues

Library
    Build-Depends:      
        base                >= 4.7 && < 5,
        deepseq             >= 1.3,
        tagged              >= 0.7,
        reflection          >= 1.3,
        constraints         >= 0.3.4,
        primitive           >= 0.5,
        template-haskell    ,
        ghc-prim            ,

        -- examples
        vector              >= 0.10
        
    hs-source-dirs:     
        src

    ghc-options:        
        -fllvm
        -O2
        -funbox-strict-fields

    Exposed-modules:
        Data.Params
        Data.Params.Applicative
        Data.Params.Frac
        Data.Params.PseudoPrim
        Data.Params.Functor
        Data.Params.Vector
        -- Data.Params.Vector.Storable
        -- Data.Params.Vector.StorableRaw
        Data.Params.Vector.Unboxed
        -- Data.Params.Vector.UnboxedRaw

    Extensions:
        FlexibleInstances
        FlexibleContexts
        MultiParamTypeClasses
        FunctionalDependencies
        UndecidableInstances
        ScopedTypeVariables
        BangPatterns
        TypeOperators
        GeneralizedNewtypeDeriving
        TypeFamilies
        StandaloneDeriving
        GADTs
        KindSignatures
        ConstraintKinds
        RankNTypes

