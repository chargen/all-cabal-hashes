-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:b7fc55236c0c7e915c65e6c954d90540
    SHA1:66164dad9d2f8173d1784053481501a8676a2e4b
    SHA256:dcd34a241ce69882990c80c1b2b99f4c5b22e8ff324bae05cafb3a059d4b73cf
    SHA512:97353dbb71a4d42bee5ff1b47905f1ff0ed1f17477444ca9ccebcdf3994d650425e2c95707f8275c0dea58de7053ba19b14f64761be44f978ce44ac0de07630d
    Skein512_512:9d27040c01ca6ce53acbfa3dd2030003452cd8d0d0403041e0afd3315950f5bd409614a4a1ca9b474b64909ba49cf905988b6b16133a77035ca28e3f659ff227

x-package-locations:
    https://hackage.haskell.org/package/MFlow-0.0.5.3/MFlow-0.0.5.3.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/MFlow-0.0.5.3.tar.gz

x-package-size: 39957
-- END Added by all-cabal-hashes-tool

name: MFlow
version: 0.0.5.3
cabal-version: >= 1.6
build-type: Simple
license: BSD3
license-file: LICENSE
maintainer: agocorona@gmail.com
stability: experimental
synopsis: Web app server for stateful processes with safe, composable user interfaces.

description: A Web framework with some unique features thanks to the power of the Haskell language.
             MFlow run stateful server processes. Because flows are stateful, not isolated request-responses, the code is more
             understandable, because all the flow of request and responses is coded by the programmer in a single function.
             Allthoug single request-response flows and callbacks are possible.
             .
             Technically it is a Web application server for stateful processes (flows) that are optionally persistent.
             These processes interact with the user trough interfaces made of widgets that return back statically typed responses to
             the process that sent the interface (including links). The process is coded in pure haskell (with optional XML from Haskell Server Pages).
             It adopt and extend the formlet/applicative approach. The interfaces and communication are abstract, but it has bindings for HSP, Text.XHtml and byteString
             , Hack and WAI but it can be extended to non Web based architectures.
             .
             It includes Application Server features such is process and session timeouts
             and automatic recovery of flow execution state.
             .
             This release add transparent back button management, cached widgets, callbacks, modifiers, heterogeneous formatting AJAX,
             and WAI integration.
             .
             It is designed for coding an entire application can be run with no deployment with runghc in order
             to speed up the development process.
             .
             See "MFlow.Forms" for details
             .
             Altroug still it is experimental, it is used in at least one future commercial project. So I have te commitment to
             continue its development. There are many examples in the documentation and in the package.
             .
             To do:
             .
             -Clustering
             .

category: Web, Application Server
author: Alberto GÃ³mez Corona
data-dir: ""
extra-source-files: Demos/ShoppingCart.hs, Demos/ShoppingCart.Wai.hs, Demos/demos.hs

library
    build-depends: Workflow -any, transformers -any, mtl -any,
                   extensible-exceptions -any, xhtml -any, base >4.0 && < 5,
                   hack -any, hack-handler-simpleserver -any, bytestring -any,
                   containers -any, RefSerialize -any, TCache -any, stm >2,
                   old-time -any, vector -any, hsp -any, directory -any,
                   utf8-string -any, wai -any, case-insensitive -any, http-types -any, conduit -any
                   ,text -any, parsec -any,warp -any

    exposed-modules: MFlow.Forms

                     MFlow.Forms.Admin MFlow MFlow.FileServer
                     MFlow.Forms.Ajax MFlow.Cookies
                     MFlow.Hack.Response, MFlow.Hack MFlow.Hack.XHtml MFlow.Hack.XHtml.All
                     MFlow.Wai.Response, MFlow.Wai, MFlow.Wai.XHtml.All
                     MFlow.Forms.XHtml
                     MFlow.Forms.HSP
    exposed: True
    buildable: True
    hs-source-dirs: src .
    other-modules:

source-repository head
    type: git
    location: http://github.com/agocorona/MFlow
