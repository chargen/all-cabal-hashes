-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:6da6a117a7ea1d66b51a672a90e88c4b
    SHA1:2944863a373e486c95ced3a203162726f61dad76
    SHA256:986f34b3b4fe67e5261efb08c9b1c072c29c14101c8384ea7bf4adbd31faeca5
    SHA512:f7aa4e41a825899d939c2634eb6389ced911518e8dd4b0d6ec5e6cb0a977ec2addb1c3b38d59f6801e600b6ed039624a0ef1db337569a46ea72792122554a9d1
    Skein512_512:270f0c8ca77b9bee9782ec0e20ebce6c0b0b2efa6718c3ce8d136e036e46b80a9191dd4cbf967ca1a891e29e881ef00896ca06e2f457d8b269d8118b259c27ed

package-locations:
    https://hackage.haskell.org/package/monad-coroutine-0.5/monad-coroutine-0.5.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/monad-coroutine-0.5.tar.gz

package-size: 19883
-- END Added by all-cabal-hashes-tool

Name:                monad-coroutine
Version:             0.5
Cabal-Version:       >= 1.2
Build-Type:          Simple
Synopsis:            Coroutine monad transformer for suspending and resuming monadic computations
Category:            Concurrency, Control, Monads
Tested-with:         GHC
Description:
  This package defines a monad transformer, applicable to any monad, that allows the monadic computation to suspend and
  to be later resumed. The transformer is parameterized by an arbitrary functor, used to store the suspended
  computation's resumption.
  
License:             GPL
License-file:        LICENSE.txt
Copyright:           (c) 2010 Mario Blazevic
Author:              Mario Blazevic
Maintainer:          blamario@yahoo.com
Homepage:            http://trac.haskell.org/SCC/wiki/monad-coroutine
Extra-source-files:  TestCoroutine.hs
-- Source-repository head
--   type:              darcs
--   location:          http://code.haskell.org/SCC/

Library
  Exposed-Modules:   Control.Monad.Coroutine, Control.Monad.Coroutine.SuspensionFunctors, Control.Monad.Coroutine.Nested
  Build-Depends:     base < 5, monad-parallel, transformers
  GHC-prof-options:  -auto-all
