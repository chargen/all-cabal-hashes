-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:aae30954572c77984abc77f0854f6f8f
    SHA1:4634b97d33959ccf3b2b88518d8d1ba35b3204ab
    SHA256:5e8f72415ab014acde6af9160e96a940559a2dc25c7e2ac809a9e83978c98986
    SHA512:bf6cede8bc6e5bb9db5f5c098d05843f65937ef19cc9c5534b5ab42b126c91fff4de64a3554711cb352ea6068f0b365668aabf8d5fcfb94359bf6d7b34c41c35
    Skein512_512:bd299d9aa6d0264659ba75de9e63267b0a2d5e48b807be2cde946da1c118fd1827933399d6c19daf6427a4f058f55f59a68c9f6eee7f56c128770cf784c7fd23

x-package-locations:
    https://hackage.haskell.org/package/graph-rewriting-0.5/graph-rewriting-0.5.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/graph-rewriting-0.5.tar.gz

x-package-size: 11205
-- END Added by all-cabal-hashes-tool

Name:           graph-rewriting
Version:        0.5
Copyright:      (c) 2010, Jan Rochel
License:        BSD3
License-File:   LICENSE
Author:         Jan Rochel
Maintainer:     jan@rochel.info
Stability:      beta
Build-Type:     Simple
Synopsis:       Monadic graph rewriting of hypergraphs with ports and multiedges
Description:
  This library provides a monadic EDSL to define your own graph rewrite system in Haskell. Once you have specified the signature of your graph and a set of rewrite rules, you can apply these rules on a graph to effect a graph transformation. The aim of this library is to make it as convenient as possible to define such a system and experiment with it and is not designed as a backend for high-performance computation.
Category:       Graphs, Data
Cabal-Version:  >= 1.6

Library
  Build-Depends:
    base >= 4 && < 4.4,
    base-unicode-symbols >= 0.2 && < 0.3,
    mtl >= 1.1 && < 1.2,
    containers >= 0.3 && < 0.5
  Exposed-Modules:
    Data.View
    GraphRewriting
    GraphRewriting.Graph
    GraphRewriting.Graph.Types
    GraphRewriting.Graph.Read
    GraphRewriting.Graph.Write
    GraphRewriting.Graph.Write.Unsafe
    GraphRewriting.Pattern
    GraphRewriting.Pattern.InteractionNet
    GraphRewriting.Rule
  Other-Modules:
    GraphRewriting.Graph.Internal
    GraphRewriting.Pattern.Internal
    GraphRewriting.Rule.Internal
  Extensions:
    UnicodeSyntax
    FlexibleContexts
    FlexibleInstances
    TypeSynonymInstances
    MultiParamTypeClasses
  GHC-Options:    -fno-warn-duplicate-exports -fwarn-unused-imports
