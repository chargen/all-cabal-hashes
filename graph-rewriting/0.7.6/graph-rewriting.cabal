-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:f737da7399d090e936217b5c2d5e74fd
    SHA1:cd69eae2e8772e3d6aec27592bf8b7ce9290dcd1
    SHA256:5f0ed54252152984a0a057c97ebe5a3eca0435ed7d74151ec9d4eb8912d79f04
    SHA512:fcec2a24fa410f4c2fdaba028cb6864bedf3d5079203b2f7207446155d138951704d7e03f4d9dcbb1563c4050a062817ed7d4ae3f76d6d624fa9dd07db8b98c0
    Skein512_512:acf3cca15cb8bf7857e2d46c6fbd71e5aa586aaf986e9fc4e84b74888df715c6c517be858e7f6996bdf74d32d02ff5db2175d281ae8bc9156a5bfaaa4023442b

package-locations:
    https://hackage.haskell.org/package/graph-rewriting-0.7.6/graph-rewriting-0.7.6.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/graph-rewriting-0.7.6.tar.gz

package-size: 12451
-- END Added by all-cabal-hashes-tool

Name:           graph-rewriting
Version:        0.7.6
Copyright:      (c) 2010, Jan Rochel
License:        BSD3
License-File:   LICENSE
Author:         Jan Rochel
Maintainer:     jan@rochel.info
Homepage:       http://rochel.info/#graph-rewriting
Build-Type:     Simple
Synopsis:       Monadic graph rewriting of hypergraphs with ports and multiedges
Description:
  This library provides a monadic EDSL to define your own port graph rewrite system in Haskell. Once you have specified the signature of your nodes and a set of rewrite rules, you can apply these rules on a graph to effect a graph transformation. The aim of this library is to make it as convenient as possible to define such a system and experiment with it and is not intended as a backend for high-performance computation.
Category:       Graphs
Cabal-Version:  >= 1.6

Library
  Build-Depends:
    base >= 4.0 && < 4.8,
    base-unicode-symbols >= 0.2 && < 0.3,
    mtl >= 1.1 && < 2.3,
    containers >= 0.3 && < 0.6
  Exposed-Modules:
    Data.View
    GraphRewriting
    GraphRewriting.Graph
    GraphRewriting.Graph.Types
    GraphRewriting.Graph.Read
    GraphRewriting.Graph.Write
    GraphRewriting.Graph.Write.Unsafe
    GraphRewriting.Pattern
    GraphRewriting.Pattern.InteractionNet
    GraphRewriting.Rule
  Other-Modules:
    GraphRewriting.Graph.Internal
    GraphRewriting.Pattern.Internal
    GraphRewriting.Rule.Internal
  Extensions:
    UnicodeSyntax
    FlexibleContexts
    FlexibleInstances
    TypeSynonymInstances
    MultiParamTypeClasses
    OverlappingInstances
    GeneralizedNewtypeDeriving
  GHC-Options:    -fno-warn-duplicate-exports -fwarn-unused-binds -fwarn-unused-imports -fwarn-unused-do-bind -fwarn-wrong-do-bind -fwarn-unrecognised-pragmas
