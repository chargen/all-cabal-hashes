-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:9ce793fff78f2fb0becf10cc03e4446b
    SHA1:6f853999301bb69fd13cbbda014602f60b447614
    SHA256:5e585f302d4b3ea2a09e9fd014bdeac4d047c7fddbe807ca9ea84e804740e577
    SHA512:c75552c8c178bc4cb612787f6d3c3594690af64cd4a9dc4be9882f5a6b27eb768d0ff0a825e6e1493ea8d857b7a768dd7320936c1f3683a6764b7381723decd5
    Skein512_512:f07376d0c5f49757fd0cc5ddc01e9e74a14173e59319177bb37f7c459ca088c93ad627b7793ec577392e3d47b1ef4397884b13fb929927d6929c03ffecfd2468

package-locations:
    https://hackage.haskell.org/package/repa-3.1.3.2/repa-3.1.3.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/repa-3.1.3.2.tar.gz

package-size: 35665
-- END Added by all-cabal-hashes-tool

Name:                repa
Version:             3.1.3.2
License:             BSD3
License-file:        LICENSE
Author:              The DPH Team
Maintainer:          Ben Lippmeier <benl@ouroborus.net>
Build-Type:          Simple
Cabal-Version:       >=1.6
Stability:           experimental
Category:            Data Structures
Homepage:            http://repa.ouroborus.net
Bug-reports:         repa@ouroborus.net
Description:
        Repa provides high performance, regular, multi-dimensional, shape polymorphic
        parallel arrays. All numeric data is stored unboxed. Functions written with
        the Repa combinators are automatically parallel provided you supply
        +RTS -Nwhatever on the command line when running the program.

Synopsis:
        High performance, regular, shape polymorphic parallel arrays.

Tested-with: GHC == 7.0.1

Library
  Build-Depends: 
        base                 == 4.*,
        ghc-prim             == 0.2.*,
        vector               == 0.9.*,
        bytestring           == 0.9.*,
        QuickCheck           >= 2.3 && < 2.5,
        template-haskell     >= 2.5 && < 2.8

  ghc-options:
        -Wall -fno-warn-missing-signatures
        -Odph
        -funbox-strict-fields
        -fcpr-off

  extensions:
        NoMonomorphismRestriction
        ExplicitForAll
        EmptyDataDecls
        BangPatterns
        TypeFamilies
        MultiParamTypeClasses
        FlexibleInstances
        FlexibleContexts
        StandaloneDeriving
        ScopedTypeVariables
        PatternGuards

  Exposed-modules:
        Data.Array.Repa.Eval.Gang
        Data.Array.Repa.Operators.IndexSpace
        Data.Array.Repa.Operators.Interleave
        Data.Array.Repa.Operators.Mapping
        Data.Array.Repa.Operators.Reduction
        Data.Array.Repa.Operators.Selection
        Data.Array.Repa.Operators.Traversal
        Data.Array.Repa.Repr.ByteString
        Data.Array.Repa.Repr.Cursored
        Data.Array.Repa.Repr.Delayed
        Data.Array.Repa.Repr.ForeignPtr
        Data.Array.Repa.Repr.Hint
        Data.Array.Repa.Repr.Partitioned
        Data.Array.Repa.Repr.Unboxed
        Data.Array.Repa.Repr.Undefined
        Data.Array.Repa.Repr.Vector
        Data.Array.Repa.Specialised.Dim2
        Data.Array.Repa.Stencil.Dim2
        Data.Array.Repa.Eval
        Data.Array.Repa.Index
        Data.Array.Repa.Shape
        Data.Array.Repa.Slice
        Data.Array.Repa.Stencil
        Data.Array.Repa.Unsafe
        Data.Array.Repa

  Other-modules:
        Data.Array.Repa.Eval.Chunked
        Data.Array.Repa.Eval.Cursored
        Data.Array.Repa.Eval.Elt
        Data.Array.Repa.Eval.Fill
        Data.Array.Repa.Eval.Reduction
        Data.Array.Repa.Eval.Selection
        Data.Array.Repa.Stencil.Base
        Data.Array.Repa.Stencil.Template
        Data.Array.Repa.Stencil.Partition
        Data.Array.Repa.Base
        
