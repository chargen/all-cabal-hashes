name:           reflection
version:        0.8
license:        BSD3
license-file:   LICENSE
author:         Edward A. Kmett, Oleg Kiselyov and Chung-chieh Shan
maintainer:     Edward A. Kmett <ekmett@gmail.com>
stability:      experimental
homepage:       http://www.cs.rutgers.edu/~ccshan/prepose/prepose.pdf
category:       Data, Reflection, Dependent Types
synopsis:       Functional Pearl: Implicit Configurations
copyright:      2009 Edward A. Kmett, 2004 Oleg Kiselyov and Chung-chieh Shan
build-type:     Simple
cabal-version:  >= 1.6
description:
  This package provides an implementation of the ideas presented in the paper
  "Functional Pearl: Implicit Configurations" by Oleg Kiselyov and
  Chung-chieh Shan. However, the API has been modified to use @Rank2Types@ and
  @TypeFamilies@
  .
  Usage reduces to using two combinators.
  .
  > reify :: a -> (forall s. (Reified s, Reflected s ~ a) => Proxy s -> w) -> w
  > reflect :: Reified s => p s -> Reflected s
  .
  > ghci> reify 6 (\p -> reflect p + reflect p) :: Int
  > 12
  .
  The argument passed along by reify is just a @data Proxy t = Proxy@, so all of the
  information needed to reconstruct your value has been moved to the type level.
  This enables it to be used when constructing instances (See @examples/Monoid.hs@).
  .
  /Changes in 0.8/:
  .
  * Switched to using type families to avoid a problem where the user could cast
    @Proxy (s a) -> Proxy (s b)@ and get back a values with the wrong type under
    the API in effect from 0.6. This API yields a much nicer example as well.
  .
  * Removed @reflectT@ as it no longer makes sense.
  .
  * Added a more advanced example @example/Constraints.hs@ using constraint kinds.
  .
  /Changes in 0.7/:
  .
  * Uses a much simpler construction where @reify@ now converts a @StablePtr@ to an
    @IntPtr@ and reifies that directly as an integral type rather than serializing
    and storing the StablePtr as a list of bytes as proposed in the original paper.
  .
  * Removed @ReifiedStorable@ and @ReifiedNums@.
  .
  * Since we have so many fewer classes now, @Data.Reflection.Internal@ was merged back
    into @Data.Reflection@
  .
  /Changes in 0.6/:
  .
  * Removed the dependency on multiparameter type classes, functional
    dependencies, and flexible instances, by making @Reifies@ a single
    parameter type class in the same fashion as @ReifiesStorable@.
  .
  * Moved the building blocks to @Data.Reflection.Internal@ to reduce API clutter.
  .
  * Added @reflectT@
  .
  /Changes in 0.5/:
  .
  * Generalized the type signatures in reflect to allow you to pass any type
    with kind @* -> *@ wrapped around the desired type as the phantom type
    argument rather than just a @Proxy@.
  .
  /Changes in 0.4/:
  .
  * Converted from `Data.Tagged` to using `Data.Proxy` for reflection. This
    reduces the need for helper functions and scoped type variables in user
    code.

extra-source-files: examples/Monoid.hs examples/Constraints.hs

source-repository head
  type: git
  location: git://github.com/ekmett/reflection.git

library
  other-extensions: Rank2Types, TypeFamilies
  build-depends:
    base >= 4 && < 5,
    tagged >= 0.2.3 && < 0.3
  exposed-modules: Data.Reflection
  ghc-options: -Wall


package-hashes:
    MD5:c25aa6e54b38af9f7b1b1f86995cb7c9
    SHA1:de87beed50f284a2a3a0bcd25b526f5c967dd70e
    SHA256:f282cc613b80680a5c4b1426e13d62794de7c633db2f9236b130f786db81a6eb
    SHA512:4039763cf7cf7d9be0f8b14140b649c8380b974069ca6dfae8715c1f902472a6c7c2aceff4202b25c66d176f49e8ac2528a350ff7cb0fb6fac0859fb9055695e
    Skein512_512:29e2a75fd1075d8651cdedb4fc36da0700a6334b16a795636934aa01e005f8734ef71576ab1a29bb9775e3e6c0aaa0932bd7db7b93d9af0dba3e7167ce6f35d8

package-locations:
    https://hackage.haskell.org/package/reflection-0.8/reflection-0.8.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/reflection-0.8.tar.gz

