Name:                diagrams-lib
Version:             1.2.0.5
Synopsis:            Embedded domain-specific language for declarative graphics
Description:         Diagrams is a flexible, extensible EDSL for creating
                     graphics of many types.  Graphics can be created
                     in arbitrary vector spaces and rendered with
                     multiple backends.  diagrams-lib provides a
                     standard library of primitives and operations for
                     creating diagrams.  To get started using it, see
                     "Diagrams.Prelude".
Homepage:            http://projects.haskell.org/diagrams
License:             BSD3
License-file:        LICENSE
Author:              Brent Yorgey
Maintainer:          diagrams-discuss@googlegroups.com
Bug-reports:         http://github.com/diagrams/diagrams-lib/issues
Category:            Graphics
Build-type:          Simple
Cabal-version:       >=1.10
Extra-source-files:  CHANGES.markdown, README.markdown, diagrams/*.svg
Extra-doc-files:     diagrams/*.svg
Tested-with:         GHC == 7.4.2, GHC == 7.6.3, GHC == 7.8.1
Source-repository head
  type:     git
  location: http://github.com/diagrams/diagrams-lib.git

Library
  Exposed-modules:     Diagrams.Prelude,
                       Diagrams.Prelude.ThreeD,
                       Diagrams.Align,
                       Diagrams.Angle,
                       Diagrams.Combinators,
                       Diagrams.Coordinates,
                       Diagrams.Attributes,
                       Diagrams.Attributes.Compile,
                       Diagrams.Points,
                       Diagrams.Located,
                       Diagrams.Parametric,
                       Diagrams.Parametric.Adjust,
                       Diagrams.Segment,
                       Diagrams.Trail,
                       Diagrams.TrailLike,
                       Diagrams.Path,
                       Diagrams.CubicSpline,
                       Diagrams.CubicSpline.Internal,
                       Diagrams.Solve,
                       Diagrams.Tangent,
                       Diagrams.Transform,
                       Diagrams.Deform
                       Diagrams.BoundingBox,
                       Diagrams.Names,
                       Diagrams.Envelope,
                       Diagrams.Trace,
                       Diagrams.Query,
                       Diagrams.TwoD,
                       Diagrams.TwoD.Types,
                       Diagrams.TwoD.Align,
                       Diagrams.TwoD.Arrow,
                       Diagrams.TwoD.Arrowheads,
                       Diagrams.TwoD.Attributes,
                       Diagrams.TwoD.Combinators,
                       Diagrams.TwoD.Deform,
                       Diagrams.TwoD.Transform,
                       Diagrams.TwoD.Transform.ScaleInv,
                       Diagrams.TwoD.Ellipse,
                       Diagrams.TwoD.Arc,
                       Diagrams.TwoD.Segment,
                       Diagrams.TwoD.Curvature,
                       Diagrams.TwoD.Offset,
                       Diagrams.TwoD.Path,
                       Diagrams.TwoD.Polygons,
                       Diagrams.TwoD.Shapes,
                       Diagrams.TwoD.Vector,
                       Diagrams.TwoD.Size,
                       Diagrams.TwoD.Model,
                       Diagrams.TwoD.Text,
                       Diagrams.TwoD.Image,
                       Diagrams.TwoD.Adjust,
                       Diagrams.ThreeD.Align,
                       Diagrams.ThreeD.Attributes,
                       Diagrams.ThreeD.Camera,
                       Diagrams.ThreeD.Deform,
                       Diagrams.ThreeD.Light,
                       Diagrams.ThreeD.Shapes,
                       Diagrams.ThreeD.Transform,
                       Diagrams.ThreeD.Types,
                       Diagrams.ThreeD.Vector,
                       Diagrams.ThreeD,
                       Diagrams.Animation,
                       Diagrams.Animation.Active,
                       Diagrams.Util,
                       Diagrams.Backend.CmdLine
  Build-depends:       base >= 4.2 && < 4.8,
                       containers >= 0.3 && < 0.6,
                       array >= 0.3 && < 0.6,
                       semigroups >= 0.3.4 && < 0.16,
                       monoid-extras >= 0.3 && < 0.4,
                       dual-tree >= 0.2 && < 0.3,
                       diagrams-core >= 1.2 && < 1.3,
                       active >= 0.1 && < 0.2,
                       vector-space >= 0.7.7 && < 0.9,
                       vector-space-points >= 0.1.2 && < 0.3,
                       MemoTrie >= 0.6 && < 0.7,
                       colour >= 2.3.2 && < 2.4,
                       data-default-class < 0.1,
                       fingertree >= 0.1 && < 0.2,
                       intervals >= 0.7 && < 0.8,
                       lens >= 4.0 && < 4.7,
                       tagged >= 0.7,
                       optparse-applicative >= 0.11 && < 0.12,
                       filepath,
                       JuicyPixels >= 3.1.5 && < 3.2,
                       hashable >= 1.1 && < 1.3
  if impl(ghc < 7.6)
    Build-depends: ghc-prim
  Hs-source-dirs:      src
  ghc-options: -Wall
  default-language:    Haskell2010


package-hashes:
    MD5:aa3e09e3c64ed63d5f0d30e913ea88b5
    SHA1:4faaab9a1f4ccfe87f779e6ee1977c70eacda2a1
    SHA256:a6fd88e7a8a0a1a997c1daba389f15987c1afb88e4cab12ea475f998c991a24e
    SHA512:4078d869035f23c53b57c35d71fade82da8738634df1ef2a9ce2a2e6f503a0840816d62915af488fd594dd44e48c4561e97bbf2e54ee7e249ae650c151c0002b
    Skein512_512:d8c8066eee2a3260c7e51669c0bf251c2ef87e9f1d211dbbdc1c64c2f22a29b519b63424c2041aae893ae8c22daa06d3425a29d5e332d5e65b88519d9fd384d2

package-locations:
    https://hackage.haskell.org/package/diagrams-lib-1.2.0.5/diagrams-lib-1.2.0.5.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/diagrams-lib-1.2.0.5.tar.gz

