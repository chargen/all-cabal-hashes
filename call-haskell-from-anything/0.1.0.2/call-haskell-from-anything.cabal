-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:65f90cadc325b6a502a35311bacd85d1
    SHA1:1124d041a5d8bdb11d0e3e296e505c0ee9093266
    SHA256:a14b0b6bb050f7119337fae4136bbe45f12c55ce94659e088d340d7ffd245b41
    SHA512:43676f5de7d6c662e326b4c1cdf90b4b28b6df9771276d4639619d7b029b5758f51f68e6a8463c37461b714fcafbf743b707171b88f4f32b254c53504d83e22c
    Skein512_512:da6979fb797fb1cbcc39be8cee093616ad438774c9ec0b5df2ddbe5b7899c623aa854d7fa614d36ad13e1161fe96697cbed9c5bac59a98832e21042a20d3c2b6

x-package-locations:
    https://hackage.haskell.org/package/call-haskell-from-anything-0.1.0.2/call-haskell-from-anything-0.1.0.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/call-haskell-from-anything-0.1.0.2.tar.gz

x-package-size: 8243
-- END Added by all-cabal-hashes-tool

name:          call-haskell-from-anything
version:       0.1.0.2
license:       MIT
author:        Niklas Hambüchen (mail@nh2.me)
maintainer:    Niklas Hambüchen (mail@nh2.me)
category:      Network
-- We use Configure to determine the `extra-libraries: HSrts-ghc*.*.*` field.
-- See the ./configure script.
build-type:    Configure
license:       MIT
synopsis:      Python-to-Haskell function calls
stability:     experimental
tested-with:   GHC==7.6.3, GHC==7.8.2
cabal-version: >= 1.10
homepage:      https://github.com/nh2/call-haskell-from-anything
bug-reports:   https://github.com/nh2/call-haskell-from-anything/issues


extra-source-files:
  configure
  detect-ghc-buildinfo.py


source-repository head
  type: git
  location: git://github.com/nh2/call-haskell-from-anything.git


library
  default-language: Haskell2010
  hs-source-dirs:
    src
  exposed-modules:
    FFI.Anything.TH
    FFI.Anything.Copied
    FFI.Anything.TypeUncurry
    FFI.Anything.TypeUncurry.ReturnResult
    FFI.Anything.TypeUncurry.Legacy
    FFI.Anything.TypeUncurry.Msgpack
  if impl(ghc >= 7.6.0)
    exposed-modules:
      FFI.Anything.TypeUncurry.DataKinds
  other-modules:
    FFI.Anything.Util
  build-depends:
      base >= 4 && < 5
    , bytestring >= 0.10.0.0
    , msgpack >= 0.7.1.5 && < 1.0.0
    , template-haskell
    , mtl >= 2.1.2
    , attoparsec >= 0.10.3.0
  ghc-options:
    -Wall -fwarn-unused-imports


executable call-haskell-from-anything.so
  default-language: Haskell2010
  hs-source-dirs:
    test
  main-is:
    Test1.hs
  build-depends:
      call-haskell-from-anything

    -- Packages that already have version bounds in the library:
    , base
    , bytestring
    , msgpack
    , mtl
  ghc-options:
    -- For building TemplateHaskell with cabal and -dynamic, we have to disable -dynamic sometimes
    -no-hs-main -fPIC -shared -dynamic

  -- If we don't specify the Haskell RTS as extra-libraries, we get errors like
  -- the following when calling from some other language:
  --   /usr/lib/ghc/ghc-prim-0.3.0.0/libHSghc-prim-0.3.0.0-ghc7.6.3.so: undefined symbol: stg_forkOnzh
  --
  -- The `build-type: Configure` with the `./configure` script makes sure that
  -- an `extra-libraries: HSrts-ghc*.*.*` field is added using cabal's .buildinfo infrastructure.
  -- See http://stackoverflow.com/questions/6034526/how-can-configuration-tools-like-sdl-config-be-used-with-a-cabalized-project
  -- and https://github.com/nh2/call-haskell-from-anything/pull/2#issuecomment-68638262.
