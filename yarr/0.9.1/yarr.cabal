-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:c5abbae1387e56ca35a1913826fed6fe
    SHA1:9f32af1aafa28a900833729306f5e6ad4e4c3e4c
    SHA256:265fbd82abd913afece7ac077a1daa10454ce0850a93a24b477840e45c3e03a2
    SHA512:b642cf19d08c58afcbfbab4502d505233309b270b95e643b07804584307bf94b17c675488f321b3df0576c8b9a46282ffd9100fa4cbb15fb86aa05d9710fd0fb
    Skein512_512:cebbb21b73a78304ae6efdb79e1030d56d6e9e994f16601447a2904c1e777aa2e2518205b04aed93a77c2679c0c6517ef37660b916e2ced34fc7d428694b4825

x-package-locations:
    https://hackage.haskell.org/package/yarr-0.9.1/yarr-0.9.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/yarr-0.9.1.tar.gz

x-package-size: 33031
-- END Added by all-cabal-hashes-tool

Name:                yarr
Version:             0.9.1
Synopsis:            Yet another array library
Description:
    Yarr is a new blazing fast dataflow framework (array library),
    mainly intented to process @Storable@s (including all \"primitive\" numeric types)
    and @fixed-vector@s of them, for example coordinates,
    color components, complex numbers.
    .
    Yarr framework is inspired by @repa@ library and inherits its features,
    including shape-polymorphism and auto-parallelism.
    Additionaly, the framework is polymorphic over type and arity
    of fixed-size vectors and supports neat flow operations over them.
    For example, you can convert colored image to greyscale like this:
    .
    > let greyImage = zipElems (\r g b -> 0.21 * r + 0.71 * g + 0.07 * b) image
    .
    The library is considerably faster than @repa@.
    Canny edge detector on Yarr is 40% (on 5 threads)
    and 55% (in sequential mode) faster then on @repa@.
    .
    Shortcoming by design: lack of pure indexing interface.
    .
    /Work ahead:/
    .
        * Safe fold wrappers
    .
        * Unresolved issues with parameterized unrolling in slice-wise loading
    .
    To start with, read documentation in the root module: "Data.Yarr".
    .
    [@Yarr!@] 

License:             MIT
License-file:        LICENSE
Author:              Roman Leventov
Maintainer:          Roman Leventov <leventov@ya.ru>
Bug-reports:         https://github.com/leventov/yarr/issues
Category:            Data Structures, Data Flow, Graphics
Build-type:          Simple
Cabal-version:       >= 1.8

source-repository head
    type:     git
    location: https://github.com/leventov/yarr.git
    subdir:   yarr

Library
    build-depends:
        base             == 4.6.*,
        ghc-prim         == 0.3.*,
        deepseq          == 1.3.*,
        fixed-vector     == 0.1.2.1,
        primitive        >= 0.2,
        template-haskell == 2.8.*,
        missing-foreign  == 0.1.1

    extensions:
        TypeFamilies, MultiParamTypeClasses, FunctionalDependencies,
        FlexibleContexts,
        EmptyDataDecls,
        FlexibleInstances, TypeSynonymInstances, UndecidableInstances,
        GeneralizedNewtypeDeriving, StandaloneDeriving,
        RankNTypes, ScopedTypeVariables,
        MagicHash, BangPatterns, UnboxedTuples,
        TemplateHaskell, CPP

    exposed-modules:
        Data.Yarr
        Data.Yarr.Base
        Data.Yarr.Eval
        Data.Yarr.Flow
        Data.Yarr.Shape
        Data.Yarr.Repr.Foreign
        Data.Yarr.Repr.Boxed
        Data.Yarr.Repr.Delayed
        Data.Yarr.Repr.Separate
        Data.Yarr.Repr.Checked
        Data.Yarr.Convolution
        Data.Yarr.Utils.FixedVector
        Data.Yarr.Utils.Fork
        Data.Yarr.Utils.Parallel
        Data.Yarr.Utils.Split
        Data.Yarr.Utils.Storable
        Data.Yarr.Utils.Primitive
        Data.Yarr.Utils.LowLevelFlow

    other-modules:
        -- re-exported in Utils.FixedVector
        Data.Yarr.Utils.VecTuple
        Data.Yarr.Utils.VecTupleInstances

        -- re-exported in Data.Yarr.Convolution
        Data.Yarr.Convolution.Repr
        Data.Yarr.Convolution.Eval
        Data.Yarr.Convolution.StaticStencils
