Name:                hubris
Version:             0.0.2
Author:              Mark Wotton
Maintainer:          mwotton@gmail.com
Build-Type:          Simple
Cabal-Version:       >=1.2
License:        OtherLicense
License-File:   LICENSE
Build-Type:     Simple
Author:         Mark Wotton <mwotton@gmail.com>
Maintainer:     Mark Wotton <mwotton@gmail.com>
bug-reports:    http://github.com/mwotton/Hubris-Haskell/issues
Category:       Language
Stability:      Experimental
extra-source-files: 
Synopsis:       Support library for Hubris, the Ruby <=> Haskell bridge
Description:    Support library for Hubris, the Ruby to Haskell bridge
                more info at <http://github.com/mwotton/Hubris-Haskell>
                .
                short version: ./Setup configure --enable-shared --ghc-options=-dynamic --extra-include-dirs=... --extra-lib-dirs=...
                .
                If you omit any of those flags, it will seem to work then blow up at runtime.
                .
                Anyway, this version strips the boilerplate that used to be necessary, and is intended to be used in conjunction with <http://github.com/mwotton/Hubris>.

Library
-- the ordering is critical, because Cabal doesn't do dependency analysis.
        Exposed-Modules: Language.Ruby.Hubris.Binding, Language.Ruby.Hubris, Language.Ruby.Hubris.LibraryBuilder, Language.Ruby.Hubris.ZCode, Language.Ruby.Hubris.GHCBuild, Includes
        c-sources: cbits/rshim.c
        includes:  cbits/rshim.h
        install-includes:  cbits/rshim.h
        include-dirs: cbits
        -- a proper fix for this would involve autoconf and I'm not feeling up to it.
        -- best to pass the args on the command line.
        --extra-include-dirs=/opt/local/include/ruby-1.9.1/ 
        --extra-lib-dirs: /opt/local/lib
        extra-libraries: ruby
        build-depends:  ghc, Cabal>=1.7.4 && < 1.9, base, haskell98, containers, bytestring, array, mtl, old-time, ghc-paths, hint

Executable Hubrify
  Main-is:           Hubrify.hs
  Build-Depends:     base >= 3 && < 5, ghc, Cabal>=1.7.4 && < 1.9, base, haskell98, containers, bytestring, array, mtl, old-time, ghc-paths, hint, process
  Other-Modules:     Language.Ruby.Hubris.Binding
  c-sources: cbits/rshim.c 
  include-dirs: cbits 
  extra-libraries: ruby
  -- This is bad form, apparently, and if i include it, ./Setup dist cries big fat tears,
  --  but you _really_ want a dynamic lib with Hubrify, or you'll get a truly
  -- huge binary (may not even link, I had problems with the iconv dependency from HSbase)
  -- anyway, pass "--ghc-options=-dynamic" to ./Setup configure, and you should be apples.
  -- ghc-options: -dynamic

package-hashes:
    MD5:4c14ae549d24489e90aaf3c4b307692c
    SHA1:2ed22df8dce868f9599d35d79b56c59583a23e88
    SHA256:ac9d01d4bd102a35b7acec6b2ed3fd991679ca2b639d42b26b374027ca79243c
    SHA512:f3d7277ffd039a3c3a6f50602a56fba9a30183fa59ec45360d558e2161d02ace215bedbc5dc481e3b57a5c44d966a246cf3bd16dd16a72e81c1f3bf88d553781
    Skein512_512:810a1859f01cb2923a7ae30c9cf89d1ecc89f92d541701c71ac6e298f8e70164e6bd736365a7a77965407e132908ac081fb5a447c6d6d3ef96eb0e13893da6cf

package-locations:
    https://hackage.haskell.org/package/hubris-0.0.2/hubris-0.0.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/hubris-0.0.2.tar.gz

