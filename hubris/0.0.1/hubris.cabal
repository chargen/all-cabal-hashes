-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:8bb4477473a4928f1927f3c12a0d4335
    SHA1:dea14edda603a4369d1c42176308e91fe3e31643
    SHA256:7307dea51d63b29140a312130a992daadf48e85429ef699621fe13220d071f6f
    SHA512:879f03e6915dad4258a85ce074ecd5873da41961f9eff35add7b51cd0b25e898fde43990072ade6b0db64b6fad79cf9378a102bd1783d86aadd54ef0770fa115
    Skein512_512:727f5acf1f9948846e6f8b5e32f88995bb294707f5e78ba41aa5528e5c2b5c2d39159659366cdaed4de0c64cbbcfeda89b139cb29417ad01b0165148c2e9317a

x-package-locations:
    https://hackage.haskell.org/package/hubris-0.0.1/hubris-0.0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/hubris-0.0.1.tar.gz

x-package-size: 8501
-- END Added by all-cabal-hashes-tool

Name:                hubris
Version:             0.0.1
Author:              Mark Wotton
Maintainer:          mwotton@gmail.com
Build-Type:          Simple
Cabal-Version:       >=1.2
License:        OtherLicense
License-File:   LICENSE
Build-Type:     Simple
Author:         Mark Wotton <mwotton@gmail.com>
Maintainer:     Mark Wotton <mwotton@gmail.com>
bug-reports:    mailto:mwotton@gmail.com
Category:       Language
Stability:      Experimental
extra-source-files: 
Synopsis:       Support library for Hubris, the Ruby <=> Haskell bridge
Description:    Support library for Hubris, the Ruby <=> Haskell bridge

Library
-- the ordering is critical, because Cabal doesn't do dependency analysis.
        Exposed-Modules: Language.Ruby.Hubris.Binding, Language.Ruby.Hubris, Language.Ruby.Hubris.LibraryBuilder, Language.Ruby.Hubris.ZCode, Language.Ruby.Hubris.GHCBuild
-- so this is a really filthy hack.
        c-sources: cbits/rshim.c 
        includes:  cbits/rshim.h
        install-includes:  cbits/rshim.h

-- a proper fix for this would involve autoconf and I'm not feeling up to it.
        include-dirs: cbits /opt/local/include/ruby-1.9.1/ 
        extra-lib-dirs: /opt/local/lib
       -- c2hsoptions: --cpp=gcc --cppopts=-E --cppopts=-xc
        extra-libraries: ruby
        build-depends:  ghc, Cabal>=1.7.4 && < 1.8, base, haskell98, containers, bytestring, array, mtl, old-time, ghc-paths, haskell-src-meta, hint

Executable Hubrify
  Main-is:           Hubrify.hs
  Build-Depends:     base >= 3 && < 5, ghc, Cabal>=1.7.4 && < 1.8, base, haskell98, containers, bytestring, array, mtl, old-time, ghc-paths, haskell-src-meta, hint
  Other-Modules:     Language.Ruby.Hubris.Binding
  c-sources: cbits/rshim.c 
  include-dirs: cbits /opt/local/include/ruby-1.9.1/ 
  extra-lib-dirs: /opt/local/lib
  extra-libraries: ruby
  -- This is bad form, apparently, and if i include it, ./Setup dist cries big fat tears,
  --  but you _really_ want a dynamic lib with Hubrify, or you'll get a truly
  -- huge binary (may not even link, I had problems with the iconv dependency from HSbase)
  -- anyway, pass "--ghc-options=-dynamic" to ./Setup build, and you should be apples.
  -- ghc-options: -dynamic