-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:7790c7865b1cae215a1b0f7e060301f3
    SHA1:3e4a96956c9c69b8d9b49921ae51f711385b3c83
    SHA256:24f9e9a701c34091ecbea8e2ca1e3e7e4899975d1082f4c03219344a37357aee
    SHA512:1514aaf6fdada57cd19def3721086067dc9118880d930f8f1d106ca0c6bb822efcebcc59f3403b081e3147dde51f85c211cd4c58d03978015769f357dde4d237
    Skein512_512:cbfb6f1c87a75c9ab585edbca860c7db305acb9b41bd963a8de6f3e1249685f105f342868000f1507940ae0ed909dc271084244bad5e6c11b329686d45b2db2a

x-package-locations:
    https://hackage.haskell.org/package/wai-routes-0.3.4/wai-routes-0.3.4.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/wai-routes-0.3.4.tar.gz

x-package-size: 8038
-- END Added by all-cabal-hashes-tool

Name:                wai-routes
Version:             0.3.4
Synopsis:            Typesafe URLs for Wai applications.
Homepage:            https://github.com/ajnsit/wai-routes
License:             MIT
License-file:        LICENSE
Author:              Anupam Jain
Maintainer:          ajnsit@gmail.com
Build-Type:          Simple
Cabal-Version:       >=1.6
stability:           Experimental
Category:            Network
Extra-source-files:  README.md, examples/Example.hs
Description:
  Provides easy to use typesafe URLs for Wai Applications.
  .
  Sample usage follows (See examples/Example.hs in the source bundle for the full code) -
  .
  @
    &#123;-&#35; LANGUAGE OverloadedStrings, TypeFamilies &#35;-&#125;
    .
    import Network.Wai
    import Network.Wai.Middleware.Routes
    .
    import Data.IORef
    .
    &#45;&#45; The Site Argument
    data MyRoute = MyRoute (IORef DB)
    .
    &#45;&#45; Generate Routes
    mkRoute "MyRoute" &#91;parseRoutes&#124;
    &#47;             UsersR         GET
    &#47;user&#47;&#35;Int    UserR&#58;
    &#32;&#32;/              UserRootR   GET
    &#32;&#32;/delete        UserDeleteR POST
    &#124;&#93;
    .
    &#45;&#45; Define Handlers
    &#45;&#45; All Users Page
    getUsersR &#58;&#58; Handler MyRoute
    getUsersR (MyRoute dbref) request = ...
    &#45;&#45; Single User Page
    getUserRootR &#58;&#58; Int -> Handler MyRoute
    getUserRootR userid (MyRoute dbref) request = ...
    &#45;&#45; Delete Single User
    postUserDeleteR &#58;&#58; Int -> Handler MyRoute
    postUserDeleteR userid (MyRoute dbref) request = ...
    .
    &#45;&#45; Define Application using RouteM Monad
    myApp = do
    &#32;&#32;db <- liftIO &#36; newIORef mydb
    &#32;&#32;route (MyRoute db)
    &#32;&#32;setDefaultAction $ staticApp $ defaultFileServerSettings &#34;static&#34;
    .
    &#45;&#45; Run the application
    main &#58;&#58; IO ()
    main = toWaiApp myApp >>= run 8080
  @

source-repository head
  type:     git
  location: http://github.com/ajnsit/wai-routes

source-repository this
  type:     git
  location: http://github.com/ajnsit/wai-routes/tree/v0.3.4
  tag:      v0.3.4

Library
  hs-source-dirs:    src
  Build-Depends:     base >= 3 && < 5
               ,     wai >= 1.3 && < 1.5
               ,     conduit >= 0.5 && < 1.1
               ,     path-pieces
               ,     text
               ,     bytestring
               ,     http-types >= 0.7
               ,     blaze-builder >= 0.2.1.4 && < 0.4
               ,     template-haskell
               ,     yesod-routes >= 1.2
               ,     mtl
  exposed-modules:   Network.Wai.Middleware.Routes
               ,     Network.Wai.Middleware.Routes.Routes
               ,     Network.Wai.Middleware.Routes.Monad
               ,     Network.Wai.Middleware.Routes.Handler
               ,     Network.Wai.Middleware.Routes.ContentTypes

