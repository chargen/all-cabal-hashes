-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:355df856278d32d19788eb3a16cfb07a
    SHA1:691f1752598e89ada373d4d9dc25f1b15c9b342a
    SHA256:e03bad44c3e588bccb8cddd5f68a033e4456172e79fa413b678da709f6deeb60
    SHA512:a74b614c03e0e38b6111da9f8f522039d56a7739880902c9644b3ffd4a6d6ff2f1e58f2128664c15fb3ad533599c51532f67003c19dbdc911f6bafe303a8f92b
    Skein512_512:131d0ef854c5a90148742bb657a21bce45f82a6d00cea1f569ede61759ab50c0dddb57a9fda2e058c0f3a4a01eda43f2d89cadd638918c4a50383fe9e94eaada

package-locations:
    https://hackage.haskell.org/package/wai-routes-0.2/wai-routes-0.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/wai-routes-0.2.tar.gz

package-size: 17568
-- END Added by all-cabal-hashes-tool

Name:                wai-routes
Version:             0.2
Synopsis:            Typesafe URLs for Wai applications.
Homepage:            https://github.com/ajnsit/wai-routes
License:             GPL
License-file:        LICENSE
Author:              Anupam Jain
Maintainer:          ajnsit@gmail.com
Build-Type:          Simple
Cabal-Version:       >=1.6
stability:           Experimental
Category:            Network
Extra-source-files:  README, examples/Example.hs
Description:
  Provides easy to use typesafe URLs for Wai Applications.
  .
  Sample usage follows (See examples/Example.hs in the source bundle for the full code) -
  .
  @
    &#123;-&#35; LANGUAGE OverloadedStrings, TypeFamilies &#35;-&#125;
    .
    import Network.Wai
    import Network.Wai.Middleware.Routes
    .
    import Data.IORef
    .
    &#45;&#45; The Site Argument
    data MyRoute = MyRoute (IORef DB)
    .
    &#45;&#45; Generate Routes
    mkRoute "MyRoute" &#91;parseRoutes&#124;
    &#47;             UsersR         GET
    &#47;user&#47;&#35;Int    UserR&#58;
    &#32;&#32;/              UserRootR   GET
    &#32;&#32;/delete        UserDeleteR POST
    &#91;&#124;
    .
    &#45;&#45; Define Handlers
    &#45;&#45; All Users Page
    getUsersR &#58;&#58; Handler MyRoute
    getUsersR (MyRoute dbref) request = ...
    &#45;&#45; Single User Page
    getUserRootR &#58;&#58; Int -> Handler MyRoute
    getUserRootR userid (MyRoute dbref) request = ...
    &#45;&#45; Delete Single User
    postUserDeleteR &#58;&#58; Int -> Handler MyRoute
    postUserDeleteR userid (MyRoute dbref) request = ...
    .
    &#45;&#45; Define Application using RouteM Monad
    myApp = do
    &#32;&#32;db <- liftIO &#36; newIORef mydb
    &#32;&#32;route (MyRoute db)
    &#32;&#32;setDefaultAction $ staticApp $ defaultFileServerSettings &#34;static&#34;
    .
    &#45;&#45; Run the application
    main &#58;&#58; IO ()
    main = toWaiApp myApp >>= run 8080
  @

source-repository head
  type:     git
  location: http://github.com/ajnsit/wai-routes

source-repository this
  type:     git
  location: http://github.com/ajnsit/wai-routes/tree/v0.2
  tag:      v0.2

Library
  hs-source-dirs:    src
  Build-Depends:     base >= 3 && < 5
               ,     wai >= 1.3
               ,     path-pieces
               ,     text
               ,     http-types >= 0.7
               ,     template-haskell
               ,     yesod-routes >= 1.1
               ,     mtl
  exposed-modules:   Network.Wai.Middleware.Routes
               ,     Network.Wai.Middleware.Routes.Routes
               ,     Network.Wai.Middleware.Routes.Monad

