Name:                wai-routes
Version:             0.4.0
Synopsis:            Typesafe URLs for Wai applications.
Homepage:            https://github.com/ajnsit/wai-routes
License:             MIT
License-file:        LICENSE
Author:              Anupam Jain
Maintainer:          ajnsit@gmail.com
Build-Type:          Simple
Cabal-Version:       >=1.6
stability:           Experimental
Category:            Network
Extra-source-files:  README.md, examples/Example.hs
Description:
  Provides easy to use typesafe URLs for Wai Applications.
  .
  Sample usage follows (See examples/Example.hs in the source bundle for the full code) -
  .
  @
    &#123;-&#35; LANGUAGE OverloadedStrings, TypeFamilies &#35;-&#125;
    .
    import Network.Wai
    import Network.Wai.Middleware.Routes
    .
    import Data.IORef
    .
    &#45;&#45; The Site Argument
    data MyRoute = MyRoute (IORef DB)
    .
    &#45;&#45; Generate Routes
    mkRoute "MyRoute" &#91;parseRoutes&#124;
    &#47;             UsersR         GET
    &#47;user&#47;&#35;Int    UserR&#58;
    &#32;&#32;/              UserRootR   GET
    &#32;&#32;/delete        UserDeleteR POST
    &#124;&#93;
    .
    &#45;&#45; Define Handlers
    &#45;&#45; All Users Page
    getUsersR &#58;&#58; Handler MyRoute
    getUsersR (MyRoute dbref) request = ...
    &#45;&#45; Single User Page
    getUserRootR &#58;&#58; Int -> Handler MyRoute
    getUserRootR userid (MyRoute dbref) request = ...
    &#45;&#45; Delete Single User
    postUserDeleteR &#58;&#58; Int -> Handler MyRoute
    postUserDeleteR userid (MyRoute dbref) request = ...
    .
    &#45;&#45; Define Application using RouteM Monad
    myApp = do
    &#32;&#32;db <- liftIO &#36; newIORef mydb
    &#32;&#32;route (MyRoute db)
    &#32;&#32;setDefaultAction $ staticApp $ defaultFileServerSettings &#34;static&#34;
    .
    &#45;&#45; Run the application
    main &#58;&#58; IO ()
    main = toWaiApp myApp >>= run 8080
  @

source-repository head
  type:     git
  location: http://github.com/ajnsit/wai-routes

source-repository this
  type:     git
  location: http://github.com/ajnsit/wai-routes/tree/v0.4.0
  tag:      v0.4.0

Library
  hs-source-dirs:    src
  Build-Depends:     base >= 3 && < 5
               ,     wai >= 2 && < 2.1
               ,     text >= 0.11.3 && < 0.12
               ,     bytestring >= 0.10.0 && < 0.10.1
               ,     http-types >= 0.8.3 && < 0.8.4
               ,     blaze-builder >= 0.3.3 && < 0.3.4
               ,     template-haskell >= 2.8.0 && < 2.8.1
               ,     yesod-routes >= 1.2.0 && < 1.2.1
               ,     mtl
  exposed-modules:   Network.Wai.Middleware.Routes
               ,     Network.Wai.Middleware.Routes.Routes
               ,     Network.Wai.Middleware.Routes.Monad
               ,     Network.Wai.Middleware.Routes.Handler
               ,     Network.Wai.Middleware.Routes.ContentTypes



package-hashes:
    MD5:23623bb82276a298dca192a735856429
    SHA1:bf1f4026bc8b1c236b563225c5d3d9f76d61f433
    SHA256:795df6b7e867082f21f143726620e8c80020f2c3731c16d7e19dc1956b282242
    SHA512:7a0f59cd796b0c578ebd02e35a8eb8cae35e85c4d0008e6b57ebad37700f910220b04c9565df1018e13ddb9be49ae395248a18b568e2573ef77bfbca6e088b05
    Skein512_512:cd8143f8c76c51585fc869890eeca8f55acff0e251423928c588f27ea503733097f9cbb6784e6ade7c73b8aaed12144d96b31cfbafd8f2551a907f51ee678366

package-locations:
    https://hackage.haskell.org/package/wai-routes-0.4.0/wai-routes-0.4.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/wai-routes-0.4.0.tar.gz

