-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:5c93ae1c4017b5e5aa81732a71282c83
    SHA1:cc3a9e99170dbb2ce4d42978e9e9c8bd5d7ce77b
    SHA256:6009a1d320b1ace68bcea267ef30430c1ea66c3e2816d7911e717d6d3e7dd859
    SHA512:415621421b340e6f01cbc9a90556e785d5e7df3f2278571c00fd8c736d03c10fb0a5cf944c71a6dc4fe2a2716e323eaf5132211ed0471de26a42253c54b23659
    Skein512_512:d569b1887cd3f190165175bbb63e53f7af236c3f5f21d066fb69fe4c35028d56eb802939eb4e09063d43c83f0ce2af3ad17125ca2bdf2d31c3826a7e70d0061e

package-locations:
    https://hackage.haskell.org/package/cnc-spec-compiler-0.2.0.1/cnc-spec-compiler-0.2.0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/cnc-spec-compiler-0.2.0.1.tar.gz

package-size: 110773
-- END Added by all-cabal-hashes-tool

Name:           cnc-spec-compiler

Version:        0.2.0.1
-- [2010.11.10] 0.1.3.100 Bumping slightly after change to CNC_ASSUME_TR1
-- [2010.11.10] 0.1.3.101 New scheme for extracting version from cabal file.
-- [2010.12.06] 0.1.3.102 Bumped for recent translator plugin rearchitecture.
-- [2010.12.06] 0.1.3.103 Bumped for completion of autodone facility.
-- [2010.12.06] 0.1.3.104 Bumped for fix of autodone to remove item collections re: cycles.
-- [2010.12.06] 0.1.3.105 Bumped for done-signalling for reductions.
-- [2011.01.25] 0.1.3.106 Bumped for signifcant work in various areas.
-- [2011.01.25] 0.1.3.107 Bumped for new binary trace recording.
-- [2011.01.25] 0.1.3.108 Bumped for new binary trace format.
-- [2011.08.10] 0.2.0.0   Bumped because the Spec Compiler has been factored
--                        into its own repo.
-- [2011.08.12] 0.2.0.1   Bumped for new build flag, BasicBuild for low-dependency building.

License: BSD3
License-file:   LICENSE
Stability: Beta
Author:			Ryan Newton <rrnewton@gmail.com>
Maintainer:		Ryan Newton <rrnewton@gmail.com>
homepage: http://software.intel.com/en-us/articles/intel-concurrent-collections-for-cc/
Copyright: Copyright (c) 2009-2010 Intel Corporation
Synopsis: Compiler/Translator for CnC Specification Files.
Description: Intel (Concurrent Collections) CnC is a data-flow like
 deterministic parallel programming model, similar to
 stream-processing but in which nodes in the computation graph share data in tables.
 In CnC, the structure of the graph and metadata about data-access
 patterns are stored in a specification, which can be used by this
 tool to generate code which will orchestrate the execution of the graph.

Category: Compilers/Interpreters, Parallelism
Cabal-Version: >=1.6

build-type: Simple

source-repository head
  type:     git
  location: git://github.com/rrnewton/CnC-Spec-Compiler.git


Flag BasicBuild 
  Description: Minimize requirements to maximize build success.
  Default:     False


Executable cnc
  Main-is:           Intel/Cnc/Spec/Main.hs
  Build-Depends:     base >= 3 && < 5
                   , directory, process, containers, unix, bytestring, array
                   -- For IsString:
                   , pretty >= 1.1.0.0 
--                   , pretty < 1.1
                   , prettyclass, HUnit, mtl
                   , stringtable-atom, filepath, split
                   , parsec >= 3.1.0, fgl, zlib, binary
                   , ansi-terminal
                   -- graphviz is needed for GraphAnalysis.hs (not just visualization):
		   -- Graphalyze has extensive dependencies... I've duplicated the relevant code:
                   -- , Graphalyze

  -- For visualization:
  if !flag(BasicBuild) {
     cpp-options: -DCNCVIZ
     -- Including the fancy terminal functionality with the visualization features:
     Build-Depends:    hubigraph, graphviz
                     -- [2011.08.11] There are currently polyparse dependency problems.
                     --   hubigraph -> haxr -> HaXml -> polyparse
                     -- I am addressing this currently by pinning older versions:
                     , HaXml == 1.20.2
                     , haxr  == 3000.8.2
                     -- Don't need this one yet:
                     --  , hscurses
  }

  extensions: CPP
  other-modules:  
                  Intel.Cnc.BenchSynth Intel.Cnc.EasyEmit Intel.Cnc.Spec.GraphAnalysis
                  Intel.Cnc.Spec.CncLexer Intel.Cnc.Spec.GatherGraph Intel.Cnc.Spec.Main
                  Intel.Cnc.Spec.MainExecutable Intel.Cnc.Spec.Util
                  Intel.Cnc.Spec.Codegen.Plugins Intel.Cnc.Spec.Codegen.CppOld
                  Intel.Cnc.Spec.Codegen.CodegenShared Intel.Cnc.Spec.Codegen.Haskell
                  Intel.Cnc.Spec.Codegen.Plugins.Depends
                  Intel.Cnc.Spec.Codegen.Plugins.TagFunCorrectness
                  Intel.Cnc.Spec.Codegen.Plugins.ReductionDone
                  Intel.Cnc.Spec.Passes.TypeDef Intel.Cnc.Spec.Passes.ReadHarch
                  Intel.Cnc.Spec.TraceVacuum Intel.Cnc.Spec.Globals Intel.Cnc.Spec.AST
                  Intel.Cnc.Spec.CncViz Intel.Cnc.Spec.CncGraph
                  Intel.Cnc.Spec.CncGrammar Intel.Cnc.Spec.TagFun Intel.Cnc.Spec.Curses
                  Intel.Cnc.Spec.SrcLoc Intel.Cnc.Spec.Version

--  GHC-Options: -O2 -threaded 
