-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:9a170a1358b91d497dac7f573547609c
    SHA1:6a6157b74395731b22eca0f195c533c6136e46b8
    SHA256:18e6add18b3e2cf3897caba8e92eea7e5f064de6f87471f4aaaaca630377a3ef
    SHA512:3bb8ce566f430e0ec3d25817abb848335ad4e536de47d66bd99a86c6af525be7c98b807c44d626acd8f3bb56a300b9adb75dfef8aabe58ba71a2b1bf5bd49627
    Skein512_512:c105ca618e5fe0a0c6603bba066875e54e5381c3218d514db1e0b08e98a4a758177fa9d6e3d21fbe57603d39707d756e5aa61e9b708471b80e3c49fccc363cf4

x-package-locations:
    https://hackage.haskell.org/package/daemons-0.2.0/daemons-0.2.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/daemons-0.2.0.tar.gz

x-package-size: 25959
-- END Added by all-cabal-hashes-tool

Name:           daemons
Version:        0.2.0
Cabal-Version:  >= 1.8
License:        GPL-3
License-File:   LICENSE
Stability:      experimental
Author:         Alexandru Scvortov <scvalex@gmail.com>
Maintainer:     scvalex@gmail.com
Homepage:       https://github.com/scvalex/daemons
Category:       System, Control, Network
Synopsis:       Daemons in Haskell made fun and easy
Build-Type:     Simple
Description:
        "Control.Pipe.C3" provides simple RPC-like wrappers for pipes.
        .
        "Control.Pipe.Serialize" provides serialization and
        incremental deserialization pipes.
        .
        "Control.Pipe.Socket" provides functions to setup pipes around
        sockets.
        .
        "System.Daemon" provides a high-level interface to starting
        daemonized programs that are controlled through sockets.
        .
        "System.Posix.Daemon" provides a low-level interface to
        starting, and controlling detached jobs.
        .
        See the @README.md@ file and the homepage for details.

Extra-Source-Files:     Makefile

Data-Files:             README.md, NEWS.md, LICENSE, examples/Memo.md

Source-repository head
  Type:                 git
  Location:             git://github.com/scvalex/daemons.git

Library
  Hs-Source-Dirs:       src
  Build-depends:        base >= 4 && < 5, bytestring, cereal,
                        data-default, directory, filepath, ghc-prim, network,
                        pipes >= 4.0.0,
                        transformers, unix
  Ghc-options:          -Wall
  Exposed-modules:      Control.Pipe.C3,
                        Control.Pipe.Serialize,
                        Control.Pipe.Socket,
                        System.Daemon,
                        System.Posix.Daemon
  Other-modules:

Executable memo
  Build-depends:        base >= 4 && < 5, bytestring, cereal, containers,
                        daemons, data-default, ghc-prim
  Main-Is:              examples/Memo.hs
  Ghc-options:          -Wall

Executable addone
  Build-depends:        base >= 4 && < 5, daemons, data-default, ghc-prim
  Main-Is:              examples/AddOne.hs
  Ghc-options:          -Wall

Executable queue
  Build-depends:        base >= 4 && < 5, bytestring, cereal, containers,
                        daemons, data-default, ghc-prim, network,
                        pipes >= 4.0.0, transformers
  Main-Is:              examples/Queue.hs
  Ghc-options:          -Wall

Executable name
  Build-depends:        base >= 4 && < 5, bytestring, cereal, containers,
                        daemons, data-default, ghc-prim
  Main-Is:              examples/Name.hs
  Ghc-options:          -Wall

Test-suite daemon
  Hs-Source-Dirs:       test
  Main-Is:              Daemon.hs
  Type:                 exitcode-stdio-1.0
  Build-Depends:        base >= 4 && < 5, daemons, data-default, directory,
                        ghc-prim, HUnit, test-framework, test-framework-hunit,
                        unix
  Ghc-Options:          -Wall
