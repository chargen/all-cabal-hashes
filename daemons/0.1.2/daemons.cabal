-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:92d8bc3dceb4d443940d637b126662b7
    SHA1:df3539c70974a2537d6d58d8e9c19cebb7d124bf
    SHA256:bf1f0d5397b340802dc3187715bb7ddd96aa0c88433ec161ce7ddd267c5cccb2
    SHA512:14797927bca356a52e5d387fbf5b27b215709e1484606ca31a253c122ba37b45a26fbbe0a158b7187ad0d8546181277f1422c23cb1d866460390e8c73e395cae
    Skein512_512:7787374c929863a788a5c5bcafa762b27e90093bc3fdd4f006623b358b7da2db445b1644870b053258d73625c8cc3e448b230a3c6e4630081d96ed90aaeb9737

package-locations:
    https://hackage.haskell.org/package/daemons-0.1.2/daemons-0.1.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/daemons-0.1.2.tar.gz

package-size: 25922
-- END Added by all-cabal-hashes-tool

Name:           daemons
Version:        0.1.2
Cabal-Version:  >= 1.8
License:        GPL-3
License-File:   LICENSE
Stability:      experimental
Author:         Alexandru Scvortov <scvalex@gmail.com>
Maintainer:     scvalex@gmail.com
Homepage:       https://github.com/scvalex/daemons
Category:       System, Control, Network
Synopsis:       Daemons in Haskell made fun and easy
Build-Type:     Simple
Description:
        "Control.Pipe.C3" provides simple RPC-like wrappers for pipes.
        .
        "Control.Pipe.Serialize" provides serialization and
        incremental deserialization pipes.
        .
        "Control.Pipe.Socket" provides functions to setup pipes around
        sockets.
        .
        "System.Daemon" provides a high-level interface to starting
        daemonized programs that are controlled through sockets.
        .
        "System.Posix.Daemon" provides a low-level interface to
        starting, and controlling detached jobs.
        .
        See the @README.md@ file and the homepage for details.

Extra-Source-Files:     Makefile

Data-Files:             README.md, NEWS.md, LICENSE, examples/Memo.md

Source-repository head
  Type:                 git
  Location:             git://github.com/scvalex/daemons.git

Library
  Hs-Source-Dirs:       src
  Build-depends:        base >= 4 && < 5, bytestring, cereal,
                        data-default, directory, filepath, ghc-prim, network,
                        pipes >= 3.1,
                        transformers, unix
  Ghc-options:          -Wall
  Exposed-modules:      Control.Pipe.C3,
                        Control.Pipe.Serialize,
                        Control.Pipe.Socket,
                        System.Daemon,
                        System.Posix.Daemon
  Other-modules:

Executable memo
  Build-depends:        base >= 4 && < 5, bytestring, cereal, containers,
                        daemons, data-default, ghc-prim
  Main-Is:              examples/Memo.hs
  Ghc-options:          -Wall

Executable addone
  Build-depends:        base >= 4 && < 5, daemons, data-default, ghc-prim
  Main-Is:              examples/AddOne.hs
  Ghc-options:          -Wall

Executable queue
  Build-depends:        base >= 4 && < 5, bytestring, cereal, containers,
                        daemons, data-default, ghc-prim, network,
                        pipes >= 3.1, transformers
  Main-Is:              examples/Queue.hs
  Ghc-options:          -Wall

Executable name
  Build-depends:        base >= 4 && < 5, bytestring, cereal, containers,
                        daemons, data-default, ghc-prim
  Main-Is:              examples/Name.hs
  Ghc-options:          -Wall

Test-suite daemon
  Hs-Source-Dirs:       test
  Main-Is:              Daemon.hs
  Type:                 exitcode-stdio-1.0
  Build-Depends:        base >= 4 && < 5, daemons, data-default, directory,
                        ghc-prim, HUnit, test-framework, test-framework-hunit,
                        unix
  Ghc-Options:          -Wall
