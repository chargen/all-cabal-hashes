-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:76f1dd21a94800deced25f9272c346c0
    SHA1:0e4a32e8f236972bd33f41c60cb0bc351d110ca8
    SHA256:e0dce37140ef7cc2cee7bfe8e52a76860d1b67a03ab9b01b5b5b2c2417161eed
    SHA512:ef7035d365df5ac3520b7892f494d16412154a1779af471be3436a0e34b159f88a8c638395a168769ddc53ae25d0c97c25a937bd4d3d64aaf8c72b07b6a8bbf6
    Skein512_512:be66601c279b1bd5456804406812dd33a6bab05da318f161409b1082857e311bacbc1cd2e97892cf5519ecfdf5b2fc90d330248daa8dabab61f54e06bd20ff6e

package-locations:
    https://hackage.haskell.org/package/VKHS-0.3.3/VKHS-0.3.3.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/VKHS-0.3.3.tar.gz

package-size: 64488
-- END Added by all-cabal-hashes-tool


name:                VKHS
version:             0.3.3
synopsis:            Provides access to Vkontakte social network via public API
description:
    Provides access to Vkontakte API methods. Library requires no interaction
    with the user during Implicit-flow authentication.

license:             BSD3
license-file:        LICENSE
author:              Sergey Mironov
maintainer:          ierton@gmail.com
copyright:           Copyright (c) 2012, Sergey Mironov
category:            Web
build-type:          Custom
cabal-version:       >=1.6
homepage:            http://github.com/ierton/vkhs

source-repository head
    type:     git
    location: https://github.com/ierton/vkhs.git

executable vkq
  extra-libraries: curl
  hs-source-dirs:    src
  main-is:           VKQ.hs
  build-tools:     hsc2hs
  ghc-options:     -Wall -fwarn-tabs
  other-modules:
    Network.Curlhs.Base,
    Network.Curlhs.Core,
    Network.Curlhs.Easy,
    Network.Curlhs.Setopt,
    Network.Curlhs.Errors,
    Network.Curlhs.Types


library
  extra-libraries: curl
  build-tools:     hsc2hs
  ghc-options:     -Wall -fwarn-tabs
  hs-source-dirs:    src
  other-modules:     Test.Debug, Test.Data, Test.API, Network.Shpider.Forms,
    Network.Protocol.Uri, Network.Protocol.Mime, Network.Protocol.Http,
    Network.Protocol.Cookie, Network.Protocol.Uri.Remap,
    Network.Protocol.Uri.Query, Network.Protocol.Uri.Printer,
    Network.Protocol.Uri.Path, Network.Protocol.Uri.Parser,
    Network.Protocol.Uri.Encode, Network.Protocol.Uri.Data,
    Network.Protocol.Uri.Chars, Network.Protocol.Http.Status,
    Network.Protocol.Http.Printer, Network.Protocol.Http.Parser,
    Network.Protocol.Http.Headers, Network.Protocol.Http.Data, Text.Namefilter,
    Text.PFormat,
    Network.Curlhs.Base,
    Network.Curlhs.Core,
    Network.Curlhs.Easy,
    Network.Curlhs.Setopt,
    Network.Curlhs.Errors,
    Network.Curlhs.Types

  -- maybe not elegant, but convenient during tests
  -- if os(windows)
  --   include-dirs:   .\curl-7.25.0-devel-mingw32\include
  --   extra-lib-dirs: .\curl-7.25.0-devel-mingw32\bin

  exposed-modules:   Web.VKHS
                     Web.VKHS.API
                     Web.VKHS.API.Aeson
                     Web.VKHS.API.Types
                     Web.VKHS.Curl
                     Web.VKHS.Login
                     Web.VKHS.Types

  build-depends:     base >=4.5 && <5,
                     containers ==0.5.*,
                     tagsoup-parsec ==0.0.*,
                     tagsoup ==0.12.*,
                     mtl ==2.1.*,
                     failure ==0.2.*,
                     bytestring >=0.10 && <0.11,
                     safe ==0.3.*,
                     parsec ==3.1.*,
                     split ==0.2.*,
                     utf8-string ==0.3.*,
                     bimap ==0.2.*,
                     template-haskell ==2.8.*,
                     transformers ==0.3.*,
                     fclabels >=1.1.4 && <1.1.6,
                     optparse-applicative >=0.4 && <0.6,
                     aeson >= 0.6 && < 0.7,
                     filepath,
                     directory,
                     regexpr,
                     pretty-show,
                     vector,
                     text,
                     time
  
