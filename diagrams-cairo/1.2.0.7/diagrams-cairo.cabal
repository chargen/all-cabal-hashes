-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:2d26cf3cc951904c385b3c720159f101
    SHA1:ea90ac33ccffc08b8abfa8855462e27068014e56
    SHA256:53fed5c0f5e9ce144631a610b03cfbf1e83b0f97f933ce7fe942922f6ec6077d
    SHA512:27ad41b98b0eccc358821d31785f68877c4f67cf0d74b3c700f99cf71fb48e0dd4640d96f6bc81e684f6dce053a93dab0fb521780326f07cade175271cdaa90d
    Skein512_512:b56166311365f72a9aa60b2da8ba1163093e50115fa4f259faadd1f76b856207027cdd5aa53054dd7fab67d7d777b1d683bafe574e31745723bbffe1d9fc0c6f

x-package-locations:
    https://hackage.haskell.org/package/diagrams-cairo-1.2.0.7/diagrams-cairo-1.2.0.7.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/diagrams-cairo-1.2.0.7.tar.gz

x-package-size: 21854
-- END Added by all-cabal-hashes-tool

Name:                diagrams-cairo
Version:             1.2.0.7
Synopsis:            Cairo backend for diagrams drawing EDSL
Description:         A full-featured backend for rendering
                     diagrams using the cairo rendering engine.
                     .
                     * "Diagrams.Backend.Cairo.CmdLine" - if you're
                       just getting started with diagrams, begin here.
                     .
                     * "Diagrams.Backend.Cairo" - look at this next.
                       The general API for the cairo backend.
                     .
                     * "Diagrams.Backend.Cairo.Internal" - the
                       implementation guts of the cairo backend.
                       Users should normally not need to import this
                       module.
                     .
                     * "Diagrams.Backend.Cairo.Text" - cairo-specific
                       text support, including automatic bounding
                       boxes.
                     .
                     * "Diagrams.Backend.Cairo.List" - render diagrams
                       to two-dimensional lists of colors (/i.e./
                       pixels).
                     .
                     * "Diagrams.Backend.Cairo.Ptr" - render diagrams
                       to buffers in memory.
Homepage:            http://projects.haskell.org/diagrams
License:             BSD3
License-file:        LICENSE
Author:              Brent Yorgey
Maintainer:          diagrams-discuss@googlegroups.com
Bug-reports:         http://github.com/diagrams/diagrams-cairo/issues
Category:            Graphics
Build-type:          Simple
Cabal-version:       >=1.10
Extra-source-files:  CHANGES.markdown, README.markdown
Tested-with:         GHC == 7.4.2, GHC == 7.6.3, GHC == 7.8.3
Source-repository head
  type:     git
  location: http://github.com/diagrams/diagrams-cairo.git

Library
  Exposed-modules:     Diagrams.Backend.Cairo
                       Diagrams.Backend.Cairo.CmdLine
                       Diagrams.Backend.Cairo.Internal
                       Diagrams.Backend.Cairo.List
                       Diagrams.Backend.Cairo.Ptr
                       Diagrams.Backend.Cairo.Text
  Hs-source-dirs:      src
  Build-depends:       base >= 4.2 && < 4.8,
                       mtl >= 2.0 && < 2.3,
                       process,
                       directory,
                       filepath,
                       old-time,
                       time,
                       diagrams-core >= 1.2 && < 1.3,
                       diagrams-lib >= 1.2 && < 1.3,
                       cairo >= 0.12.4 && < 0.14,
                       pango >= 0.12.5  && < 0.14,
                       colour,
                       split >= 0.1.2 && < 0.3,
                       containers >= 0.3 && < 0.6,
                       lens >= 3.8 && < 4.10,
                       data-default-class >= 0.0.1 && < 0.1,
                       statestack >= 0.2 && < 0.3,
                       JuicyPixels >= 3.1.3.2 && < 3.3,
                       vector >= 0.10.0 && < 0.11,
                       bytestring >= 0.9 && < 0.11,
                       optparse-applicative >= 0.10 && < 0.12,
                       transformers >= 0.3 && <0.5,
                       hashable >= 1.1 && < 1.3
  if impl(ghc < 7.6)
    Build-depends: ghc-prim

  default-language:    Haskell2010

  if !os(windows)
    cpp-options: -DCMDLINELOOP
    Build-depends:     unix >= 2.4 && < 2.8
