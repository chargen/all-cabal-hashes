-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:a4fbf197a139d003a6b6c2bae112a930
    SHA1:63112159f23ca413a39e9dc4da0e997ad98449dd
    SHA256:8ccf9467464c75508820cb7bf9bad66bf5cb489f9afed36efec6e22050a14498
    SHA512:d85c35533f8ed4078f48250a1960dfcd4a3a5cecca5b5e424092e1e87dcba22172b92bc971390600f7729ed5defe4835104f834d6a91745d49ba3f1cebfec113
    Skein512_512:364d1954137f8df9dbc964e8f2c48f2ec25170f4284c46e10ceb7ecc2ce6f745f3b9b466305cfef97b1dc61746d451bdf08699abb0c02515fad43415d5a0187e

package-locations:
    https://hackage.haskell.org/package/diagrams-cairo-1.2.0.5/diagrams-cairo-1.2.0.5.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/diagrams-cairo-1.2.0.5.tar.gz

package-size: 21818
-- END Added by all-cabal-hashes-tool

Name:                diagrams-cairo
Version:             1.2.0.5
Synopsis:            Cairo backend for diagrams drawing EDSL
Description:         A full-featured backend for rendering
                     diagrams using the cairo rendering engine.
                     .
                     * "Diagrams.Backend.Cairo.CmdLine" - if you're
                       just getting started with diagrams, begin here.
                     .
                     * "Diagrams.Backend.Cairo" - look at this next.
                       The general API for the cairo backend.
                     .
                     * "Diagrams.Backend.Cairo.Internal" - the
                       implementation guts of the cairo backend.
                       Users should normally not need to import this
                       module.
                     .
                     * "Diagrams.Backend.Cairo.Text" - cairo-specific
                       text support, including automatic bounding
                       boxes.
                     .
                     * "Diagrams.Backend.Cairo.List" - render diagrams
                       to two-dimensional lists of colors (/i.e./
                       pixels).
                     .
                     * "Diagrams.Backend.Cairo.Ptr" - render diagrams
                       to buffers in memory.
Homepage:            http://projects.haskell.org/diagrams
License:             BSD3
License-file:        LICENSE
Author:              Brent Yorgey
Maintainer:          diagrams-discuss@googlegroups.com
Bug-reports:         http://github.com/diagrams/diagrams-cairo/issues
Category:            Graphics
Build-type:          Simple
Cabal-version:       >=1.10
Extra-source-files:  CHANGES.markdown, README.markdown
Tested-with:         GHC == 7.4.2, GHC == 7.6.3, GHC == 7.8.3
Source-repository head
  type:     git
  location: http://github.com/diagrams/diagrams-cairo.git

Library
  Exposed-modules:     Diagrams.Backend.Cairo
                       Diagrams.Backend.Cairo.CmdLine
                       Diagrams.Backend.Cairo.Internal
                       Diagrams.Backend.Cairo.List
                       Diagrams.Backend.Cairo.Ptr
                       Diagrams.Backend.Cairo.Text
  Hs-source-dirs:      src
  Build-depends:       base >= 4.2 && < 4.8,
                       mtl >= 2.0 && < 2.3,
                       process,
                       directory,
                       filepath,
                       old-time,
                       time,
                       diagrams-core >= 1.2 && < 1.3,
                       diagrams-lib >= 1.2 && < 1.3,
                       cairo >= 0.12.4 && < 0.14,
                       pango >= 0.12.5  && < 0.14,
                       colour,
                       split >= 0.1.2 && < 0.3,
                       containers >= 0.3 && < 0.6,
                       lens >= 3.8 && < 4.7,
                       data-default-class >= 0.0.1 && < 0.1,
                       statestack >= 0.2 && < 0.3,
                       JuicyPixels >= 3.1.3.2 && < 3.3,
                       vector >= 0.10.0 && < 0.11,
                       bytestring >= 0.9 && < 0.11,
                       optparse-applicative >= 0.10 && < 0.12,
                       transformers >= 0.3 && <0.5,
                       hashable >= 1.1 && < 1.3
  if impl(ghc < 7.6)
    Build-depends: ghc-prim

  default-language:    Haskell2010

  if !os(windows)
    cpp-options: -DCMDLINELOOP
    Build-depends:     unix >= 2.4 && < 2.8
