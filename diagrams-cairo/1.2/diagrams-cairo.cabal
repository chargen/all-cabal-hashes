-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:e94625cb63193ade898253478d2f804b
    SHA1:3eb8dac2f9fa12e45056909a4d838a8b2b6d7b4e
    SHA256:d4ec4ead17f4a3351120f7784b647a32af28016df795e24e0e274d5862b8f26f
    SHA512:d2691ab9ff604147f0cc1083d3b4c3168f06e4ceffc1460d5a58486de3b0158552ef54f9586701e499bcaf13f1168e0cce2d865a0bc48003e5a74f7bc7ae6b09
    Skein512_512:629b9ffe39c93ee8be603faafe954f3e57ce423f0d97e49420db0aa46029bafce191193a1683f7ff03590e0b822118aeed24a4d1407c36008d7a48b889994b4b

package-locations:
    https://hackage.haskell.org/package/diagrams-cairo-1.2/diagrams-cairo-1.2.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/diagrams-cairo-1.2.tar.gz

package-size: 21395
-- END Added by all-cabal-hashes-tool

Name:                diagrams-cairo
Version:             1.2
x-revision: 2
Synopsis:            Cairo backend for diagrams drawing EDSL
Description:         A full-featured backend for rendering
                     diagrams using the cairo rendering engine.
                     .
                     * "Diagrams.Backend.Cairo.CmdLine" - if you're
                       just getting started with diagrams, begin here.
                     .
                     * "Diagrams.Backend.Cairo" - look at this next.
                       The general API for the cairo backend.
                     .
                     * "Diagrams.Backend.Cairo.Internal" - the
                       implementation guts of the cairo backend.
                       Users should normally not need to import this
                       module.
                     .
                     * "Diagrams.Backend.Cairo.Text" - cairo-specific
                       text support, including automatic bounding
                       boxes.
                     .
                     * "Diagrams.Backend.Cairo.List" - render diagrams
                       to two-dimensional lists of colors (/i.e./
                       pixels).
                     .
                     * "Diagrams.Backend.Cairo.Ptr" - render diagrams
                       to buffers in memory.
Homepage:            http://projects.haskell.org/diagrams
License:             BSD3
License-file:        LICENSE
Author:              Brent Yorgey
Maintainer:          diagrams-discuss@googlegroups.com
Bug-reports:         http://github.com/diagrams/diagrams-cairo/issues
Category:            Graphics
Build-type:          Simple
Cabal-version:       >=1.10
Extra-source-files:  CHANGES.markdown, README.markdown
Tested-with:         GHC == 7.4.2, GHC == 7.6.3, GHC == 7.8.1
Source-repository head
  type:     git
  location: http://github.com/diagrams/diagrams-cairo.git

Library
  Exposed-modules:     Diagrams.Backend.Cairo
                       Diagrams.Backend.Cairo.CmdLine
                       Diagrams.Backend.Cairo.Internal
                       Diagrams.Backend.Cairo.List
                       Diagrams.Backend.Cairo.Ptr
                       Diagrams.Backend.Cairo.Text
  Hs-source-dirs:      src
  Build-depends:       base >= 4.2 && < 4.8,
                       mtl >= 2.0 && < 2.3,
                       process,
                       directory,
                       filepath,
                       old-time,
                       time,
                       diagrams-core >= 1.2 && < 1.3,
                       diagrams-lib >= 1.2 && < 1.3,
                       cairo >= 0.12.4 && < 0.14,
                       pango >= 0.12.5  && < 0.14,
                       colour,
                       split >= 0.1.2 && < 0.3,
                       containers >= 0.3 && < 0.6,
                       lens >= 3.8 && < 4.4,
                       data-default-class >= 0.0.1 && < 0.1,
                       statestack >= 0.2 && < 0.3,
                       JuicyPixels >= 3.1.3.2 && < 3.2,
                       vector >= 0.10.0 && < 0.11,
                       bytestring >= 0.9 && < 0.11,
                       optparse-applicative >= 0.7 && < 0.10,
                       transformers >= 0.3 && <0.5,
                       hashable >= 1.1 && < 1.3
  if impl(ghc < 7.6)
    Build-depends: ghc-prim

  default-language:    Haskell2010

  if !os(windows)
    cpp-options: -DCMDLINELOOP
    Build-depends:     unix >= 2.4 && < 2.8
