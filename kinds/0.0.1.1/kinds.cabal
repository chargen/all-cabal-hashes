-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:b5594f1a07738a27a7cddd5adcc0ea80
    SHA1:a897a2a0c00fea16f7891a248d372bcbbea8356a
    SHA256:8b517fed266994f5f0ece95aa729c96a50ef72ed5b6c27f0017057c2246e522f
    SHA512:90461bfa1e589f3050109ef59e3c83a718064488b96e2ae1c1c79351494d4bd28d2fb5fb5042258b36335e163355ee44f83c88aaf884058d1ecdd80428c8162c
    Skein512_512:82e5c6f95d36ff9985455c38e60799cac1607fc7df56748b70ef6b9fd2d16a14cadb014005175024852df2146a0a715692fa25ced9bf46240ed6193b168359f0

x-package-locations:
    https://hackage.haskell.org/package/kinds-0.0.1.1/kinds-0.0.1.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/kinds-0.0.1.1.tar.gz

x-package-size: 3308
-- END Added by all-cabal-hashes-tool

Name:          kinds
Version:       0.0.1.1
Cabal-Version: >= 1.2.3
Build-Type:    Simple
License:       BSD3
License-File:  LICENSE
Copyright:     © 2009–2010 Brandenburgische Technische Universität Cottbus
Author:        Wolfgang Jeltsch
Maintainer:    jeltsch@tu-cottbus.de
Stability:     provisional
Homepage:      http://community.haskell.org/~jeltsch/kinds/
Bug-Reports:   jeltsch@tu-cottbus.de
Package-URL:   http://hackage.haskell.org/packages/archive/kinds/0.0.1.1/kinds-0.0.1.1.tar.gz
Synopsis:      Emulation of subkinds and subkind polymorphism
Description:   Subkinds are the kind-level analog to subtypes. A kind denotes a set of types, and a
               subkind of some base kind denotes a subset of the base kind&#x2019;s set of types.
               Haskell has no support for subkinds and subkind polymorphism. However, this package
               can be used to emulate subkinds of kind&#xA0;@*@ and subkind variables.
               .
               To define a new subkind, the user declares a type that represents the subkind, and
               instantiates some classes. Afterwards, the user can declare types to be of that
               subkind and universally quantify over the inhabitants of the subkind. Since subkinds
               are represented by types, type-level polymorphism can be used to emulate kind-level
               polymorphism.
               .
               For detailed information, please refer to Section&#xA0;6 of the paper
               /Generic Record Combinators with Static Type Checking/.
Category:      Type System
Tested-With:   GHC == 6.12.1

Library
    Build-Depends:   base >= 3.0 && < 4.1
    Extensions:      FlexibleInstances
                     MultiParamTypeClasses
                     Rank2Types
                     TypeFamilies
    Exposed-Modules: Data.Kind
    HS-Source-Dirs:  src
