-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:2a223575db35268b1764d9a545f9a470
    SHA1:e56bfddd83038138d21acf2e351d315f77866e12
    SHA256:939b2ee0b5d8520306c5d64147c8fbc821897225c5499c3b2e38f41a9ceb193a
    SHA512:b61eef3d702fd3f865f58efc1229c5696c9166f4a2468d2269effbea5eb6665520cb39a498f1876538e03bdabe37f4c4f3c49180114dbee589aeb3536064d614
    Skein512_512:a0faad1a07bcfeba382a82449a340ffc383f86a8f2e0c28051a06ceb9f789d7cb3474317ee8680ba6a5cc7bf41e33e3a50b682e7ec6c39a03fb04d3a7cc76510

x-package-locations:
    https://hackage.haskell.org/package/Vec-0.9.5/Vec-0.9.5.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/Vec-0.9.5.tar.gz

x-package-size: 16398
-- END Added by all-cabal-hashes-tool

Name:                Vec
Version:             0.9.5
License:             BSD3
License-file:        LICENSE
Author:              Scott E. Dillard
Maintainer:          Scott E. Dillard <sedillard@gmail.com>
Homepage:            http://graphics.cs.ucdavis.edu/~sdillard/Vec
Stability:           Experimental
Synopsis:            Fixed-length lists and low-dimensional linear algebra.
Description:         
   Vectors are represented by lists with type-encoded lengths. The constructor
   is @:.@, which acts like a cons both at the value and type levels, with @()@
   taking the place of nil. So @x:.y:.z:.()@ is a 3d vector. The library
   provides a set of common list-like functions (map, fold, etc) for working
   with vectors. Built up from these functions are a small but useful set of
   linear algebra operations: matrix multiplication, determinants, solving
   linear systems, inverting matrices.
Cabal-version:       >=1.2
Build-type:          Simple
Category:            Data,Math

library
    Build-Depends:      base,QuickCheck<2

    Exposed-modules:    Data.Vec 
                        Data.Vec.Base,
                        Data.Vec.LinAlg,
                        Data.Vec.Nat,
                        Data.Vec.Packed
    Extensions: 
                        EmptyDataDecls,
                        FlexibleContexts,
                        FlexibleInstances, 
                        FunctionalDependencies,
                        MultiParamTypeClasses, 
                        NoMonomorphismRestriction,
                        OverlappingInstances,
                        ScopedTypeVariables,
                        TypeFamilies,
                        TypeOperators, 
                        TypeSynonymInstances,
                        UndecidableInstances
