-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:789adadb9cb2e1bf82d662e8f08aeb38
    SHA1:b3a4080f67891e52df582ca34507b191468c02d7
    SHA256:c1ed6fa232618f9ab7e7ad8e7b32c605353ec018a8841764db38def38b1b62d7
    SHA512:4896c7d214bbef7890674b8c18a450e392b257e5aa3c4cc605fe94093b231a5609dfe44aff5a608ec653b2bc9fe5000d4f578b4d74bb99a7878c3f02370be792
    Skein512_512:08a62af8fc8e3b12c1552fd3f267bca2c3a35b17d11b596746af5e7e4761c914094035d2242a92855e0b7792435ce4c54e3841b1f16fd8ea2a95506866c0b66b

x-package-locations:
    https://hackage.haskell.org/package/Vec-0.9.6/Vec-0.9.6.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/Vec-0.9.6.tar.gz

x-package-size: 18356
-- END Added by all-cabal-hashes-tool

Name:                Vec
Version:             0.9.6
License:             BSD3
License-file:        LICENSE
Author:              Scott E. Dillard
Maintainer:          Scott E. Dillard <sedillard@gmail.com>
Homepage:            http://graphics.cs.ucdavis.edu/~sdillard/Vec
Stability:           Experimental
Synopsis:            Fixed-length lists and low-dimensional linear algebra.
Description:         
   Vectors are represented by lists with type-encoded lengths. The constructor
   is @:.@, which acts like a cons both at the value and type levels, with @()@
   taking the place of nil. So @x:.y:.z:.()@ is a 3d vector. The library
   provides a set of common list-like functions (map, fold, etc) for working
   with vectors. Built up from these functions are a small but useful set of
   linear algebra operations: matrix multiplication, determinants, solving
   linear systems, inverting matrices. Efficient code is generated using
   Storable and unboxed array instances or an optional packed representation.
Cabal-version:       >=1.2.3
Build-type:          Simple
Category:            Data,Math

library
    Build-Depends:      base,QuickCheck<2,array,ghc-prim

    Exposed-modules:    Data.Vec 
                        Data.Vec.Base,
                        Data.Vec.LinAlg,
                        Data.Vec.Nat,
                        Data.Vec.Packed
    Extensions: 
                        EmptyDataDecls,
                        FlexibleContexts,
                        FlexibleInstances, 
                        FunctionalDependencies,
                        MultiParamTypeClasses, 
                        NoMonomorphismRestriction,
                        OverlappingInstances,
                        ScopedTypeVariables,
                        TypeFamilies,
                        TypeOperators, 
                        TypeSynonymInstances,
                        UndecidableInstances
