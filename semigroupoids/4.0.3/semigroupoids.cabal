name:          semigroupoids
category:      Control, Comonads
version:       4.0.3
x-revision: 1
license:       BSD3
cabal-version: >= 1.6
license-file:  LICENSE
author:        Edward A. Kmett
maintainer:    Edward A. Kmett <ekmett@gmail.com>
stability:     provisional
homepage:      http://github.com/ekmett/semigroupoids
bug-reports:   http://github.com/ekmett/semigroupoids/issues
copyright:     Copyright (C) 2011-2013 Edward A. Kmett
build-type:    Simple
synopsis:      Semigroupoids: Category sans id
extra-source-files:
  .ghci
  .travis.yml
  .gitignore
  .vim.custom
description:
  Provides a wide array of (semi)groupoids and operations for working with them.
  .
  A 'Semigroupoid' is a 'Category' without the requirement of identity arrows for every object in the category.
  .
  A 'Category' is any 'Semigroupoid' for which the Yoneda lemma holds.
  .
  When working with comonads you often have the @\<*\>@ portion of an @Applicative@, but
  not the @pure@. This was captured in Uustalu and Vene's \"Essence of Dataflow Programming\"
  in the form of the @ComonadZip@ class in the days before @Applicative@. Apply provides a weaker invariant, but for the comonads used for data flow programming (found in the streams package), this invariant is preserved. Applicative function composition forms a semigroupoid.
  .
  Similarly many structures are nearly a comonad, but not quite, for instance lists provide a reasonable 'extend' operation in the form of 'tails', but do not always contain a value.
  .
  Ideally the following relationships would hold:
  .
  > Foldable ----> Traversable <--- Functor ------> Alt ---------> Plus           Semigroupoid
  >      |               |            |                              |                  |
  >      v               v            v                              v                  v
  > Foldable1 ---> Traversable1     Apply --------> Applicative -> Alternative      Category
  >                                   |               |              |                  |
  >                                   v               v              v                  v
  >                                 Bind ---------> Monad -------> MonadPlus          Arrow
  >
  .
  Apply, Bind, and Extend (not shown) give rise the Static, Kleisli and Cokleisli semigroupoids respectively.
  .
  This lets us remove many of the restrictions from various monad transformers
  as in many cases the binding operation or @\<*\>@ operation does not require them.
  .
  Finally, to work with these weaker structures it is beneficial to have containers
  that can provide stronger guarantees about their contents, so versions of 'Traversable'
  and 'Foldable' that can be folded with just a 'Semigroup' are added.

source-repository head
  type: git
  location: git://github.com/ekmett/semigroupoids.git

flag containers
  description:
    You can disable the use of the `containers` package using `-f-containers`.
    .
    Disabing this is an unsupported configuration, but it may be useful for accelerating builds in sandboxes for expert users.
  default: True
  manual: True

flag contravariant
  description:
    You can disable the use of the `contravariant` package using `-f-contravariant`.
    .
    Disabling this is an unsupported configuration, but it may be useful for accelerating builds in sandboxes for expert users.
    .
    If disabled we will not supply instances of `Contravariant`
    .
  default: True
  manual: True

flag distributive
  description:
    You can disable the use of the `distributive` package using `-f-distributive`.
    .
    Disabling this is an unsupported configuration, but it may be useful for accelerating builds in sandboxes for expert users.
    .
    If disabled we will not supply instances of `Distributive`
    .
  default: True
  manual: True

flag comonad
  description:
    You can disable the use of the `comonad` package using `-f-comonad`.
    .
    Disabling this is an unsupported configuration, but it may be useful for accelerating builds in sandboxes for expert users.
    .
    If disabled we will not supply instances of `Comonad`
    .
  default: True
  manual: True


library
  -- base-4.4 has trust issues
  build-depends: base < 4.4 || >= 4.5

  build-depends:
    base          >= 4       && < 5,
    semigroups    >= 0.8.3.1 && < 1,
    transformers  >= 0.2     && < 0.6

  if flag(containers)
    build-depends: containers >= 0.3 && < 0.6

  if flag(contravariant)
    build-depends: contravariant >= 0.2.0.1 && < 1

  if flag(distributive)
    build-depends: distributive >= 0.2.2 && < 1

  if flag(comonad)
    build-depends: comonad      >= 4     && < 5

  hs-source-dirs: src

  exposed-modules:
    Data.Functor.Alt
    Data.Functor.Apply
    Data.Functor.Bind
    Data.Functor.Bind.Trans
    Data.Functor.Extend
    Data.Functor.Plus
    Data.Groupoid
    Data.Isomorphism
    Data.Semifunctor
    Data.Semifunctor.Associative
    Data.Semifunctor.Braided
    Data.Semigroup.Foldable
    Data.Semigroup.Traversable
    Data.Semigroupoid
    Data.Semigroupoid.Coproduct
    Data.Semigroupoid.Dual
    Data.Semigroupoid.Ob
    Data.Semigroupoid.Product
    Data.Semigroupoid.Static
    Data.Traversable.Instances

  ghc-options: -Wall -fno-warn-warnings-deprecations


package-hashes:
    MD5:b31d85cbcda0d1835d1e60e72fd3b8c0
    SHA1:929268606f442073741c8a796c4b7ffd14765ab8
    SHA256:01a7aa1488c58f9319bd6f2b99beec49c16fd06ca773ae5333f6add5c0132e2f
    SHA512:9c9b20aed6526b971cd1921f1847ef913958b1c6f122d480fe7c7907601da665585edc3bc08914b02a70cd92757c0b3249c277ef416133679a5ea2492e23449a
    Skein512_512:3c04ee586e056fc1fad82e8e2c9421f51ee0084414f4b024d06aba15d277ce448d42cacdee1da635bb147d17910a6e38d2f645f38c9b4358d8433307d0cbaea7

package-locations:
    https://hackage.haskell.org/package/semigroupoids-4.0.3/semigroupoids-4.0.3.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/semigroupoids-4.0.3.tar.gz

package-size: 16190
