-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:6ab067fa5cbc85b2974cff618b56ce53
    SHA1:cc582bdc459e4cef1908fd2d2100c82f21b67349
    SHA256:20efd6aaf34a15ee26ce5e8c9e919fe3376deaa7c44fc447a7e372b8a3141aa4
    SHA512:88208b7616abcc6f8f1c85f6bf15d9cff837ba507234b55e3ecdbdf68ceae14a26d294213f29cd23e6a0738be36c1a707b933766cc7bb7637b90f31995f80e22
    Skein512_512:0298c1de1c157a1afe7c1acb029c3462ccab6798c8aadd22ff66ac13970f6a2c735d8832bba725069895e5738a711a970a8a6634466bd0cd3e7f20fa7cc9bfa6

x-package-locations:
    https://hackage.haskell.org/package/hydra-print-0.1.0.0/hydra-print-0.1.0.0.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/hydra-print-0.1.0.0.tar.gz

x-package-size: 19276
-- END Added by all-cabal-hashes-tool

-- Initial hydra-print.cabal generated by cabal init.  For further 
-- documentation, see http://haskell.org/cabal/users-guide/

name:                hydra-print
version:             0.1.0.0
synopsis:            NCurses interface to view multiple ByteString streams in parallel.
description: 

  Output from parallel subprocesses is an ugly, many-headed beast.
  Piping though hydra-print provides a NCurses interface to a dynamic
  set output streams, displayed without interleaving.  This is a
  common problem, for example, with parallel compiles, or
  data-processing scripts.
  .
  Specifically, this small library will split the screen when
  parallelism occurs, and unsplit it when the parallelism is 
  finished (i.e. dynamically growing and losing \"heads\").
  The @io-streams@ library is used for all stream inputs.

license:             BSD3
license-file:        LICENSE
author:              Ryan Newton
maintainer:          Ryan Newton <rrnewton@gmail.com>
copyright:           2013, Ryan Newton
category:            Concurrency
build-type:          Simple
cabal-version:       >=1.8

extra-source-files:
     SystemTest.hs
     examples/make/Makefile
     examples/make/run.sh
     examples/make/README

Library
  Exposed-modules:  UI.HydraPrint
                    Scripting.Parallel.ThreadPool
  CPP-options: -DNOTESTING
  Source-repository head
    type:     git
    location: https://github.com/rrnewton/hydra-print
  build-depends: base <= 4.7, transformers, containers, text, bytestring, io-streams,
                 semigroups, mtl, ncurses, directory, async
-- TEMP: I seem to need to include these even though they are used only by the EXECUTABLES:
                 , unix, process, time, random
  -- build-depends base ==4.6.*, transformers ==0.3.*, containers ==0.5.*, text ==0.11.*, 
  --               mtl ==2.1.*, semigroups ==0.9.*,
  --               bytestring ==0.10.*, io-streams ==1.0.*, hscurses ==1.4.*

Test-Suite test-hydra-print
    type:       exitcode-stdio-1.0
    main-is:    TestFramework.hs
    -- DUPLICATED from above
    build-depends: base <= 4.7, transformers, containers, text, bytestring, io-streams,
                   semigroups, mtl, ncurses, directory, async,
                   unix, process, time, random,
    -- Additional dependencies:
    ---------------------------
                   QuickCheck                 ==2.5.*,
                   HUnit                      ==1.2.*,
                   test-framework             ==0.8.*,
                   test-framework-hunit       ==0.3.*,
                   test-framework-quickcheck2 ==0.3.*,
                   test-framework-th          ==0.2.*


Executable hydra-view
  main-is:           hydra-view.hs
  CPP-options: -DNOTESTING  
  build-depends: base <= 4.7, transformers, containers, text, bytestring, io-streams,
                 semigroups, mtl, ncurses, directory, async, unix, 
                 filepath, process, time, random

Executable hydra-head
  main-is:           hydra-head.hs
  CPP-options: -DNOTESTING  
  build-depends: base <= 4.7, transformers, containers, text, bytestring, io-streams,
                 semigroups, mtl, ncurses, directory, async, unix, 
                 filepath, process, time, random
