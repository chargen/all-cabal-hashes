-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:3cb5a1f880499bcf90f4c578a977b0bb
    SHA1:f067507850014f87490d8f9ae643d7de6859fab3
    SHA256:222851a4415a8ea6172c0b87de20183c5c2946003736807d2bd6d8c6ee647308
    SHA512:61f96b0fb1e3e7d277899920eb1a27b7c145f0d305cb6dcdb01b7d1e808d2cf550a21f947faad4955ae5155a46bb9797afe05327e2785cc5cb2f576c52832083
    Skein512_512:bd2982a714288bb9a52b1463aa1ef4bb03b2efdb8671877df8d782e23698e1b6354fdba8ce355e3107620782332fb72fc58d7c04055b28b908811a6d10219629

x-package-locations:
    https://hackage.haskell.org/package/luthor-0.0.1/luthor-0.0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/luthor-0.0.1.tar.gz

x-package-size: 27336
-- END Added by all-cabal-hashes-tool

name:                luthor
version:             0.0.1
stability:           experimental
synopsis:            Tools for lexing and utilizing lexemes that integrate with Parsec.
description:         Like parser combinators? Building a big parser? Save hundreds of
                     sloc, hours of debuging and several headaches by using Luthor
                     on top of the familiar Parsec library.
                     .
                     Parsec works great for small parsers, but as the size of the
                     parser grows, complexity can grow exponentially without taking
                     serious and tricky precautions. Luthor provides reusable
                     utilities to isolate the complex parts of parsing.
                     Amonst its weaponry are 1) more composable combinators,
                     2) pre-built token parsers, 3) tools to build a scannerful parser,
                     and 4) tools to work with indentation.
                     Luthor reduces overall complexity, generally increases performance
                     and error reporting, and cuts down on wheel re-invention.
                     .
                     BIG CAVEAT: It is difficult to understand all the ways in which 
                     Parsec fails to be composable, so there may be some combinators
                     in Luthor which fail to be composable. If you're getting weird
                     (i.e. Parsec-like) results, add a @try@ and please report.
homepage:            https://github.com/Zankoku-Okuno/luthor
license:             BSD3
license-file:        LICENSE
author:              Zankoku Okuno
maintainer:          zankoku.okuno@gmail.com
bug-reports:         https://github.com/Zankoku-Okuno/luthor/issues
-- copyright:           
category:            Text, Language
build-type:          Simple
cabal-version:       >=1.8
extra-source-files:  changes.md, docs/*.md, docs/*.hs, docs/*.l

library
  exposed-modules:    
    Text.Luthor
    Text.Luthor.Lex
    Text.Luthor.Combinator
    Text.Luthor.Syntax
    Text.Luthor.Indent
  other-modules:       
  build-depends:       base ==4.6.*,
                       mtl ==2.*,
                       parsec ==3.*

test-suite test-combinator
    type:       exitcode-stdio-1.0
    main-is:    test/combinator.hs
    build-depends: base ==4.6.*, mtl ==2.*, parsec ==3.*

test-suite test-syntax
    type:       exitcode-stdio-1.0
    main-is:    test/syntax.hs
    build-depends: base ==4.6.*, mtl ==2.*, parsec ==3.*

test-suite test-indent
    type:       exitcode-stdio-1.0
    main-is:    test/indent.hs
    build-depends: base ==4.6.*, mtl ==2.*, parsec ==3.*

source-repository head
  type: git
  location: https://github.com/Zankoku-Okuno/luthor.git
