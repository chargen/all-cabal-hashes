-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:5b9fa9db18facfa998bbc95770f638aa
    SHA1:f7be07864daa4166912d5a504d30960e09e606c0
    SHA256:8d37b790bca5074b863dec771e59b0c181e46dba2e90cb086ba45a21c40b7fa5
    SHA512:2b2c7c112305e45ab6c85f1ec4f9e325e9652058b14111772e312166decfc9ec315785e13124c680adc055514f3c83af75a1e9055efdb1a5d3229b06c6f98afb
    Skein512_512:0880cf6e3673fee807dd8818acea20bfee169e5c038bee44b002e5dcc20fd34486a48aca601b76d2e05891d92974430ace388137e98160f6353d7b01af95ab2b

x-package-locations:
    https://hackage.haskell.org/package/hsbencher-1.5.1/hsbencher-1.5.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/hsbencher-1.5.1.tar.gz

x-package-size: 41055
-- END Added by all-cabal-hashes-tool


name:                hsbencher
version:             1.5.1
-- CHANGELOG:
-- 1.0   : Initial release, new flexible benchmark format.
-- 1.1   : Change interface to RunInPlace
-- 1.1.1 : add defaultMainModifyConfig
-- 1.2   : Significant interface changes.
-- 1.2.1 : Hack to shorten tuples, annoying URL length problem.
-- 1.3   : breaking change to Config/RunResult types
-- 1.3.1 : bugfix
-- 1.3.2 : change policy for timeouts and errors
-- 1.3.4 : Add ability to prune/select benchmarks with commmand line args
-- 1.3.6 : bugfix productivity for timeouts
-- 1.3.8 : Added --skipto and --runid
-- 1.3.8 : Remove hydra-print dep by default.  Add 'hydra' flag.

-- 1.4   : Richer Benchmark{} record type.
-- 1.4.1 : add CI_BUILD_ID column
-- 1.4.1.2 : add benchTimeOut field
-- 1.4.1.3 : actually upload run flags, nix uname
-- 1.4.1.5 : search for patterns in 'progname' as well
-- 1.4.3   : switch to bulkImportRows for Fusion tables
-- 1.5 : add new columns, formatting tweaks, robustness to schema evolution
-- 1.5.1 : adapt to upstream change in process-1.2

synopsis:  Flexible benchmark runner for Haskell and non-Haskell benchmarks.

description: Benchmark frameworks are usually very specific to the
  host language/environment.  Hence they are usually about as reusable
  as compiler passes (that is, not).
 .
  Nevertheless, `hsbencher` is an attempt at a reusable benchmark
  framework.  It knows fairly little about what the benchmarks do, and
  is mostly concerned with defining and iterating through
  configuration spaces (e.g. varying the number of threads), and
  managing the data that results.
 .
  Benchmark data is stored in simple text files, and optionally
  uploaded to Google Fusion Tables.
  -- TODO: Describe clusterbench functionality when it's ready.
 .
  `hsbencher` attempts to stradle the divide between language-specific
  and language-agnostic by having an extensible set of `BuildMethod`s.
  As shipped, `hsbencher` knows a little about cabal, ghc, and less
  about Make, but it can be taught more.
 .
  The general philosophy is to have benchmarks follow a simple
  protocol, for example printing out a line "SELFTIMED: 3.3s" if they
  wish to report their own timing.  The focus is on benchmarks that
  run long enough to run in their own process.  This is typical of
  parallelism benchmarks and different than the fine grained
  benchmarks that are well supported by "Criterion".
 .
 .
 `hsbencher` is used by creating a script or executable that imports `HSBencher` 
  and provides a list of benchmarks, each of which is decorated with its 
  parameter space.  Below is a minimal example that creates a two-configuration 
  parameter space:
 .
 @
 import HSBencher
 main = defaultMainWithBechmarks
 .      [ Benchmark \"bench1/bench1.cabal\" [\"1000\"] $
 .        Or [ Set NoMeaning (RuntimeParam \"+RTS -qa -RTS\")
 .            , Set NoMeaning (RuntimeEnv \"HELLO\" \"yes\") ] ]
 @
 .
 The output would appear as in this gist:
   <https://gist.github.com/rrnewton/5667800>
 .
 More examples can be found here:
   <https://github.com/rrnewton/HSBencher/tree/master/example>
 . 
 ChangesLog:
 .
 * (1.3.8) Added @--skipto@ and @--runid@ arguments
 .
 * (1.3.4) Added ability to prune benchmarks with patterns on command line.
 .
 * (1.4.2) Breaking changes, don't use Benchmark constructor directly.  Use mkBenchmark.


license:             BSD3
license-file:        LICENSE
author:              Ryan Newton
maintainer:          rrnewton@gmail.com
copyright:           (c) Ryan Newton 2013
category:            Development
build-type:          Simple
cabal-version:       >=1.10

extra-source-files:  README.md
                     example/make_and_ghc/runit.sh
                     example/make_and_ghc/benchmark.hs
                     example/make_and_ghc/bench1/Makefile
                     example/make_and_ghc/bench1/hello.c
                     example/make_and_ghc/bench2/Hello.hs
                     example/cabal/runit.sh
                     example/cabal/benchmark.hs
                     example/cabal/bench1/bench1.cabal
                     example/cabal/bench1/Hello.hs

Flag fusion
  description:
      Add support for Google Fusion Table upload of benchmark data.
  default: True

Flag hydra
  description:
      Add support for (and dependency on) the hydra-print library.
  default: False

Library 
  source-repository head
    type:  git
    location: https://github.com/rrnewton/HSBenchScaling.git

  exposed-modules: HSBencher
                   HSBencher.App
                   HSBencher.Types
                   HSBencher.Config
                   HSBencher.Logging
                   HSBencher.Methods
                   HSBencher.Utils
                   HSBencher.MeasureProcess
  other-modules: Paths_hsbencher
  build-depends:   
      -- base ==4.6.*, bytestring ==0.10.*, process ==1.1.*, directory ==1.2.*, filepath ==1.3.*, random ==1.0.*, 
      -- unix ==2.6.*, containers ==0.5.*, time ==1.4.*, mtl ==2.1.*, async >= 2.0,
      base >= 4.5 && <= 4.7, bytestring, process >= 1.2, 
      directory, filepath, random, unix, containers, time, mtl, async, 
      io-streams >= 1.1,
      GenericPretty >= 1.2, http-conduit

  if flag(hydra) {
    build-depends: hydra-print >= 0.1.0.3
    cpp-options: -DUSE_HYDRAPRINT
  }

  default-language:    Haskell2010

  if flag(fusion) {
    build-depends: handa-gdata >= 0.6.9
    exposed-modules: HSBencher.Fusion
    cpp-options: -DFUSION_TABLES
  }

-- [2013.05.28] This will come back later when the new ASCII benchmark file format is finished:
-----------------------------------------------------------------------------------------------
-- Executable hsbencher
--   main-is: Main.hs
--   -- other-modules:       
--   build-depends:
--       -- <DUPLICATED from above>
--       base >= 4.5, bytestring, process, directory, filepath, random, unix, containers, time, mtl, async, 
--       hydra-print >= 0.1.0.3, io-streams >= 1.0,
--       GenericPretty >= 1.2
--       -- </DUPLICATED>

--   ghc-options: -threaded 

--   if flag(fusion) {
--     build-depends: handa-gdata >= 0.6.2
--     cpp-options: -DFUSION_TABLES
--   }
--   default-language:    Haskell2010


Test-suite hsbencher-unit-tests
  main-is: Test.hs
  type: exitcode-stdio-1.0
  build-depends:
    -- <DUPLICATED from above>
    base >= 4.5 && <= 4.7, bytestring, process, directory, filepath, random, unix, containers, time, mtl, async, 
    io-streams >= 1.0,
    GenericPretty >= 1.2, http-conduit, hsbencher
    -- </DUPLICATED>
  -- Additional deps for testing:
  build-depends: test-framework, test-framework-hunit, test-framework-th, 
                 HUnit, time, text

  ghc-options: -threaded 
  default-language:  Haskell2010
  if flag(hydra) {
     build-depends: hydra-print >= 0.1.0.3
  }
  if flag(fusion) {
    build-depends: handa-gdata >= 0.6.9
    cpp-options: -DFUSION_TABLES
  }

Test-suite hsbencher-test1
  main-is: example/cabal/benchmark.hs
  type: exitcode-stdio-1.0
  build-depends:
    -- <DUPLICATED from above>
    base >= 4.5 && <= 4.7, bytestring, process, directory, filepath, random, unix, containers, time, mtl, async, 
    io-streams >= 1.0,
    GenericPretty >= 1.2, http-conduit, hsbencher
    -- </DUPLICATED>
  ghc-options: -threaded 
  default-language:  Haskell2010
  if flag(hydra) {
     build-depends: hydra-print >= 0.1.0.3
  }
  if flag(fusion) {
    build-depends: handa-gdata >= 0.6.9
    cpp-options: -DFUSION_TABLES
  }

Test-suite hsbencher-test2
  main-is: example/make_and_ghc/benchmark.hs
  type: exitcode-stdio-1.0
  build-depends:
    -- <DUPLICATED from above>
    base >= 4.5 && <= 4.7, bytestring, process, directory, filepath, random, unix, containers, time, mtl, async, 
    io-streams >= 1.0,
    GenericPretty >= 1.2, http-conduit, hsbencher
    -- </DUPLICATED>
  ghc-options: -threaded 
  default-language:  Haskell2010
  if flag(hydra) {
     build-depends: hydra-print >= 0.1.0.3
  }
  if flag(fusion) {
    build-depends: handa-gdata >= 0.6.9
    cpp-options: -DFUSION_TABLES
  }
