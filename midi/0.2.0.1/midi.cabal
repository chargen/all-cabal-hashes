-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:1be4b8e5f333a69a2e21bbf2b16d0f84
    SHA1:cb71866b9be65c8ca6a492d6d92fd42369a8a45b
    SHA256:c3ee03891cb22b521ca1de72a1c9de12487e6ca6900a1a38ddf0ead614c902bd
    SHA512:d6f997b8d7aaaa60a1575390b8ff22d9cde617e8586c9cf78524a349edaa37f218bb456fccf19e52adeb1c640575cdd40c1b6bbff0a257c1d647ea9f79e0e4f3
    Skein512_512:4654c085938b3dfdd164b07527c674a98a487e80a0bc4d993707b4966559b1cf2225b180c9e9a53bc48ed1cf7130299b51eb74ef06dbaad11f9138b1ddee38de

package-locations:
    https://hackage.haskell.org/package/midi-0.2.0.1/midi-0.2.0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/midi-0.2.0.1.tar.gz

package-size: 57286
-- END Added by all-cabal-hashes-tool

Name:             midi
Version:          0.2.0.1
License:          GPL
License-File:     LICENSE
Author:           Henning Thielemann <haskell@henning-thielemann.de>
Maintainer:       Henning Thielemann <haskell@henning-thielemann.de>
Homepage:         http://www.haskell.org/haskellwiki/MIDI
Category:         Sound, Music
Tested-With:      GHC==6.4.1, GHC==6.8.2, GHC==6.10.4, GHC==6.12.3
Tested-With:      GHC==7.0.4, GHC==7.2.1
Cabal-Version:    >=1.6
Build-Type:       Simple
Synopsis:         Handling of MIDI messages and files
Description:
  MIDI is the Musical Instrument Digital Interface.
  The package contains definition of realtime and file MIDI messages,
  reading and writing MIDI files,
  and some definitions from the General MIDI standard.
  It contains no sending and receiving of MIDI messages.
  For this purpose see the @alsa-seq@, @jack@, @PortMidi@, @hmidi@ packages.
  For music composition with MIDI output, see @haskore@.
  Alternative packages are @HCodecs@, @zmidi-core@.
Extra-Source-Files:
  Makefile
  src/Sound/MIDI/Example/Tomatosalad.hs
Source-Repository head
  type:     darcs
  location: http://code.haskell.org/~thielema/midi/

Source-Repository this
  type:     darcs
  location: http://code.haskell.org/~thielema/midi/
  tag:      0.2.0.1

Flag splitBase
  description: Choose the new smaller, split-up base package.

Flag buildTests
  description: Build test executables
  default:     False

Library
  Build-Depends:
    event-list >=0.0.9 && < 0.2,
    non-negative>=0.0.1 && <0.2,
    explicit-exception >=0.1 && <0.2,
    bytestring >=0.9.0.1 && <0.11,
    binary >=0.4.2 && <0.6,
    transformers >=0.2 && <0.4,
    monoid-transformer >=0.0.1 && <0.1,
    QuickCheck >=1 && <3
  If flag(splitBase)
    Build-Depends:
      random >=1 && <2,
      base >= 3 && <5
  Else
    Build-Depends:
      base >= 1.0 && < 3

  GHC-Options:      -Wall
  Hs-Source-Dirs:   src
  Exposed-Modules:
    Sound.MIDI.File
    Sound.MIDI.File.Event
    Sound.MIDI.File.Event.Meta
    Sound.MIDI.File.Event.SystemExclusive
    Sound.MIDI.File.Load
    Sound.MIDI.File.Save
    Sound.MIDI.Parser.Report
    Sound.MIDI.Message
    Sound.MIDI.Message.Channel
    Sound.MIDI.Message.Channel.Voice
    Sound.MIDI.Message.Channel.Mode
    Sound.MIDI.Message.System
    Sound.MIDI.Message.System.Exclusive
    Sound.MIDI.Message.System.Common
    Sound.MIDI.Message.System.RealTime
    Sound.MIDI.Message.Class.Check
    Sound.MIDI.Message.Class.Query
    Sound.MIDI.Controller
    Sound.MIDI.Manufacturer
    Sound.MIDI.KeySignature
    Sound.MIDI.General
    -- exports ByteList data type
    Sound.MIDI.IO
  Other-Modules:
    -- Parser class and general parser functions
    Sound.MIDI.Parser.Class
    Sound.MIDI.Parser.Restricted
    Sound.MIDI.Parser.Exception
    Sound.MIDI.Parser.Warning
    Sound.MIDI.Parser.Primitive
    Sound.MIDI.Parser.Status
    -- concrete Parsers
    Sound.MIDI.Parser.File
    Sound.MIDI.Parser.Stream
    Sound.MIDI.Parser.ByteString
    -- output basics
    Sound.MIDI.Writer.Basic
    Sound.MIDI.Writer.Status
    -- utilities
    Sound.MIDI.Bit
    Sound.MIDI.Monoid
    Sound.MIDI.String
    Sound.MIDI.Utility
    -- type definition
    Sound.MIDI.ControllerPrivate
    -- didactic example
    Sound.MIDI.Example.ControllerRamp

Executable test
  If !flag(buildTests)
    Buildable:        False

-- this will put Cabal into an infinite loop sooner or later
--   Build-Depends:      midi
  Hs-source-dirs:     src, test
  GHC-Options:        -Wall
  Main-Is: Main.hs
