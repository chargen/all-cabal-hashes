-- BEGIN Added by all-cabal-hashes-tool
package-hashes:
    MD5:4d6d1cfabc4e03402e807cbaaac5ca33
    SHA1:e2847532e1ba23d35869a7c54e3115136a6e426d
    SHA256:120c4d09536a70ca670da1afccd1190217525f06f371860099581c1a1f668755
    SHA512:63ed924ae4f35fc804cc55f532c94a4504a6ad2ae2571222539f67a361f256733ae5ddefef640c3f29cb5ea97c899bc69b88d81a30e0f5eb3bc2a7b8fa88c2c8
    Skein512_512:0ebed2bf8c72fea996e63af6bda4fa16f970a1487c35cf60499fbee9d57f946c01e4e4d5e608ae67acda61545f3ab6b2a5d6487b29b30d36991678389644517f

package-locations:
    https://hackage.haskell.org/package/retry-0.1.0.1/retry-0.1.0.1.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/retry-0.1.0.1.tar.gz

package-size: 3581
-- END Added by all-cabal-hashes-tool

name:                retry

description: 

        This package exposes combinators that can wrap arbitrary
        monadic actions. They run the action and potentially retry
        running it with some configurable delay for a configurable
        number of times.

        The purpose is to make it easier to work with IO and
        especially network IO actions that often experience temporary
        failure and warrant retrying of the original action. For
        example, a database query may time out for a while, in which
        case we should hang back for a bit and retry the query instead
        of simply raising an exception.

version:             0.1.0.1
synopsis:            Retry combinators for monadic actions that may fail
license:             BSD3
license-file:        LICENSE
author:              Ozgun Ataman
maintainer:          ozgun.ataman@soostone.com
copyright:           Ozgun Ataman, Soostone Inc
category:            Control
build-type:          Simple
cabal-version:       >=1.10

library
  exposed-modules:     Control.Retry
  build-depends:       
    base ==4.*, 
    MonadCatchIO-transformers >= 0.3,
    mtl >= 0.2,
    data-default
  hs-source-dirs:      src
  default-language:    Haskell2010

