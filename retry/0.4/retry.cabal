-- BEGIN Added by all-cabal-hashes-tool
x-package-hashes:
    MD5:5fa0f8878b88ae3709ca4d32f7bb755c
    SHA1:086f3bbe8610b1cf4caa76bd77d28dba6c6eac7a
    SHA256:c770be4abded5432253fed5b9c18c52f8972af5f2d15c09c97c7964544c2d29a
    SHA512:56715b2d7515dce68f0c6d63ea8deba700bec8adfd751a197bcc8b57e2f5bcd147359cc1de65b66bc25863ec87721fc0c5d04fbd088129860a4a83fd0d105eda
    Skein512_512:c5699274ce0a49e90ce80520dbb8a6c75e557d5ff8c9aadb0121d41bb3c896fca330c5317dcd0d8459c4b0809a41aacf15d5409181a77d6c06a623c19650619b

x-package-locations:
    https://hackage.haskell.org/package/retry-0.4/retry-0.4.tar.gz
    https://s3.amazonaws.com/hackage.fpcomplete.com/package/retry-0.4.tar.gz

x-package-size: 3868
-- END Added by all-cabal-hashes-tool

name:                retry

description: 

        This package exposes combinators that can wrap arbitrary
        monadic actions. They run the action and potentially retry
        running it with some configurable delay for a configurable
        number of times.

        The purpose is to make it easier to work with IO and
        especially network IO actions that often experience temporary
        failure and warrant retrying of the original action. For
        example, a database query may time out for a while, in which
        case we should hang back for a bit and retry the query instead
        of simply raising an exception.

version:             0.4
synopsis:            Retry combinators for monadic actions that may fail
license:             BSD3
license-file:        LICENSE
author:              Ozgun Ataman
maintainer:          ozgun.ataman@soostone.com
copyright:           Ozgun Ataman, Soostone Inc
category:            Control
build-type:          Simple
cabal-version:       >=1.10
Homepage:            http://github.com/Soostone/retry

library
  exposed-modules:     Control.Retry
  build-depends:       
    base            ==4.*, 
    exceptions      >= 0.5 && < 0.6,
    transformers,
    data-default
  hs-source-dirs:      src
  default-language:    Haskell2010

